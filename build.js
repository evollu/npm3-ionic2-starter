System.registerDynamic("npm:zone.js@0.5.8/lib/patch/file-reader", ["npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  function apply() {
    utils.patchClass('FileReader');
  }
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/geolocation", ["npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  function apply() {
    if (global.navigator && global.navigator.geolocation) {
      utils.patchPrototype(global.navigator.geolocation, ['getCurrentPosition', 'watchPosition']);
    }
  }
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/property-descriptor", ["npm:zone.js@0.5.8/lib/patch/websocket", "npm:zone.js@0.5.8/lib/utils", "npm:zone.js@0.5.8/lib/keys"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var webSocketPatch = $__require('npm:zone.js@0.5.8/lib/patch/websocket');
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  var keys = $__require('npm:zone.js@0.5.8/lib/keys');
  var eventNames = 'copy cut paste abort blur focus canplay canplaythrough change click contextmenu dblclick drag dragend dragenter dragleave dragover dragstart drop durationchange emptied ended input invalid keydown keypress keyup load loadeddata loadedmetadata loadstart message mousedown mouseenter mouseleave mousemove mouseout mouseover mouseup pause play playing progress ratechange reset scroll seeked seeking select show stalled submit suspend timeupdate volumechange waiting mozfullscreenchange mozfullscreenerror mozpointerlockchange mozpointerlockerror error webglcontextrestored webglcontextlost webglcontextcreationerror'.split(' ');
  function apply() {
    if (utils.isWebWorker()) {
      return;
    }
    var supportsWebSocket = typeof WebSocket !== 'undefined';
    if (canPatchViaPropertyDescriptor()) {
      var onEventNames = eventNames.map(function(property) {
        return 'on' + property;
      });
      utils.patchProperties(HTMLElement.prototype, onEventNames);
      utils.patchProperties(XMLHttpRequest.prototype);
      if (supportsWebSocket) {
        utils.patchProperties(WebSocket.prototype);
      }
    } else {
      patchViaCapturingAllTheEvents();
      utils.patchClass('XMLHttpRequest');
      if (supportsWebSocket) {
        webSocketPatch.apply();
      }
    }
  }
  function canPatchViaPropertyDescriptor() {
    if (!Object.getOwnPropertyDescriptor(HTMLElement.prototype, 'onclick') && typeof Element !== 'undefined') {
      var desc = Object.getOwnPropertyDescriptor(Element.prototype, 'onclick');
      if (desc && !desc.configurable)
        return false;
    }
    Object.defineProperty(HTMLElement.prototype, 'onclick', {get: function() {
        return true;
      }});
    var elt = document.createElement('div');
    var result = !!elt.onclick;
    Object.defineProperty(HTMLElement.prototype, 'onclick', {});
    return result;
  }
  ;
  var unboundKey = keys.create('unbound');
  function patchViaCapturingAllTheEvents() {
    eventNames.forEach(function(property) {
      var onproperty = 'on' + property;
      document.addEventListener(property, function(event) {
        var elt = event.target,
            bound;
        while (elt) {
          if (elt[onproperty] && !elt[onproperty][unboundKey]) {
            bound = global.zone.bind(elt[onproperty]);
            bound[unboundKey] = elt[onproperty];
            elt[onproperty] = bound;
          }
          elt = elt.parentElement;
        }
      }, true);
    });
  }
  ;
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/event-target", ["npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  function apply() {
    if (global.EventTarget) {
      utils.patchEventTargetMethods(global.EventTarget.prototype);
    } else {
      var apis = ['ApplicationCache', 'EventSource', 'FileReader', 'InputMethodContext', 'MediaController', 'MessagePort', 'Node', 'Performance', 'SVGElementInstance', 'SharedWorker', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebKitNamedFlow', 'Worker', 'WorkerGlobalScope', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];
      apis.forEach(function(api) {
        var proto = global[api] && global[api].prototype;
        if (proto && proto.addEventListener) {
          utils.patchEventTargetMethods(proto);
        }
      });
      if (typeof(window) !== 'undefined') {
        utils.patchEventTargetMethods(window);
      }
    }
  }
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/websocket", ["npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  function apply() {
    var WS = global.WebSocket;
    utils.patchEventTargetMethods(WS.prototype);
    global.WebSocket = function(a, b) {
      var socket = arguments.length > 1 ? new WS(a, b) : new WS(a);
      var proxySocket;
      var onmessageDesc = Object.getOwnPropertyDescriptor(socket, 'onmessage');
      if (onmessageDesc && onmessageDesc.configurable === false) {
        proxySocket = Object.create(socket);
        ['addEventListener', 'removeEventListener', 'send', 'close'].forEach(function(propName) {
          proxySocket[propName] = function() {
            return socket[propName].apply(socket, arguments);
          };
        });
      } else {
        proxySocket = socket;
      }
      utils.patchProperties(proxySocket, ['onclose', 'onerror', 'onmessage', 'onopen']);
      return proxySocket;
    };
  }
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/register-element", ["npm:zone.js@0.5.8/lib/patch/define-property", "npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _redefineProperty = $__require('npm:zone.js@0.5.8/lib/patch/define-property')._redefineProperty;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  function apply() {
    if (utils.isWebWorker() || !('registerElement' in global.document)) {
      return;
    }
    var _registerElement = document.registerElement;
    var callbacks = ['createdCallback', 'attachedCallback', 'detachedCallback', 'attributeChangedCallback'];
    document.registerElement = function(name, opts) {
      if (opts && opts.prototype) {
        callbacks.forEach(function(callback) {
          if (opts.prototype.hasOwnProperty(callback)) {
            var descriptor = Object.getOwnPropertyDescriptor(opts.prototype, callback);
            if (descriptor && descriptor.value) {
              descriptor.value = global.zone.bind(descriptor.value);
              _redefineProperty(opts.prototype, callback, descriptor);
            } else {
              opts.prototype[callback] = global.zone.bind(opts.prototype[callback]);
            }
          } else if (opts.prototype[callback]) {
            opts.prototype[callback] = global.zone.bind(opts.prototype[callback]);
          }
        });
      }
      return _registerElement.apply(document, [name, opts]);
    };
  }
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/define-property", ["npm:zone.js@0.5.8/lib/keys"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var keys = $__require('npm:zone.js@0.5.8/lib/keys');
  var _defineProperty = Object.defineProperty;
  var _getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
  var _create = Object.create;
  var unconfigurablesKey = keys.create('unconfigurables');
  function apply() {
    Object.defineProperty = function(obj, prop, desc) {
      if (isUnconfigurable(obj, prop)) {
        throw new TypeError('Cannot assign to read only property \'' + prop + '\' of ' + obj);
      }
      if (prop !== 'prototype') {
        desc = rewriteDescriptor(obj, prop, desc);
      }
      return _defineProperty(obj, prop, desc);
    };
    Object.defineProperties = function(obj, props) {
      Object.keys(props).forEach(function(prop) {
        Object.defineProperty(obj, prop, props[prop]);
      });
      return obj;
    };
    Object.create = function(obj, proto) {
      if (typeof proto === 'object') {
        Object.keys(proto).forEach(function(prop) {
          proto[prop] = rewriteDescriptor(obj, prop, proto[prop]);
        });
      }
      return _create(obj, proto);
    };
    Object.getOwnPropertyDescriptor = function(obj, prop) {
      var desc = _getOwnPropertyDescriptor(obj, prop);
      if (isUnconfigurable(obj, prop)) {
        desc.configurable = false;
      }
      return desc;
    };
  }
  ;
  function _redefineProperty(obj, prop, desc) {
    desc = rewriteDescriptor(obj, prop, desc);
    return _defineProperty(obj, prop, desc);
  }
  ;
  function isUnconfigurable(obj, prop) {
    return obj && obj[unconfigurablesKey] && obj[unconfigurablesKey][prop];
  }
  function rewriteDescriptor(obj, prop, desc) {
    desc.configurable = true;
    if (!desc.configurable) {
      if (!obj[unconfigurablesKey]) {
        _defineProperty(obj, unconfigurablesKey, {
          writable: true,
          value: {}
        });
      }
      obj[unconfigurablesKey][prop] = true;
    }
    return desc;
  }
  module.exports = {
    apply: apply,
    _redefineProperty: _redefineProperty
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/mutation-observer", ["npm:zone.js@0.5.8/lib/keys"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var keys = $__require('npm:zone.js@0.5.8/lib/keys');
  var originalInstanceKey = keys.create('originalInstance');
  var creationZoneKey = keys.create('creationZone');
  var isActiveKey = keys.create('isActive');
  function patchClass(className) {
    var OriginalClass = global[className];
    if (!OriginalClass)
      return;
    global[className] = function(fn) {
      this[originalInstanceKey] = new OriginalClass(global.zone.bind(fn, true));
      this[creationZoneKey] = global.zone;
    };
    var instance = new OriginalClass(function() {});
    global[className].prototype.disconnect = function() {
      var result = this[originalInstanceKey].disconnect.apply(this[originalInstanceKey], arguments);
      if (this[isActiveKey]) {
        this[creationZoneKey].dequeueTask();
        this[isActiveKey] = false;
      }
      return result;
    };
    global[className].prototype.observe = function() {
      if (!this[isActiveKey]) {
        this[creationZoneKey].enqueueTask();
        this[isActiveKey] = true;
      }
      return this[originalInstanceKey].observe.apply(this[originalInstanceKey], arguments);
    };
    var prop;
    for (prop in instance) {
      (function(prop) {
        if (typeof global[className].prototype !== undefined) {
          return;
        }
        if (typeof instance[prop] === 'function') {
          global[className].prototype[prop] = function() {
            return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);
          };
        } else {
          Object.defineProperty(global[className].prototype, prop, {
            set: function(fn) {
              if (typeof fn === 'function') {
                this[originalInstanceKey][prop] = global.zone.bind(fn);
              } else {
                this[originalInstanceKey][prop] = fn;
              }
            },
            get: function() {
              return this[originalInstanceKey][prop];
            }
          });
        }
      }(prop));
    }
  }
  ;
  module.exports = {patchClass: patchClass};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/functions", ["npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  function patchSetClearFunction(obj, fnNames) {
    fnNames.map(function(name) {
      return name[0].toUpperCase() + name.substr(1);
    }).forEach(function(name) {
      var setName = 'set' + name;
      var delegate = obj[setName];
      if (delegate) {
        var clearName = 'clear' + name;
        var ids = {};
        var bindArgs = setName === 'setInterval' ? utils.bindArguments : utils.bindArgumentsOnce;
        global.zone[setName] = function(fn) {
          var id,
              fnRef = fn;
          arguments[0] = function() {
            delete ids[id];
            return fnRef.apply(this, arguments);
          };
          var args = bindArgs(arguments);
          id = delegate.apply(obj, args);
          ids[id] = true;
          return id;
        };
        obj[setName] = function() {
          return global.zone[setName].apply(this, arguments);
        };
        var clearDelegate = obj[clearName];
        global.zone[clearName] = function(id) {
          if (ids[id]) {
            delete ids[id];
            global.zone.dequeueTask();
          }
          return clearDelegate.apply(this, arguments);
        };
        obj[clearName] = function() {
          return global.zone[clearName].apply(this, arguments);
        };
      }
    });
  }
  ;
  function patchRequestAnimationFrame(obj, fnNames) {
    fnNames.forEach(function(name) {
      var delegate = obj[name];
      if (delegate) {
        global.zone[name] = function(fn) {
          var callZone = global.zone.isRootZone() ? global.zone.fork() : global.zone;
          if (fn) {
            arguments[0] = function() {
              return callZone.run(fn, this, arguments);
            };
          }
          return delegate.apply(obj, arguments);
        };
        obj[name] = function() {
          return global.zone[name].apply(this, arguments);
        };
      }
    });
  }
  ;
  function patchSetFunction(obj, fnNames) {
    fnNames.forEach(function(name) {
      var delegate = obj[name];
      if (delegate) {
        global.zone[name] = function(fn) {
          arguments[0] = function() {
            return fn.apply(this, arguments);
          };
          var args = utils.bindArgumentsOnce(arguments);
          return delegate.apply(obj, args);
        };
        obj[name] = function() {
          return zone[name].apply(this, arguments);
        };
      }
    });
  }
  ;
  function patchFunction(obj, fnNames) {
    fnNames.forEach(function(name) {
      var delegate = obj[name];
      global.zone[name] = function() {
        return delegate.apply(obj, arguments);
      };
      obj[name] = function() {
        return global.zone[name].apply(this, arguments);
      };
    });
  }
  ;
  module.exports = {
    patchSetClearFunction: patchSetClearFunction,
    patchSetFunction: patchSetFunction,
    patchRequestAnimationFrame: patchRequestAnimationFrame,
    patchFunction: patchFunction
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/browser", ["npm:zone.js@0.5.8/lib/patch/functions", "npm:zone.js@0.5.8/lib/patch/promise", "npm:zone.js@0.5.8/lib/patch/mutation-observer", "npm:zone.js@0.5.8/lib/patch/define-property", "npm:zone.js@0.5.8/lib/patch/register-element", "npm:zone.js@0.5.8/lib/patch/websocket", "npm:zone.js@0.5.8/lib/patch/event-target", "npm:zone.js@0.5.8/lib/patch/property-descriptor", "npm:zone.js@0.5.8/lib/patch/geolocation", "npm:zone.js@0.5.8/lib/patch/file-reader"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var fnPatch = $__require('npm:zone.js@0.5.8/lib/patch/functions');
  var promisePatch = $__require('npm:zone.js@0.5.8/lib/patch/promise');
  var mutationObserverPatch = $__require('npm:zone.js@0.5.8/lib/patch/mutation-observer');
  var definePropertyPatch = $__require('npm:zone.js@0.5.8/lib/patch/define-property');
  var registerElementPatch = $__require('npm:zone.js@0.5.8/lib/patch/register-element');
  var webSocketPatch = $__require('npm:zone.js@0.5.8/lib/patch/websocket');
  var eventTargetPatch = $__require('npm:zone.js@0.5.8/lib/patch/event-target');
  var propertyDescriptorPatch = $__require('npm:zone.js@0.5.8/lib/patch/property-descriptor');
  var geolocationPatch = $__require('npm:zone.js@0.5.8/lib/patch/geolocation');
  var fileReaderPatch = $__require('npm:zone.js@0.5.8/lib/patch/file-reader');
  function apply() {
    fnPatch.patchSetClearFunction(global, ['timeout', 'interval', 'immediate']);
    fnPatch.patchRequestAnimationFrame(global, ['requestAnimationFrame', 'mozRequestAnimationFrame', 'webkitRequestAnimationFrame']);
    fnPatch.patchFunction(global, ['alert', 'prompt']);
    eventTargetPatch.apply();
    propertyDescriptorPatch.apply();
    promisePatch.apply();
    mutationObserverPatch.patchClass('MutationObserver');
    mutationObserverPatch.patchClass('WebKitMutationObserver');
    definePropertyPatch.apply();
    registerElementPatch.apply();
    geolocationPatch.apply();
    fileReaderPatch.apply();
  }
  module.exports = {apply: apply};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/utils", ["npm:zone.js@0.5.8/lib/keys"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var keys = $__require('npm:zone.js@0.5.8/lib/keys');
  function bindArguments(args) {
    for (var i = args.length - 1; i >= 0; i--) {
      if (typeof args[i] === 'function') {
        args[i] = global.zone.bind(args[i]);
      }
    }
    return args;
  }
  ;
  function bindArgumentsOnce(args) {
    for (var i = args.length - 1; i >= 0; i--) {
      if (typeof args[i] === 'function') {
        args[i] = global.zone.bindOnce(args[i]);
      }
    }
    return args;
  }
  ;
  function patchPrototype(obj, fnNames) {
    fnNames.forEach(function(name) {
      var delegate = obj[name];
      if (delegate) {
        obj[name] = function() {
          return delegate.apply(this, bindArguments(arguments));
        };
      }
    });
  }
  ;
  function isWebWorker() {
    return (typeof document === "undefined");
  }
  function patchProperty(obj, prop) {
    var desc = Object.getOwnPropertyDescriptor(obj, prop) || {
      enumerable: true,
      configurable: true
    };
    delete desc.writable;
    delete desc.value;
    var eventName = prop.substr(2);
    var _prop = '_' + prop;
    desc.set = function(fn) {
      if (this[_prop]) {
        this.removeEventListener(eventName, this[_prop]);
      }
      if (typeof fn === 'function') {
        this[_prop] = fn;
        this.addEventListener(eventName, fn, false);
      } else {
        this[_prop] = null;
      }
    };
    desc.get = function() {
      return this[_prop];
    };
    Object.defineProperty(obj, prop, desc);
  }
  ;
  function patchProperties(obj, properties) {
    (properties || (function() {
      var props = [];
      for (var prop in obj) {
        props.push(prop);
      }
      return props;
    }()).filter(function(propertyName) {
      return propertyName.substr(0, 2) === 'on';
    })).forEach(function(eventName) {
      patchProperty(obj, eventName);
    });
  }
  ;
  var originalFnKey = keys.create('originalFn');
  var boundFnsKey = keys.create('boundFns');
  function patchEventTargetMethods(obj) {
    obj[keys.common.addEventListener] = obj.addEventListener;
    obj.addEventListener = function(eventName, handler, useCapturing) {
      var eventType = eventName + (useCapturing ? '$capturing' : '$bubbling');
      var fn;
      if (handler.toString() !== "[object FunctionWrapper]") {
        if (handler.handleEvent) {
          fn = (function(handler) {
            return function() {
              handler.handleEvent.apply(handler, arguments);
            };
          })(handler);
        } else {
          fn = handler;
        }
        handler[originalFnKey] = fn;
        handler[boundFnsKey] = handler[boundFnsKey] || {};
        handler[boundFnsKey][eventType] = handler[boundFnsKey][eventType] || zone.bind(fn);
        arguments[1] = handler[boundFnsKey][eventType];
      }
      var target = this || global;
      return global.zone.addEventListener.apply(target, arguments);
    };
    obj[keys.common.removeEventListener] = obj.removeEventListener;
    obj.removeEventListener = function(eventName, handler, useCapturing) {
      var eventType = eventName + (useCapturing ? '$capturing' : '$bubbling');
      if (handler[boundFnsKey] && handler[boundFnsKey][eventType]) {
        var _bound = handler[boundFnsKey];
        arguments[1] = _bound[eventType];
        delete _bound[eventType];
      }
      var target = this || global;
      var result = global.zone.removeEventListener.apply(target, arguments);
      global.zone.dequeueTask(handler[originalFnKey]);
      return result;
    };
  }
  ;
  var originalInstanceKey = keys.create('originalInstance');
  function patchClass(className) {
    var OriginalClass = global[className];
    if (!OriginalClass)
      return;
    global[className] = function() {
      var a = bindArguments(arguments);
      switch (a.length) {
        case 0:
          this[originalInstanceKey] = new OriginalClass();
          break;
        case 1:
          this[originalInstanceKey] = new OriginalClass(a[0]);
          break;
        case 2:
          this[originalInstanceKey] = new OriginalClass(a[0], a[1]);
          break;
        case 3:
          this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2]);
          break;
        case 4:
          this[originalInstanceKey] = new OriginalClass(a[0], a[1], a[2], a[3]);
          break;
        default:
          throw new Error('what are you even doing?');
      }
    };
    var instance = new OriginalClass();
    var prop;
    for (prop in instance) {
      (function(prop) {
        if (typeof instance[prop] === 'function') {
          global[className].prototype[prop] = function() {
            return this[originalInstanceKey][prop].apply(this[originalInstanceKey], arguments);
          };
        } else {
          Object.defineProperty(global[className].prototype, prop, {
            set: function(fn) {
              if (typeof fn === 'function') {
                this[originalInstanceKey][prop] = global.zone.bind(fn);
              } else {
                this[originalInstanceKey][prop] = fn;
              }
            },
            get: function() {
              return this[originalInstanceKey][prop];
            }
          });
        }
      }(prop));
    }
    for (prop in OriginalClass) {
      if (prop !== 'prototype' && OriginalClass.hasOwnProperty(prop)) {
        global[className][prop] = OriginalClass[prop];
      }
    }
  }
  ;
  module.exports = {
    bindArguments: bindArguments,
    bindArgumentsOnce: bindArgumentsOnce,
    patchPrototype: patchPrototype,
    patchProperty: patchProperty,
    patchProperties: patchProperties,
    patchEventTargetMethods: patchEventTargetMethods,
    patchClass: patchClass,
    isWebWorker: isWebWorker
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/patch/promise", ["npm:zone.js@0.5.8/lib/utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var utils = $__require('npm:zone.js@0.5.8/lib/utils');
  var bindPromiseFn;
  if (global.Promise) {
    bindPromiseFn = function(delegate) {
      return function() {
        var delegatePromise = delegate.apply(this, arguments);
        if (delegatePromise instanceof Promise) {
          return delegatePromise;
        }
        return new Promise(function(resolve, reject) {
          delegatePromise.then(resolve, reject);
        });
      };
    };
  } else {
    bindPromiseFn = function(delegate) {
      return function() {
        return _patchThenable(delegate.apply(this, arguments));
      };
    };
  }
  function _patchPromiseFnsOnObject(objectPath, fnNames) {
    var obj = global;
    var exists = objectPath.every(function(segment) {
      obj = obj[segment];
      return obj;
    });
    if (!exists) {
      return;
    }
    fnNames.forEach(function(name) {
      var fn = obj[name];
      if (fn) {
        obj[name] = bindPromiseFn(fn);
      }
    });
  }
  function _patchThenable(thenable) {
    var then = thenable.then;
    thenable.then = function() {
      var args = utils.bindArguments(arguments);
      var nextThenable = then.apply(thenable, args);
      return _patchThenable(nextThenable);
    };
    var ocatch = thenable.catch;
    thenable.catch = function() {
      var args = utils.bindArguments(arguments);
      var nextThenable = ocatch.apply(thenable, args);
      return _patchThenable(nextThenable);
    };
    return thenable;
  }
  function apply() {
    if (global.Promise) {
      utils.patchPrototype(Promise.prototype, ['then', 'catch']);
      var patchFns = [[[], ['fetch']], [['Response', 'prototype'], ['arrayBuffer', 'blob', 'json', 'text']]];
      patchFns.forEach(function(objPathAndFns) {
        _patchPromiseFnsOnObject(objPathAndFns[0], objPathAndFns[1]);
      });
    }
  }
  module.exports = {
    apply: apply,
    bindPromiseFn: bindPromiseFn
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/keys", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  if (typeof Symbol !== 'undefined') {
    function create(name) {
      return Symbol(name);
    }
  } else {
    function create(name) {
      return '_zone$' + name;
    }
  }
  var commonKeys = {
    addEventListener: create('addEventListener'),
    removeEventListener: create('removeEventListener')
  };
  module.exports = {
    create: create,
    common: commonKeys
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/core", ["npm:zone.js@0.5.8/lib/keys", "npm:zone.js@0.5.8/lib/patch/promise"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var keys = $__require('npm:zone.js@0.5.8/lib/keys');
  function Zone(parentZone, data) {
    var zone = (arguments.length) ? Object.create(parentZone) : this;
    zone.parent = parentZone || null;
    Object.keys(data || {}).forEach(function(property) {
      var _property = property.substr(1);
      if (property[0] === '$') {
        zone[_property] = data[property](parentZone[_property] || function() {});
      } else if (property[0] === '+') {
        if (parentZone[_property]) {
          zone[_property] = function() {
            var result = parentZone[_property].apply(this, arguments);
            data[property].apply(this, arguments);
            return result;
          };
        } else {
          zone[_property] = data[property];
        }
      } else if (property[0] === '-') {
        if (parentZone[_property]) {
          zone[_property] = function() {
            data[property].apply(this, arguments);
            return parentZone[_property].apply(this, arguments);
          };
        } else {
          zone[_property] = data[property];
        }
      } else {
        zone[property] = (typeof data[property] === 'object') ? JSON.parse(JSON.stringify(data[property])) : data[property];
      }
    });
    zone.$id = Zone.nextId++;
    return zone;
  }
  Zone.prototype = {
    constructor: Zone,
    fork: function(locals) {
      this.onZoneCreated();
      return new Zone(this, locals);
    },
    bind: function(fn, skipEnqueue) {
      if (typeof fn !== 'function') {
        throw new Error('Expecting function got: ' + fn);
      }
      skipEnqueue || this.enqueueTask(fn);
      var zone = this.isRootZone() ? this : this.fork();
      return function zoneBoundFn() {
        return zone.run(fn, this, arguments);
      };
    },
    bindOnce: function(fn) {
      var boundZone = this;
      return this.bind(function() {
        var result = fn.apply(this, arguments);
        boundZone.dequeueTask(fn);
        return result;
      });
    },
    isRootZone: function() {
      return this.parent === null;
    },
    run: function run(fn, applyTo, applyWith) {
      applyWith = applyWith || [];
      var oldZone = global.zone;
      global.zone = this;
      try {
        this.beforeTask();
        return fn.apply(applyTo, applyWith);
      } catch (e) {
        if (this.onError) {
          this.onError(e);
        } else {
          throw e;
        }
      } finally {
        this.afterTask();
        global.zone = oldZone;
      }
    },
    onError: null,
    beforeTask: function() {},
    onZoneCreated: function() {},
    afterTask: function() {},
    enqueueTask: function() {},
    dequeueTask: function() {},
    addEventListener: function() {
      return this[keys.common.addEventListener].apply(this, arguments);
    },
    removeEventListener: function() {
      return this[keys.common.removeEventListener].apply(this, arguments);
    }
  };
  Zone.nextId = 1;
  Zone.bindPromiseFn = $__require('npm:zone.js@0.5.8/lib/patch/promise').bindPromiseFn;
  module.exports = {Zone: Zone};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8/lib/zone", ["npm:zone.js@0.5.8/lib/core", "npm:zone.js@0.5.8/lib/patch/browser"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var core = $__require('npm:zone.js@0.5.8/lib/core');
  var browserPatch = $__require('npm:zone.js@0.5.8/lib/patch/browser');
  global.zone = new core.Zone();
  module.exports = {
    Zone: core.Zone,
    zone: global.zone
  };
  browserPatch.apply();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:zone.js@0.5.8", ["npm:zone.js@0.5.8/lib/zone"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:zone.js@0.5.8/lib/zone');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:reflect-metadata@0.1.2/Reflect", ["@empty", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    var Reflect;
    (function(Reflect) {
      var functionPrototype = Object.getPrototypeOf(Function);
      var _Map = typeof Map === "function" ? Map : CreateMapPolyfill();
      var _Set = typeof Set === "function" ? Set : CreateSetPolyfill();
      var _WeakMap = typeof WeakMap === "function" ? WeakMap : CreateWeakMapPolyfill();
      var __Metadata__ = new _WeakMap();
      function decorate(decorators, target, targetKey, targetDescriptor) {
        if (!IsUndefined(targetDescriptor)) {
          if (!IsArray(decorators)) {
            throw new TypeError();
          } else if (!IsObject(target)) {
            throw new TypeError();
          } else if (IsUndefined(targetKey)) {
            throw new TypeError();
          } else if (!IsObject(targetDescriptor)) {
            throw new TypeError();
          }
          targetKey = ToPropertyKey(targetKey);
          return DecoratePropertyWithDescriptor(decorators, target, targetKey, targetDescriptor);
        } else if (!IsUndefined(targetKey)) {
          if (!IsArray(decorators)) {
            throw new TypeError();
          } else if (!IsObject(target)) {
            throw new TypeError();
          }
          targetKey = ToPropertyKey(targetKey);
          return DecoratePropertyWithoutDescriptor(decorators, target, targetKey);
        } else {
          if (!IsArray(decorators)) {
            throw new TypeError();
          } else if (!IsConstructor(target)) {
            throw new TypeError();
          }
          return DecorateConstructor(decorators, target);
        }
      }
      Reflect.decorate = decorate;
      function metadata(metadataKey, metadataValue) {
        function decorator(target, targetKey) {
          if (!IsUndefined(targetKey)) {
            if (!IsObject(target)) {
              throw new TypeError();
            }
            targetKey = ToPropertyKey(targetKey);
            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);
          } else {
            if (!IsConstructor(target)) {
              throw new TypeError();
            }
            OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, undefined);
          }
        }
        return decorator;
      }
      Reflect.metadata = metadata;
      function defineMetadata(metadataKey, metadataValue, target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, targetKey);
      }
      Reflect.defineMetadata = defineMetadata;
      function hasMetadata(metadataKey, target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryHasMetadata(metadataKey, target, targetKey);
      }
      Reflect.hasMetadata = hasMetadata;
      function hasOwnMetadata(metadataKey, target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryHasOwnMetadata(metadataKey, target, targetKey);
      }
      Reflect.hasOwnMetadata = hasOwnMetadata;
      function getMetadata(metadataKey, target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryGetMetadata(metadataKey, target, targetKey);
      }
      Reflect.getMetadata = getMetadata;
      function getOwnMetadata(metadataKey, target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryGetOwnMetadata(metadataKey, target, targetKey);
      }
      Reflect.getOwnMetadata = getOwnMetadata;
      function getMetadataKeys(target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryMetadataKeys(target, targetKey);
      }
      Reflect.getMetadataKeys = getMetadataKeys;
      function getOwnMetadataKeys(target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        return OrdinaryOwnMetadataKeys(target, targetKey);
      }
      Reflect.getOwnMetadataKeys = getOwnMetadataKeys;
      function deleteMetadata(metadataKey, target, targetKey) {
        if (!IsObject(target)) {
          throw new TypeError();
        } else if (!IsUndefined(targetKey)) {
          targetKey = ToPropertyKey(targetKey);
        }
        var metadataMap = GetOrCreateMetadataMap(target, targetKey, false);
        if (IsUndefined(metadataMap)) {
          return false;
        }
        if (!metadataMap.delete(metadataKey)) {
          return false;
        }
        if (metadataMap.size > 0) {
          return true;
        }
        var targetMetadata = __Metadata__.get(target);
        targetMetadata.delete(targetKey);
        if (targetMetadata.size > 0) {
          return true;
        }
        __Metadata__.delete(target);
        return true;
      }
      Reflect.deleteMetadata = deleteMetadata;
      function DecorateConstructor(decorators, target) {
        for (var i = decorators.length - 1; i >= 0; --i) {
          var decorator = decorators[i];
          var decorated = decorator(target);
          if (!IsUndefined(decorated)) {
            if (!IsConstructor(decorated)) {
              throw new TypeError();
            }
            target = decorated;
          }
        }
        return target;
      }
      function DecoratePropertyWithDescriptor(decorators, target, propertyKey, descriptor) {
        for (var i = decorators.length - 1; i >= 0; --i) {
          var decorator = decorators[i];
          var decorated = decorator(target, propertyKey, descriptor);
          if (!IsUndefined(decorated)) {
            if (!IsObject(decorated)) {
              throw new TypeError();
            }
            descriptor = decorated;
          }
        }
        return descriptor;
      }
      function DecoratePropertyWithoutDescriptor(decorators, target, propertyKey) {
        for (var i = decorators.length - 1; i >= 0; --i) {
          var decorator = decorators[i];
          decorator(target, propertyKey);
        }
      }
      function GetOrCreateMetadataMap(target, targetKey, create) {
        var targetMetadata = __Metadata__.get(target);
        if (!targetMetadata) {
          if (!create) {
            return undefined;
          }
          targetMetadata = new _Map();
          __Metadata__.set(target, targetMetadata);
        }
        var keyMetadata = targetMetadata.get(targetKey);
        if (!keyMetadata) {
          if (!create) {
            return undefined;
          }
          keyMetadata = new _Map();
          targetMetadata.set(targetKey, keyMetadata);
        }
        return keyMetadata;
      }
      function OrdinaryHasMetadata(MetadataKey, O, P) {
        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn) {
          return true;
        }
        var parent = GetPrototypeOf(O);
        if (parent !== null) {
          return OrdinaryHasMetadata(MetadataKey, parent, P);
        }
        return false;
      }
      function OrdinaryHasOwnMetadata(MetadataKey, O, P) {
        var metadataMap = GetOrCreateMetadataMap(O, P, false);
        if (metadataMap === undefined) {
          return false;
        }
        return Boolean(metadataMap.has(MetadataKey));
      }
      function OrdinaryGetMetadata(MetadataKey, O, P) {
        var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);
        if (hasOwn) {
          return OrdinaryGetOwnMetadata(MetadataKey, O, P);
        }
        var parent = GetPrototypeOf(O);
        if (parent !== null) {
          return OrdinaryGetMetadata(MetadataKey, parent, P);
        }
        return undefined;
      }
      function OrdinaryGetOwnMetadata(MetadataKey, O, P) {
        var metadataMap = GetOrCreateMetadataMap(O, P, false);
        if (metadataMap === undefined) {
          return undefined;
        }
        return metadataMap.get(MetadataKey);
      }
      function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {
        var metadataMap = GetOrCreateMetadataMap(O, P, true);
        metadataMap.set(MetadataKey, MetadataValue);
      }
      function OrdinaryMetadataKeys(O, P) {
        var ownKeys = OrdinaryOwnMetadataKeys(O, P);
        var parent = GetPrototypeOf(O);
        if (parent === null) {
          return ownKeys;
        }
        var parentKeys = OrdinaryMetadataKeys(parent, P);
        if (parentKeys.length <= 0) {
          return ownKeys;
        }
        if (ownKeys.length <= 0) {
          return parentKeys;
        }
        var set = new _Set();
        var keys = [];
        for (var _i = 0; _i < ownKeys.length; _i++) {
          var key = ownKeys[_i];
          var hasKey = set.has(key);
          if (!hasKey) {
            set.add(key);
            keys.push(key);
          }
        }
        for (var _a = 0; _a < parentKeys.length; _a++) {
          var key = parentKeys[_a];
          var hasKey = set.has(key);
          if (!hasKey) {
            set.add(key);
            keys.push(key);
          }
        }
        return keys;
      }
      function OrdinaryOwnMetadataKeys(target, targetKey) {
        var metadataMap = GetOrCreateMetadataMap(target, targetKey, false);
        var keys = [];
        if (metadataMap) {
          metadataMap.forEach(function(_, key) {
            return keys.push(key);
          });
        }
        return keys;
      }
      function IsUndefined(x) {
        return x === undefined;
      }
      function IsArray(x) {
        return Array.isArray(x);
      }
      function IsObject(x) {
        return typeof x === "object" ? x !== null : typeof x === "function";
      }
      function IsConstructor(x) {
        return typeof x === "function";
      }
      function IsSymbol(x) {
        return typeof x === "symbol";
      }
      function ToPropertyKey(value) {
        if (IsSymbol(value)) {
          return value;
        }
        return String(value);
      }
      function GetPrototypeOf(O) {
        var proto = Object.getPrototypeOf(O);
        if (typeof O !== "function" || O === functionPrototype) {
          return proto;
        }
        if (proto !== functionPrototype) {
          return proto;
        }
        var prototype = O.prototype;
        var prototypeProto = Object.getPrototypeOf(prototype);
        if (prototypeProto == null || prototypeProto === Object.prototype) {
          return proto;
        }
        var constructor = prototypeProto.constructor;
        if (typeof constructor !== "function") {
          return proto;
        }
        if (constructor === O) {
          return proto;
        }
        return constructor;
      }
      function CreateMapPolyfill() {
        var cacheSentinel = {};
        function Map() {
          this._keys = [];
          this._values = [];
          this._cache = cacheSentinel;
        }
        Map.prototype = {
          get size() {
            return this._keys.length;
          },
          has: function(key) {
            if (key === this._cache) {
              return true;
            }
            if (this._find(key) >= 0) {
              this._cache = key;
              return true;
            }
            return false;
          },
          get: function(key) {
            var index = this._find(key);
            if (index >= 0) {
              this._cache = key;
              return this._values[index];
            }
            return undefined;
          },
          set: function(key, value) {
            this.delete(key);
            this._keys.push(key);
            this._values.push(value);
            this._cache = key;
            return this;
          },
          delete: function(key) {
            var index = this._find(key);
            if (index >= 0) {
              this._keys.splice(index, 1);
              this._values.splice(index, 1);
              this._cache = cacheSentinel;
              return true;
            }
            return false;
          },
          clear: function() {
            this._keys.length = 0;
            this._values.length = 0;
            this._cache = cacheSentinel;
          },
          forEach: function(callback, thisArg) {
            var size = this.size;
            for (var i = 0; i < size; ++i) {
              var key = this._keys[i];
              var value = this._values[i];
              this._cache = key;
              callback.call(this, value, key, this);
            }
          },
          _find: function(key) {
            var keys = this._keys;
            var size = keys.length;
            for (var i = 0; i < size; ++i) {
              if (keys[i] === key) {
                return i;
              }
            }
            return -1;
          }
        };
        return Map;
      }
      function CreateSetPolyfill() {
        var cacheSentinel = {};
        function Set() {
          this._map = new _Map();
        }
        Set.prototype = {
          get size() {
            return this._map.length;
          },
          has: function(value) {
            return this._map.has(value);
          },
          add: function(value) {
            this._map.set(value, value);
            return this;
          },
          delete: function(value) {
            return this._map.delete(value);
          },
          clear: function() {
            this._map.clear();
          },
          forEach: function(callback, thisArg) {
            this._map.forEach(callback, thisArg);
          }
        };
        return Set;
      }
      function CreateWeakMapPolyfill() {
        var UUID_SIZE = 16;
        var isNode = typeof global !== "undefined" && Object.prototype.toString.call(global.process) === '[object process]';
        var nodeCrypto = isNode && $__require('@empty');
        var hasOwn = Object.prototype.hasOwnProperty;
        var keys = {};
        var rootKey = CreateUniqueKey();
        function WeakMap() {
          this._key = CreateUniqueKey();
        }
        WeakMap.prototype = {
          has: function(target) {
            var table = GetOrCreateWeakMapTable(target, false);
            if (table) {
              return this._key in table;
            }
            return false;
          },
          get: function(target) {
            var table = GetOrCreateWeakMapTable(target, false);
            if (table) {
              return table[this._key];
            }
            return undefined;
          },
          set: function(target, value) {
            var table = GetOrCreateWeakMapTable(target, true);
            table[this._key] = value;
            return this;
          },
          delete: function(target) {
            var table = GetOrCreateWeakMapTable(target, false);
            if (table && this._key in table) {
              return delete table[this._key];
            }
            return false;
          },
          clear: function() {
            this._key = CreateUniqueKey();
          }
        };
        function FillRandomBytes(buffer, size) {
          for (var i = 0; i < size; ++i) {
            buffer[i] = Math.random() * 255 | 0;
          }
        }
        function GenRandomBytes(size) {
          if (nodeCrypto) {
            var data = nodeCrypto.randomBytes(size);
            return data;
          } else if (typeof Uint8Array === "function") {
            var data = new Uint8Array(size);
            if (typeof crypto !== "undefined") {
              crypto.getRandomValues(data);
            } else if (typeof msCrypto !== "undefined") {
              msCrypto.getRandomValues(data);
            } else {
              FillRandomBytes(data, size);
            }
            return data;
          } else {
            var data = new Array(size);
            FillRandomBytes(data, size);
            return data;
          }
        }
        function CreateUUID() {
          var data = GenRandomBytes(UUID_SIZE);
          data[6] = data[6] & 0x4f | 0x40;
          data[8] = data[8] & 0xbf | 0x80;
          var result = "";
          for (var offset = 0; offset < UUID_SIZE; ++offset) {
            var byte = data[offset];
            if (offset === 4 || offset === 6 || offset === 8) {
              result += "-";
            }
            if (byte < 16) {
              result += "0";
            }
            result += byte.toString(16).toLowerCase();
          }
          return result;
        }
        function CreateUniqueKey() {
          var key;
          do {
            key = "@@WeakMap@@" + CreateUUID();
          } while (hasOwn.call(keys, key));
          keys[key] = true;
          return key;
        }
        function GetOrCreateWeakMapTable(target, create) {
          if (!hasOwn.call(target, rootKey)) {
            if (!create) {
              return undefined;
            }
            Object.defineProperty(target, rootKey, {value: Object.create(null)});
          }
          return target[rootKey];
        }
        return WeakMap;
      }
      (function(__global) {
        if (typeof __global.Reflect !== "undefined") {
          if (__global.Reflect !== Reflect) {
            for (var p in Reflect) {
              __global.Reflect[p] = Reflect[p];
            }
          }
        } else {
          __global.Reflect = Reflect;
        }
      })(typeof window !== "undefined" ? window : typeof WorkerGlobalScope !== "undefined" ? self : typeof global !== "undefined" ? global : Function("return this;")());
    })(Reflect || (Reflect = {}));
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:reflect-metadata@0.1.2", ["npm:reflect-metadata@0.1.2/Reflect"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:reflect-metadata@0.1.2/Reflect');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate_pipe", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _translate = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var TranslatePipe = (function() {
    function TranslatePipe(translate) {
      _classCallCheck(this, TranslatePipe);
      this.translate = translate;
    }
    _createClass(TranslatePipe, [{
      key: "transform",
      value: function transform(value, args) {
        var lang = undefined;
        if (args.length > 0) {
          lang = args[0];
        }
        return this.translate.translate(value, lang);
      }
    }, {
      key: "supports",
      value: function supports(obj) {
        return true;
      }
    }]);
    return TranslatePipe;
  })();
  exports.TranslatePipe = TranslatePipe;
  exports.TranslatePipe = TranslatePipe = __decorate([(0, _angular2Angular2.Pipe)({name: 'translate'}), (0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [typeof(_a = typeof _translate.Translate !== 'undefined' && _translate.Translate) === 'function' && _a || Object])], TranslatePipe);
  var _a;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/md-transition", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _transition = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var TRANSLATEY = 'translateY';
  var OFF_BOTTOM = '40px';
  var CENTER = '0px';
  var SHOW_BACK_BTN_CSS = 'show-back-button';
  var MDTransition = (function(_Animation) {
    _inherits(MDTransition, _Animation);
    function MDTransition(navCtrl, opts) {
      _classCallCheck(this, MDTransition);
      _get(Object.getPrototypeOf(MDTransition.prototype), 'constructor', this).call(this, null, opts);
      var backDirection = opts.direction === 'back';
      var enteringView = navCtrl.getStagedEnteringView();
      var leavingView = navCtrl.getStagedLeavingView();
      var enteringHasNavbar = enteringView.hasNavbar();
      var leavingHasNavbar = leavingView && leavingView.hasNavbar();
      var enteringPage = new _animationsAnimation.Animation(enteringView.pageRef());
      enteringPage.before.addClass('show-page');
      this.add(enteringPage);
      if (backDirection) {
        this.duration(200).easing('cubic-bezier(0.47,0,0.745,0.715)');
        enteringPage.fromTo(TRANSLATEY, CENTER, CENTER);
      } else {
        this.duration(280).easing('cubic-bezier(0.36,0.66,0.04,1)');
        enteringPage.fromTo(TRANSLATEY, OFF_BOTTOM, CENTER).fadeIn();
      }
      if (enteringHasNavbar) {
        var enteringBackButton = new _animationsAnimation.Animation(enteringView.backBtnRef());
        this.add(enteringBackButton);
        if (enteringView.enableBack()) {
          enteringBackButton.before.addClass(SHOW_BACK_BTN_CSS);
        } else {
          enteringBackButton.before.removeClass(SHOW_BACK_BTN_CSS);
        }
      }
      if (leavingView && backDirection) {
        this.duration(200).easing('cubic-bezier(0.47,0,0.745,0.715)');
        var leavingPage = new _animationsAnimation.Animation(leavingView.pageRef());
        this.add(leavingPage.fromTo(TRANSLATEY, CENTER, OFF_BOTTOM).fadeOut());
      }
    }
    return MDTransition;
  })(_animationsAnimation.Animation);
  _transition.Transition.register('md', MDTransition);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/ios-transition", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _transition = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var DURATION = 550;
  var EASING = 'cubic-bezier(0.36,0.66,0.04,1)';
  var OPACITY = 'opacity';
  var TRANSLATEX = 'translateX';
  var OFF_RIGHT = '99.5%';
  var OFF_LEFT = '-33%';
  var CENTER = '0%';
  var OFF_OPACITY = 0.8;
  var SHOW_BACK_BTN_CSS = 'show-back-button';
  var IOSTransition = (function(_Animation) {
    _inherits(IOSTransition, _Animation);
    function IOSTransition(navCtrl, opts) {
      _classCallCheck(this, IOSTransition);
      _get(Object.getPrototypeOf(IOSTransition.prototype), 'constructor', this).call(this, null, opts);
      this.duration(DURATION);
      this.easing(EASING);
      var backDirection = opts.direction === 'back';
      var enteringView = navCtrl.getStagedEnteringView();
      var leavingView = navCtrl.getStagedLeavingView();
      var enteringHasNavbar = enteringView.hasNavbar();
      var leavingHasNavbar = leavingView && leavingView.hasNavbar();
      var enteringPage = new _animationsAnimation.Animation(enteringView.pageRef());
      enteringPage.before.addClass('show-page');
      this.add(enteringPage);
      var enteringContent = new _animationsAnimation.Animation(enteringView.contentRef());
      this.add(enteringContent);
      if (backDirection) {
        enteringContent.fromTo(TRANSLATEX, OFF_LEFT, CENTER).fromTo(OPACITY, OFF_OPACITY, 1);
      } else {
        enteringContent.fromTo(TRANSLATEX, OFF_RIGHT, CENTER).fromTo(OPACITY, 1, 1);
      }
      if (enteringHasNavbar) {
        var enteringNavBar = new _animationsAnimation.Animation(enteringView.navbarRef());
        this.add(enteringNavBar);
        var enteringTitle = new _animationsAnimation.Animation(enteringView.titleRef());
        var enteringNavbarItems = new _animationsAnimation.Animation(enteringView.navbarItemRefs());
        var enteringNavbarBg = new _animationsAnimation.Animation(enteringView.navbarBgRef());
        var enteringBackButton = new _animationsAnimation.Animation(enteringView.backBtnRef());
        enteringNavBar.add(enteringTitle).add(enteringNavbarItems).add(enteringNavbarBg).add(enteringBackButton);
        enteringTitle.fadeIn();
        enteringNavbarItems.fadeIn();
        if (backDirection) {
          enteringTitle.fromTo(TRANSLATEX, OFF_LEFT, CENTER);
          if (enteringView.enableBack()) {
            enteringBackButton.fadeIn();
          }
        } else {
          enteringTitle.fromTo(TRANSLATEX, OFF_RIGHT, CENTER);
          if (leavingHasNavbar) {
            enteringNavbarBg.fromTo(TRANSLATEX, CENTER, CENTER).fadeIn();
          } else {
            enteringNavbarBg.fromTo(TRANSLATEX, OFF_RIGHT, CENTER).fromTo(OPACITY, 1, 1);
          }
          if (enteringView.enableBack()) {
            enteringBackButton.before.addClass(SHOW_BACK_BTN_CSS).fadeIn();
            var enteringBackBtnText = new _animationsAnimation.Animation(enteringView.backBtnTextRef());
            enteringBackBtnText.fromTo(TRANSLATEX, '100px', '0px');
            enteringNavBar.add(enteringBackBtnText);
          } else {
            enteringBackButton.before.removeClass(SHOW_BACK_BTN_CSS);
          }
        }
      }
      if (leavingView) {
        var leavingContent = new _animationsAnimation.Animation(leavingView.contentRef());
        this.add(leavingContent);
        if (backDirection) {
          leavingContent.fromTo(TRANSLATEX, CENTER, '100%').fromTo(OPACITY, 1, 1);
        } else {
          leavingContent.fromTo(TRANSLATEX, CENTER, OFF_LEFT).fromTo(OPACITY, 1, OFF_OPACITY);
        }
        if (leavingHasNavbar) {
          var leavingNavBar = new _animationsAnimation.Animation(leavingView.navbarRef());
          var leavingBackButton = new _animationsAnimation.Animation(leavingView.backBtnRef());
          var leavingTitle = new _animationsAnimation.Animation(leavingView.titleRef());
          var leavingNavbarItems = new _animationsAnimation.Animation(leavingView.navbarItemRefs());
          var leavingNavbarBg = new _animationsAnimation.Animation(leavingView.navbarBgRef());
          leavingNavBar.add(leavingBackButton).add(leavingTitle).add(leavingNavbarItems).add(leavingNavbarBg);
          this.add(leavingNavBar);
          leavingBackButton.fadeOut();
          leavingTitle.fadeOut();
          leavingNavbarItems.fadeOut();
          if (backDirection) {
            leavingTitle.fromTo(TRANSLATEX, CENTER, '100%');
            if (enteringHasNavbar) {
              leavingNavbarBg.fromTo(TRANSLATEX, CENTER, CENTER).fadeOut();
            } else {
              leavingNavbarBg.fromTo(TRANSLATEX, CENTER, '100%').fromTo(OPACITY, 1, 1);
            }
            var leavingBackBtnText = new _animationsAnimation.Animation(leavingView.backBtnTextRef());
            leavingBackBtnText.fromTo(TRANSLATEX, CENTER, 300 + 'px');
            leavingNavBar.add(leavingBackBtnText);
          } else {
            leavingTitle.fromTo(TRANSLATEX, CENTER, OFF_LEFT);
          }
        }
      }
    }
    return IOSTransition;
  })(_animationsAnimation.Animation);
  _transition.Transition.register('ios', IOSTransition);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/builtins", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _animation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var SlideIn = (function(_Animation) {
    _inherits(SlideIn, _Animation);
    function SlideIn(element) {
      _classCallCheck(this, SlideIn);
      _get(Object.getPrototypeOf(SlideIn.prototype), 'constructor', this).call(this, element);
      this.easing('cubic-bezier(0.1,0.7,0.1,1)').duration(400).fromTo('translateY', '100%', '0%');
    }
    return SlideIn;
  })(_animation.Animation);
  _animation.Animation.register('slide-in', SlideIn);
  var SlideOut = (function(_Animation2) {
    _inherits(SlideOut, _Animation2);
    function SlideOut(element) {
      _classCallCheck(this, SlideOut);
      _get(Object.getPrototypeOf(SlideOut.prototype), 'constructor', this).call(this, element);
      this.easing('ease-out').duration(250).fromTo('translateY', '0%', '100%');
    }
    return SlideOut;
  })(_animation.Animation);
  _animation.Animation.register('slide-out', SlideOut);
  var FadeIn = (function(_Animation3) {
    _inherits(FadeIn, _Animation3);
    function FadeIn(element) {
      _classCallCheck(this, FadeIn);
      _get(Object.getPrototypeOf(FadeIn.prototype), 'constructor', this).call(this, element);
      this.easing('ease-in').duration(400).fadeIn();
    }
    return FadeIn;
  })(_animation.Animation);
  _animation.Animation.register('fade-in', FadeIn);
  var FadeOut = (function(_Animation4) {
    _inherits(FadeOut, _Animation4);
    function FadeOut(element) {
      _classCallCheck(this, FadeOut);
      _get(Object.getPrototypeOf(FadeOut.prototype), 'constructor', this).call(this, element);
      this.easing('ease-out').duration(250).fadeOut();
    }
    return FadeOut;
  })(_animation.Animation);
  _animation.Animation.register('fade-out', FadeOut);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/sql", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _storage = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var DB_NAME = '__ionicstorage';
  var SqlStorage = (function(_StorageEngine) {
    _inherits(SqlStorage, _StorageEngine);
    function SqlStorage(options) {
      _classCallCheck(this, SqlStorage);
      _get(Object.getPrototypeOf(SqlStorage.prototype), 'constructor', this).call(this);
      var dbOptions = util.defaults({
        name: DB_NAME,
        backupFlag: SqlStorage.BACKUP_LOCAL,
        existingDatabase: false
      }, options);
      if (window.sqlitePlugin) {
        var _location = this._getBackupLocation(dbOptions.backupFlag);
        this._db = window.sqlitePlugin.openDatabase(util.extend({
          name: dbOptions.name,
          location: _location,
          createFromLocation: dbOptions.existingDatabase ? 1 : 0
        }, dbOptions));
      } else {
        console.warn('Storage: SQLite plugin not installed, falling back to WebSQL. Make sure to install cordova-sqlite-storage in production!');
        this._db = window.openDatabase(dbOptions.name, '1.0', 'database', 5 * 1024 * 1024);
      }
      this._tryInit();
    }
    _createClass(SqlStorage, [{
      key: '_getBackupLocation',
      value: function _getBackupLocation(dbFlag) {
        switch (dbFlag) {
          case SqlStorage.BACKUP_LOCAL:
            return 2;
          case SqlStorage.BACKUP_LIBRARY:
            return 1;
          case SqlStorage.BACKUP_DOCUMENTS:
            return 0;
          default:
            throw Error('Invalid backup flag: ' + dbFlag);
        }
      }
    }, {
      key: '_tryInit',
      value: function _tryInit() {
        this._db.transaction(function(tx) {
          tx.executeSql('CREATE TABLE IF NOT EXISTS kv (key text primary key, value text)', [], function(tx, res) {}, function(tx, err) {
            console.error('Storage: Unable to create initial storage tables', tx, err);
          });
        });
      }
    }, {
      key: 'query',
      value: function query(_query) {
        var _this = this;
        for (var _len = arguments.length,
            params = Array(_len > 1 ? _len - 1 : 0),
            _key = 1; _key < _len; _key++) {
          params[_key - 1] = arguments[_key];
        }
        return new Promise(function(resolve, reject) {
          _this._db.transaction(function(tx) {
            ts.executeSql(_query, params, function(tx, res) {
              resolve({
                tx: tx,
                res: res
              });
            }, function(tx, err) {
              reject({
                tx: tx,
                err: err
              });
            });
          });
        });
      }
    }, {
      key: 'get',
      value: function get(key) {
        var _this2 = this;
        return new Promise(function(resolve, reject) {
          try {
            _this2._db.transaction(function(tx) {
              tx.executeSql("select key, value from kv where key = ? limit 1", [key], function(tx, res) {
                if (res.rows.length > 0) {
                  var item = res.rows.item(0);
                  resolve(item.value);
                }
                resolve(null);
              }, function(tx, err) {
                reject({
                  tx: tx,
                  err: err
                });
              });
            }, function(err) {
              reject(err);
            });
          } catch (e) {
            reject(e);
          }
        });
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        var _this3 = this;
        return new Promise(function(resolve, reject) {
          try {
            _this3._db.transaction(function(tx) {
              tx.executeSql('insert or replace into kv(key, value) values (?, ?)', [key, value], function(tx, res) {
                resolve();
              }, function(tx, err) {
                reject({
                  tx: tx,
                  err: err
                });
              });
            }, function(err) {
              reject(err);
            });
          } catch (e) {
            reject(e);
          }
        });
      }
    }, {
      key: 'remove',
      value: function remove(key) {
        var _this4 = this;
        return new Promise(function(resolve, reject) {
          try {
            _this4._db.transaction(function(tx) {
              tx.executeSql('delete from kv where key = ?', [key], function(tx, res) {
                resolve();
              }, function(tx, err) {
                reject({
                  tx: tx,
                  err: err
                });
              });
            }, function(err) {
              reject(err);
            });
          } catch (e) {
            reject(e);
          }
        });
      }
    }]);
    return SqlStorage;
  })(_storage.StorageEngine);
  exports.SqlStorage = SqlStorage;
  SqlStorage.BACKUP_LOCAL = 2;
  SqlStorage.BACKUP_LIBRARY = 1;
  SqlStorage.BACKUP_DOCUMENTS = 0;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/local-storage", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _storage = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage');
  var LocalStorage = (function(_StorageEngine) {
    _inherits(LocalStorage, _StorageEngine);
    function LocalStorage() {
      _classCallCheck(this, LocalStorage);
      _get(Object.getPrototypeOf(LocalStorage.prototype), 'constructor', this).call(this);
    }
    _createClass(LocalStorage, [{
      key: 'get',
      value: function get(key) {
        return new Promise(function(resolve, reject) {
          try {
            var value = window.localStorage.getItem(key);
            resolve(value);
          } catch (e) {
            reject(e);
          }
        });
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        return new Promise(function(resolve, reject) {
          try {
            window.localStorage.setItem(key, value);
            resolve();
          } catch (e) {
            reject(e);
          }
        });
      }
    }, {
      key: 'remove',
      value: function remove(key) {
        return new Promise(function(resolve, reject) {
          try {
            window.localStorage.removeItem(key);
            resolve();
          } catch (e) {
            reject(e);
          }
        });
      }
    }]);
    return LocalStorage;
  })(_storage.StorageEngine);
  exports.LocalStorage = LocalStorage;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Storage = (function() {
    function Storage(strategyCls, options) {
      _classCallCheck(this, Storage);
      this._strategy = new strategyCls(options);
    }
    _createClass(Storage, [{
      key: 'get',
      value: function get(key) {
        return this._strategy.get(key);
      }
    }, {
      key: 'getJson',
      value: function getJson(key) {
        try {
          return JSON.parse(this._strategy.get(key));
        } catch (e) {
          console.warn('Storage getJson(): unable to parse value for key', key, ' as JSON');
          return null;
        }
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        return this._strategy.set(key, value);
      }
    }, {
      key: 'remove',
      value: function remove(key) {
        return this._strategy.remove(key);
      }
    }, {
      key: 'query',
      value: function query(_query) {
        return this._strategy.query(key);
      }
    }]);
    return Storage;
  })();
  exports.Storage = Storage;
  var StorageEngine = (function() {
    function StorageEngine() {
      _classCallCheck(this, StorageEngine);
    }
    _createClass(StorageEngine, [{
      key: 'get',
      value: function get(key, value) {
        throw Error("get() not implemented for this storage engine");
      }
    }, {
      key: 'set',
      value: function set(key, value) {
        throw Error("set() not implemented for this storage engine");
      }
    }, {
      key: 'remove',
      value: function remove(key) {
        throw Error("remove() not implemented for this storage engine");
      }
    }, {
      key: 'query',
      value: function query(_query2) {
        throw Error("query() not implemented for this storage engine");
      }
    }]);
    return StorageEngine;
  })();
  exports.StorageEngine = StorageEngine;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/local-storage", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/sql"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);
    delete newObj['default'];
    return newObj;
  }
  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
  var _storageStorage = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/storage');
  _defaults(exports, _interopExportWildcard(_storageStorage, _defaults));
  var _storageLocalStorage = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/local-storage');
  _defaults(exports, _interopExportWildcard(_storageLocalStorage, _defaults));
  var _storageSql = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage/sql');
  _defaults(exports, _interopExportWildcard(_storageSql, _defaults));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/registry", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _platform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  _platform.Platform.register({
    name: 'core',
    settings: {
      mode: 'ios',
      keyboardHeight: 290
    }
  });
  _platform.Platform.setDefault('core');
  _platform.Platform.register({name: 'mobile'});
  _platform.Platform.register({
    name: 'phablet',
    isMatch: function isMatch(p) {
      var smallest = Math.min(p.width(), p.height());
      var largest = Math.max(p.width(), p.height());
      return smallest > 390 && smallest < 520 && (largest > 620 && largest < 800);
    }
  });
  _platform.Platform.register({
    name: 'tablet',
    isMatch: function isMatch(p) {
      var smallest = Math.min(p.width(), p.height());
      var largest = Math.max(p.width(), p.height());
      return smallest > 460 && smallest < 820 && (largest > 780 && largest < 1400);
    }
  });
  _platform.Platform.register({
    name: 'android',
    superset: 'mobile',
    subsets: ['phablet', 'tablet'],
    settings: {
      hoverCSS: false,
      keyboardHeight: 300,
      mode: 'md',
      scrollAssist: true
    },
    isMatch: function isMatch(p) {
      return p.isPlatform('android', 'android|silk');
    },
    versionParser: function versionParser(p) {
      return p.matchUserAgentVersion(/Android (\d+).(\d+)?/);
    }
  });
  _platform.Platform.register({
    name: 'ios',
    superset: 'mobile',
    subsets: ['ipad', 'iphone'],
    settings: {
      hoverCSS: false,
      keyboardHeight: 300,
      mode: 'ios',
      scrollAssist: isIOSDevice,
      swipeBackEnabled: isIOSDevice,
      swipeBackThreshold: 40,
      tapPolyfill: isIOSDevice
    },
    isMatch: function isMatch(p) {
      return p.isPlatform('ios', 'iphone|ipad|ipod');
    },
    versionParser: function versionParser(p) {
      return p.matchUserAgentVersion(/OS (\d+)_(\d+)?/);
    }
  });
  _platform.Platform.register({
    name: 'ipad',
    superset: 'tablet',
    settings: {keyboardHeight: 500},
    isMatch: function isMatch(p) {
      return p.isPlatform('ipad');
    }
  });
  _platform.Platform.register({
    name: 'iphone',
    subsets: ['phablet'],
    isMatch: function isMatch(p) {
      return p.isPlatform('iphone');
    }
  });
  _platform.Platform.register({
    name: 'windowsphone',
    superset: 'mobile',
    subsets: ['phablet', 'tablet'],
    settings: {mode: 'md'},
    isMatch: function isMatch(p) {
      return p.isPlatform('windowsphone', 'windows phone');
    },
    versionParser: function versionParser(p) {
      return p.matchUserAgentVersion(/Windows Phone (\d+).(\d+)?/);
    }
  });
  _platform.Platform.register({
    name: 'cordova',
    isEngine: true,
    methods: {ready: function ready(resolve) {
        function isReady() {
          document.removeEventListener('deviceready', isReady);
          resolve();
        }
        (0, _utilDom.windowLoad)(function() {
          document.addEventListener('deviceready', isReady);
        });
      }},
    isMatch: function isMatch() {
      return !!(window.cordova || window.PhoneGap || window.phonegap);
    }
  });
  function isIOSDevice(p) {
    return (/iphone|ipad|ipod/i.test(p.navigatorPlatform()));
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-types", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _menu = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu');
  var _ionicAnimationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var MenuType = (function() {
    function MenuType() {
      _classCallCheck(this, MenuType);
      this.open = new _ionicAnimationsAnimation.Animation();
      this.close = new _ionicAnimationsAnimation.Animation();
    }
    _createClass(MenuType, [{
      key: 'setOpen',
      value: function setOpen(shouldOpen) {
        var _this = this;
        return new Promise(function(resolve) {
          if (shouldOpen) {
            _this.open.playbackRate(1).onFinish(resolve, true).play();
          } else {
            _this.close.playbackRate(1).onFinish(resolve, true).play();
          }
        });
      }
    }, {
      key: 'setProgressStart',
      value: function setProgressStart(isOpen) {
        this.isOpening = !isOpen;
        this.seek && this.seek.dispose();
        if (this.isOpening) {
          this.seek = this.open.clone();
        } else {
          this.seek = this.close.clone();
        }
        this.seek.easing('linear').progressStart();
      }
    }, {
      key: 'setProgess',
      value: function setProgess(value) {
        if (!this.isOpening) {
          value = 1 - value;
        }
        this.seek.progress(value);
      }
    }, {
      key: 'setProgressEnd',
      value: function setProgressEnd(shouldComplete) {
        var _this2 = this;
        var resolve = undefined;
        var promise = new Promise(function(res) {
          resolve = res;
        });
        var isOpen = this.isOpening && shouldComplete;
        if (!this.isOpening && !shouldComplete) {
          isOpen = true;
        }
        this.seek.progressEnd(shouldComplete).then(function() {
          _this2.isOpening = false;
          resolve(isOpen);
        });
        return promise;
      }
    }, {
      key: 'onDestroy',
      value: function onDestroy() {
        this.open && this.open.dispose();
        this.close && this.close.dispose();
        this.seek && this.seek.dispose();
      }
    }]);
    return MenuType;
  })();
  exports.MenuType = MenuType;
  var MenuRevealType = (function(_MenuType) {
    _inherits(MenuRevealType, _MenuType);
    function MenuRevealType(menu) {
      _classCallCheck(this, MenuRevealType);
      _get(Object.getPrototypeOf(MenuRevealType.prototype), 'constructor', this).call(this);
      var easing = 'ease';
      var duration = 250;
      var openedX = menu.width() * (menu.side == 'right' ? -1 : 1) + 'px';
      var closedX = '0px';
      this.open.easing(easing).duration(duration);
      this.close.easing(easing).duration(duration);
      var contentOpen = new _ionicAnimationsAnimation.Animation(menu.getContentElement());
      contentOpen.fromTo(TRANSLATE_X, closedX, openedX);
      this.open.add(contentOpen);
      var contentClose = new _ionicAnimationsAnimation.Animation(menu.getContentElement());
      contentClose.fromTo(TRANSLATE_X, openedX, closedX);
      this.close.add(contentClose);
    }
    return MenuRevealType;
  })(MenuType);
  _menu.Menu.register('reveal', MenuRevealType);
  var MenuPushType = (function(_MenuType2) {
    _inherits(MenuPushType, _MenuType2);
    function MenuPushType(menu) {
      _classCallCheck(this, MenuPushType);
      _get(Object.getPrototypeOf(MenuPushType.prototype), 'constructor', this).call(this);
      var easing = 'ease';
      var duration = 250;
      var contentClosedX = undefined,
          contentOpenedX = undefined,
          menuClosedX = undefined,
          menuOpenedX = undefined;
      if (menu.side == 'right') {
        contentOpenedX = -menu.width() + 'px';
        contentClosedX = '0px';
        menuOpenedX = menu.platform.width() - menu.width() + 'px';
        menuClosedX = menu.platform.width() + 'px';
      } else {
        contentOpenedX = menu.width() + 'px';
        contentClosedX = '0px';
        menuOpenedX = '0px';
        menuClosedX = -menu.width() + 'px';
      }
      this.open.easing(easing).duration(duration);
      this.close.easing(easing).duration(duration);
      var menuOpen = new _ionicAnimationsAnimation.Animation(menu.getMenuElement());
      menuOpen.fromTo(TRANSLATE_X, menuClosedX, menuOpenedX);
      this.open.add(menuOpen);
      var contentOpen = new _ionicAnimationsAnimation.Animation(menu.getContentElement());
      contentOpen.fromTo(TRANSLATE_X, contentClosedX, contentOpenedX);
      this.open.add(contentOpen);
      var menuClose = new _ionicAnimationsAnimation.Animation(menu.getMenuElement());
      menuClose.fromTo(TRANSLATE_X, menuOpenedX, menuClosedX);
      this.close.add(menuClose);
      var contentClose = new _ionicAnimationsAnimation.Animation(menu.getContentElement());
      contentClose.fromTo(TRANSLATE_X, contentOpenedX, contentClosedX);
      this.close.add(contentClose);
    }
    return MenuPushType;
  })(MenuType);
  _menu.Menu.register('push', MenuPushType);
  var MenuOverlayType = (function(_MenuType3) {
    _inherits(MenuOverlayType, _MenuType3);
    function MenuOverlayType(menu) {
      _classCallCheck(this, MenuOverlayType);
      _get(Object.getPrototypeOf(MenuOverlayType.prototype), 'constructor', this).call(this);
      var easing = 'ease';
      var duration = 250;
      var backdropOpacity = 0.35;
      var closedX = undefined,
          openedX = undefined;
      if (menu.side == 'right') {
        closedX = menu.platform.width() + 'px';
        openedX = menu.platform.width() - menu.width() - 8 + 'px';
      } else {
        closedX = -menu.width() + 'px';
        openedX = '8px';
      }
      this.open.easing(easing).duration(duration);
      this.close.easing(easing).duration(duration);
      var menuOpen = new _ionicAnimationsAnimation.Animation(menu.getMenuElement());
      menuOpen.fromTo(TRANSLATE_X, closedX, openedX);
      this.open.add(menuOpen);
      var backdropOpen = new _ionicAnimationsAnimation.Animation(menu.getBackdropElement());
      backdropOpen.fromTo(OPACITY, 0.01, backdropOpacity);
      this.open.add(backdropOpen);
      var menuClose = new _ionicAnimationsAnimation.Animation(menu.getMenuElement());
      menuClose.fromTo(TRANSLATE_X, openedX, closedX);
      this.close.add(menuClose);
      var backdropClose = new _ionicAnimationsAnimation.Animation(menu.getBackdropElement());
      backdropClose.fromTo(OPACITY, backdropOpacity, 0.01);
      this.close.add(backdropClose);
    }
    return MenuOverlayType;
  })(MenuType);
  _menu.Menu.register('overlay', MenuOverlayType);
  var OPACITY = 'opacity';
  var TRANSLATE_X = 'translateX';
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/action-sheet/action-sheet", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/blur/blur", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/checkbox/checkbox", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-group", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-types", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-toggle", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-close", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/label", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/show-hide-when/show-hide-when", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/modal/modal", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-push", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-router", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/popup/popup", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/slides", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/radio/radio", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/scroll", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/pull-to-refresh", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/searchbar/searchbar", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/segment/segment", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/switch/switch", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tab", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/tap-click", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);
    delete newObj['default'];
    return newObj;
  }
  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
  var _ionicComponentsAppApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  _defaults(exports, _interopExportWildcard(_ionicComponentsAppApp, _defaults));
  var _ionicComponentsAppId = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id');
  _defaults(exports, _interopExportWildcard(_ionicComponentsAppId, _defaults));
  var _ionicComponentsActionSheetActionSheet = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/action-sheet/action-sheet');
  _defaults(exports, _interopExportWildcard(_ionicComponentsActionSheetActionSheet, _defaults));
  var _ionicComponentsBlurBlur = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/blur/blur');
  _defaults(exports, _interopExportWildcard(_ionicComponentsBlurBlur, _defaults));
  var _ionicComponentsButtonButton = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button');
  _defaults(exports, _interopExportWildcard(_ionicComponentsButtonButton, _defaults));
  var _ionicComponentsCheckboxCheckbox = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/checkbox/checkbox');
  _defaults(exports, _interopExportWildcard(_ionicComponentsCheckboxCheckbox, _defaults));
  var _ionicComponentsContentContent = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content');
  _defaults(exports, _interopExportWildcard(_ionicComponentsContentContent, _defaults));
  var _ionicComponentsIconIcon = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon');
  _defaults(exports, _interopExportWildcard(_ionicComponentsIconIcon, _defaults));
  var _ionicComponentsItemItem = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item');
  _defaults(exports, _interopExportWildcard(_ionicComponentsItemItem, _defaults));
  var _ionicComponentsItemItemGroup = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-group');
  _defaults(exports, _interopExportWildcard(_ionicComponentsItemItemGroup, _defaults));
  var _ionicComponentsItemItemSliding = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding');
  _defaults(exports, _interopExportWildcard(_ionicComponentsItemItemSliding, _defaults));
  var _ionicComponentsMenuMenu = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu');
  _defaults(exports, _interopExportWildcard(_ionicComponentsMenuMenu, _defaults));
  var _ionicComponentsMenuMenuTypes = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-types');
  _defaults(exports, _interopExportWildcard(_ionicComponentsMenuMenuTypes, _defaults));
  var _ionicComponentsMenuMenuToggle = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-toggle');
  _defaults(exports, _interopExportWildcard(_ionicComponentsMenuMenuToggle, _defaults));
  var _ionicComponentsMenuMenuClose = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-close');
  _defaults(exports, _interopExportWildcard(_ionicComponentsMenuMenuClose, _defaults));
  var _ionicComponentsTextInputTextInput = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input');
  _defaults(exports, _interopExportWildcard(_ionicComponentsTextInputTextInput, _defaults));
  var _ionicComponentsTextInputLabel = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/label');
  _defaults(exports, _interopExportWildcard(_ionicComponentsTextInputLabel, _defaults));
  var _ionicComponentsListList = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list');
  _defaults(exports, _interopExportWildcard(_ionicComponentsListList, _defaults));
  var _ionicComponentsShowHideWhenShowHideWhen = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/show-hide-when/show-hide-when');
  _defaults(exports, _interopExportWildcard(_ionicComponentsShowHideWhenShowHideWhen, _defaults));
  var _ionicComponentsModalModal = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/modal/modal');
  _defaults(exports, _interopExportWildcard(_ionicComponentsModalModal, _defaults));
  var _ionicComponentsNavNav = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav');
  _defaults(exports, _interopExportWildcard(_ionicComponentsNavNav, _defaults));
  var _ionicComponentsNavNavController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller');
  _defaults(exports, _interopExportWildcard(_ionicComponentsNavNavController, _defaults));
  var _ionicComponentsNavViewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  _defaults(exports, _interopExportWildcard(_ionicComponentsNavViewController, _defaults));
  var _ionicComponentsNavNavPush = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-push');
  _defaults(exports, _interopExportWildcard(_ionicComponentsNavNavPush, _defaults));
  var _ionicComponentsNavNavRouter = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-router');
  _defaults(exports, _interopExportWildcard(_ionicComponentsNavNavRouter, _defaults));
  var _ionicComponentsNavbarNavbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar');
  _defaults(exports, _interopExportWildcard(_ionicComponentsNavbarNavbar, _defaults));
  var _ionicComponentsOverlayOverlay = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay');
  _defaults(exports, _interopExportWildcard(_ionicComponentsOverlayOverlay, _defaults));
  var _ionicComponentsPopupPopup = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/popup/popup');
  _defaults(exports, _interopExportWildcard(_ionicComponentsPopupPopup, _defaults));
  var _ionicComponentsSlidesSlides = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/slides');
  _defaults(exports, _interopExportWildcard(_ionicComponentsSlidesSlides, _defaults));
  var _ionicComponentsRadioRadio = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/radio/radio');
  _defaults(exports, _interopExportWildcard(_ionicComponentsRadioRadio, _defaults));
  var _ionicComponentsScrollScroll = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/scroll');
  _defaults(exports, _interopExportWildcard(_ionicComponentsScrollScroll, _defaults));
  var _ionicComponentsScrollPullToRefresh = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/pull-to-refresh');
  _defaults(exports, _interopExportWildcard(_ionicComponentsScrollPullToRefresh, _defaults));
  var _ionicComponentsSearchbarSearchbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/searchbar/searchbar');
  _defaults(exports, _interopExportWildcard(_ionicComponentsSearchbarSearchbar, _defaults));
  var _ionicComponentsSegmentSegment = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/segment/segment');
  _defaults(exports, _interopExportWildcard(_ionicComponentsSegmentSegment, _defaults));
  var _ionicComponentsSwitchSwitch = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/switch/switch');
  _defaults(exports, _interopExportWildcard(_ionicComponentsSwitchSwitch, _defaults));
  var _ionicComponentsTabsTabs = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs');
  _defaults(exports, _interopExportWildcard(_ionicComponentsTabsTabs, _defaults));
  var _ionicComponentsTabsTab = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tab');
  _defaults(exports, _interopExportWildcard(_ionicComponentsTabsTab, _defaults));
  var _ionicComponentsTapClickTapClick = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/tap-click');
  _defaults(exports, _interopExportWildcard(_ionicComponentsTapClickTapClick, _defaults));
  var _ionicComponentsToolbarToolbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar');
  _defaults(exports, _interopExportWildcard(_ionicComponentsToolbarToolbar, _defaults));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/show-hide-when/show-hide-when", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var DisplayWhen = (function() {
    function DisplayWhen(conditions, platform, ngZone) {
      var _this = this;
      _classCallCheck(this, DisplayWhen);
      this.isMatch = false;
      this.platform = platform;
      if (!conditions)
        return;
      this.conditions = conditions.split(',');
      for (var i = 0; i < this.conditions.length; i++) {
        if (this.conditions[i] && platform.is(this.conditions[i])) {
          this.isMatch = true;
          return;
        }
      }
      if (this.orientation()) {
        platform.onResize(function() {
          ngZone.run(function() {
            _this.orientation();
          });
        });
        return;
      }
    }
    _createClass(DisplayWhen, [{
      key: "orientation",
      value: function orientation() {
        for (var i = 0; i < this.conditions.length; i++) {
          if (this.conditions[i] == 'portrait') {
            this.isMatch = this.platform.isPortrait();
            return true;
          }
          if (this.conditions[i] == 'landscape') {
            this.isMatch = this.platform.isLandscape();
            return true;
          }
        }
      }
    }]);
    return DisplayWhen;
  })();
  var ShowWhen = (function(_DisplayWhen) {
    _inherits(ShowWhen, _DisplayWhen);
    function ShowWhen(showWhen, platform, ngZone) {
      _classCallCheck(this, ShowWhen);
      _get(Object.getPrototypeOf(ShowWhen.prototype), "constructor", this).call(this, showWhen, platform, ngZone);
    }
    _createClass(ShowWhen, [{
      key: "hidden",
      get: function get() {
        return !this.isMatch;
      }
    }]);
    return ShowWhen;
  })(DisplayWhen);
  exports.ShowWhen = ShowWhen;
  exports.ShowWhen = ShowWhen = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[show-when]',
    host: {'[hidden]': 'hidden'}
  }), __param(0, (0, _angular2Angular2.Attribute)('show-when')), __metadata('design:paramtypes', [String, typeof(_a = typeof _platformPlatform.Platform !== 'undefined' && _platformPlatform.Platform) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _b || Object])], ShowWhen);
  var HideWhen = (function(_DisplayWhen2) {
    _inherits(HideWhen, _DisplayWhen2);
    function HideWhen(hideWhen, platform, ngZone) {
      _classCallCheck(this, HideWhen);
      _get(Object.getPrototypeOf(HideWhen.prototype), "constructor", this).call(this, hideWhen, platform, ngZone);
    }
    _createClass(HideWhen, [{
      key: "hidden",
      get: function get() {
        return this.isMatch;
      }
    }]);
    return HideWhen;
  })(DisplayWhen);
  exports.HideWhen = HideWhen;
  exports.HideWhen = HideWhen = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[hide-when]',
    host: {'[hidden]': 'hidden'}
  }), __param(0, (0, _angular2Angular2.Attribute)('hide-when')), __metadata('design:paramtypes', [String, typeof(_c = typeof _platformPlatform.Platform !== 'undefined' && _platformPlatform.Platform) === 'function' && _c || Object, typeof(_d = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _d || Object])], HideWhen);
  var _a,
      _b,
      _c,
      _d;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-router", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/router", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _angular2Router = $__require('npm:angular2@2.0.0-alpha.46/router');
  var _nav = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var NavRouter = (function(_RouterOutlet) {
    _inherits(NavRouter, _RouterOutlet);
    function NavRouter(_elementRef, _loader, _parentRouter, nameAttr, nav) {
      _classCallCheck(this, NavRouter);
      _get(Object.getPrototypeOf(NavRouter.prototype), "constructor", this).call(this, _elementRef, _loader, _parentRouter, nameAttr);
      this.nav = nav;
      nav.registerRouter(this);
    }
    _createClass(NavRouter, [{
      key: "activate",
      value: function activate(nextInstruction) {
        var previousInstruction = this._currentInstruction;
        this._currentInstruction = nextInstruction;
        var componentType = nextInstruction.componentType;
        var childRouter = this._parentRouter.childRouter(componentType);
        var lastView = this.nav.last();
        if (lastView && lastView.componentType === componentType && lastView.params.data === nextInstruction.params) {
          return Promise.resolve();
        }
        return this.nav.push(componentType, nextInstruction.params);
      }
    }, {
      key: "reuse",
      value: function reuse(nextInstruction) {
        return Promise.resolve();
      }
    }, {
      key: "stateChange",
      value: function stateChange(type, viewCtrl) {
        if (!viewCtrl || this._activeViewId === viewCtrl.id)
          return;
        this._activeViewId = viewCtrl.id;
        var pathRecognizer = this.getPathRecognizerByComponent(viewCtrl.componentType);
        if (pathRecognizer) {
          var componentInstruction = pathRecognizer.generate(viewCtrl.params.data);
          var instruction = new _angular2Router.Instruction(componentInstruction, null);
          this._parentRouter.navigateByInstruction(instruction);
        }
      }
    }, {
      key: "getPathRecognizerByComponent",
      value: function getPathRecognizerByComponent(componentType) {
        var rules = this._parentRouter.registry._rules;
        var pathRecognizer = null;
        rules.forEach(function(rule) {
          pathRecognizer = rule.matchers.find(function(matcherPathRecognizer) {
            return matcherPathRecognizer.handler.componentType === componentType;
          });
        });
        return pathRecognizer;
      }
    }]);
    return NavRouter;
  })(_angular2Router.RouterOutlet);
  exports.NavRouter = NavRouter;
  exports.NavRouter = NavRouter = __decorate([(0, _angular2Angular2.Directive)({selector: 'ion-nav'}), __param(3, (0, _angular2Angular2.Attribute)('name')), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.DynamicComponentLoader !== 'undefined' && _angular2Angular2.DynamicComponentLoader) === 'function' && _b || Object, typeof(_c = typeof _angular2Router.Router !== 'undefined' && _angular2Router.Router) === 'function' && _c || Object, String, typeof(_d = typeof _nav.Nav !== 'undefined' && _nav.Nav) === 'function' && _d || Object])], NavRouter);
  var _a,
      _b,
      _c,
      _d;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-push", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-registry"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _navController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller');
  var _navRegistry = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-registry');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var NavPush = (function() {
    function NavPush(nav, registry) {
      _classCallCheck(this, NavPush);
      this.nav = nav;
      this.registry = registry;
      if (!nav) {
        console.error('nav-push must be within a NavController');
      }
    }
    _createClass(NavPush, [{
      key: "onClick",
      value: function onClick() {
        var destination = undefined,
            params = undefined;
        if (this.instruction instanceof Array) {
          if (this.instruction.length > 2) {
            throw 'Too many [nav-push] arguments, expects [View, { params }]';
          }
          destination = this.instruction[0];
          params = this.instruction[1] || this.params;
        } else {
          destination = this.instruction;
          params = this.params;
        }
        if (typeof destination === "string") {
          destination = this.registry.get(destination);
        }
        this.nav && this.nav.push(destination, params);
      }
    }]);
    return NavPush;
  })();
  exports.NavPush = NavPush;
  exports.NavPush = NavPush = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[nav-push]',
    inputs: ['instruction: navPush', 'params: navParams'],
    host: {
      '(click)': 'onClick()',
      'role': 'link'
    }
  }), __param(0, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _navController.NavController !== 'undefined' && _navController.NavController) === 'function' && _a || Object, typeof(_b = typeof _navRegistry.NavRegistry !== 'undefined' && _navRegistry.NavRegistry) === 'function' && _b || Object])], NavPush);
  var NavPop = (function() {
    function NavPop(nav) {
      _classCallCheck(this, NavPop);
      this.nav = nav;
      if (!nav) {
        console.error('nav-pop must be within a NavController');
      }
    }
    _createClass(NavPop, [{
      key: "onClick",
      value: function onClick() {
        this.nav && this.nav.pop();
      }
    }]);
    return NavPop;
  })();
  exports.NavPop = NavPop;
  exports.NavPop = NavPop = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[nav-pop]',
    host: {
      '(click)': 'onClick()',
      'role': 'link'
    }
  }), __param(0, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_c = typeof _navController.NavController !== 'undefined' && _navController.NavController) === 'function' && _c || Object])], NavPop);
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _configDecorators = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators');
  var _navController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller');
  var _viewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Nav = (function(_NavController) {
    _inherits(Nav, _NavController);
    function Nav(hostNavCtrl, viewCtrl, app, config, elementRef, compiler, loader, viewManager, zone, renderer) {
      _classCallCheck(this, Nav);
      _get(Object.getPrototypeOf(Nav.prototype), "constructor", this).call(this, hostNavCtrl, app, config, elementRef, compiler, loader, viewManager, zone, renderer);
      if (viewCtrl) {
        viewCtrl.setContent(this);
        viewCtrl.setContentRef(elementRef);
      }
    }
    _createClass(Nav, [{
      key: "onInit",
      value: function onInit() {
        _get(Object.getPrototypeOf(Nav.prototype), "onInit", this).call(this);
        if (this.root) {
          if (typeof this.root !== 'function') {
            throw 'The [root] property in <ion-nav> must be given a reference to a component class from within the constructor.';
          }
          this.push(this.root);
        }
        this.isSwipeBackEnabled((this.swipeBackEnabled || '').toString() !== 'false');
      }
    }]);
    return Nav;
  })(_navController.NavController);
  exports.Nav = Nav;
  exports.Nav = Nav = __decorate([(0, _configDecorators.ConfigComponent)({
    selector: 'ion-nav',
    inputs: ['root'],
    defaultInputs: {'swipeBackEnabled': true},
    template: '<template #contents></template>'
  }), __param(0, (0, _angular2Angular2.Optional)()), __param(1, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _navController.NavController !== 'undefined' && _navController.NavController) === 'function' && _a || Object, typeof(_b = typeof _viewController.ViewController !== 'undefined' && _viewController.ViewController) === 'function' && _b || Object, typeof(_c = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _c || Object, typeof(_d = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _d || Object, typeof(_e = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _e || Object, typeof(_f = typeof _angular2Angular2.Compiler !== 'undefined' && _angular2Angular2.Compiler) === 'function' && _f || Object, typeof(_g = typeof _angular2Angular2.DynamicComponentLoader !== 'undefined' && _angular2Angular2.DynamicComponentLoader) === 'function' && _g || Object, typeof(_h = typeof _angular2Angular2.AppViewManager !== 'undefined' && _angular2Angular2.AppViewManager) === 'function' && _h || Object, typeof(_j = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _j || Object, typeof(_k = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _k || Object])], Nav);
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f,
      _g,
      _h,
      _j,
      _k;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/searchbar/searchbar", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _configDecorators = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators');
  var _iconIcon = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var SearchBar = (function(_Ion) {
    _inherits(SearchBar, _Ion);
    function SearchBar(elementRef, config, ngControl, renderer) {
      _classCallCheck(this, SearchBar);
      _get(Object.getPrototypeOf(SearchBar.prototype), "constructor", this).call(this, elementRef, config);
      this.renderer = renderer;
      this.elementRef = elementRef;
      if (!ngControl) {
        return;
      }
      this.ngControl = ngControl;
      this.ngControl.valueAccessor = this;
    }
    _createClass(SearchBar, [{
      key: "afterViewInit",
      value: function afterViewInit() {
        this.cancelButton = this.elementRef.nativeElement.querySelector('.searchbar-cancel');
        if (this.cancelButton) {
          this.cancelWidth = this.cancelButton.offsetWidth;
          this.cancelButton.style.marginRight = "-" + this.cancelWidth + "px";
        }
        this.shouldLeftAlign = this.ngControl.value && this.ngControl.value.trim() != '';
        this.query = this.ngControl.value || '';
      }
    }, {
      key: "writeValue",
      value: function writeValue(value) {
        this.query = value;
      }
    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
    }, {
      key: "inputChanged",
      value: function inputChanged(event) {
        this.writeValue(event.target.value);
        this.onChange(event.target.value);
      }
    }, {
      key: "inputFocused",
      value: function inputFocused() {
        this.isFocused = true;
        this.shouldLeftAlign = true;
        if (this.cancelButton) {
          this.cancelButton.style.marginRight = "0px";
        }
      }
    }, {
      key: "inputBlurred",
      value: function inputBlurred() {
        this.isFocused = false;
        this.shouldLeftAlign = this.ngControl.value && this.ngControl.value.trim() != '';
        if (this.cancelButton) {
          this.cancelButton.style.marginRight = "-" + this.cancelWidth + "px";
        }
      }
    }, {
      key: "clearInput",
      value: function clearInput(event) {
        this.writeValue('');
        this.onChange('');
      }
    }]);
    return SearchBar;
  })(_ion.Ion);
  exports.SearchBar = SearchBar;
  exports.SearchBar = SearchBar = __decorate([(0, _configDecorators.ConfigComponent)({
    selector: 'ion-searchbar',
    defaultInputs: {
      'showCancel': false,
      'cancelText': 'Cancel',
      'placeholder': 'Search',
      'cancelAction': function cancelAction(event, query) {
        this.element = this.elementRef.nativeElement.querySelector('input');
        this.element.blur();
        this.clearInput();
      }
    },
    host: {
      '[class.left-align]': 'shouldLeftAlign',
      '[class.focused]': 'isFocused'
    },
    template: '<div class="searchbar-input-container">' + '<button (click)="cancelAction($event, query)" clear dark class="searchbar-cancel-icon"><icon arrow-back></icon></button>' + '<div class="searchbar-search-icon"></div>' + '<input [(value)]="query" (focus)="inputFocused()" (blur)="inputBlurred()" ' + '(input)="inputChanged($event)" class="searchbar-input" type="search" [attr.placeholder]="placeholder">' + '<button clear *ng-if="query" class="searchbar-close-icon" (click)="clearInput($event)"></button>' + '</div>' + '<button *ng-if="showCancel" (click)="cancelAction($event, query)" class="searchbar-cancel">{{cancelText}}</button>',
    directives: [_angular2Angular2.FORM_DIRECTIVES, _angular2Angular2.NgIf, _angular2Angular2.NgClass, _iconIcon.Icon]
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.NgControl !== 'undefined' && _angular2Angular2.NgControl) === 'function' && _c || Object, typeof(_d = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _d || Object])], SearchBar);
  var _a,
      _b,
      _c,
      _d;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/radio/radio", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _listList = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var RadioGroup = (function(_Ion) {
    _inherits(RadioGroup, _Ion);
    function RadioGroup(elementRef, config, ngControl, headerQuery) {
      _classCallCheck(this, RadioGroup);
      _get(Object.getPrototypeOf(RadioGroup.prototype), "constructor", this).call(this, elementRef, config);
      this.headerQuery = headerQuery;
      this.radios = [];
      this.id = ++radioGroupIds;
      this.radioIds = -1;
      this.onChange = function(_) {};
      this.onTouched = function(_) {};
      if (ngControl)
        ngControl.valueAccessor = this;
    }
    _createClass(RadioGroup, [{
      key: "onInit",
      value: function onInit() {
        var header = this.headerQuery.first;
        if (header) {
          if (!header.id) {
            header.id = 'radio-header-' + this.id;
          }
          this.describedById = header.id;
        }
      }
    }, {
      key: "registerRadio",
      value: function registerRadio(radio) {
        radio.id = radio.id || 'radio-' + this.id + '-' + ++this.radioIds;
        this.radios.push(radio);
        if (radio.checked) {
          this.value = radio.value;
          this.activeId = radio.id;
        }
      }
    }, {
      key: "update",
      value: function update(checkedRadio) {
        this.value = checkedRadio.value;
        this.activeId = checkedRadio.id;
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          for (var _iterator = this.radios[Symbol.iterator](),
              _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var radio = _step.value;
            radio.checked = radio === checkedRadio;
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator["return"]) {
              _iterator["return"]();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        this.onChange(this.value);
      }
    }, {
      key: "writeValue",
      value: function writeValue(value) {
        this.value = value;
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;
        try {
          for (var _iterator2 = this.radios[Symbol.iterator](),
              _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
            var radio = _step2.value;
            radio.checked = radio.value == value;
          }
        } catch (err) {
          _didIteratorError2 = true;
          _iteratorError2 = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion2 && _iterator2["return"]) {
              _iterator2["return"]();
            }
          } finally {
            if (_didIteratorError2) {
              throw _iteratorError2;
            }
          }
        }
      }
    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
    }]);
    return RadioGroup;
  })(_ion.Ion);
  exports.RadioGroup = RadioGroup;
  exports.RadioGroup = RadioGroup = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-radio-group',
    host: {
      'role': 'radiogroup',
      '[attr.aria-activedescendant]': 'activeId',
      '[attr.aria-describedby]': 'describedById',
      'class': 'list'
    }
  }), __param(2, (0, _angular2Angular2.Optional)()), __param(3, (0, _angular2Angular2.Query)(_listList.ListHeader)), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.NgControl !== 'undefined' && _angular2Angular2.NgControl) === 'function' && _c || Object, typeof(_d = typeof _angular2Angular2.QueryList !== 'undefined' && _angular2Angular2.QueryList) === 'function' && _d || Object])], RadioGroup);
  var RadioButton = (function(_Ion2) {
    _inherits(RadioButton, _Ion2);
    function RadioButton(group, elementRef, config) {
      _classCallCheck(this, RadioButton);
      _get(Object.getPrototypeOf(RadioButton.prototype), "constructor", this).call(this, elementRef, config);
      this.group = group;
      this.tabIndex = 0;
    }
    _createClass(RadioButton, [{
      key: "onInit",
      value: function onInit() {
        _get(Object.getPrototypeOf(RadioButton.prototype), "onInit", this).call(this);
        this.group.registerRadio(this);
        this.labelId = 'label-' + this.id;
      }
    }, {
      key: "click",
      value: function click(ev) {
        ev.preventDefault();
        ev.stopPropagation();
        this.check();
      }
    }, {
      key: "check",
      value: function check() {
        this.checked = !this.checked;
        this.group.update(this);
      }
    }]);
    return RadioButton;
  })(_ion.Ion);
  exports.RadioButton = RadioButton;
  exports.RadioButton = RadioButton = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-radio',
    inputs: ['value', 'checked', 'disabled', 'id'],
    host: {
      'role': 'radio',
      'tappable': 'true',
      '[attr.id]': 'id',
      '[attr.tab-index]': 'tabIndex',
      '[attr.aria-checked]': 'checked',
      '[attr.aria-disabled]': 'disabled',
      '[attr.aria-labelledby]': 'labelId',
      '(click)': 'click($event)',
      'class': 'item'
    },
    template: '<div class="item-inner">' + '<ion-item-content id="{{labelId}}">' + '<ng-content></ng-content>' + '</ion-item-content>' + '<media-radio>' + '<radio-icon></radio-icon>' + '</media-radio>' + '</div>'
  }), __param(0, (0, _angular2Angular2.Host)()), __param(0, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [RadioGroup, typeof(_e = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _e || Object, typeof(_f = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _f || Object])], RadioButton);
  var radioGroupIds = -1;
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/segment/segment", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Segment = (function(_Ion) {
    _inherits(Segment, _Ion);
    function Segment(ngControl, elementRef, config) {
      _classCallCheck(this, Segment);
      _get(Object.getPrototypeOf(Segment.prototype), "constructor", this).call(this, elementRef, config);
      this.buttons = [];
      this.onChange = function(_) {};
      this.onTouched = function(_) {};
      if (ngControl)
        ngControl.valueAccessor = this;
    }
    _createClass(Segment, [{
      key: "writeValue",
      value: function writeValue(value) {
        this.value = !value ? '' : value;
      }
    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
    }, {
      key: "register",
      value: function register(segmentButton) {
        this.buttons.push(segmentButton);
        if (this.value == segmentButton.value) {
          this.selected(segmentButton);
        }
      }
    }, {
      key: "selectFromValue",
      value: function selectFromValue(value) {
        if (this.buttons.length == 0) {
          return;
        }
        this.buttons.forEach(function(button) {
          if (button.value === value) {
            button.isActive = true;
          }
        });
      }
    }, {
      key: "selected",
      value: function selected(segmentButton) {
        this.buttons.forEach(function(button) {
          button.isActive = false;
        });
        segmentButton.isActive = true;
        this.value = segmentButton.value;
        this.onChange(segmentButton.value);
      }
    }]);
    return Segment;
  })(_ion.Ion);
  exports.Segment = Segment;
  exports.Segment = Segment = __decorate([(0, _angular2Angular2.Directive)({selector: 'ion-segment'}), __param(0, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.NgControl !== 'undefined' && _angular2Angular2.NgControl) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _c || Object])], Segment);
  var SegmentButton = (function() {
    function SegmentButton(segment, elementRef, renderer) {
      _classCallCheck(this, SegmentButton);
      this.segment = segment;
      renderer.setElementAttribute(elementRef, 'button', '');
      renderer.setElementAttribute(elementRef, 'outline', '');
    }
    _createClass(SegmentButton, [{
      key: "onInit",
      value: function onInit() {
        this.segment.register(this);
      }
    }, {
      key: "click",
      value: function click(event) {
        this.segment.selected(this, event);
      }
    }]);
    return SegmentButton;
  })();
  exports.SegmentButton = SegmentButton;
  exports.SegmentButton = SegmentButton = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-segment-button',
    inputs: ['value'],
    host: {
      '(click)': 'click($event)',
      '[class.activated]': 'isActive'
    }
  }), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [Segment, typeof(_d = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _d || Object, typeof(_e = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _e || Object])], SegmentButton);
  var _a,
      _b,
      _c,
      _d,
      _e;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/label", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _textInput = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Label = (function() {
    function Label(config, container) {
      _classCallCheck(this, Label);
      this.scrollAssist = config.get('scrollAssist');
      if (!this.id) {
        this.id = 'lbl-' + ++labelIds;
      }
      this.container = container;
      container && container.registerLabel(this);
    }
    _createClass(Label, [{
      key: "pointerStart",
      value: function pointerStart(ev) {
        if (this.scrollAssist) {
          this.startCoord = (0, _utilDom.pointerCoord)(ev);
        }
      }
    }, {
      key: "pointerEnd",
      value: function pointerEnd(ev) {
        if (this.container) {
          var endCoord = (0, _utilDom.pointerCoord)(ev);
          if (!(0, _utilDom.hasPointerMoved)(20, this.startCoord, endCoord)) {
            ev.preventDefault();
            ev.stopPropagation();
            this.container.initFocus();
          }
          this.startCoord = null;
        }
      }
    }]);
    return Label;
  })();
  exports.Label = Label;
  exports.Label = Label = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-label',
    inputs: ['id'],
    host: {
      '[attr.id]': 'id',
      '(touchstart)': 'pointerStart($event)',
      '(touchend)': 'pointerEnd($event)',
      '(mousedown)': 'pointerStart($event)',
      '(mouseup)': 'pointerEnd($event)'
    }
  }), __param(1, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _a || Object, typeof(_b = typeof _textInput.TextInput !== 'undefined' && _textInput.TextInput) === 'function' && _b || Object])], Label);
  var labelIds = -1;
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {value: true});
    var _createClass = (function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor)
            descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps)
          defineProperties(Constructor.prototype, protoProps);
        if (staticProps)
          defineProperties(Constructor, staticProps);
        return Constructor;
      };
    })();
    function _interopRequireWildcard(obj) {
      if (obj && obj.__esModule) {
        return obj;
      } else {
        var newObj = {};
        if (obj != null) {
          for (var key in obj) {
            if (Object.prototype.hasOwnProperty.call(obj, key))
              newObj[key] = obj[key];
          }
        }
        newObj["default"] = obj;
        return newObj;
      }
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
    var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
    var _utilForm = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form');
    var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
    var _contentContent = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content');
    var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
    var dom = _interopRequireWildcard(_utilDom);
    var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
    var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        return Reflect.decorate(decorators, target, key, desc);
      switch (arguments.length) {
        case 2:
          return decorators.reduceRight(function(o, d) {
            return d && d(o) || o;
          }, target);
        case 3:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key), void 0);
          }, void 0);
        case 4:
          return decorators.reduceRight(function(o, d) {
            return d && d(target, key, o) || o;
          }, desc);
      }
    };
    var __metadata = undefined && undefined.__metadata || function(k, v) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
    };
    var __param = undefined && undefined.__param || function(paramIndex, decorator) {
      return function(target, key) {
        decorator(target, key, paramIndex);
      };
    };
    var _TextInput = (function() {
      function TextInput(form, elementRef, config, renderer, app, platform, scrollView) {
        _classCallCheck(this, TextInput);
        this.renderer = renderer;
        this.form = form;
        form.register(this);
        this.type = 'text';
        this.lastTouch = 0;
        this.app = app;
        this.elementRef = elementRef;
        this.platform = platform;
        this.scrollView = scrollView;
        this.scrollAssist = config.get('scrollAssist');
        this.keyboardHeight = config.get('keyboardHeight');
      }
      _createClass(TextInput, [{
        key: "registerInput",
        value: function registerInput(textInputElement) {
          this.input = textInputElement;
          this.type = textInputElement.type || 'text';
        }
      }, {
        key: "registerLabel",
        value: function registerLabel(label) {
          this.label = label;
        }
      }, {
        key: "onInit",
        value: function onInit() {
          var _this = this;
          if (this.input && this.label) {
            this.input.labelledBy(this.label.id);
          }
          var self = this;
          self.scrollMove = function(ev) {
            if (!self.app.isTransitioning()) {
              self.deregMove();
              if (self.hasFocus) {
                self.input.hideFocus(true);
                _this.scrollView.onScrollEnd(function() {
                  self.input.hideFocus(false);
                  if (self.hasFocus) {
                    self.regMove();
                  }
                });
              }
            }
          };
        }
      }, {
        key: "pointerStart",
        value: function pointerStart(ev) {
          if (this.scrollAssist && this.app.isEnabled()) {
            this.startCoord = dom.pointerCoord(ev);
          }
        }
      }, {
        key: "pointerEnd",
        value: function pointerEnd(ev) {
          if (!this.app.isEnabled()) {
            ev.preventDefault();
            ev.stopPropagation();
          } else if (this.scrollAssist && ev.type === 'touchend') {
            var endCoord = dom.pointerCoord(ev);
            if (!dom.hasPointerMoved(8, this.startCoord, endCoord) && !this.hasFocus) {
              ev.preventDefault();
              ev.stopPropagation();
              this.initFocus();
              this.lastTouch = Date.now();
            }
          } else if (this.lastTouch + 999 < Date.now()) {
            ev.preventDefault();
            ev.stopPropagation();
            this.setFocus();
            this.regMove();
          }
        }
      }, {
        key: "initFocus",
        value: function initFocus() {
          var _this2 = this;
          var scrollView = this.scrollView;
          if (scrollView && this.scrollAssist) {
            var ele = this.elementRef.nativeElement;
            var scrollData = _TextInput.getScollData(ele.offsetTop, ele.offsetHeight, scrollView.getDimensions(), this.keyboardHeight, this.platform.height());
            if (scrollData.scrollAmount > -3 && scrollData.scrollAmount < 3) {
              this.setFocus();
              this.regMove();
              return;
            }
            scrollView.addScrollPadding(scrollData.scrollPadding);
            var scrollDuration = getScrollAssistDuration(scrollData.scrollAmount);
            this.app.setEnabled(false, scrollDuration);
            this.app.setTransitioning(true, scrollDuration);
            this.input.relocate(true, scrollData.inputSafeY);
            scrollView.scrollTo(0, scrollData.scrollTo, scrollDuration).then(function() {
              _this2.input.relocate(false);
              _this2.app.setEnabled(true);
              _this2.app.setTransitioning(false);
              _this2.regMove();
            });
          } else {
            this.setFocus();
            this.regMove();
          }
        }
      }, {
        key: "focusChange",
        value: function focusChange(hasFocus) {
          this.renderer.setElementClass(this.elementRef, 'has-focus', hasFocus);
          if (!hasFocus) {
            this.deregMove();
            this.input.hideFocus(false);
          }
        }
      }, {
        key: "hasValue",
        value: function hasValue(inputValue) {
          this.renderer.setElementClass(this.elementRef, 'has-value', inputValue && inputValue !== '');
        }
      }, {
        key: "setFocus",
        value: function setFocus() {
          if (this.input) {
            this.form.setAsFocused(this);
            this.input.setFocus();
            document.body.scrollTop = 0;
          }
        }
      }, {
        key: "regMove",
        value: function regMove() {
          var _this3 = this;
          if (this.scrollAssist && this.scrollView) {
            setTimeout(function() {
              _this3.deregMove();
              _this3.deregScroll = _this3.scrollView.addScrollEventListener(_this3.scrollMove);
            }, 80);
          }
        }
      }, {
        key: "deregMove",
        value: function deregMove() {
          this.deregScroll && this.deregScroll();
        }
      }, {
        key: "onDestroy",
        value: function onDestroy() {
          this.deregMove();
          this.form.deregister(this);
        }
      }, {
        key: "hasFocus",
        get: function get() {
          return !!this.input && this.input.hasFocus;
        }
      }], [{
        key: "getScollData",
        value: function getScollData(inputOffsetTop, inputOffsetHeight, scrollViewDimensions, keyboardHeight, plaformHeight) {
          var inputTop = inputOffsetTop + scrollViewDimensions.contentTop - scrollViewDimensions.scrollTop;
          var inputBottom = inputTop + inputOffsetHeight;
          var safeAreaTop = scrollViewDimensions.contentTop;
          var safeAreaHeight = plaformHeight - keyboardHeight - safeAreaTop;
          safeAreaHeight /= 2;
          var safeAreaBottom = safeAreaTop + safeAreaHeight;
          var inputTopWithinSafeArea = inputTop >= safeAreaTop && inputTop <= safeAreaBottom;
          var inputTopAboveSafeArea = inputTop < safeAreaTop;
          var inputTopBelowSafeArea = inputTop > safeAreaBottom;
          var inputBottomWithinSafeArea = inputBottom >= safeAreaTop && inputBottom <= safeAreaBottom;
          var inputBottomBelowSafeArea = inputBottom > safeAreaBottom;
          var scrollData = {
            scrollAmount: 0,
            scrollTo: 0,
            scrollPadding: 0,
            inputSafeY: 0
          };
          if (inputTopWithinSafeArea && inputBottomWithinSafeArea) {
            return scrollData;
          }
          if (inputTopBelowSafeArea || inputBottomBelowSafeArea) {
            if (safeAreaHeight > inputOffsetHeight) {
              scrollData.scrollAmount = Math.round(safeAreaBottom - inputBottom);
            } else {
              scrollData.scrollAmount = Math.round(safeAreaTop - inputTop);
            }
            scrollData.inputSafeY = -(inputTop - safeAreaTop) + 4;
          } else if (inputTopAboveSafeArea) {
            scrollData.scrollAmount = Math.round(safeAreaTop - inputTop);
            scrollData.inputSafeY = safeAreaTop - inputTop + 4;
          }
          scrollData.scrollTo = scrollViewDimensions.scrollTop - scrollData.scrollAmount;
          if (scrollData.scrollAmount < 0) {
            var availablePadding = scrollViewDimensions.scrollHeight - scrollViewDimensions.scrollTop - scrollViewDimensions.contentHeight;
            var paddingSpace = availablePadding + scrollData.scrollAmount;
            if (paddingSpace < 0) {
              scrollData.scrollPadding = scrollViewDimensions.contentHeight - safeAreaHeight;
            }
          }
          return scrollData;
        }
      }]);
      return TextInput;
    })();
    exports.TextInput = _TextInput;
    _TextInput = __decorate([(0, _angular2Angular2.Component)({
      selector: 'ion-input',
      host: {
        '(touchstart)': 'pointerStart($event)',
        '(touchend)': 'pointerEnd($event)',
        '(mouseup)': 'pointerEnd($event)',
        'class': 'item'
      },
      template: '<div class="item-inner">' + '<ng-content></ng-content>' + '<input [type]="type" aria-hidden="true" scroll-assist *ng-if="scrollAssist">' + '</div>',
      directives: [_angular2Angular2.NgIf, (0, _angular2Angular2.forwardRef)(function() {
        return InputScrollAssist;
      })]
    }), __param(6, (0, _angular2Angular2.Optional)()), __param(6, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [typeof(_a = typeof _utilForm.Form !== 'undefined' && _utilForm.Form) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _c || Object, typeof(_d = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _d || Object, typeof(_e = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _e || Object, typeof(_f = typeof _platformPlatform.Platform !== 'undefined' && _platformPlatform.Platform) === 'function' && _f || Object, typeof(_g = typeof _contentContent.Content !== 'undefined' && _contentContent.Content) === 'function' && _g || Object])], _TextInput);
    var TextInputElement = (function() {
      function TextInputElement(type, elementRef, renderer, wrapper) {
        _classCallCheck(this, TextInputElement);
        this.type = type;
        this.elementRef = elementRef;
        this.wrapper = wrapper;
        this.renderer = renderer;
        renderer.setElementAttribute(this.elementRef, 'text-input', '');
        if (wrapper) {
          wrapper.registerInput(this);
        }
      }
      _createClass(TextInputElement, [{
        key: "onKeyup",
        value: function onKeyup(ev) {
          this.wrapper.hasValue(ev.target.value);
        }
      }, {
        key: "onInit",
        value: function onInit() {
          this.wrapper.hasValue(this.value);
        }
      }, {
        key: "labelledBy",
        value: function labelledBy(val) {
          this.renderer.setElementAttribute(this.elementRef, 'aria-labelledby', val);
        }
      }, {
        key: "setFocus",
        value: function setFocus() {
          this.getNativeElement().focus();
        }
      }, {
        key: "relocate",
        value: function relocate(shouldRelocate, inputRelativeY) {
          if (this._relocated !== shouldRelocate) {
            var focusedInputEle = this.getNativeElement();
            if (shouldRelocate) {
              var clonedInputEle = focusedInputEle.cloneNode(true);
              clonedInputEle.classList.add('cloned-input');
              clonedInputEle.classList.remove('hide-focused-input');
              clonedInputEle.setAttribute('aria-hidden', true);
              clonedInputEle.tabIndex = -1;
              focusedInputEle.classList.add('hide-focused-input');
              focusedInputEle.style[dom.CSS.transform] = "translate3d(-9999px," + inputRelativeY + "px,0)";
              focusedInputEle.parentNode.insertBefore(clonedInputEle, focusedInputEle);
              this.wrapper.setFocus();
            } else {
              focusedInputEle.classList.remove('hide-focused-input');
              focusedInputEle.style[dom.CSS.transform] = '';
              var clonedInputEle = focusedInputEle.parentNode.querySelector('.cloned-input');
              if (clonedInputEle) {
                clonedInputEle.parentNode.removeChild(clonedInputEle);
              }
            }
            this._relocated = shouldRelocate;
          }
        }
      }, {
        key: "hideFocus",
        value: function hideFocus(shouldHideFocus) {
          var focusedInputEle = this.getNativeElement();
          if (shouldHideFocus) {
            var clonedInputEle = focusedInputEle.cloneNode(true);
            clonedInputEle.classList.add('cloned-hidden');
            clonedInputEle.setAttribute('aria-hidden', true);
            clonedInputEle.tabIndex = -1;
            focusedInputEle.classList.add('hide-focused-input');
            focusedInputEle.style[dom.CSS.transform] = 'translate3d(-9999px,0,0)';
            focusedInputEle.parentNode.insertBefore(clonedInputEle, focusedInputEle);
          } else {
            focusedInputEle.classList.remove('hide-focused-input');
            focusedInputEle.style[dom.CSS.transform] = '';
            var clonedInputEle = focusedInputEle.parentNode.querySelector('.cloned-hidden');
            if (clonedInputEle) {
              clonedInputEle.parentNode.removeChild(clonedInputEle);
            }
          }
        }
      }, {
        key: "getNativeElement",
        value: function getNativeElement() {
          return this.elementRef.nativeElement;
        }
      }, {
        key: "hasFocus",
        get: function get() {
          return dom.hasFocus(this.getNativeElement());
        }
      }]);
      return TextInputElement;
    })();
    exports.TextInputElement = TextInputElement;
    exports.TextInputElement = TextInputElement = __decorate([(0, _angular2Angular2.Directive)({
      selector: 'textarea,input[type=text],input[type=password],input[type=number],input[type=search],input[type=email],input[type=url],input[type=tel]',
      inputs: ['value'],
      host: {
        '(focus)': 'wrapper.focusChange(true)',
        '(blur)': 'wrapper.focusChange(false)',
        '(keyup)': 'onKeyup($event)'
      }
    }), __param(0, (0, _angular2Angular2.Attribute)('type')), __param(3, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [String, typeof(_h = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _h || Object, typeof(_j = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _j || Object, _TextInput])], TextInputElement);
    var InputScrollAssist = (function() {
      function InputScrollAssist(form, textInput) {
        _classCallCheck(this, InputScrollAssist);
        this.form = form;
        this.textInput = textInput;
      }
      _createClass(InputScrollAssist, [{
        key: "receivedFocus",
        value: function receivedFocus(ev) {
          this.form.focusNext(this.textInput);
        }
      }]);
      return InputScrollAssist;
    })();
    InputScrollAssist = __decorate([(0, _angular2Angular2.Directive)({
      selector: '[scroll-assist]',
      host: {'(focus)': 'receivedFocus($event)'}
    }), __metadata('design:paramtypes', [typeof(_k = typeof _utilForm.Form !== 'undefined' && _utilForm.Form) === 'function' && _k || Object, _TextInput])], InputScrollAssist);
    var SCROLL_ASSIST_SPEED = 0.5;
    function getScrollAssistDuration(distanceToScroll) {
      distanceToScroll = Math.abs(distanceToScroll);
      var duration = distanceToScroll / SCROLL_ASSIST_SPEED;
      return Math.min(380, Math.max(80, duration));
    }
    var _a,
        _b,
        _c,
        _d,
        _e,
        _f,
        _g,
        _h,
        _j,
        _k;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/switch/switch", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _utilForm = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var MediaSwitch = function MediaSwitch(swtch, elementRef) {
    _classCallCheck(this, MediaSwitch);
    swtch.switchEle = elementRef.nativeElement;
    this.swtch = swtch;
  };
  MediaSwitch = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'media-switch',
    host: {'[class.switch-activated]': 'swtch.isActivated'}
  }), __param(0, (0, _angular2Angular2.Host)()), __param(0, (0, _angular2Angular2.Inject)((0, _angular2Angular2.forwardRef)(function() {
    return Switch;
  }))), __metadata('design:paramtypes', [Switch, typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object])], MediaSwitch);
  var Switch = (function() {
    function Switch(form, elementRef, config, ngControl) {
      _classCallCheck(this, Switch);
      this.ngControl = ngControl;
      this.form = form;
      form.register(this);
      this.lastTouch = 0;
      this.mode = config.get('mode');
      this.onChange = function(_) {};
      this.onTouched = function(_) {};
      if (ngControl)
        ngControl.valueAccessor = this;
      var self = this;
      function pointerMove(ev) {
        var currentX = (0, _utilDom.pointerCoord)(ev).x;
        if (self.checked) {
          if (currentX + 15 < self.startX) {
            self.toggle(ev);
            self.startX = currentX;
          }
        } else if (currentX - 15 > self.startX) {
          self.toggle(ev);
          self.startX = currentX;
        }
      }
      function pointerOut(ev) {
        if (ev.currentTarget === ev.target) {
          self.pointerUp(ev);
        }
      }
      this.addMoveListener = function() {
        self.switchEle.addEventListener('touchmove', pointerMove);
        self.switchEle.addEventListener('mousemove', pointerMove);
        elementRef.nativeElement.addEventListener('mouseout', pointerOut);
      };
      this.removeMoveListener = function() {
        self.switchEle.removeEventListener('touchmove', pointerMove);
        self.switchEle.removeEventListener('mousemove', pointerMove);
        elementRef.nativeElement.removeEventListener('mouseout', pointerOut);
      };
    }
    _createClass(Switch, [{
      key: "onInit",
      value: function onInit() {
        this.labelId = 'label-' + this.inputId;
      }
    }, {
      key: "check",
      value: function check(value) {
        this.checked = !!value;
        this.onChange(this.checked);
      }
    }, {
      key: "toggle",
      value: function toggle(ev) {
        this.check(!this.checked);
      }
    }, {
      key: "writeValue",
      value: function writeValue(value) {
        this.checked = value;
      }
    }, {
      key: "pointerDown",
      value: function pointerDown(ev) {
        if (/touch/.test(ev.type)) {
          this.lastTouch = Date.now();
        }
        if (this.isDisabled(ev))
          return;
        this.startX = (0, _utilDom.pointerCoord)(ev).x;
        this.removeMoveListener();
        this.addMoveListener();
        this.isActivated = true;
      }
    }, {
      key: "pointerUp",
      value: function pointerUp(ev) {
        if (this.isDisabled(ev))
          return;
        var endX = (0, _utilDom.pointerCoord)(ev).x;
        if (this.checked) {
          if (this.startX + 4 > endX) {
            this.toggle(ev);
          }
        } else if (this.startX - 4 < endX) {
          this.toggle(ev);
        }
        this.removeMoveListener();
        this.isActivated = false;
      }
    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        this.removeMoveListener();
        this.switchEle = this.addMoveListener = this.removeMoveListener = null;
        this.form.deregister(this);
      }
    }, {
      key: "isDisabled",
      value: function isDisabled(ev) {
        return this.lastTouch + 999 > Date.now() && /mouse/.test(ev.type) || this.mode == 'ios' && ev.target.tagName == 'ION-SWITCH';
      }
    }]);
    return Switch;
  })();
  exports.Switch = Switch;
  exports.Switch = Switch = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-switch',
    inputs: ['value', 'checked', 'disabled', 'id'],
    host: {
      'role': 'checkbox',
      'tappable': 'true',
      '[attr.tab-index]': 'tabIndex',
      '[attr.aria-checked]': 'checked',
      '[attr.aria-disabled]': 'disabled',
      '[attr.aria-labelledby]': 'labelId',
      '(touchstart)': 'pointerDown($event)',
      '(mousedown)': 'pointerDown($event)',
      '(touchend)': 'pointerUp($event)',
      '(mouseup)': 'pointerUp($event)',
      'class': 'item'
    },
    template: '<ng-content select="[item-left]"></ng-content>' + '<div class="item-inner">' + '<ion-item-content id="{{labelId}}">' + '<ng-content></ng-content>' + '</ion-item-content>' + '<media-switch disable-activated>' + '<switch-icon></switch-icon>' + '</media-switch>' + "</div>",
    directives: [MediaSwitch]
  }), __param(3, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_b = typeof _utilForm.Form !== 'undefined' && _utilForm.Form) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object, typeof(_d = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _d || Object, typeof(_e = typeof _angular2Angular2.NgControl !== 'undefined' && _angular2Angular2.NgControl) === 'function' && _e || Object])], Switch);
  var _a,
      _b,
      _c,
      _d,
      _e;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/checkbox/checkbox", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _utilForm = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Checkbox = (function() {
    function Checkbox(form, ngControl, elementRef) {
      _classCallCheck(this, Checkbox);
      this.form = form;
      form.register(this);
      this.onChange = function(_) {};
      this.onTouched = function(_) {};
      this.ngControl = ngControl;
      if (ngControl)
        ngControl.valueAccessor = this;
    }
    _createClass(Checkbox, [{
      key: "onInit",
      value: function onInit() {
        this.labelId = 'label-' + this.inputId;
      }
    }, {
      key: "toggle",
      value: function toggle() {
        this.checked = !this.checked;
        this.onChange(this.checked);
      }
    }, {
      key: "click",
      value: function click(ev) {
        ev.preventDefault();
        ev.stopPropagation();
        this.toggle();
      }
    }, {
      key: "writeValue",
      value: function writeValue(value) {
        this.checked = value;
      }
    }, {
      key: "registerOnChange",
      value: function registerOnChange(fn) {
        this.onChange = fn;
      }
    }, {
      key: "registerOnTouched",
      value: function registerOnTouched(fn) {
        this.onTouched = fn;
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        this.form.deregister(this);
      }
    }]);
    return Checkbox;
  })();
  exports.Checkbox = Checkbox;
  exports.Checkbox = Checkbox = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-checkbox',
    inputs: ['value', 'checked', 'disabled', 'id'],
    host: {
      'role': 'checkbox',
      'tappable': 'true',
      '[attr.tab-index]': 'tabIndex',
      '[attr.aria-checked]': 'checked',
      '[attr.aria-disabled]': 'disabled',
      '[attr.aria-labelledby]': 'labelId',
      '(click)': 'click($event)',
      'class': 'item'
    },
    template: '<div class="item-inner">' + '<media-checkbox disable-activated>' + '<checkbox-icon></checkbox-icon>' + '</media-checkbox>' + '<ion-item-content id="{{labelId}}">' + '<ng-content></ng-content>' + '</ion-item-content>' + '</div>'
  }), __param(1, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _utilForm.Form !== 'undefined' && _utilForm.Form) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.NgControl !== 'undefined' && _angular2Angular2.NgControl) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object])], Checkbox);
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _listList = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var ItemSliding = (function() {
    function ItemSliding(list, elementRef) {
      _classCallCheck(this, ItemSliding);
      this.list = list;
      list.enableSlidingItems(true);
      elementRef.nativeElement.$ionSlide = ++slideIds;
    }
    _createClass(ItemSliding, [{
      key: "close",
      value: function close() {
        this.list.closeSlidingItems();
      }
    }]);
    return ItemSliding;
  })();
  exports.ItemSliding = ItemSliding;
  exports.ItemSliding = ItemSliding = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-item-sliding',
    template: '<ng-content select="ion-item,[ion-item]"></ng-content>' + '<ng-content select="ion-item-options"></ng-content>'
  }), __param(0, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _listList.List !== 'undefined' && _listList.List) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object])], ItemSliding);
  var slideIds = 0;
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-group", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _contentContent = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var ItemGroup = function ItemGroup(elementRef) {
    _classCallCheck(this, ItemGroup);
    this.ele = elementRef.nativeElement;
  };
  exports.ItemGroup = ItemGroup;
  exports.ItemGroup = ItemGroup = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-item-group',
    host: {'class': 'item-group'}
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object])], ItemGroup);
  var ItemGroupTitle = function ItemGroupTitle(elementRef, zone, config, content) {
    _classCallCheck(this, ItemGroupTitle);
    this.elementRef = elementRef;
    this.zone = zone;
    this.content = content;
    this.isSticky = true;
  };
  exports.ItemGroupTitle = ItemGroupTitle;
  exports.ItemGroupTitle = ItemGroupTitle = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-item-group-title',
    host: {
      'class': 'item-group-title',
      '[class.sticky]': 'isSticky'
    }
  }), __metadata('design:paramtypes', [typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _c || Object, typeof(_d = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _d || Object, typeof(_e = typeof _contentContent.Content !== 'undefined' && _contentContent.Content) === 'function' && _e || Object])], ItemGroupTitle);
  var _a,
      _b,
      _c,
      _d,
      _e;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Item = function Item() {
    _classCallCheck(this, Item);
  };
  exports.Item = Item;
  exports.Item = Item = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-item,[ion-item]',
    template: '<ng-content select="[item-left]"></ng-content>' + '<div class="item-inner">' + '<ng-content select="ion-item-content"></ng-content>' + '<ion-item-content cnt>' + '<ng-content></ng-content>' + '</ion-item-content>' + '<ng-content select="[item-right]"></ng-content>' + '</div>',
    host: {'class': 'item'}
  }), __metadata('design:paramtypes', [])], Item);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding-gesture", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/hammer", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/drag-gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ionicGesturesHammer = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/hammer');
  var _ionicGesturesDragGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/drag-gesture');
  var _ionicUtilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var ItemSlidingGesture = (function(_DragGesture) {
    _inherits(ItemSlidingGesture, _DragGesture);
    function ItemSlidingGesture(list, listEle) {
      var _this = this;
      _classCallCheck(this, ItemSlidingGesture);
      _get(Object.getPrototypeOf(ItemSlidingGesture.prototype), 'constructor', this).call(this, listEle, {
        direction: 'x',
        threshold: DRAG_THRESHOLD
      });
      this.data = {};
      this.openItems = 0;
      this.list = list;
      this.listEle = listEle;
      this.canDrag = true;
      this.listen();
      this.on('tap', function(ev) {
        if (!isFromOptionButtons(ev.target)) {
          var didClose = _this.closeOpened();
          if (didClose) {
            preventDefault(ev);
          }
        }
      });
      this.mouseOut = function(ev) {
        _this.onDragEnd(ev);
      };
    }
    _createClass(ItemSlidingGesture, [{
      key: 'onDragStart',
      value: function onDragStart(ev) {
        var itemContainerEle = getItemConatiner(ev.target);
        if (!itemContainerEle)
          return;
        this.closeOpened(ev, itemContainerEle);
        var openAmout = this.getOpenAmount(itemContainerEle);
        var itemData = this.get(itemContainerEle);
        this.preventDrag = openAmout > 0;
        if (this.preventDrag) {
          this.closeOpened(ev);
          return preventDefault(ev);
        }
        itemContainerEle.classList.add('active-slide');
        this.set(itemContainerEle, 'offsetX', openAmout);
        this.set(itemContainerEle, 'startX', ev.center[this.direction]);
        if (ev.srcEvent.type.indexOf('mouse') > -1) {
          ev.target.addEventListener('mouseout', this.mouseOut);
        }
      }
    }, {
      key: 'onDrag',
      value: function onDrag(ev) {
        if (Math.abs(ev.deltaY) > 30) {
          this.preventDrag = true;
          return this.closeOpened(ev);
        }
        var itemContainerEle = getItemConatiner(ev.target);
        if (!itemContainerEle || !isActive(itemContainerEle) || this.preventDrag)
          return;
        var itemData = this.get(itemContainerEle);
        if (!itemData.optsWidth) {
          itemData.optsWidth = getOptionsWidth(itemContainerEle);
          if (!itemData.optsWidth)
            return;
        }
        itemContainerEle.classList.add('active-slide');
        itemContainerEle.classList.add('active-options');
        var x = ev.center[this.direction];
        var delta = x - itemData.startX;
        var newX = Math.max(0, itemData.offsetX - delta);
        if (newX > itemData.optsWidth) {
          newX = -Math.min(-itemData.optsWidth, -itemData.optsWidth + (delta + itemData.optsWidth) * 0.4);
        }
        this.open(itemContainerEle, newX, false);
      }
    }, {
      key: 'onDragEnd',
      value: function onDragEnd(ev) {
        var _this2 = this;
        this.preventDrag = false;
        var itemContainerEle = getItemConatiner(ev.target);
        if (!itemContainerEle || !isActive(itemContainerEle))
          return;
        var itemData = this.get(itemContainerEle);
        var restingPoint = itemData.optsWidth;
        if (this.getOpenAmount(itemContainerEle) < restingPoint / 2) {
          if (ev.direction & _ionicGesturesHammer.Hammer.DIRECTION_RIGHT) {
            restingPoint = 0;
          } else if (Math.abs(ev.velocityX) < 0.3) {
            restingPoint = 0;
          }
        }
        ev.target.removeEventListener('mouseout', this.mouseOut);
        (0, _ionicUtilDom.raf)(function() {
          _this2.open(itemContainerEle, restingPoint, true);
        });
      }
    }, {
      key: 'closeOpened',
      value: function closeOpened(ev, doNotCloseEle) {
        var didClose = false;
        if (this.openItems) {
          var openItemElements = this.listEle.querySelectorAll('.active-slide');
          for (var i = 0; i < openItemElements.length; i++) {
            if (openItemElements[i] !== doNotCloseEle) {
              this.open(openItemElements[i], 0, true);
              didClose = true;
            }
          }
        }
        return didClose;
      }
    }, {
      key: 'open',
      value: function open(itemContainerEle, openAmount, isFinal) {
        var _this3 = this;
        var slidingEle = itemContainerEle.querySelector('ion-item,[ion-item]');
        if (!slidingEle)
          return;
        this.set(itemContainerEle, 'openAmount', openAmount);
        clearTimeout(this.get(itemContainerEle).timerId);
        if (openAmount) {
          this.openItems++;
        } else {
          var timerId = setTimeout(function() {
            if (slidingEle.style[_ionicUtilDom.CSS.transform] === '') {
              itemContainerEle.classList.remove('active-slide');
              itemContainerEle.classList.remove('active-options');
              _this3.openItems--;
            }
          }, 400);
          this.set(itemContainerEle, 'timerId', timerId);
        }
        slidingEle.style[_ionicUtilDom.CSS.transition] = isFinal ? '' : 'none';
        slidingEle.style[_ionicUtilDom.CSS.transform] = openAmount ? 'translate3d(' + -openAmount + 'px,0,0)' : '';
        if (isFinal) {
          this.enableScroll(!openAmount);
        }
      }
    }, {
      key: 'getOpenAmount',
      value: function getOpenAmount(itemContainerEle) {
        return this.get(itemContainerEle).openAmount || 0;
      }
    }, {
      key: 'get',
      value: function get(itemContainerEle) {
        return this.data[itemContainerEle && itemContainerEle.$ionSlide] || {};
      }
    }, {
      key: 'set',
      value: function set(itemContainerEle, key, value) {
        if (!this.data[itemContainerEle.$ionSlide]) {
          this.data[itemContainerEle.$ionSlide] = {};
        }
        this.data[itemContainerEle.$ionSlide][key] = value;
      }
    }, {
      key: 'enableScroll',
      value: function enableScroll(shouldEnable) {
        var scrollContentEle = (0, _ionicUtilDom.closest)(this.listEle, 'scroll-content');
        if (scrollContentEle) {
          scrollContentEle[shouldEnable ? 'removeEventListener' : 'addEventListener']('touchstart', preventDefault);
        }
      }
    }, {
      key: 'unlisten',
      value: function unlisten() {
        _get(Object.getPrototypeOf(ItemSlidingGesture.prototype), 'unlisten', this).call(this);
        this.listEle = null;
      }
    }]);
    return ItemSlidingGesture;
  })(_ionicGesturesDragGesture.DragGesture);
  exports.ItemSlidingGesture = ItemSlidingGesture;
  function preventDefault(ev) {
    ev.preventDefault();
  }
  function getItemConatiner(ele) {
    return (0, _ionicUtilDom.closest)(ele, 'ion-item-sliding', true);
  }
  function isFromOptionButtons(ele) {
    return !!(0, _ionicUtilDom.closest)(ele, 'ion-item-options', true);
  }
  function getOptionsWidth(itemContainerEle) {
    var optsEle = itemContainerEle.querySelector('ion-item-options');
    if (optsEle) {
      return optsEle.offsetWidth;
    }
  }
  function isActive(itemContainerEle) {
    return itemContainerEle.classList.contains('active-slide');
  }
  var DRAG_THRESHOLD = 20;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/virtual", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ListVirtualScroll = (function() {
    function ListVirtualScroll(list) {
      var _this = this;
      _classCallCheck(this, ListVirtualScroll);
      this.list = list;
      this.content = this.list.content;
      this.viewportHeight = this.content.height();
      this.viewContainer = this.list.itemTemplate.viewContainer;
      this.itemHeight = 60;
      this.shownItems = {};
      this.enteringItems = [];
      this.leavingItems = [];
      setTimeout(function() {
        _this.resize();
        _this._handleVirtualScroll({target: _this.content.scrollElement});
      });
      this.content.addScrollEventListener(function(event) {
        _this._handleVirtualScroll(event);
      });
    }
    _createClass(ListVirtualScroll, [{
      key: 'resize',
      value: function resize() {
        this.viewportHeight = this.content.height();
        this.viewportScrollHeight = this.content.scrollElement.scrollHeight;
        this.virtualHeight = this.list.items.length * this.itemHeight;
        this.itemsPerScreen = this.viewportHeight / this.itemHeight;
        console.log('VIRTUAL: resize(viewportHeight:', this.viewportHeight, 'viewportScrollHeight:', this.viewportScrollHeight, 'virtualHeight:', this.virtualHeight, ', itemsPerScreen:', this.itemsPerScreen, ')');
      }
    }, {
      key: '_handleVirtualScroll',
      value: function _handleVirtualScroll(event) {
        var item = undefined;
        var shownItemRef = undefined;
        var st = event.target.scrollTop;
        var sh = event.target.scrollHeight;
        var topIndex = Math.floor(st / this.itemHeight);
        var bottomIndex = Math.floor(st / this.itemHeight + this.itemsPerScreen);
        var items = this.list.items;
        for (var i in this.shownItems) {
          if (i < topIndex || i > bottomIndex) {
            this.leavingItems.push(this.shownItems[i]);
            delete this.shownItems[i];
          }
        }
        var realIndex = 0;
        for (var i = topIndex,
            _realIndex = 0; i < bottomIndex && i < items.length; i++, _realIndex++) {
          item = items[i];
          console.log('Drawing item', i, item.title);
          shownItemRef = this.shownItems[i];
          if (!shownItemRef) {
            var itemView = this.viewContainer.create(this.list.itemTemplate.protoViewRef, _realIndex);
            itemView.setLocal('\$implicit', item);
            itemView.setLocal('\$item', item);
            shownItemRef = new VirtualItemRef(item, i, _realIndex, itemView);
            this.shownItems[i] = shownItemRef;
            this.enteringItems.push(shownItemRef);
          }
        }
        while (this.leavingItems.length) {
          var itemRef = this.leavingItems.pop();
          console.log('Removing item', itemRef.item, itemRef.realIndex);
          this.viewContainer.remove(itemRef.realIndex);
        }
        console.log('VIRTUAL SCROLL: scroll(scrollTop:', st, 'topIndex:', topIndex, 'bottomIndex:', bottomIndex, ')');
        console.log('Container has', this.list.getNativeElement().children.length, 'children');
      }
    }, {
      key: 'cellAtIndex',
      value: function cellAtIndex(index) {}
    }]);
    return ListVirtualScroll;
  })();
  exports.ListVirtualScroll = ListVirtualScroll;
  var VirtualItemRef = function VirtualItemRef(item, index, realIndex, view) {
    _classCallCheck(this, VirtualItemRef);
    this.item = item;
    this.index = index;
    this.realIndex = realIndex;
    this.view = view;
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/virtual", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding-gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _virtual = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/virtual');
  var _itemItemSlidingGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding-gesture');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var List = (function(_Ion) {
    _inherits(List, _Ion);
    function List(elementRef, config, zone) {
      _classCallCheck(this, List);
      _get(Object.getPrototypeOf(List.prototype), "constructor", this).call(this, elementRef, config);
      this.zone = zone;
      this.ele = elementRef.nativeElement;
    }
    _createClass(List, [{
      key: "onInit",
      value: function onInit() {
        _get(Object.getPrototypeOf(List.prototype), "onInit", this).call(this);
        if (util.isDefined(this.virtual)) {
          console.log('Content', this.content);
          console.log('Virtual?', this.virtual);
          console.log('Items?', this.items.length, 'of \'em');
          this._initVirtualScrolling();
        }
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        this.ele = null;
        this.slidingGesture && this.slidingGesture.unlisten();
      }
    }, {
      key: "_initVirtualScrolling",
      value: function _initVirtualScrolling() {
        if (!this.content) {
          return;
        }
        this._virtualScrollingManager = new _virtual.ListVirtualScroll(this);
      }
    }, {
      key: "setItemTemplate",
      value: function setItemTemplate(item) {
        this.itemTemplate = item;
      }
    }, {
      key: "enableSlidingItems",
      value: function enableSlidingItems(shouldEnable) {
        var _this = this;
        this._enableSliding = shouldEnable;
        if (this._init) {
          if (shouldEnable) {
            this.zone.runOutsideAngular(function() {
              setTimeout(function() {
                _this.slidingGesture = new _itemItemSlidingGesture.ItemSlidingGesture(_this, _this.ele);
              });
            });
          } else {
            this.slidingGesture && this.slidingGesture.unlisten();
          }
        }
      }
    }, {
      key: "closeSlidingItems",
      value: function closeSlidingItems() {
        this.slidingGesture && this.slidingGesture.closeOpened();
      }
    }, {
      key: "afterViewInit",
      value: function afterViewInit() {
        this._init = true;
        if (this._enableSliding) {
          this.enableSlidingItems(true);
        }
      }
    }]);
    return List;
  })(_ion.Ion);
  exports.List = List;
  exports.List = List = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-list',
    inputs: ['items', 'virtual', 'content'],
    host: {'class': 'list'}
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _c || Object])], List);
  var ListHeader = function ListHeader() {
    _classCallCheck(this, ListHeader);
  };
  exports.ListHeader = ListHeader;
  exports.ListHeader = ListHeader = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'ion-header',
    inputs: ['id'],
    host: {'[attr.id]': 'id'}
  }), __metadata('design:paramtypes', [])], ListHeader);
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tab", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _navNavController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller');
  var _tabs = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Tab = (function(_NavController) {
    _inherits(Tab, _NavController);
    function Tab(tabs, app, config, elementRef, compiler, loader, viewManager, zone, renderer) {
      _classCallCheck(this, Tab);
      _get(Object.getPrototypeOf(Tab.prototype), "constructor", this).call(this, tabs, app, config, elementRef, compiler, loader, viewManager, zone, renderer);
      this.tabs = tabs;
      this._isInitial = tabs.add(this);
    }
    _createClass(Tab, [{
      key: "onInit",
      value: function onInit() {
        var _this = this;
        if (this._isInitial) {
          this.tabs.select(this);
        } else if (this.tabs.preloadTabs) {
          setTimeout(function() {
            if (!_this._loaded) {
              var opts = {
                animate: false,
                preload: true
              };
              _this.load(opts, function() {
                _this.hideNavbars(true);
              });
            }
          }, 1000 * this.index);
        }
      }
    }, {
      key: "load",
      value: function load(opts, done) {
        if (!this._loaded && this.root) {
          this.push(this.root, null, opts).then(done);
          this._loaded = true;
        } else {
          done();
        }
      }
    }, {
      key: "loadPage",
      value: function loadPage(viewCtrl, navbarContainerRef, done) {
        navbarContainerRef = this.tabs.navbarContainerRef;
        var isTabSubPage = this.tabs.subPages && viewCtrl.index > 0;
        if (isTabSubPage) {
          navbarContainerRef = null;
        }
        _get(Object.getPrototypeOf(Tab.prototype), "loadPage", this).call(this, viewCtrl, navbarContainerRef, function() {
          if (viewCtrl.instance) {
            viewCtrl.instance._tabSubPage = isTabSubPage;
          }
          done();
        });
      }
    }, {
      key: "setSelected",
      value: function setSelected(isSelected) {
        this.isSelected = isSelected;
        this.hideNavbars(!isSelected);
      }
    }, {
      key: "hideNavbars",
      value: function hideNavbars(shouldHideNavbars) {
        this._views.forEach(function(viewCtrl) {
          var navbar = viewCtrl.getNavbar();
          navbar && navbar.setHidden(shouldHideNavbars);
        });
      }
    }, {
      key: "index",
      get: function get() {
        return this.tabs.getIndex(this);
      }
    }]);
    return Tab;
  })(_navNavController.NavController);
  exports.Tab = Tab;
  exports.Tab = Tab = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-tab',
    inputs: ['root', 'tabTitle', 'tabIcon'],
    host: {
      '[attr.id]': 'panelId',
      '[attr.aria-labelledby]': 'btnId',
      '[class.show-tab]': 'isSelected',
      'role': 'tabpanel'
    },
    template: '<template #contents></template>'
  }), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [typeof(_a = typeof _tabs.Tabs !== 'undefined' && _tabs.Tabs) === 'function' && _a || Object, typeof(_b = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _b || Object, typeof(_c = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _c || Object, typeof(_d = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _d || Object, typeof(_e = typeof _angular2Angular2.Compiler !== 'undefined' && _angular2Angular2.Compiler) === 'function' && _e || Object, typeof(_f = typeof _angular2Angular2.DynamicComponentLoader !== 'undefined' && _angular2Angular2.DynamicComponentLoader) === 'function' && _f || Object, typeof(_g = typeof _angular2Angular2.AppViewManager !== 'undefined' && _angular2Angular2.AppViewManager) === 'function' && _g || Object, typeof(_h = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _h || Object, typeof(_j = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _j || Object])], Tab);
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f,
      _g,
      _h,
      _j;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _app = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var IdRef = (function() {
    function IdRef(app, elementRef, appViewManager) {
      _classCallCheck(this, IdRef);
      this.app = app;
      this.elementRef = elementRef;
      this.appViewManager = appViewManager;
      this.component = appViewManager.getComponent(elementRef);
    }
    _createClass(IdRef, [{
      key: "onInit",
      value: function onInit() {
        this.app.register(this.id, this.component);
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        this.app.unregister(this.id);
      }
    }]);
    return IdRef;
  })();
  exports.IdRef = IdRef;
  exports.IdRef = IdRef = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[id]',
    inputs: ['id']
  }), __metadata('design:paramtypes', [typeof(_a = typeof _app.IonicApp !== 'undefined' && _app.IonicApp) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.AppViewManager !== 'undefined' && _angular2Angular2.AppViewManager) === 'function' && _c || Object])], IdRef);
  var Attr = (function() {
    function Attr(renderer, elementRef) {
      _classCallCheck(this, Attr);
      this.renderer = renderer;
      this.elementRef = elementRef;
    }
    _createClass(Attr, [{
      key: "onInit",
      value: function onInit() {
        this.renderer.setElementAttribute(this.elementRef, this.attr, '');
      }
    }]);
    return Attr;
  })();
  exports.Attr = Attr;
  exports.Attr = Attr = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[attr]',
    inputs: ['attr']
  }), __metadata('design:paramtypes', [typeof(_d = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _d || Object, typeof(_e = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _e || Object])], Attr);
  var _a,
      _b,
      _c,
      _d,
      _e;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _appId = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  var _navViewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  var _configDecorators = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators');
  var _iconIcon = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Tabs = (function(_Ion) {
    _inherits(Tabs, _Ion);
    function Tabs(app, config, elementRef, viewCtrl, platform) {
      var _this = this;
      _classCallCheck(this, Tabs);
      _get(Object.getPrototypeOf(Tabs.prototype), "constructor", this).call(this, elementRef, config);
      this.platform = platform;
      this.app = app;
      this.subPages = config.get('tabSubPages');
      this.tabs = [];
      if (viewCtrl) {
        viewCtrl.setContent(this);
        viewCtrl.setContentRef(elementRef);
        this.readyPromise = new Promise(function(res) {
          _this.isReady = res;
        });
        viewCtrl.onReady = function() {
          return _this.readyPromise;
        };
      }
    }
    _createClass(Tabs, [{
      key: "onInit",
      value: function onInit() {
        var _this2 = this;
        _get(Object.getPrototypeOf(Tabs.prototype), "onInit", this).call(this);
        this.preloadTabs = this.preloadTabs !== "false" && this.preloadTabs !== false;
        if (this.highlight) {
          this.platform.onResize(function() {
            _this2.highlight.select(_this2.getSelected());
          });
        }
      }
    }, {
      key: "add",
      value: function add(tab) {
        tab.id = ++_tabIds;
        tab.btnId = 'tab-' + tab.id;
        tab.panelId = 'tabpanel-' + tab.id;
        this.tabs.push(tab);
        return this.tabs.length === 1;
      }
    }, {
      key: "select",
      value: function select(tabOrIndex) {
        var _this3 = this;
        var selectedTab = typeof tabOrIndex === 'number' ? this.getByIndex(tabOrIndex) : tabOrIndex;
        if (!selectedTab) {
          return Promise.reject();
        }
        console.time('select tab ' + selectedTab.id);
        var deselectedTab = this.getSelected();
        if (selectedTab === deselectedTab) {
          return this.touchActive(selectedTab);
        }
        var opts = {animate: false};
        var deselectedPage = undefined;
        if (deselectedTab) {
          deselectedPage = deselectedTab.getActive();
          deselectedPage && deselectedPage.willLeave();
        }
        var selectedPage = selectedTab.getActive();
        selectedPage && selectedPage.willEnter();
        selectedTab.load(opts, function() {
          _this3.tabs.forEach(function(tab) {
            tab.setSelected(tab === selectedTab);
          });
          _this3.highlight && _this3.highlight.select(selectedTab);
          selectedPage && selectedPage.didEnter();
          deselectedPage && deselectedPage.didLeave();
          _this3.isReady && _this3.isReady();
          console.timeEnd('select tab ' + selectedTab.id);
        });
      }
    }, {
      key: "getByIndex",
      value: function getByIndex(index) {
        if (index < this.tabs.length && index > -1) {
          return this.tabs[index];
        }
        return null;
      }
    }, {
      key: "getSelected",
      value: function getSelected() {
        for (var i = 0; i < this.tabs.length; i++) {
          if (this.tabs[i].isSelected) {
            return this.tabs[i];
          }
        }
        return null;
      }
    }, {
      key: "getIndex",
      value: function getIndex(tab) {
        return this.tabs.indexOf(tab);
      }
    }, {
      key: "touchActive",
      value: function touchActive(tab) {
        var active = tab.getActive();
        if (!active) {
          return Promise.resolve();
        }
        var instance = active.instance;
        if (instance.tabSelected) {
          return instance.tabSelected();
        }
        if (tab.length() > 1) {
          return tab.popToRoot();
        }
        if (tab.root != active.componentType) {
          return tab.setRoot(tab.root);
        }
        return Promise.resolve();
      }
    }]);
    return Tabs;
  })(_ion.Ion);
  exports.Tabs = Tabs;
  exports.Tabs = Tabs = __decorate([(0, _configDecorators.ConfigComponent)({
    selector: 'ion-tabs',
    defaultInputs: {
      'tabbarPlacement': 'bottom',
      'tabbarIcons': 'top',
      'tabbarStyle': 'default',
      'preloadTabs': false
    },
    template: '<ion-navbar-section>' + '<template navbar-anchor></template>' + '</ion-navbar-section>' + '<ion-tabbar-section>' + '<tabbar role="tablist" [attr]="tabbarStyle">' + '<a *ng-for="#t of tabs" [tab]="t" class="tab-button" role="tab">' + '<icon [name]="t.tabIcon" [is-active]="t.isSelected" class="tab-button-icon"></icon>' + '<span class="tab-button-text">{{t.tabTitle}}</span>' + '</a>' + '<tab-highlight></tab-highlight>' + '</tabbar>' + '</ion-tabbar-section>' + '<ion-content-section>' + '<ng-content></ng-content>' + '</ion-content-section>',
    directives: [_iconIcon.Icon, _angular2Angular2.NgFor, _angular2Angular2.NgIf, _appId.Attr, (0, _angular2Angular2.forwardRef)(function() {
      return TabButton;
    }), (0, _angular2Angular2.forwardRef)(function() {
      return TabHighlight;
    }), (0, _angular2Angular2.forwardRef)(function() {
      return TabNavBarAnchor;
    })]
  }), __param(3, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object, typeof(_d = typeof _navViewController.ViewController !== 'undefined' && _navViewController.ViewController) === 'function' && _d || Object, typeof(_e = typeof _platformPlatform.Platform !== 'undefined' && _platformPlatform.Platform) === 'function' && _e || Object])], Tabs);
  var _tabIds = -1;
  var TabButton = (function(_Ion2) {
    _inherits(TabButton, _Ion2);
    function TabButton(tabs, config, elementRef) {
      _classCallCheck(this, TabButton);
      _get(Object.getPrototypeOf(TabButton.prototype), "constructor", this).call(this, elementRef, config);
      this.tabs = tabs;
      this.disHover = config.get('hoverCSS') === false;
    }
    _createClass(TabButton, [{
      key: "onInit",
      value: function onInit() {
        this.tab.btn = this;
        this.hasTitle = !!this.tab.tabTitle;
        this.hasIcon = !!this.tab.tabIcon;
        this.hasTitleOnly = this.hasTitle && !this.hasIcon;
        this.hasIconOnly = this.hasIcon && !this.hasTitle;
      }
    }, {
      key: "onClick",
      value: function onClick() {
        this.tabs.select(this.tab);
      }
    }]);
    return TabButton;
  })(_ion.Ion);
  TabButton = __decorate([(0, _angular2Angular2.Directive)({
    selector: '.tab-button',
    inputs: ['tab'],
    host: {
      '[attr.id]': 'tab.btnId',
      '[attr.aria-controls]': 'tab.panelId',
      '[attr.aria-selected]': 'tab.isSelected',
      '[class.has-title]': 'hasTitle',
      '[class.has-icon]': 'hasIcon',
      '[class.has-title-only]': 'hasTitleOnly',
      '[class.icon-only]': 'hasIconOnly',
      '[class.disable-hover]': 'disHover',
      '(click)': 'onClick()'
    }
  }), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [Tabs, typeof(_f = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _f || Object, typeof(_g = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _g || Object])], TabButton);
  var TabHighlight = (function() {
    function TabHighlight(tabs, config, elementRef) {
      _classCallCheck(this, TabHighlight);
      if (config.get('tabbarHighlight')) {
        tabs.highlight = this;
        this.elementRef = elementRef;
      }
    }
    _createClass(TabHighlight, [{
      key: "select",
      value: function select(tab) {
        var d = tab.btn.getDimensions();
        var ele = this.elementRef.nativeElement;
        ele.style.transform = 'translate3d(' + d.left + 'px,0,0) scaleX(' + d.width + ')';
        if (!this.init) {
          this.init = true;
          setTimeout(function() {
            ele.classList.add('animate');
          }, 64);
        }
      }
    }]);
    return TabHighlight;
  })();
  TabHighlight = __decorate([(0, _angular2Angular2.Directive)({selector: 'tab-highlight'}), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [Tabs, typeof(_h = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _h || Object, typeof(_j = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _j || Object])], TabHighlight);
  var TabNavBarAnchor = function TabNavBarAnchor(tabs, viewContainerRef) {
    _classCallCheck(this, TabNavBarAnchor);
    tabs.navbarContainerRef = viewContainerRef;
  };
  TabNavBarAnchor = __decorate([(0, _angular2Angular2.Directive)({selector: 'template[navbar-anchor]'}), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [Tabs, typeof(_k = typeof _angular2Angular2.ViewContainerRef !== 'undefined' && _angular2Angular2.ViewContainerRef) === 'function' && _k || Object])], TabNavBarAnchor);
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f,
      _g,
      _h,
      _j,
      _k;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/swiper-widget", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports.Swiper = Swiper;
  var $;
  function Swiper(container, params) {
    if (!(this instanceof Swiper))
      return new Swiper(container, params);
    var defaults = {
      direction: 'horizontal',
      touchEventsTarget: 'container',
      initialSlide: 0,
      speed: 300,
      autoplay: false,
      autoplayDisableOnInteraction: true,
      iOSEdgeSwipeDetection: false,
      iOSEdgeSwipeThreshold: 20,
      freeMode: false,
      freeModeMomentum: true,
      freeModeMomentumRatio: 1,
      freeModeMomentumBounce: true,
      freeModeMomentumBounceRatio: 1,
      freeModeSticky: false,
      setWrapperSize: false,
      virtualTranslate: false,
      effect: 'slide',
      coverflow: {
        rotate: 50,
        stretch: 0,
        depth: 100,
        modifier: 1,
        slideShadows: true
      },
      cube: {
        slideShadows: true,
        shadow: true,
        shadowOffset: 20,
        shadowScale: 0.94
      },
      fade: {crossFade: false},
      parallax: false,
      scrollbar: null,
      scrollbarHide: true,
      keyboardControl: false,
      mousewheelControl: false,
      mousewheelReleaseOnEdges: false,
      mousewheelInvert: false,
      mousewheelForceToAxis: false,
      mousewheelSensitivity: 1,
      hashnav: false,
      spaceBetween: 0,
      slidesPerView: 1,
      slidesPerColumn: 1,
      slidesPerColumnFill: 'column',
      slidesPerGroup: 1,
      centeredSlides: false,
      slidesOffsetBefore: 0,
      slidesOffsetAfter: 0,
      roundLengths: false,
      touchRatio: 1,
      touchAngle: 45,
      simulateTouch: true,
      shortSwipes: true,
      longSwipes: true,
      longSwipesRatio: 0.5,
      longSwipesMs: 300,
      followFinger: true,
      onlyExternal: false,
      threshold: 0,
      touchMoveStopPropagation: true,
      pagination: null,
      paginationElement: 'span',
      paginationClickable: false,
      paginationHide: false,
      paginationBulletRender: null,
      resistance: true,
      resistanceRatio: 0.85,
      nextButton: null,
      prevButton: null,
      watchSlidesProgress: false,
      watchSlidesVisibility: false,
      grabCursor: false,
      preventClicks: true,
      preventClicksPropagation: true,
      slideToClickedSlide: false,
      lazyLoading: false,
      lazyLoadingInPrevNext: false,
      lazyLoadingOnTransitionStart: false,
      preloadImages: true,
      updateOnImagesReady: true,
      loop: false,
      loopAdditionalSlides: 0,
      loopedSlides: null,
      control: undefined,
      controlInverse: false,
      controlBy: 'slide',
      allowSwipeToPrev: true,
      allowSwipeToNext: true,
      swipeHandler: null,
      noSwiping: true,
      noSwipingClass: 'swiper-no-swiping',
      slideClass: 'swiper-slide',
      slideActiveClass: 'swiper-slide-active',
      slideVisibleClass: 'swiper-slide-visible',
      slideDuplicateClass: 'swiper-slide-duplicate',
      slideNextClass: 'swiper-slide-next',
      slidePrevClass: 'swiper-slide-prev',
      wrapperClass: 'swiper-wrapper',
      bulletClass: 'swiper-pagination-bullet',
      bulletActiveClass: 'swiper-pagination-bullet-active',
      buttonDisabledClass: 'swiper-button-disabled',
      paginationHiddenClass: 'swiper-pagination-hidden',
      observer: false,
      observeParents: false,
      a11y: false,
      prevSlideMessage: 'Previous slide',
      nextSlideMessage: 'Next slide',
      firstSlideMessage: 'This is the first slide',
      lastSlideMessage: 'This is the last slide',
      paginationBulletMessage: 'Go to slide {{index}}',
      runCallbacksOnInit: true
    };
    var initialVirtualTranslate = params && params.virtualTranslate;
    params = params || {};
    for (var def in defaults) {
      if (typeof params[def] === 'undefined') {
        params[def] = defaults[def];
      } else if (typeof params[def] === 'object') {
        for (var deepDef in defaults[def]) {
          if (typeof params[def][deepDef] === 'undefined') {
            params[def][deepDef] = defaults[def][deepDef];
          }
        }
      }
    }
    var s = this;
    s.version = '3.1.0';
    s.params = params;
    s.classNames = [];
    if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined') {
      $ = Dom7;
    }
    if (typeof $ === 'undefined') {
      if (typeof Dom7 === 'undefined') {
        $ = window.Dom7 || window.Zepto || window.jQuery;
      } else {
        $ = Dom7;
      }
      if (!$)
        return;
    }
    s.$ = $;
    s.container = $(container);
    if (s.container.length === 0)
      return;
    if (s.container.length > 1) {
      s.container.each(function() {
        new Swiper(this, params);
      });
      return;
    }
    s.container[0].swiper = s;
    s.container.data('swiper', s);
    s.classNames.push('swiper-container-' + s.params.direction);
    if (s.params.freeMode) {
      s.classNames.push('swiper-container-free-mode');
    }
    if (!s.support.flexbox) {
      s.classNames.push('swiper-container-no-flexbox');
      s.params.slidesPerColumn = 1;
    }
    if (s.params.parallax || s.params.watchSlidesVisibility) {
      s.params.watchSlidesProgress = true;
    }
    if (['cube', 'coverflow'].indexOf(s.params.effect) >= 0) {
      if (s.support.transforms3d) {
        s.params.watchSlidesProgress = true;
        s.classNames.push('swiper-container-3d');
      } else {
        s.params.effect = 'slide';
      }
    }
    if (s.params.effect !== 'slide') {
      s.classNames.push('swiper-container-' + s.params.effect);
    }
    if (s.params.effect === 'cube') {
      s.params.resistanceRatio = 0;
      s.params.slidesPerView = 1;
      s.params.slidesPerColumn = 1;
      s.params.slidesPerGroup = 1;
      s.params.centeredSlides = false;
      s.params.spaceBetween = 0;
      s.params.virtualTranslate = true;
      s.params.setWrapperSize = false;
    }
    if (s.params.effect === 'fade') {
      s.params.slidesPerView = 1;
      s.params.slidesPerColumn = 1;
      s.params.slidesPerGroup = 1;
      s.params.watchSlidesProgress = true;
      s.params.spaceBetween = 0;
      if (typeof initialVirtualTranslate === 'undefined') {
        s.params.virtualTranslate = true;
      }
    }
    if (s.params.grabCursor && s.support.touch) {
      s.params.grabCursor = false;
    }
    s.wrapper = s.container.children('.' + s.params.wrapperClass);
    if (s.params.pagination) {
      s.paginationContainer = $(s.params.pagination);
      if (s.params.paginationClickable) {
        s.paginationContainer.addClass('swiper-pagination-clickable');
      }
    }
    function isH() {
      return s.params.direction === 'horizontal';
    }
    s.rtl = isH() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');
    if (s.rtl) {
      s.classNames.push('swiper-container-rtl');
    }
    if (s.rtl) {
      s.wrongRTL = s.wrapper.css('display') === '-webkit-box';
    }
    if (s.params.slidesPerColumn > 1) {
      s.classNames.push('swiper-container-multirow');
    }
    if (s.device.android) {
      s.classNames.push('swiper-container-android');
    }
    s.container.addClass(s.classNames.join(' '));
    s.translate = 0;
    s.progress = 0;
    s.velocity = 0;
    s.lockSwipeToNext = function() {
      s.params.allowSwipeToNext = false;
    };
    s.lockSwipeToPrev = function() {
      s.params.allowSwipeToPrev = false;
    };
    s.lockSwipes = function() {
      s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;
    };
    s.unlockSwipeToNext = function() {
      s.params.allowSwipeToNext = true;
    };
    s.unlockSwipeToPrev = function() {
      s.params.allowSwipeToPrev = true;
    };
    s.unlockSwipes = function() {
      s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;
    };
    function round(a) {
      return Math.floor(a);
    }
    if (s.params.grabCursor) {
      s.container[0].style.cursor = 'move';
      s.container[0].style.cursor = '-webkit-grab';
      s.container[0].style.cursor = '-moz-grab';
      s.container[0].style.cursor = 'grab';
    }
    s.imagesToLoad = [];
    s.imagesLoaded = 0;
    s.loadImage = function(imgElement, src, checkForComplete, callback) {
      var image;
      function onReady() {
        if (callback)
          callback();
      }
      if (!imgElement.complete || !checkForComplete) {
        if (src) {
          image = new window.Image();
          image.onload = onReady;
          image.onerror = onReady;
          image.src = src;
        } else {
          onReady();
        }
      } else {
        onReady();
      }
    };
    s.preloadImages = function() {
      s.imagesToLoad = s.container.find('img');
      function _onReady() {
        if (typeof s === 'undefined' || s === null)
          return;
        if (s.imagesLoaded !== undefined)
          s.imagesLoaded++;
        if (s.imagesLoaded === s.imagesToLoad.length) {
          if (s.params.updateOnImagesReady)
            s.update();
          s.emit('onImagesReady', s);
        }
      }
      for (var i = 0; i < s.imagesToLoad.length; i++) {
        s.loadImage(s.imagesToLoad[i], s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src'), true, _onReady);
      }
    };
    s.autoplayTimeoutId = undefined;
    s.autoplaying = false;
    s.autoplayPaused = false;
    function autoplay() {
      s.autoplayTimeoutId = setTimeout(function() {
        if (s.params.loop) {
          s.fixLoop();
          s._slideNext();
        } else {
          if (!s.isEnd) {
            s._slideNext();
          } else {
            if (!params.autoplayStopOnLast) {
              s._slideTo(0);
            } else {
              s.stopAutoplay();
            }
          }
        }
      }, s.params.autoplay);
    }
    s.startAutoplay = function() {
      if (typeof s.autoplayTimeoutId !== 'undefined')
        return false;
      if (!s.params.autoplay)
        return false;
      if (s.autoplaying)
        return false;
      s.autoplaying = true;
      s.emit('onAutoplayStart', s);
      autoplay();
    };
    s.stopAutoplay = function(internal) {
      if (!s.autoplayTimeoutId)
        return;
      if (s.autoplayTimeoutId)
        clearTimeout(s.autoplayTimeoutId);
      s.autoplaying = false;
      s.autoplayTimeoutId = undefined;
      s.emit('onAutoplayStop', s);
    };
    s.pauseAutoplay = function(speed) {
      if (s.autoplayPaused)
        return;
      if (s.autoplayTimeoutId)
        clearTimeout(s.autoplayTimeoutId);
      s.autoplayPaused = true;
      if (speed === 0) {
        s.autoplayPaused = false;
        autoplay();
      } else {
        s.wrapper.transitionEnd(function() {
          if (!s)
            return;
          s.autoplayPaused = false;
          if (!s.autoplaying) {
            s.stopAutoplay();
          } else {
            autoplay();
          }
        });
      }
    };
    s.minTranslate = function() {
      return -s.snapGrid[0];
    };
    s.maxTranslate = function() {
      return -s.snapGrid[s.snapGrid.length - 1];
    };
    s.updateContainerSize = function() {
      var width,
          height;
      if (typeof s.params.width !== 'undefined') {
        width = s.params.width;
      } else {
        width = s.container[0].clientWidth;
      }
      if (typeof s.params.height !== 'undefined') {
        height = s.params.height;
      } else {
        height = s.container[0].clientHeight;
      }
      if (width === 0 && isH() || height === 0 && !isH()) {
        return;
      }
      width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);
      height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);
      s.width = width;
      s.height = height;
      s.size = isH() ? s.width : s.height;
    };
    s.updateSlidesSize = function() {
      s.slides = s.wrapper.children('.' + s.params.slideClass);
      s.snapGrid = [];
      s.slidesGrid = [];
      s.slidesSizesGrid = [];
      var spaceBetween = s.params.spaceBetween,
          slidePosition = -s.params.slidesOffsetBefore,
          i,
          prevSlideSize = 0,
          index = 0;
      if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {
        spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;
      }
      s.virtualSize = -spaceBetween;
      if (s.rtl)
        s.slides.css({
          marginLeft: '',
          marginTop: ''
        });
      else
        s.slides.css({
          marginRight: '',
          marginBottom: ''
        });
      var slidesNumberEvenToRows;
      if (s.params.slidesPerColumn > 1) {
        if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {
          slidesNumberEvenToRows = s.slides.length;
        } else {
          slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;
        }
      }
      var slideSize;
      var slidesPerColumn = s.params.slidesPerColumn;
      var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;
      var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);
      for (i = 0; i < s.slides.length; i++) {
        slideSize = 0;
        var slide = s.slides.eq(i);
        if (s.params.slidesPerColumn > 1) {
          var newSlideOrderIndex;
          var column,
              row;
          if (s.params.slidesPerColumnFill === 'column') {
            column = Math.floor(i / slidesPerColumn);
            row = i - column * slidesPerColumn;
            if (column > numFullColumns || column === numFullColumns && row === slidesPerColumn - 1) {
              if (++row >= slidesPerColumn) {
                row = 0;
                column++;
              }
            }
            newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;
            slide.css({
              '-webkit-box-ordinal-group': newSlideOrderIndex,
              '-moz-box-ordinal-group': newSlideOrderIndex,
              '-ms-flex-order': newSlideOrderIndex,
              '-webkit-order': newSlideOrderIndex,
              'order': newSlideOrderIndex
            });
          } else {
            row = Math.floor(i / slidesPerRow);
            column = i - row * slidesPerRow;
          }
          slide.css({'margin-top': row !== 0 && s.params.spaceBetween && s.params.spaceBetween + 'px'}).attr('data-swiper-column', column).attr('data-swiper-row', row);
        }
        if (slide.css('display') === 'none')
          continue;
        if (s.params.slidesPerView === 'auto') {
          slideSize = isH() ? slide.outerWidth(true) : slide.outerHeight(true);
          if (s.params.roundLengths)
            slideSize = round(slideSize);
        } else {
          slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;
          if (s.params.roundLengths)
            slideSize = round(slideSize);
          if (isH()) {
            s.slides[i].style.width = slideSize + 'px';
          } else {
            s.slides[i].style.height = slideSize + 'px';
          }
        }
        s.slides[i].swiperSlideSize = slideSize;
        s.slidesSizesGrid.push(slideSize);
        if (s.params.centeredSlides) {
          slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
          if (i === 0)
            slidePosition = slidePosition - s.size / 2 - spaceBetween;
          if (Math.abs(slidePosition) < 1 / 1000)
            slidePosition = 0;
          if (index % s.params.slidesPerGroup === 0)
            s.snapGrid.push(slidePosition);
          s.slidesGrid.push(slidePosition);
        } else {
          if (index % s.params.slidesPerGroup === 0)
            s.snapGrid.push(slidePosition);
          s.slidesGrid.push(slidePosition);
          slidePosition = slidePosition + slideSize + spaceBetween;
        }
        s.virtualSize += slideSize + spaceBetween;
        prevSlideSize = slideSize;
        index++;
      }
      s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;
      var newSlidesGrid;
      if (s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {
        s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
      }
      if (!s.support.flexbox || s.params.setWrapperSize) {
        if (isH())
          s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
        else
          s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});
      }
      if (s.params.slidesPerColumn > 1) {
        s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;
        s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;
        s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});
        if (s.params.centeredSlides) {
          newSlidesGrid = [];
          for (i = 0; i < s.snapGrid.length; i++) {
            if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0])
              newSlidesGrid.push(s.snapGrid[i]);
          }
          s.snapGrid = newSlidesGrid;
        }
      }
      if (!s.params.centeredSlides) {
        newSlidesGrid = [];
        for (i = 0; i < s.snapGrid.length; i++) {
          if (s.snapGrid[i] <= s.virtualSize - s.size) {
            newSlidesGrid.push(s.snapGrid[i]);
          }
        }
        s.snapGrid = newSlidesGrid;
        if (Math.floor(s.virtualSize - s.size) > Math.floor(s.snapGrid[s.snapGrid.length - 1])) {
          s.snapGrid.push(s.virtualSize - s.size);
        }
      }
      if (s.snapGrid.length === 0)
        s.snapGrid = [0];
      if (s.params.spaceBetween !== 0) {
        if (isH()) {
          if (s.rtl)
            s.slides.css({marginLeft: spaceBetween + 'px'});
          else
            s.slides.css({marginRight: spaceBetween + 'px'});
        } else
          s.slides.css({marginBottom: spaceBetween + 'px'});
      }
      if (s.params.watchSlidesProgress) {
        s.updateSlidesOffset();
      }
    };
    s.updateSlidesOffset = function() {
      for (var i = 0; i < s.slides.length; i++) {
        s.slides[i].swiperSlideOffset = isH() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;
      }
    };
    s.updateSlidesProgress = function(translate) {
      if (typeof translate === 'undefined') {
        translate = s.translate || 0;
      }
      if (s.slides.length === 0)
        return;
      if (typeof s.slides[0].swiperSlideOffset === 'undefined')
        s.updateSlidesOffset();
      var offsetCenter = -translate;
      if (s.rtl)
        offsetCenter = translate;
      var containerBox = s.container[0].getBoundingClientRect();
      var sideBefore = isH() ? 'left' : 'top';
      var sideAfter = isH() ? 'right' : 'bottom';
      s.slides.removeClass(s.params.slideVisibleClass);
      for (var i = 0; i < s.slides.length; i++) {
        var slide = s.slides[i];
        var slideProgress = (offsetCenter - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);
        if (s.params.watchSlidesVisibility) {
          var slideBefore = -(offsetCenter - slide.swiperSlideOffset);
          var slideAfter = slideBefore + s.slidesSizesGrid[i];
          var isVisible = slideBefore >= 0 && slideBefore < s.size || slideAfter > 0 && slideAfter <= s.size || slideBefore <= 0 && slideAfter >= s.size;
          if (isVisible) {
            s.slides.eq(i).addClass(s.params.slideVisibleClass);
          }
        }
        slide.progress = s.rtl ? -slideProgress : slideProgress;
      }
    };
    s.updateProgress = function(translate) {
      if (typeof translate === 'undefined') {
        translate = s.translate || 0;
      }
      var translatesDiff = s.maxTranslate() - s.minTranslate();
      if (translatesDiff === 0) {
        s.progress = 0;
        s.isBeginning = s.isEnd = true;
      } else {
        s.progress = (translate - s.minTranslate()) / translatesDiff;
        s.isBeginning = s.progress <= 0;
        s.isEnd = s.progress >= 1;
      }
      if (s.isBeginning)
        s.emit('onReachBeginning', s);
      if (s.isEnd)
        s.emit('onReachEnd', s);
      if (s.params.watchSlidesProgress)
        s.updateSlidesProgress(translate);
      s.emit('onProgress', s, s.progress);
    };
    s.updateActiveIndex = function() {
      var translate = s.rtl ? s.translate : -s.translate;
      var newActiveIndex,
          i,
          snapIndex;
      for (i = 0; i < s.slidesGrid.length; i++) {
        if (typeof s.slidesGrid[i + 1] !== 'undefined') {
          if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {
            newActiveIndex = i;
          } else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {
            newActiveIndex = i + 1;
          }
        } else {
          if (translate >= s.slidesGrid[i]) {
            newActiveIndex = i;
          }
        }
      }
      if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined')
        newActiveIndex = 0;
      snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);
      if (snapIndex >= s.snapGrid.length)
        snapIndex = s.snapGrid.length - 1;
      if (newActiveIndex === s.activeIndex) {
        return;
      }
      s.snapIndex = snapIndex;
      s.previousIndex = s.activeIndex;
      s.activeIndex = newActiveIndex;
      s.updateClasses();
    };
    s.updateClasses = function() {
      s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass);
      var activeSlide = s.slides.eq(s.activeIndex);
      activeSlide.addClass(s.params.slideActiveClass);
      activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);
      activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);
      if (s.bullets && s.bullets.length > 0) {
        s.bullets.removeClass(s.params.bulletActiveClass);
        var bulletIndex;
        if (s.params.loop) {
          bulletIndex = Math.ceil(s.activeIndex - s.loopedSlides) / s.params.slidesPerGroup;
          if (bulletIndex > s.slides.length - 1 - s.loopedSlides * 2) {
            bulletIndex = bulletIndex - (s.slides.length - s.loopedSlides * 2);
          }
          if (bulletIndex > s.bullets.length - 1)
            bulletIndex = bulletIndex - s.bullets.length;
        } else {
          if (typeof s.snapIndex !== 'undefined') {
            bulletIndex = s.snapIndex;
          } else {
            bulletIndex = s.activeIndex || 0;
          }
        }
        if (s.paginationContainer.length > 1) {
          s.bullets.each(function() {
            if ($(this).index() === bulletIndex)
              $(this).addClass(s.params.bulletActiveClass);
          });
        } else {
          s.bullets.eq(bulletIndex).addClass(s.params.bulletActiveClass);
        }
      }
      if (!s.params.loop) {
        if (s.params.prevButton) {
          if (s.isBeginning) {
            $(s.params.prevButton).addClass(s.params.buttonDisabledClass);
            if (s.params.a11y && s.a11y)
              s.a11y.disable($(s.params.prevButton));
          } else {
            $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);
            if (s.params.a11y && s.a11y)
              s.a11y.enable($(s.params.prevButton));
          }
        }
        if (s.params.nextButton) {
          if (s.isEnd) {
            $(s.params.nextButton).addClass(s.params.buttonDisabledClass);
            if (s.params.a11y && s.a11y)
              s.a11y.disable($(s.params.nextButton));
          } else {
            $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);
            if (s.params.a11y && s.a11y)
              s.a11y.enable($(s.params.nextButton));
          }
        }
      }
    };
    s.updatePagination = function() {
      if (!s.params.pagination)
        return;
      if (s.paginationContainer && s.paginationContainer.length > 0) {
        var bulletsHTML = '';
        var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;
        for (var i = 0; i < numberOfBullets; i++) {
          if (s.params.paginationBulletRender) {
            bulletsHTML += s.params.paginationBulletRender(i, s.params.bulletClass);
          } else {
            bulletsHTML += '<' + s.params.paginationElement + ' class="' + s.params.bulletClass + '"></' + s.params.paginationElement + '>';
          }
        }
        s.paginationContainer.html(bulletsHTML);
        s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);
        if (s.params.paginationClickable && s.params.a11y && s.a11y) {
          s.a11y.initPagination();
        }
      }
    };
    s.update = function(updateTranslate) {
      s.updateContainerSize();
      s.updateSlidesSize();
      s.updateProgress();
      s.updatePagination();
      s.updateClasses();
      if (s.params.scrollbar && s.scrollbar) {
        s.scrollbar.set();
      }
      function forceSetTranslate() {
        newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
        s.setWrapperTranslate(newTranslate);
        s.updateActiveIndex();
        s.updateClasses();
      }
      if (updateTranslate) {
        var translated,
            newTranslate;
        if (s.controller && s.controller.spline) {
          s.controller.spline = undefined;
        }
        if (s.params.freeMode) {
          forceSetTranslate();
        } else {
          if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
            translated = s.slideTo(s.slides.length - 1, 0, false, true);
          } else {
            translated = s.slideTo(s.activeIndex, 0, false, true);
          }
          if (!translated) {
            forceSetTranslate();
          }
        }
      }
    };
    s.onResize = function(forceUpdatePagination) {
      var allowSwipeToPrev = s.params.allowSwipeToPrev;
      var allowSwipeToNext = s.params.allowSwipeToNext;
      s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;
      s.updateContainerSize();
      s.updateSlidesSize();
      if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination)
        s.updatePagination();
      if (s.params.scrollbar && s.scrollbar) {
        s.scrollbar.set();
      }
      if (s.controller && s.controller.spline) {
        s.controller.spline = undefined;
      }
      if (s.params.freeMode) {
        var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());
        s.setWrapperTranslate(newTranslate);
        s.updateActiveIndex();
        s.updateClasses();
      } else {
        s.updateClasses();
        if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {
          s.slideTo(s.slides.length - 1, 0, false, true);
        } else {
          s.slideTo(s.activeIndex, 0, false, true);
        }
      }
      s.params.allowSwipeToPrev = allowSwipeToPrev;
      s.params.allowSwipeToNext = allowSwipeToNext;
    };
    var desktopEvents = ['mousedown', 'mousemove', 'mouseup'];
    if (window.navigator.pointerEnabled)
      desktopEvents = ['pointerdown', 'pointermove', 'pointerup'];
    else if (window.navigator.msPointerEnabled)
      desktopEvents = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];
    s.touchEvents = {
      start: s.support.touch || !s.params.simulateTouch ? 'touchstart' : desktopEvents[0],
      move: s.support.touch || !s.params.simulateTouch ? 'touchmove' : desktopEvents[1],
      end: s.support.touch || !s.params.simulateTouch ? 'touchend' : desktopEvents[2]
    };
    if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {
      (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);
    }
    s.initEvents = function(detach) {
      console.debug('swiper initEvents', detach ? 'detach' : 'attach');
      var actionDom = detach ? 'off' : 'on';
      var action = detach ? 'removeEventListener' : 'addEventListener';
      var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];
      var target = s.support.touch ? touchEventsTarget : document;
      var moveCapture = s.params.nested ? true : false;
      if (s.browser.ie) {
        touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
        target[action](s.touchEvents.move, s.onTouchMove, moveCapture);
        target[action](s.touchEvents.end, s.onTouchEnd, false);
      } else {
        if (s.support.touch) {
          touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);
          touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);
          touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, false);
        }
        if (params.simulateTouch && !s.device.ios && !s.device.android) {
          touchEventsTarget[action]('mousedown', s.onTouchStart, false);
          document[action]('mousemove', s.onTouchMove, moveCapture);
          document[action]('mouseup', s.onTouchEnd, false);
        }
      }
      window[action]('resize', s.onResize);
      if (s.params.nextButton) {
        $(s.params.nextButton)[actionDom]('click', s.onClickNext);
        if (s.params.a11y && s.a11y)
          $(s.params.nextButton)[actionDom]('keydown', s.a11y.onEnterKey);
      }
      if (s.params.prevButton) {
        $(s.params.prevButton)[actionDom]('click', s.onClickPrev);
        if (s.params.a11y && s.a11y)
          $(s.params.prevButton)[actionDom]('keydown', s.a11y.onEnterKey);
      }
      if (s.params.pagination && s.params.paginationClickable) {
        $(s.paginationContainer)[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);
        if (s.params.a11y && s.a11y)
          $(s.paginationContainer)[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);
      }
      if (s.params.preventClicks || s.params.preventClicksPropagation)
        touchEventsTarget[action]('click', s.preventClicks, true);
    };
    s.attachEvents = function(detach) {
      s.initEvents();
    };
    s.detachEvents = function() {
      s.initEvents(true);
    };
    s.allowClick = true;
    s.preventClicks = function(e) {
      if (!s.allowClick) {
        if (s.params.preventClicks)
          e.preventDefault();
        if (s.params.preventClicksPropagation && s.animating) {
          e.stopPropagation();
          e.stopImmediatePropagation();
        }
      }
    };
    s.onClickNext = function(e) {
      e.preventDefault();
      if (s.isEnd && !s.params.loop)
        return;
      s.slideNext();
    };
    s.onClickPrev = function(e) {
      e.preventDefault();
      if (s.isBeginning && !s.params.loop)
        return;
      s.slidePrev();
    };
    s.onClickIndex = function(e) {
      e.preventDefault();
      var index = $(this).index() * s.params.slidesPerGroup;
      if (s.params.loop)
        index = index + s.loopedSlides;
      s.slideTo(index);
    };
    function findElementInEvent(e, selector) {
      var el = $(e.target);
      if (!el.is(selector)) {
        if (typeof selector === 'string') {
          el = el.parents(selector);
        } else if (selector.nodeType) {
          var found;
          el.parents().each(function(index, _el) {
            if (_el === selector)
              found = selector;
          });
          if (!found)
            return undefined;
          else
            return selector;
        }
      }
      if (el.length === 0) {
        return undefined;
      }
      return el[0];
    }
    s.updateClickedSlide = function(e) {
      var slide = findElementInEvent(e, '.' + s.params.slideClass);
      var slideFound = false;
      if (slide) {
        for (var i = 0; i < s.slides.length; i++) {
          if (s.slides[i] === slide)
            slideFound = true;
        }
      }
      if (slide && slideFound) {
        s.clickedSlide = slide;
        s.clickedIndex = $(slide).index();
      } else {
        s.clickedSlide = undefined;
        s.clickedIndex = undefined;
        return;
      }
      if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {
        var slideToIndex = s.clickedIndex,
            realIndex;
        if (s.params.loop) {
          realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');
          if (slideToIndex > s.slides.length - s.params.slidesPerView) {
            s.fixLoop();
            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]').eq(0).index();
            setTimeout(function() {
              s.slideTo(slideToIndex);
            }, 0);
          } else if (slideToIndex < s.params.slidesPerView - 1) {
            s.fixLoop();
            var duplicatedSlides = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index="' + realIndex + '"]');
            slideToIndex = duplicatedSlides.eq(duplicatedSlides.length - 1).index();
            setTimeout(function() {
              s.slideTo(slideToIndex);
            }, 0);
          } else {
            s.slideTo(slideToIndex);
          }
        } else {
          s.slideTo(slideToIndex);
        }
      }
    };
    var isTouched,
        isMoved,
        touchStartTime,
        isScrolling,
        currentTranslate,
        startTranslate,
        allowThresholdMove,
        formElements = 'input, select, textarea, button',
        lastClickTime = Date.now(),
        clickTimeout,
        velocities = [],
        allowMomentumBounce;
    s.animating = false;
    s.touches = {
      startX: 0,
      startY: 0,
      currentX: 0,
      currentY: 0,
      diff: 0
    };
    var isTouchEvent,
        startMoving;
    s.onTouchStart = function(e) {
      if (e.originalEvent)
        e = e.originalEvent;
      isTouchEvent = e.type === 'touchstart';
      if (!isTouchEvent && 'which' in e && e.which === 3)
        return;
      if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {
        s.allowClick = true;
        return;
      }
      if (s.params.swipeHandler) {
        if (!findElementInEvent(e, s.params.swipeHandler))
          return;
      }
      var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;
      var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;
      if (s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {
        return;
      }
      isTouched = true;
      isMoved = false;
      isScrolling = undefined;
      startMoving = undefined;
      s.touches.startX = startX;
      s.touches.startY = startY;
      touchStartTime = Date.now();
      s.allowClick = true;
      s.updateContainerSize();
      s.swipeDirection = undefined;
      if (s.params.threshold > 0)
        allowThresholdMove = false;
      if (e.type !== 'touchstart') {
        var preventDefault = true;
        if ($(e.target).is(formElements))
          preventDefault = false;
        if (document.activeElement && $(document.activeElement).is(formElements)) {
          document.activeElement.blur();
        }
        if (preventDefault) {
          e.preventDefault();
        }
      }
      s.emit('onTouchStart', s, e);
    };
    s.onTouchMove = function(e) {
      if (e.originalEvent)
        e = e.originalEvent;
      if (isTouchEvent && e.type === 'mousemove')
        return;
      if (e.preventedByNestedSwiper)
        return;
      if (s.params.onlyExternal) {
        s.allowClick = false;
        if (isTouched) {
          s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
          s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
          touchStartTime = Date.now();
        }
        return;
      }
      if (isTouchEvent && document.activeElement) {
        if (e.target === document.activeElement && $(e.target).is(formElements)) {
          isMoved = true;
          s.allowClick = false;
          return;
        }
      }
      s.emit('onTouchMove', s, e);
      if (e.targetTouches && e.targetTouches.length > 1)
        return;
      s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;
      s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;
      if (typeof isScrolling === 'undefined') {
        var touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;
        isScrolling = isH() ? touchAngle > s.params.touchAngle : 90 - touchAngle > s.params.touchAngle;
      }
      if (isScrolling) {
        s.emit('onTouchMoveOpposite', s, e);
      }
      if (typeof startMoving === 'undefined' && s.browser.ieTouch) {
        if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {
          startMoving = true;
        }
      }
      if (!isTouched)
        return;
      if (isScrolling) {
        isTouched = false;
        return;
      }
      if (!startMoving && s.browser.ieTouch) {
        return;
      }
      s.allowClick = false;
      s.emit('onSliderMove', s, e);
      e.preventDefault();
      if (s.params.touchMoveStopPropagation && !s.params.nested) {
        e.stopPropagation();
      }
      if (!isMoved) {
        if (params.loop) {
          s.fixLoop();
        }
        startTranslate = s.getWrapperTranslate();
        s.setWrapperTransition(0);
        if (s.animating) {
          s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');
        }
        if (s.params.autoplay && s.autoplaying) {
          if (s.params.autoplayDisableOnInteraction) {
            s.stopAutoplay();
          } else {
            s.pauseAutoplay();
          }
        }
        allowMomentumBounce = false;
        if (s.params.grabCursor) {
          s.container[0].style.cursor = 'move';
          s.container[0].style.cursor = '-webkit-grabbing';
          s.container[0].style.cursor = '-moz-grabbin';
          s.container[0].style.cursor = 'grabbing';
        }
      }
      isMoved = true;
      var diff = s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
      diff = diff * s.params.touchRatio;
      if (s.rtl)
        diff = -diff;
      s.swipeDirection = diff > 0 ? 'prev' : 'next';
      currentTranslate = diff + startTranslate;
      var disableParentSwiper = true;
      if (diff > 0 && currentTranslate > s.minTranslate()) {
        disableParentSwiper = false;
        if (s.params.resistance)
          currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);
      } else if (diff < 0 && currentTranslate < s.maxTranslate()) {
        disableParentSwiper = false;
        if (s.params.resistance)
          currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);
      }
      if (disableParentSwiper) {
        e.preventedByNestedSwiper = true;
      }
      if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {
        currentTranslate = startTranslate;
      }
      if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {
        currentTranslate = startTranslate;
      }
      if (!s.params.followFinger)
        return;
      if (s.params.threshold > 0) {
        if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {
          if (!allowThresholdMove) {
            allowThresholdMove = true;
            s.touches.startX = s.touches.currentX;
            s.touches.startY = s.touches.currentY;
            currentTranslate = startTranslate;
            s.touches.diff = isH() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;
            return;
          }
        } else {
          currentTranslate = startTranslate;
          return;
        }
      }
      if (s.params.freeMode || s.params.watchSlidesProgress) {
        s.updateActiveIndex();
      }
      if (s.params.freeMode) {
        if (velocities.length === 0) {
          velocities.push({
            position: s.touches[isH() ? 'startX' : 'startY'],
            time: touchStartTime
          });
        }
        velocities.push({
          position: s.touches[isH() ? 'currentX' : 'currentY'],
          time: new window.Date().getTime()
        });
      }
      s.updateProgress(currentTranslate);
      s.setWrapperTranslate(currentTranslate);
    };
    s.onTouchEnd = function(e) {
      if (e.originalEvent)
        e = e.originalEvent;
      s.emit('onTouchEnd', s, e);
      if (!isTouched)
        return;
      if (s.params.grabCursor && isMoved && isTouched) {
        s.container[0].style.cursor = 'move';
        s.container[0].style.cursor = '-webkit-grab';
        s.container[0].style.cursor = '-moz-grab';
        s.container[0].style.cursor = 'grab';
      }
      var touchEndTime = Date.now();
      var timeDiff = touchEndTime - touchStartTime;
      if (s.allowClick) {
        s.updateClickedSlide(e);
        s.emit('onTap', s, e);
        if (timeDiff < 300 && touchEndTime - lastClickTime > 300) {
          if (clickTimeout)
            clearTimeout(clickTimeout);
          clickTimeout = setTimeout(function() {
            if (!s)
              return;
            if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {
              s.paginationContainer.toggleClass(s.params.paginationHiddenClass);
            }
            s.emit('onClick', s, e);
          }, 300);
        }
        if (timeDiff < 300 && touchEndTime - lastClickTime < 300) {
          if (clickTimeout)
            clearTimeout(clickTimeout);
          s.emit('onDoubleTap', s, e);
        }
      }
      lastClickTime = Date.now();
      setTimeout(function() {
        if (s)
          s.allowClick = true;
      }, 0);
      if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {
        isTouched = isMoved = false;
        return;
      }
      isTouched = isMoved = false;
      var currentPos;
      if (s.params.followFinger) {
        currentPos = s.rtl ? s.translate : -s.translate;
      } else {
        currentPos = -currentTranslate;
      }
      if (s.params.freeMode) {
        if (currentPos < -s.minTranslate()) {
          s.slideTo(s.activeIndex);
          return;
        } else if (currentPos > -s.maxTranslate()) {
          if (s.slides.length < s.snapGrid.length) {
            s.slideTo(s.snapGrid.length - 1);
          } else {
            s.slideTo(s.slides.length - 1);
          }
          return;
        }
        if (s.params.freeModeMomentum) {
          if (velocities.length > 1) {
            var lastMoveEvent = velocities.pop(),
                velocityEvent = velocities.pop();
            var distance = lastMoveEvent.position - velocityEvent.position;
            var time = lastMoveEvent.time - velocityEvent.time;
            s.velocity = distance / time;
            s.velocity = s.velocity / 2;
            if (Math.abs(s.velocity) < 0.02) {
              s.velocity = 0;
            }
            if (time > 150 || new window.Date().getTime() - lastMoveEvent.time > 300) {
              s.velocity = 0;
            }
          } else {
            s.velocity = 0;
          }
          velocities.length = 0;
          var momentumDuration = 1000 * s.params.freeModeMomentumRatio;
          var momentumDistance = s.velocity * momentumDuration;
          var newPosition = s.translate + momentumDistance;
          if (s.rtl)
            newPosition = -newPosition;
          var doBounce = false;
          var afterBouncePosition;
          var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;
          if (newPosition < s.maxTranslate()) {
            if (s.params.freeModeMomentumBounce) {
              if (newPosition + s.maxTranslate() < -bounceAmount) {
                newPosition = s.maxTranslate() - bounceAmount;
              }
              afterBouncePosition = s.maxTranslate();
              doBounce = true;
              allowMomentumBounce = true;
            } else {
              newPosition = s.maxTranslate();
            }
          } else if (newPosition > s.minTranslate()) {
            if (s.params.freeModeMomentumBounce) {
              if (newPosition - s.minTranslate() > bounceAmount) {
                newPosition = s.minTranslate() + bounceAmount;
              }
              afterBouncePosition = s.minTranslate();
              doBounce = true;
              allowMomentumBounce = true;
            } else {
              newPosition = s.minTranslate();
            }
          } else if (s.params.freeModeSticky) {
            var j = 0,
                nextSlide;
            for (j = 0; j < s.snapGrid.length; j += 1) {
              if (s.snapGrid[j] > -newPosition) {
                nextSlide = j;
                break;
              }
            }
            if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {
              newPosition = s.snapGrid[nextSlide];
            } else {
              newPosition = s.snapGrid[nextSlide - 1];
            }
            if (!s.rtl)
              newPosition = -newPosition;
          }
          if (s.velocity !== 0) {
            if (s.rtl) {
              momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);
            } else {
              momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);
            }
          } else if (s.params.freeModeSticky) {
            s.slideReset();
            return;
          }
          if (s.params.freeModeMomentumBounce && doBounce) {
            s.updateProgress(afterBouncePosition);
            s.setWrapperTransition(momentumDuration);
            s.setWrapperTranslate(newPosition);
            s.onTransitionStart();
            s.animating = true;
            s.wrapper.transitionEnd(function() {
              if (!s || !allowMomentumBounce)
                return;
              s.emit('onMomentumBounce', s);
              s.setWrapperTransition(s.params.speed);
              s.setWrapperTranslate(afterBouncePosition);
              s.wrapper.transitionEnd(function() {
                if (!s)
                  return;
                s.onTransitionEnd();
              });
            });
          } else if (s.velocity) {
            s.updateProgress(newPosition);
            s.setWrapperTransition(momentumDuration);
            s.setWrapperTranslate(newPosition);
            s.onTransitionStart();
            if (!s.animating) {
              s.animating = true;
              s.wrapper.transitionEnd(function() {
                if (!s)
                  return;
                s.onTransitionEnd();
              });
            }
          } else {
            s.updateProgress(newPosition);
          }
          s.updateActiveIndex();
        }
        if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {
          s.updateProgress();
          s.updateActiveIndex();
        }
        return;
      }
      var i,
          stopIndex = 0,
          groupSize = s.slidesSizesGrid[0];
      for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {
        if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {
          if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {
            stopIndex = i;
            groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];
          }
        } else {
          if (currentPos >= s.slidesGrid[i]) {
            stopIndex = i;
            groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];
          }
        }
      }
      var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;
      if (timeDiff > s.params.longSwipesMs) {
        if (!s.params.longSwipes) {
          s.slideTo(s.activeIndex);
          return;
        }
        if (s.swipeDirection === 'next') {
          if (ratio >= s.params.longSwipesRatio)
            s.slideTo(stopIndex + s.params.slidesPerGroup);
          else
            s.slideTo(stopIndex);
        }
        if (s.swipeDirection === 'prev') {
          if (ratio > 1 - s.params.longSwipesRatio)
            s.slideTo(stopIndex + s.params.slidesPerGroup);
          else
            s.slideTo(stopIndex);
        }
      } else {
        if (!s.params.shortSwipes) {
          s.slideTo(s.activeIndex);
          return;
        }
        if (s.swipeDirection === 'next') {
          s.slideTo(stopIndex + s.params.slidesPerGroup);
        }
        if (s.swipeDirection === 'prev') {
          s.slideTo(stopIndex);
        }
      }
    };
    s._slideTo = function(slideIndex, speed) {
      return s.slideTo(slideIndex, speed, true, true);
    };
    s.slideTo = function(slideIndex, speed, runCallbacks, internal) {
      if (typeof runCallbacks === 'undefined')
        runCallbacks = true;
      if (typeof slideIndex === 'undefined')
        slideIndex = 0;
      if (slideIndex < 0)
        slideIndex = 0;
      s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);
      if (s.snapIndex >= s.snapGrid.length)
        s.snapIndex = s.snapGrid.length - 1;
      var translate = -s.snapGrid[s.snapIndex];
      if (s.params.autoplay && s.autoplaying) {
        if (internal || !s.params.autoplayDisableOnInteraction) {
          s.pauseAutoplay(speed);
        } else {
          s.stopAutoplay();
        }
      }
      s.updateProgress(translate);
      for (var i = 0; i < s.slidesGrid.length; i++) {
        if (-Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {
          slideIndex = i;
        }
      }
      if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {
        return false;
      }
      if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {
        if ((s.activeIndex || 0) !== slideIndex)
          return false;
      }
      if (typeof speed === 'undefined')
        speed = s.params.speed;
      s.previousIndex = s.activeIndex || 0;
      s.activeIndex = slideIndex;
      if (translate === s.translate) {
        s.updateClasses();
        return false;
      }
      s.updateClasses();
      s.onTransitionStart(runCallbacks);
      var translateX = isH() ? translate : 0,
          translateY = isH() ? 0 : translate;
      if (speed === 0) {
        s.setWrapperTransition(0);
        s.setWrapperTranslate(translate);
        s.onTransitionEnd(runCallbacks);
      } else {
        s.setWrapperTransition(speed);
        s.setWrapperTranslate(translate);
        if (!s.animating) {
          s.animating = true;
          s.wrapper.transitionEnd(function() {
            if (!s)
              return;
            s.onTransitionEnd(runCallbacks);
          });
        }
      }
      return true;
    };
    s.onTransitionStart = function(runCallbacks) {
      if (typeof runCallbacks === 'undefined')
        runCallbacks = true;
      if (s.lazy)
        s.lazy.onTransitionStart();
      if (runCallbacks) {
        s.emit('onTransitionStart', s);
        if (s.activeIndex !== s.previousIndex) {
          s.emit('onSlideChangeStart', s);
        }
      }
    };
    s.onTransitionEnd = function(runCallbacks) {
      s.animating = false;
      s.setWrapperTransition(0);
      if (typeof runCallbacks === 'undefined')
        runCallbacks = true;
      if (s.lazy)
        s.lazy.onTransitionEnd();
      if (runCallbacks) {
        s.emit('onTransitionEnd', s);
        if (s.activeIndex !== s.previousIndex) {
          s.emit('onSlideChangeEnd', s);
        }
      }
      if (s.params.hashnav && s.hashnav) {
        s.hashnav.setHash();
      }
    };
    s.slideNext = function(runCallbacks, speed, internal) {
      if (s.params.loop) {
        if (s.animating)
          return false;
        s.fixLoop();
        var clientLeft = s.container[0].clientLeft;
        return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
      } else
        return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);
    };
    s._slideNext = function(speed) {
      return s.slideNext(true, speed, true);
    };
    s.slidePrev = function(runCallbacks, speed, internal) {
      if (s.params.loop) {
        if (s.animating)
          return false;
        s.fixLoop();
        var clientLeft = s.container[0].clientLeft;
        return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
      } else
        return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);
    };
    s._slidePrev = function(speed) {
      return s.slidePrev(true, speed, true);
    };
    s.slideReset = function(runCallbacks, speed, internal) {
      return s.slideTo(s.activeIndex, speed, runCallbacks);
    };
    s.setWrapperTransition = function(duration, byController) {
      s.wrapper.transition(duration);
      if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
        s.effects[s.params.effect].setTransition(duration);
      }
      if (s.params.parallax && s.parallax) {
        s.parallax.setTransition(duration);
      }
      if (s.params.scrollbar && s.scrollbar) {
        s.scrollbar.setTransition(duration);
      }
      if (s.params.control && s.controller) {
        s.controller.setTransition(duration, byController);
      }
      s.emit('onSetTransition', s, duration);
    };
    s.setWrapperTranslate = function(translate, updateActiveIndex, byController) {
      var x = 0,
          y = 0,
          z = 0;
      if (isH()) {
        x = s.rtl ? -translate : translate;
      } else {
        y = translate;
      }
      if (!s.params.virtualTranslate) {
        if (s.support.transforms3d)
          s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');
        else
          s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');
      }
      s.translate = isH() ? x : y;
      if (updateActiveIndex)
        s.updateActiveIndex();
      if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
        s.effects[s.params.effect].setTranslate(s.translate);
      }
      if (s.params.parallax && s.parallax) {
        s.parallax.setTranslate(s.translate);
      }
      if (s.params.scrollbar && s.scrollbar) {
        s.scrollbar.setTranslate(s.translate);
      }
      if (s.params.control && s.controller) {
        s.controller.setTranslate(s.translate, byController);
      }
      s.emit('onSetTranslate', s, s.translate);
    };
    s.getTranslate = function(el, axis) {
      var matrix,
          curTransform,
          curStyle,
          transformMatrix;
      if (typeof axis === 'undefined') {
        axis = 'x';
      }
      if (s.params.virtualTranslate) {
        return s.rtl ? -s.translate : s.translate;
      }
      curStyle = window.getComputedStyle(el, null);
      if (window.WebKitCSSMatrix) {
        transformMatrix = new window.WebKitCSSMatrix(curStyle.webkitTransform === 'none' ? '' : curStyle.webkitTransform);
      } else {
        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');
        matrix = transformMatrix.toString().split(',');
      }
      if (axis === 'x') {
        if (window.WebKitCSSMatrix)
          curTransform = transformMatrix.m41;
        else if (matrix.length === 16)
          curTransform = parseFloat(matrix[12]);
        else
          curTransform = parseFloat(matrix[4]);
      }
      if (axis === 'y') {
        if (window.WebKitCSSMatrix)
          curTransform = transformMatrix.m42;
        else if (matrix.length === 16)
          curTransform = parseFloat(matrix[13]);
        else
          curTransform = parseFloat(matrix[5]);
      }
      if (s.rtl && curTransform)
        curTransform = -curTransform;
      return curTransform || 0;
    };
    s.getWrapperTranslate = function(axis) {
      if (typeof axis === 'undefined') {
        axis = isH() ? 'x' : 'y';
      }
      return s.getTranslate(s.wrapper[0], axis);
    };
    s.observers = [];
    function initObserver(target, options) {
      options = options || {};
      var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;
      var observer = new ObserverFunc(function(mutations) {
        mutations.forEach(function(mutation) {
          s.onResize(true);
          s.emit('onObserverUpdate', s, mutation);
        });
      });
      observer.observe(target, {
        attributes: typeof options.attributes === 'undefined' ? true : options.attributes,
        childList: typeof options.childList === 'undefined' ? true : options.childList,
        characterData: typeof options.characterData === 'undefined' ? true : options.characterData
      });
      s.observers.push(observer);
    }
    s.initObservers = function() {
      if (s.params.observeParents) {
        var containerParents = s.container.parents();
        for (var i = 0; i < containerParents.length; i++) {
          initObserver(containerParents[i]);
        }
      }
      initObserver(s.container[0], {childList: false});
      initObserver(s.wrapper[0], {attributes: false});
    };
    s.disconnectObservers = function() {
      for (var i = 0; i < s.observers.length; i++) {
        s.observers[i].disconnect();
      }
      s.observers = [];
    };
    s.createLoop = function() {
      s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();
      var slides = s.wrapper.children('.' + s.params.slideClass);
      if (s.params.slidesPerView === 'auto' && !s.params.loopedSlides)
        s.params.loopedSlides = slides.length;
      s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);
      s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;
      if (s.loopedSlides > slides.length) {
        s.loopedSlides = slides.length;
      }
      var prependSlides = [],
          appendSlides = [],
          i;
      slides.each(function(index, el) {
        var slide = $(this);
        if (index < s.loopedSlides)
          appendSlides.push(el);
        if (index < slides.length && index >= slides.length - s.loopedSlides)
          prependSlides.push(el);
        slide.attr('data-swiper-slide-index', index);
      });
      for (i = 0; i < appendSlides.length; i++) {
        s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
      }
      for (i = prependSlides.length - 1; i >= 0; i--) {
        s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));
      }
    };
    s.destroyLoop = function() {
      s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();
      s.slides.removeAttr('data-swiper-slide-index');
    };
    s.fixLoop = function() {
      var newIndex;
      if (s.activeIndex < s.loopedSlides) {
        newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;
        newIndex = newIndex + s.loopedSlides;
        s.slideTo(newIndex, 0, false, true);
      } else if (s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2 || s.activeIndex > s.slides.length - s.params.slidesPerView * 2) {
        newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;
        newIndex = newIndex + s.loopedSlides;
        s.slideTo(newIndex, 0, false, true);
      }
    };
    s.appendSlide = function(slides) {
      if (s.params.loop) {
        s.destroyLoop();
      }
      if (typeof slides === 'object' && slides.length) {
        for (var i = 0; i < slides.length; i++) {
          if (slides[i])
            s.wrapper.append(slides[i]);
        }
      } else {
        s.wrapper.append(slides);
      }
      if (s.params.loop) {
        s.createLoop();
      }
      if (!(s.params.observer && s.support.observer)) {
        s.update(true);
      }
    };
    s.prependSlide = function(slides) {
      if (s.params.loop) {
        s.destroyLoop();
      }
      var newActiveIndex = s.activeIndex + 1;
      if (typeof slides === 'object' && slides.length) {
        for (var i = 0; i < slides.length; i++) {
          if (slides[i])
            s.wrapper.prepend(slides[i]);
        }
        newActiveIndex = s.activeIndex + slides.length;
      } else {
        s.wrapper.prepend(slides);
      }
      if (s.params.loop) {
        s.createLoop();
      }
      if (!(s.params.observer && s.support.observer)) {
        s.update(true);
      }
      s.slideTo(newActiveIndex, 0, false);
    };
    s.removeSlide = function(slidesIndexes) {
      if (s.params.loop) {
        s.destroyLoop();
        s.slides = s.wrapper.children('.' + s.params.slideClass);
      }
      var newActiveIndex = s.activeIndex,
          indexToRemove;
      if (typeof slidesIndexes === 'object' && slidesIndexes.length) {
        for (var i = 0; i < slidesIndexes.length; i++) {
          indexToRemove = slidesIndexes[i];
          if (s.slides[indexToRemove])
            s.slides.eq(indexToRemove).remove();
          if (indexToRemove < newActiveIndex)
            newActiveIndex--;
        }
        newActiveIndex = Math.max(newActiveIndex, 0);
      } else {
        indexToRemove = slidesIndexes;
        if (s.slides[indexToRemove])
          s.slides.eq(indexToRemove).remove();
        if (indexToRemove < newActiveIndex)
          newActiveIndex--;
        newActiveIndex = Math.max(newActiveIndex, 0);
      }
      if (s.params.loop) {
        s.createLoop();
      }
      if (!(s.params.observer && s.support.observer)) {
        s.update(true);
      }
      if (s.params.loop) {
        s.slideTo(newActiveIndex + s.loopedSlides, 0, false);
      } else {
        s.slideTo(newActiveIndex, 0, false);
      }
    };
    s.removeAllSlides = function() {
      var slidesIndexes = [];
      for (var i = 0; i < s.slides.length; i++) {
        slidesIndexes.push(i);
      }
      s.removeSlide(slidesIndexes);
    };
    s.effects = {
      fade: {
        setTranslate: function setTranslate() {
          for (var i = 0; i < s.slides.length; i++) {
            var slide = s.slides.eq(i);
            var offset = slide[0].swiperSlideOffset;
            var tx = -offset;
            if (!s.params.virtualTranslate)
              tx = tx - s.translate;
            var ty = 0;
            if (!isH()) {
              ty = tx;
              tx = 0;
            }
            var slideOpacity = s.params.fade.crossFade ? Math.max(1 - Math.abs(slide[0].progress), 0) : 1 + Math.min(Math.max(slide[0].progress, -1), 0);
            slide.css({opacity: slideOpacity}).transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');
          }
        },
        setTransition: function setTransition(duration) {
          s.slides.transition(duration);
          if (s.params.virtualTranslate && duration !== 0) {
            var eventTriggered = false;
            s.slides.transitionEnd(function() {
              if (eventTriggered)
                return;
              if (!s)
                return;
              eventTriggered = true;
              s.animating = false;
              var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];
              for (var i = 0; i < triggerEvents.length; i++) {
                s.wrapper.trigger(triggerEvents[i]);
              }
            });
          }
        }
      },
      cube: {
        setTranslate: function setTranslate() {
          var wrapperRotate = 0,
              cubeShadow;
          if (s.params.cube.shadow) {
            if (isH()) {
              cubeShadow = s.wrapper.find('.swiper-cube-shadow');
              if (cubeShadow.length === 0) {
                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                s.wrapper.append(cubeShadow);
              }
              cubeShadow.css({height: s.width + 'px'});
            } else {
              cubeShadow = s.container.find('.swiper-cube-shadow');
              if (cubeShadow.length === 0) {
                cubeShadow = $('<div class="swiper-cube-shadow"></div>');
                s.container.append(cubeShadow);
              }
            }
          }
          for (var i = 0; i < s.slides.length; i++) {
            var slide = s.slides.eq(i);
            var slideAngle = i * 90;
            var round = Math.floor(slideAngle / 360);
            if (s.rtl) {
              slideAngle = -slideAngle;
              round = Math.floor(-slideAngle / 360);
            }
            var progress = Math.max(Math.min(slide[0].progress, 1), -1);
            var tx = 0,
                ty = 0,
                tz = 0;
            if (i % 4 === 0) {
              tx = -round * 4 * s.size;
              tz = 0;
            } else if ((i - 1) % 4 === 0) {
              tx = 0;
              tz = -round * 4 * s.size;
            } else if ((i - 2) % 4 === 0) {
              tx = s.size + round * 4 * s.size;
              tz = s.size;
            } else if ((i - 3) % 4 === 0) {
              tx = -s.size;
              tz = 3 * s.size + s.size * 4 * round;
            }
            if (s.rtl) {
              tx = -tx;
            }
            if (!isH()) {
              ty = tx;
              tx = 0;
            }
            var transform = 'rotateX(' + (isH() ? 0 : -slideAngle) + 'deg) rotateY(' + (isH() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';
            if (progress <= 1 && progress > -1) {
              wrapperRotate = i * 90 + progress * 90;
              if (s.rtl)
                wrapperRotate = -i * 90 - progress * 90;
            }
            slide.transform(transform);
            if (s.params.cube.slideShadows) {
              var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
              var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
              if (shadowBefore.length === 0) {
                shadowBefore = $('<div class="swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '"></div>');
                slide.append(shadowBefore);
              }
              if (shadowAfter.length === 0) {
                shadowAfter = $('<div class="swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '"></div>');
                slide.append(shadowAfter);
              }
              var shadowOpacity = slide[0].progress;
              if (shadowBefore.length)
                shadowBefore[0].style.opacity = -slide[0].progress;
              if (shadowAfter.length)
                shadowAfter[0].style.opacity = slide[0].progress;
            }
          }
          s.wrapper.css({
            '-webkit-transform-origin': '50% 50% -' + s.size / 2 + 'px',
            '-moz-transform-origin': '50% 50% -' + s.size / 2 + 'px',
            '-ms-transform-origin': '50% 50% -' + s.size / 2 + 'px',
            'transform-origin': '50% 50% -' + s.size / 2 + 'px'
          });
          if (s.params.cube.shadow) {
            if (isH()) {
              cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + -s.width / 2 + 'px) rotateX(90deg) rotateZ(0deg) scale(' + s.params.cube.shadowScale + ')');
            } else {
              var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;
              var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);
              var scale1 = s.params.cube.shadowScale,
                  scale2 = s.params.cube.shadowScale / multiplier,
                  offset = s.params.cube.shadowOffset;
              cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + -s.height / 2 / scale2 + 'px) rotateX(-90deg)');
            }
          }
          var zFactor = s.isSafari || s.isUiWebView ? -s.size / 2 : 0;
          s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (isH() ? 0 : wrapperRotate) + 'deg) rotateY(' + (isH() ? -wrapperRotate : 0) + 'deg)');
        },
        setTransition: function setTransition(duration) {
          s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
          if (s.params.cube.shadow && !isH()) {
            s.container.find('.swiper-cube-shadow').transition(duration);
          }
        }
      },
      coverflow: {
        setTranslate: function setTranslate() {
          var transform = s.translate;
          var center = isH() ? -transform + s.width / 2 : -transform + s.height / 2;
          var rotate = isH() ? s.params.coverflow.rotate : -s.params.coverflow.rotate;
          var translate = s.params.coverflow.depth;
          for (var i = 0,
              length = s.slides.length; i < length; i++) {
            var slide = s.slides.eq(i);
            var slideSize = s.slidesSizesGrid[i];
            var slideOffset = slide[0].swiperSlideOffset;
            var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;
            var rotateY = isH() ? rotate * offsetMultiplier : 0;
            var rotateX = isH() ? 0 : rotate * offsetMultiplier;
            var translateZ = -translate * Math.abs(offsetMultiplier);
            var translateY = isH() ? 0 : s.params.coverflow.stretch * offsetMultiplier;
            var translateX = isH() ? s.params.coverflow.stretch * offsetMultiplier : 0;
            if (Math.abs(translateX) < 0.001)
              translateX = 0;
            if (Math.abs(translateY) < 0.001)
              translateY = 0;
            if (Math.abs(translateZ) < 0.001)
              translateZ = 0;
            if (Math.abs(rotateY) < 0.001)
              rotateY = 0;
            if (Math.abs(rotateX) < 0.001)
              rotateX = 0;
            var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';
            slide.transform(slideTransform);
            slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;
            if (s.params.coverflow.slideShadows) {
              var shadowBefore = isH() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');
              var shadowAfter = isH() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');
              if (shadowBefore.length === 0) {
                shadowBefore = $('<div class="swiper-slide-shadow-' + (isH() ? 'left' : 'top') + '"></div>');
                slide.append(shadowBefore);
              }
              if (shadowAfter.length === 0) {
                shadowAfter = $('<div class="swiper-slide-shadow-' + (isH() ? 'right' : 'bottom') + '"></div>');
                slide.append(shadowAfter);
              }
              if (shadowBefore.length)
                shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;
              if (shadowAfter.length)
                shadowAfter[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;
            }
          }
          if (s.browser.ie) {
            var ws = s.wrapper[0].style;
            ws.perspectiveOrigin = center + 'px 50%';
          }
        },
        setTransition: function setTransition(duration) {
          s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);
        }
      }
    };
    s.lazy = {
      initialImageLoaded: false,
      loadImageInSlide: function loadImageInSlide(index, loadInDuplicate) {
        if (typeof index === 'undefined')
          return;
        if (typeof loadInDuplicate === 'undefined')
          loadInDuplicate = true;
        if (s.slides.length === 0)
          return;
        var slide = s.slides.eq(index);
        var img = slide.find('.swiper-lazy:not(.swiper-lazy-loaded):not(.swiper-lazy-loading)');
        if (slide.hasClass('swiper-lazy') && !slide.hasClass('swiper-lazy-loaded') && !slide.hasClass('swiper-lazy-loading')) {
          img.add(slide[0]);
        }
        if (img.length === 0)
          return;
        img.each(function() {
          var _img = $(this);
          _img.addClass('swiper-lazy-loading');
          var background = _img.attr('data-background');
          var src = _img.attr('data-src');
          s.loadImage(_img[0], src || background, false, function() {
            if (background) {
              _img.css('background-image', 'url(' + background + ')');
              _img.removeAttr('data-background');
            } else {
              _img.attr('src', src);
              _img.removeAttr('data-src');
            }
            _img.addClass('swiper-lazy-loaded').removeClass('swiper-lazy-loading');
            slide.find('.swiper-lazy-preloader, .preloader').remove();
            if (s.params.loop && loadInDuplicate) {
              var slideOriginalIndex = slide.attr('data-swiper-slide-index');
              if (slide.hasClass(s.params.slideDuplicateClass)) {
                var originalSlide = s.wrapper.children('[data-swiper-slide-index="' + slideOriginalIndex + '"]:not(.' + s.params.slideDuplicateClass + ')');
                s.lazy.loadImageInSlide(originalSlide.index(), false);
              } else {
                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index="' + slideOriginalIndex + '"]');
                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);
              }
            }
            s.emit('onLazyImageReady', s, slide[0], _img[0]);
          });
          s.emit('onLazyImageLoad', s, slide[0], _img[0]);
        });
      },
      load: function load() {
        var i;
        if (s.params.watchSlidesVisibility) {
          s.wrapper.children('.' + s.params.slideVisibleClass).each(function() {
            s.lazy.loadImageInSlide($(this).index());
          });
        } else {
          if (s.params.slidesPerView > 1) {
            for (i = s.activeIndex; i < s.activeIndex + s.params.slidesPerView; i++) {
              if (s.slides[i])
                s.lazy.loadImageInSlide(i);
            }
          } else {
            s.lazy.loadImageInSlide(s.activeIndex);
          }
        }
        if (s.params.lazyLoadingInPrevNext) {
          if (s.params.slidesPerView > 1) {
            for (i = s.activeIndex + s.params.slidesPerView; i < s.activeIndex + s.params.slidesPerView + s.params.slidesPerView; i++) {
              if (s.slides[i])
                s.lazy.loadImageInSlide(i);
            }
            for (i = s.activeIndex - s.params.slidesPerView; i < s.activeIndex; i++) {
              if (s.slides[i])
                s.lazy.loadImageInSlide(i);
            }
          } else {
            var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);
            if (nextSlide.length > 0)
              s.lazy.loadImageInSlide(nextSlide.index());
            var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);
            if (prevSlide.length > 0)
              s.lazy.loadImageInSlide(prevSlide.index());
          }
        }
      },
      onTransitionStart: function onTransitionStart() {
        if (s.params.lazyLoading) {
          if (s.params.lazyLoadingOnTransitionStart || !s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded) {
            s.lazy.load();
          }
        }
      },
      onTransitionEnd: function onTransitionEnd() {
        if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {
          s.lazy.load();
        }
      }
    };
    s.scrollbar = {
      set: function set() {
        if (!s.params.scrollbar)
          return;
        var sb = s.scrollbar;
        sb.track = $(s.params.scrollbar);
        sb.drag = sb.track.find('.swiper-scrollbar-drag');
        if (sb.drag.length === 0) {
          sb.drag = $('<div class="swiper-scrollbar-drag"></div>');
          sb.track.append(sb.drag);
        }
        sb.drag[0].style.width = '';
        sb.drag[0].style.height = '';
        sb.trackSize = isH() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;
        sb.divider = s.size / s.virtualSize;
        sb.moveDivider = sb.divider * (sb.trackSize / s.size);
        sb.dragSize = sb.trackSize * sb.divider;
        if (isH()) {
          sb.drag[0].style.width = sb.dragSize + 'px';
        } else {
          sb.drag[0].style.height = sb.dragSize + 'px';
        }
        if (sb.divider >= 1) {
          sb.track[0].style.display = 'none';
        } else {
          sb.track[0].style.display = '';
        }
        if (s.params.scrollbarHide) {
          sb.track[0].style.opacity = 0;
        }
      },
      setTranslate: function setTranslate() {
        if (!s.params.scrollbar)
          return;
        var diff;
        var sb = s.scrollbar;
        var translate = s.translate || 0;
        var newPos;
        var newSize = sb.dragSize;
        newPos = (sb.trackSize - sb.dragSize) * s.progress;
        if (s.rtl && isH()) {
          newPos = -newPos;
          if (newPos > 0) {
            newSize = sb.dragSize - newPos;
            newPos = 0;
          } else if (-newPos + sb.dragSize > sb.trackSize) {
            newSize = sb.trackSize + newPos;
          }
        } else {
          if (newPos < 0) {
            newSize = sb.dragSize + newPos;
            newPos = 0;
          } else if (newPos + sb.dragSize > sb.trackSize) {
            newSize = sb.trackSize - newPos;
          }
        }
        if (isH()) {
          if (s.support.transforms3d) {
            sb.drag.transform('translate3d(' + newPos + 'px, 0, 0)');
          } else {
            sb.drag.transform('translateX(' + newPos + 'px)');
          }
          sb.drag[0].style.width = newSize + 'px';
        } else {
          if (s.support.transforms3d) {
            sb.drag.transform('translate3d(0px, ' + newPos + 'px, 0)');
          } else {
            sb.drag.transform('translateY(' + newPos + 'px)');
          }
          sb.drag[0].style.height = newSize + 'px';
        }
        if (s.params.scrollbarHide) {
          clearTimeout(sb.timeout);
          sb.track[0].style.opacity = 1;
          sb.timeout = setTimeout(function() {
            sb.track[0].style.opacity = 0;
            sb.track.transition(400);
          }, 1000);
        }
      },
      setTransition: function setTransition(duration) {
        if (!s.params.scrollbar)
          return;
        s.scrollbar.drag.transition(duration);
      }
    };
    s.controller = {
      LinearSpline: function LinearSpline(x, y) {
        this.x = x;
        this.y = y;
        this.lastIndex = x.length - 1;
        var i1,
            i3;
        var l = this.x.length;
        this.interpolate = function(x2) {
          if (!x2)
            return 0;
          i3 = binarySearch(this.x, x2);
          i1 = i3 - 1;
          return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];
        };
        var binarySearch = (function() {
          var maxIndex,
              minIndex,
              guess;
          return function(array, val) {
            minIndex = -1;
            maxIndex = array.length;
            while (maxIndex - minIndex > 1)
              if (array[guess = maxIndex + minIndex >> 1] <= val) {
                minIndex = guess;
              } else {
                maxIndex = guess;
              }
            return maxIndex;
          };
        })();
      },
      getInterpolateFunction: function getInterpolateFunction(c) {
        if (!s.controller.spline)
          s.controller.spline = s.params.loop ? new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) : new s.controller.LinearSpline(s.snapGrid, c.snapGrid);
      },
      setTranslate: function setTranslate(translate, byController) {
        var controlled = s.params.control;
        var multiplier,
            controlledTranslate;
        function setControlledTranslate(c) {
          translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;
          if (s.params.controlBy === 'slide') {
            s.controller.getInterpolateFunction(c);
            controlledTranslate = -s.controller.spline.interpolate(-translate);
          }
          if (!controlledTranslate || s.params.controlBy === 'container') {
            multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());
            controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();
          }
          if (s.params.controlInverse) {
            controlledTranslate = c.maxTranslate() - controlledTranslate;
          }
          c.updateProgress(controlledTranslate);
          c.setWrapperTranslate(controlledTranslate, false, s);
          c.updateActiveIndex();
        }
        if (s.isArray(controlled)) {
          for (var i = 0; i < controlled.length; i++) {
            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
              setControlledTranslate(controlled[i]);
            }
          }
        } else if (controlled instanceof Swiper && byController !== controlled) {
          setControlledTranslate(controlled);
        }
      },
      setTransition: function setTransition(duration, byController) {
        var controlled = s.params.control;
        var i;
        function setControlledTransition(c) {
          c.setWrapperTransition(duration, s);
          if (duration !== 0) {
            c.onTransitionStart();
            c.wrapper.transitionEnd(function() {
              if (!controlled)
                return;
              if (c.params.loop && s.params.controlBy === 'slide') {
                c.fixLoop();
              }
              c.onTransitionEnd();
            });
          }
        }
        if (s.isArray(controlled)) {
          for (i = 0; i < controlled.length; i++) {
            if (controlled[i] !== byController && controlled[i] instanceof Swiper) {
              setControlledTransition(controlled[i]);
            }
          }
        } else if (controlled instanceof Swiper && byController !== controlled) {
          setControlledTransition(controlled);
        }
      }
    };
    s.hashnav = {
      init: function init() {
        if (!s.params.hashnav)
          return;
        s.hashnav.initialized = true;
        var hash = document.location.hash.replace('#', '');
        if (!hash)
          return;
        var speed = 0;
        for (var i = 0,
            length = s.slides.length; i < length; i++) {
          var slide = s.slides.eq(i);
          var slideHash = slide.attr('data-hash');
          if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {
            var index = slide.index();
            s.slideTo(index, speed, s.params.runCallbacksOnInit, true);
          }
        }
      },
      setHash: function setHash() {
        if (!s.hashnav.initialized || !s.params.hashnav)
          return;
        document.location.hash = s.slides.eq(s.activeIndex).attr('data-hash') || '';
      }
    };
    function handleKeyboard(e) {
      if (e.originalEvent)
        e = e.originalEvent;
      var kc = e.keyCode || e.charCode;
      if (!s.params.allowSwipeToNext && (isH() && kc === 39 || !isH() && kc === 40)) {
        return false;
      }
      if (!s.params.allowSwipeToPrev && (isH() && kc === 37 || !isH() && kc === 38)) {
        return false;
      }
      if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {
        return;
      }
      if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {
        return;
      }
      if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {
        var inView = false;
        if (s.container.parents('.swiper-slide').length > 0 && s.container.parents('.swiper-slide-active').length === 0) {
          return;
        }
        var windowScroll = {
          left: window.pageXOffset,
          top: window.pageYOffset
        };
        var windowWidth = window.innerWidth;
        var windowHeight = window.innerHeight;
        var swiperOffset = s.container.offset();
        if (s.rtl)
          swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;
        var swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + s.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + s.height], [swiperOffset.left + s.width, swiperOffset.top + s.height]];
        for (var i = 0; i < swiperCoord.length; i++) {
          var point = swiperCoord[i];
          if (point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth && point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight) {
            inView = true;
          }
        }
        if (!inView)
          return;
      }
      if (isH()) {
        if (kc === 37 || kc === 39) {
          if (e.preventDefault)
            e.preventDefault();
          else
            e.returnValue = false;
        }
        if (kc === 39 && !s.rtl || kc === 37 && s.rtl)
          s.slideNext();
        if (kc === 37 && !s.rtl || kc === 39 && s.rtl)
          s.slidePrev();
      } else {
        if (kc === 38 || kc === 40) {
          if (e.preventDefault)
            e.preventDefault();
          else
            e.returnValue = false;
        }
        if (kc === 40)
          s.slideNext();
        if (kc === 38)
          s.slidePrev();
      }
    }
    s.disableKeyboardControl = function() {
      $(document).off('keydown', handleKeyboard);
    };
    s.enableKeyboardControl = function() {
      $(document).on('keydown', handleKeyboard);
    };
    s.mousewheel = {
      event: false,
      lastScrollTime: new window.Date().getTime()
    };
    if (s.params.mousewheelControl) {
      try {
        new window.WheelEvent('wheel');
        s.mousewheel.event = 'wheel';
      } catch (e) {}
      if (!s.mousewheel.event && document.onmousewheel !== undefined) {
        s.mousewheel.event = 'mousewheel';
      }
      if (!s.mousewheel.event) {
        s.mousewheel.event = 'DOMMouseScroll';
      }
    }
    function handleMousewheel(e) {
      if (e.originalEvent)
        e = e.originalEvent;
      var we = s.mousewheel.event;
      var delta = 0;
      if (e.detail)
        delta = -e.detail;
      else if (we === 'mousewheel') {
        if (s.params.mousewheelForceToAxis) {
          if (isH()) {
            if (Math.abs(e.wheelDeltaX) > Math.abs(e.wheelDeltaY))
              delta = e.wheelDeltaX;
            else
              return;
          } else {
            if (Math.abs(e.wheelDeltaY) > Math.abs(e.wheelDeltaX))
              delta = e.wheelDeltaY;
            else
              return;
          }
        } else {
          delta = e.wheelDelta;
        }
      } else if (we === 'DOMMouseScroll')
        delta = -e.detail;
      else if (we === 'wheel') {
        if (s.params.mousewheelForceToAxis) {
          if (isH()) {
            if (Math.abs(e.deltaX) > Math.abs(e.deltaY))
              delta = -e.deltaX;
            else
              return;
          } else {
            if (Math.abs(e.deltaY) > Math.abs(e.deltaX))
              delta = -e.deltaY;
            else
              return;
          }
        } else {
          delta = Math.abs(e.deltaX) > Math.abs(e.deltaY) ? -e.deltaX : -e.deltaY;
        }
      }
      if (s.params.mousewheelInvert)
        delta = -delta;
      if (!s.params.freeMode) {
        if (new window.Date().getTime() - s.mousewheel.lastScrollTime > 60) {
          if (delta < 0) {
            if ((!s.isEnd || s.params.loop) && !s.animating)
              s.slideNext();
            else if (s.params.mousewheelReleaseOnEdges)
              return true;
          } else {
            if ((!s.isBeginning || s.params.loop) && !s.animating)
              s.slidePrev();
            else if (s.params.mousewheelReleaseOnEdges)
              return true;
          }
        }
        s.mousewheel.lastScrollTime = new window.Date().getTime();
      } else {
        var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;
        if (position > 0)
          position = 0;
        if (position < s.maxTranslate())
          position = s.maxTranslate();
        s.setWrapperTransition(0);
        s.setWrapperTranslate(position);
        s.updateProgress();
        s.updateActiveIndex();
        if (s.params.freeModeSticky) {
          clearTimeout(s.mousewheel.timeout);
          s.mousewheel.timeout = setTimeout(function() {
            s.slideReset();
          }, 300);
        }
        if (position === 0 || position === s.maxTranslate())
          return;
      }
      if (s.params.autoplay)
        s.stopAutoplay();
      if (e.preventDefault)
        e.preventDefault();
      else
        e.returnValue = false;
      return false;
    }
    s.disableMousewheelControl = function() {
      if (!s.mousewheel.event)
        return false;
      s.container.off(s.mousewheel.event, handleMousewheel);
      return true;
    };
    s.enableMousewheelControl = function() {
      if (!s.mousewheel.event)
        return false;
      s.container.on(s.mousewheel.event, handleMousewheel);
      return true;
    };
    function setParallaxTransform(el, progress) {
      el = $(el);
      var p,
          pX,
          pY;
      p = el.attr('data-swiper-parallax') || '0';
      pX = el.attr('data-swiper-parallax-x');
      pY = el.attr('data-swiper-parallax-y');
      if (pX || pY) {
        pX = pX || '0';
        pY = pY || '0';
      } else {
        if (isH()) {
          pX = p;
          pY = '0';
        } else {
          pY = p;
          pX = '0';
        }
      }
      if (pX.indexOf('%') >= 0) {
        pX = parseInt(pX, 10) * progress + '%';
      } else {
        pX = pX * progress + 'px';
      }
      if (pY.indexOf('%') >= 0) {
        pY = parseInt(pY, 10) * progress + '%';
      } else {
        pY = pY * progress + 'px';
      }
      el.transform('translate3d(' + pX + ', ' + pY + ',0px)');
    }
    s.parallax = {
      setTranslate: function setTranslate() {
        s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function() {
          setParallaxTransform(this, s.progress);
        });
        s.slides.each(function() {
          var slide = $(this);
          slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function() {
            var progress = Math.min(Math.max(slide[0].progress, -1), 1);
            setParallaxTransform(this, progress);
          });
        });
      },
      setTransition: function setTransition(duration) {
        if (typeof duration === 'undefined')
          duration = s.params.speed;
        s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function() {
          var el = $(this);
          var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;
          if (duration === 0)
            parallaxDuration = 0;
          el.transition(parallaxDuration);
        });
      }
    };
    s._plugins = [];
    for (var plugin in s.plugins) {
      var p = s.plugins[plugin](s, s.params[plugin]);
      if (p)
        s._plugins.push(p);
    }
    s.callPlugins = function(eventName) {
      for (var i = 0; i < s._plugins.length; i++) {
        if (eventName in s._plugins[i]) {
          s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        }
      }
    };
    function normalizeEventName(eventName) {
      if (eventName.indexOf('on') !== 0) {
        if (eventName[0] !== eventName[0].toUpperCase()) {
          eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);
        } else {
          eventName = 'on' + eventName;
        }
      }
      return eventName;
    }
    s.emitterEventListeners = {};
    s.emit = function(eventName) {
      if (s.params[eventName]) {
        s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      }
      var i;
      if (s.emitterEventListeners[eventName]) {
        for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
          s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
        }
      }
      if (s.callPlugins)
        s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
    };
    s.on = function(eventName, handler) {
      eventName = normalizeEventName(eventName);
      if (!s.emitterEventListeners[eventName])
        s.emitterEventListeners[eventName] = [];
      s.emitterEventListeners[eventName].push(handler);
      return s;
    };
    s.off = function(eventName, handler) {
      var i;
      eventName = normalizeEventName(eventName);
      if (typeof handler === 'undefined') {
        s.emitterEventListeners[eventName] = [];
        return s;
      }
      if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0)
        return;
      for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {
        if (s.emitterEventListeners[eventName][i] === handler)
          s.emitterEventListeners[eventName].splice(i, 1);
      }
      return s;
    };
    s.once = function(eventName, handler) {
      eventName = normalizeEventName(eventName);
      var _handler = function _handler() {
        handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
        s.off(eventName, _handler);
      };
      s.on(eventName, _handler);
      return s;
    };
    s.a11y = {
      makeFocusable: function makeFocusable($el) {
        $el.attr('tabIndex', '0');
        return $el;
      },
      addRole: function addRole($el, role) {
        $el.attr('role', role);
        return $el;
      },
      addLabel: function addLabel($el, label) {
        $el.attr('aria-label', label);
        return $el;
      },
      disable: function disable($el) {
        $el.attr('aria-disabled', true);
        return $el;
      },
      enable: function enable($el) {
        $el.attr('aria-disabled', false);
        return $el;
      },
      onEnterKey: function onEnterKey(event) {
        if (event.keyCode !== 13)
          return;
        if ($(event.target).is(s.params.nextButton)) {
          s.onClickNext(event);
          if (s.isEnd) {
            s.a11y.notify(s.params.lastSlideMessage);
          } else {
            s.a11y.notify(s.params.nextSlideMessage);
          }
        } else if ($(event.target).is(s.params.prevButton)) {
          s.onClickPrev(event);
          if (s.isBeginning) {
            s.a11y.notify(s.params.firstSlideMessage);
          } else {
            s.a11y.notify(s.params.prevSlideMessage);
          }
        }
        if ($(event.target).is('.' + s.params.bulletClass)) {
          $(event.target)[0].click();
        }
      },
      liveRegion: $('<span class="swiper-notification" aria-live="assertive" aria-atomic="true"></span>'),
      notify: function notify(message) {
        var notification = s.a11y.liveRegion;
        if (notification.length === 0)
          return;
        notification.html('');
        notification.html(message);
      },
      init: function init() {
        if (s.params.nextButton) {
          var nextButton = $(s.params.nextButton);
          s.a11y.makeFocusable(nextButton);
          s.a11y.addRole(nextButton, 'button');
          s.a11y.addLabel(nextButton, s.params.nextSlideMessage);
        }
        if (s.params.prevButton) {
          var prevButton = $(s.params.prevButton);
          s.a11y.makeFocusable(prevButton);
          s.a11y.addRole(prevButton, 'button');
          s.a11y.addLabel(prevButton, s.params.prevSlideMessage);
        }
        $(s.container).append(s.a11y.liveRegion);
      },
      initPagination: function initPagination() {
        if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {
          s.bullets.each(function() {
            var bullet = $(this);
            s.a11y.makeFocusable(bullet);
            s.a11y.addRole(bullet, 'button');
            s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));
          });
        }
      },
      destroy: function destroy() {
        if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0)
          s.a11y.liveRegion.remove();
      }
    };
    s.init = function() {
      if (s.params.loop)
        s.createLoop();
      s.updateContainerSize();
      s.updateSlidesSize();
      s.updatePagination();
      if (s.params.scrollbar && s.scrollbar) {
        s.scrollbar.set();
      }
      if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {
        if (!s.params.loop)
          s.updateProgress();
        s.effects[s.params.effect].setTranslate();
      }
      if (s.params.loop) {
        s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);
      } else {
        s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);
        if (s.params.initialSlide === 0) {
          if (s.parallax && s.params.parallax)
            s.parallax.setTranslate();
          if (s.lazy && s.params.lazyLoading) {
            s.lazy.load();
            s.lazy.initialImageLoaded = true;
          }
        }
      }
      s.attachEvents();
      if (s.params.observer && s.support.observer) {
        s.initObservers();
      }
      if (s.params.preloadImages && !s.params.lazyLoading) {
        s.preloadImages();
      }
      if (s.params.autoplay) {
        s.startAutoplay();
      }
      if (s.params.keyboardControl) {
        if (s.enableKeyboardControl)
          s.enableKeyboardControl();
      }
      if (s.params.mousewheelControl) {
        if (s.enableMousewheelControl)
          s.enableMousewheelControl();
      }
      if (s.params.hashnav) {
        if (s.hashnav)
          s.hashnav.init();
      }
      if (s.params.a11y && s.a11y)
        s.a11y.init();
      s.emit('onInit', s);
    };
    s.cleanupStyles = function() {
      s.container.removeClass(s.classNames.join(' ')).removeAttr('style');
      s.wrapper.removeAttr('style');
      if (s.slides && s.slides.length) {
        s.slides.removeClass([s.params.slideVisibleClass, s.params.slideActiveClass, s.params.slideNextClass, s.params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-column').removeAttr('data-swiper-row');
      }
      if (s.paginationContainer && s.paginationContainer.length) {
        s.paginationContainer.removeClass(s.params.paginationHiddenClass);
      }
      if (s.bullets && s.bullets.length) {
        s.bullets.removeClass(s.params.bulletActiveClass);
      }
      if (s.params.prevButton)
        $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);
      if (s.params.nextButton)
        $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);
      if (s.params.scrollbar && s.scrollbar) {
        if (s.scrollbar.track && s.scrollbar.track.length)
          s.scrollbar.track.removeAttr('style');
        if (s.scrollbar.drag && s.scrollbar.drag.length)
          s.scrollbar.drag.removeAttr('style');
      }
    };
    s.destroy = function(deleteInstance, cleanupStyles) {
      s.detachEvents();
      s.stopAutoplay();
      if (s.params.loop) {
        s.destroyLoop();
      }
      if (cleanupStyles) {
        s.cleanupStyles();
      }
      s.disconnectObservers();
      if (s.params.keyboardControl) {
        if (s.disableKeyboardControl)
          s.disableKeyboardControl();
      }
      if (s.params.mousewheelControl) {
        if (s.disableMousewheelControl)
          s.disableMousewheelControl();
      }
      if (s.params.a11y && s.a11y)
        s.a11y.destroy();
      s.emit('onDestroy');
      if (deleteInstance !== false)
        s = null;
    };
    s.init();
    return s;
  }
  ;
  Swiper.prototype = {
    isSafari: (function() {
      var ua = navigator.userAgent.toLowerCase();
      return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;
    })(),
    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),
    isArray: function isArray(arr) {
      return Object.prototype.toString.apply(arr) === '[object Array]';
    },
    browser: {
      ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,
      ieTouch: window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1 || window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1
    },
    device: (function() {
      var ua = navigator.userAgent;
      var android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
      var ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
      var ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
      var iphone = !ipad && ua.match(/(iPhone\sOS)\s([\d_]+)/);
      return {
        ios: ipad || iphone || ipod,
        android: android
      };
    })(),
    support: {
      touch: window.Modernizr && Modernizr.touch === true || (function() {
        return !!('ontouchstart' in window || window.DocumentTouch && document instanceof DocumentTouch);
      })(),
      transforms3d: window.Modernizr && Modernizr.csstransforms3d === true || (function() {
        var div = document.createElement('div').style;
        return 'webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div;
      })(),
      flexbox: (function() {
        var div = document.createElement('div').style;
        var styles = 'alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient'.split(' ');
        for (var i = 0; i < styles.length; i++) {
          if (styles[i] in div)
            return true;
        }
      })(),
      observer: (function() {
        return 'MutationObserver' in window || 'WebkitMutationObserver' in window;
      })()
    },
    plugins: {}
  };
  var Dom7 = (function() {
    var Dom7 = function Dom7(arr) {
      var _this = this,
          i = 0;
      for (i = 0; i < arr.length; i++) {
        _this[i] = arr[i];
      }
      _this.length = arr.length;
      return this;
    };
    var $ = function $(selector, context) {
      var arr = [],
          i = 0;
      if (selector && !context) {
        if (selector instanceof Dom7) {
          return selector;
        }
      }
      if (selector) {
        if (typeof selector === 'string') {
          var els,
              tempParent,
              html = selector.trim();
          if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {
            var toCreate = 'div';
            if (html.indexOf('<li') === 0)
              toCreate = 'ul';
            if (html.indexOf('<tr') === 0)
              toCreate = 'tbody';
            if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0)
              toCreate = 'tr';
            if (html.indexOf('<tbody') === 0)
              toCreate = 'table';
            if (html.indexOf('<option') === 0)
              toCreate = 'select';
            tempParent = document.createElement(toCreate);
            tempParent.innerHTML = selector;
            for (i = 0; i < tempParent.childNodes.length; i++) {
              arr.push(tempParent.childNodes[i]);
            }
          } else {
            if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {
              els = [document.getElementById(selector.split('#')[1])];
            } else {
              els = (context || document).querySelectorAll(selector);
            }
            for (i = 0; i < els.length; i++) {
              if (els[i])
                arr.push(els[i]);
            }
          }
        } else if (selector.nodeType || selector === window || selector === document) {
          arr.push(selector);
        } else if (selector.length > 0 && selector[0].nodeType) {
          for (i = 0; i < selector.length; i++) {
            arr.push(selector[i]);
          }
        }
      }
      return new Dom7(arr);
    };
    Dom7.prototype = {
      addClass: function addClass(className) {
        if (typeof className === 'undefined') {
          return this;
        }
        var classes = className.split(' ');
        for (var i = 0; i < classes.length; i++) {
          for (var j = 0; j < this.length; j++) {
            this[j].classList.add(classes[i]);
          }
        }
        return this;
      },
      removeClass: function removeClass(className) {
        var classes = className.split(' ');
        for (var i = 0; i < classes.length; i++) {
          for (var j = 0; j < this.length; j++) {
            this[j].classList.remove(classes[i]);
          }
        }
        return this;
      },
      hasClass: function hasClass(className) {
        if (!this[0])
          return false;
        else
          return this[0].classList.contains(className);
      },
      toggleClass: function toggleClass(className) {
        var classes = className.split(' ');
        for (var i = 0; i < classes.length; i++) {
          for (var j = 0; j < this.length; j++) {
            this[j].classList.toggle(classes[i]);
          }
        }
        return this;
      },
      attr: function attr(attrs, value) {
        if (arguments.length === 1 && typeof attrs === 'string') {
          if (this[0])
            return this[0].getAttribute(attrs);
          else
            return undefined;
        } else {
          for (var i = 0; i < this.length; i++) {
            if (arguments.length === 2) {
              this[i].setAttribute(attrs, value);
            } else {
              for (var attrName in attrs) {
                this[i][attrName] = attrs[attrName];
                this[i].setAttribute(attrName, attrs[attrName]);
              }
            }
          }
          return this;
        }
      },
      removeAttr: function removeAttr(attr) {
        for (var i = 0; i < this.length; i++) {
          this[i].removeAttribute(attr);
        }
        return this;
      },
      data: function data(key, value) {
        if (typeof value === 'undefined') {
          if (this[0]) {
            var dataKey = this[0].getAttribute('data-' + key);
            if (dataKey)
              return dataKey;
            else if (this[0].dom7ElementDataStorage && key in this[0].dom7ElementDataStorage)
              return this[0].dom7ElementDataStorage[key];
            else
              return undefined;
          } else
            return undefined;
        } else {
          for (var i = 0; i < this.length; i++) {
            var el = this[i];
            if (!el.dom7ElementDataStorage)
              el.dom7ElementDataStorage = {};
            el.dom7ElementDataStorage[key] = value;
          }
          return this;
        }
      },
      transform: function transform(_transform) {
        for (var i = 0; i < this.length; i++) {
          var elStyle = this[i].style;
          elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = _transform;
        }
        return this;
      },
      transition: function transition(duration) {
        if (typeof duration !== 'string') {
          duration = duration + 'ms';
        }
        for (var i = 0; i < this.length; i++) {
          var elStyle = this[i].style;
          elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
        }
        return this;
      },
      on: function on(eventName, targetSelector, listener, capture) {
        function handleLiveEvent(e) {
          var target = e.target;
          if ($(target).is(targetSelector))
            listener.call(target, e);
          else {
            var parents = $(target).parents();
            for (var k = 0; k < parents.length; k++) {
              if ($(parents[k]).is(targetSelector))
                listener.call(parents[k], e);
            }
          }
        }
        var events = eventName.split(' ');
        var i,
            j;
        for (i = 0; i < this.length; i++) {
          if (typeof targetSelector === 'function' || targetSelector === false) {
            if (typeof targetSelector === 'function') {
              listener = arguments[1];
              capture = arguments[2] || false;
            }
            for (j = 0; j < events.length; j++) {
              this[i].addEventListener(events[j], listener, capture);
            }
          } else {
            for (j = 0; j < events.length; j++) {
              if (!this[i].dom7LiveListeners)
                this[i].dom7LiveListeners = [];
              this[i].dom7LiveListeners.push({
                listener: listener,
                liveListener: handleLiveEvent
              });
              this[i].addEventListener(events[j], handleLiveEvent, capture);
            }
          }
        }
        return this;
      },
      off: function off(eventName, targetSelector, listener, capture) {
        var events = eventName.split(' ');
        for (var i = 0; i < events.length; i++) {
          for (var j = 0; j < this.length; j++) {
            if (typeof targetSelector === 'function' || targetSelector === false) {
              if (typeof targetSelector === 'function') {
                listener = arguments[1];
                capture = arguments[2] || false;
              }
              this[j].removeEventListener(events[i], listener, capture);
            } else {
              if (this[j].dom7LiveListeners) {
                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {
                  if (this[j].dom7LiveListeners[k].listener === listener) {
                    this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);
                  }
                }
              }
            }
          }
        }
        return this;
      },
      once: function once(eventName, targetSelector, listener, capture) {
        var dom = this;
        if (typeof targetSelector === 'function') {
          targetSelector = false;
          listener = arguments[1];
          capture = arguments[2];
        }
        function proxy(e) {
          listener(e);
          dom.off(eventName, targetSelector, proxy, capture);
        }
        dom.on(eventName, targetSelector, proxy, capture);
      },
      trigger: function trigger(eventName, eventData) {
        for (var i = 0; i < this.length; i++) {
          var evt;
          try {
            evt = new window.CustomEvent(eventName, {
              detail: eventData,
              bubbles: true,
              cancelable: true
            });
          } catch (e) {
            evt = document.createEvent('Event');
            evt.initEvent(eventName, true, true);
            evt.detail = eventData;
          }
          this[i].dispatchEvent(evt);
        }
        return this;
      },
      transitionEnd: function transitionEnd(callback) {
        var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
            i,
            j,
            dom = this;
        function fireCallBack(e) {
          if (e.target !== this)
            return;
          callback.call(this, e);
          for (i = 0; i < events.length; i++) {
            dom.off(events[i], fireCallBack);
          }
        }
        if (callback) {
          for (i = 0; i < events.length; i++) {
            dom.on(events[i], fireCallBack);
          }
        }
        return this;
      },
      width: function width() {
        if (this[0] === window) {
          return window.innerWidth;
        } else {
          if (this.length > 0) {
            return parseFloat(this.css('width'));
          } else {
            return null;
          }
        }
      },
      outerWidth: function outerWidth(includeMargins) {
        if (this.length > 0) {
          if (includeMargins)
            return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));
          else
            return this[0].offsetWidth;
        } else
          return null;
      },
      height: function height() {
        if (this[0] === window) {
          return window.innerHeight;
        } else {
          if (this.length > 0) {
            return parseFloat(this.css('height'));
          } else {
            return null;
          }
        }
      },
      outerHeight: function outerHeight(includeMargins) {
        if (this.length > 0) {
          if (includeMargins)
            return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));
          else
            return this[0].offsetHeight;
        } else
          return null;
      },
      offset: function offset() {
        if (this.length > 0) {
          var el = this[0];
          var box = el.getBoundingClientRect();
          var body = document.body;
          var clientTop = el.clientTop || body.clientTop || 0;
          var clientLeft = el.clientLeft || body.clientLeft || 0;
          var scrollTop = window.pageYOffset || el.scrollTop;
          var scrollLeft = window.pageXOffset || el.scrollLeft;
          return {
            top: box.top + scrollTop - clientTop,
            left: box.left + scrollLeft - clientLeft
          };
        } else {
          return null;
        }
      },
      css: function css(props, value) {
        var i;
        if (arguments.length === 1) {
          if (typeof props === 'string') {
            if (this[0])
              return window.getComputedStyle(this[0], null).getPropertyValue(props);
          } else {
            for (i = 0; i < this.length; i++) {
              for (var prop in props) {
                this[i].style[prop] = props[prop];
              }
            }
            return this;
          }
        }
        if (arguments.length === 2 && typeof props === 'string') {
          for (i = 0; i < this.length; i++) {
            this[i].style[props] = value;
          }
          return this;
        }
        return this;
      },
      each: function each(callback) {
        for (var i = 0; i < this.length; i++) {
          callback.call(this[i], i, this[i]);
        }
        return this;
      },
      html: function html(_html) {
        if (typeof _html === 'undefined') {
          return this[0] ? this[0].innerHTML : undefined;
        } else {
          for (var i = 0; i < this.length; i++) {
            this[i].innerHTML = _html;
          }
          return this;
        }
      },
      is: function is(selector) {
        if (!this[0])
          return false;
        var compareWith,
            i;
        if (typeof selector === 'string') {
          var el = this[0];
          if (el === document)
            return selector === document;
          if (el === window)
            return selector === window;
          if (el.matches)
            return el.matches(selector);
          else if (el.webkitMatchesSelector)
            return el.webkitMatchesSelector(selector);
          else if (el.mozMatchesSelector)
            return el.mozMatchesSelector(selector);
          else if (el.msMatchesSelector)
            return el.msMatchesSelector(selector);
          else {
            compareWith = $(selector);
            for (i = 0; i < compareWith.length; i++) {
              if (compareWith[i] === this[0])
                return true;
            }
            return false;
          }
        } else if (selector === document)
          return this[0] === document;
        else if (selector === window)
          return this[0] === window;
        else {
          if (selector.nodeType || selector instanceof Dom7) {
            compareWith = selector.nodeType ? [selector] : selector;
            for (i = 0; i < compareWith.length; i++) {
              if (compareWith[i] === this[0])
                return true;
            }
            return false;
          }
          return false;
        }
      },
      index: function index() {
        if (this[0]) {
          var child = this[0];
          var i = 0;
          while ((child = child.previousSibling) !== null) {
            if (child.nodeType === 1)
              i++;
          }
          return i;
        } else
          return undefined;
      },
      eq: function eq(index) {
        if (typeof index === 'undefined')
          return this;
        var length = this.length;
        var returnIndex;
        if (index > length - 1) {
          return new Dom7([]);
        }
        if (index < 0) {
          returnIndex = length + index;
          if (returnIndex < 0)
            return new Dom7([]);
          else
            return new Dom7([this[returnIndex]]);
        }
        return new Dom7([this[index]]);
      },
      append: function append(newChild) {
        var i,
            j;
        for (i = 0; i < this.length; i++) {
          if (typeof newChild === 'string') {
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = newChild;
            while (tempDiv.firstChild) {
              this[i].appendChild(tempDiv.firstChild);
            }
          } else if (newChild instanceof Dom7) {
            for (j = 0; j < newChild.length; j++) {
              this[i].appendChild(newChild[j]);
            }
          } else {
            this[i].appendChild(newChild);
          }
        }
        return this;
      },
      prepend: function prepend(newChild) {
        var i,
            j;
        for (i = 0; i < this.length; i++) {
          if (typeof newChild === 'string') {
            var tempDiv = document.createElement('div');
            tempDiv.innerHTML = newChild;
            for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {
              this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);
            }
          } else if (newChild instanceof Dom7) {
            for (j = 0; j < newChild.length; j++) {
              this[i].insertBefore(newChild[j], this[i].childNodes[0]);
            }
          } else {
            this[i].insertBefore(newChild, this[i].childNodes[0]);
          }
        }
        return this;
      },
      insertBefore: function insertBefore(selector) {
        var before = $(selector);
        for (var i = 0; i < this.length; i++) {
          if (before.length === 1) {
            before[0].parentNode.insertBefore(this[i], before[0]);
          } else if (before.length > 1) {
            for (var j = 0; j < before.length; j++) {
              before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);
            }
          }
        }
      },
      insertAfter: function insertAfter(selector) {
        var after = $(selector);
        for (var i = 0; i < this.length; i++) {
          if (after.length === 1) {
            after[0].parentNode.insertBefore(this[i], after[0].nextSibling);
          } else if (after.length > 1) {
            for (var j = 0; j < after.length; j++) {
              after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);
            }
          }
        }
      },
      next: function next(selector) {
        if (this.length > 0) {
          if (selector) {
            if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector))
              return new Dom7([this[0].nextElementSibling]);
            else
              return new Dom7([]);
          } else {
            if (this[0].nextElementSibling)
              return new Dom7([this[0].nextElementSibling]);
            else
              return new Dom7([]);
          }
        } else
          return new Dom7([]);
      },
      nextAll: function nextAll(selector) {
        var nextEls = [];
        var el = this[0];
        if (!el)
          return new Dom7([]);
        while (el.nextElementSibling) {
          var next = el.nextElementSibling;
          if (selector) {
            if ($(next).is(selector))
              nextEls.push(next);
          } else
            nextEls.push(next);
          el = next;
        }
        return new Dom7(nextEls);
      },
      prev: function prev(selector) {
        if (this.length > 0) {
          if (selector) {
            if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector))
              return new Dom7([this[0].previousElementSibling]);
            else
              return new Dom7([]);
          } else {
            if (this[0].previousElementSibling)
              return new Dom7([this[0].previousElementSibling]);
            else
              return new Dom7([]);
          }
        } else
          return new Dom7([]);
      },
      prevAll: function prevAll(selector) {
        var prevEls = [];
        var el = this[0];
        if (!el)
          return new Dom7([]);
        while (el.previousElementSibling) {
          var prev = el.previousElementSibling;
          if (selector) {
            if ($(prev).is(selector))
              prevEls.push(prev);
          } else
            prevEls.push(prev);
          el = prev;
        }
        return new Dom7(prevEls);
      },
      parent: function parent(selector) {
        var parents = [];
        for (var i = 0; i < this.length; i++) {
          if (selector) {
            if ($(this[i].parentNode).is(selector))
              parents.push(this[i].parentNode);
          } else {
            parents.push(this[i].parentNode);
          }
        }
        return $($.unique(parents));
      },
      parents: function parents(selector) {
        var parents = [];
        for (var i = 0; i < this.length; i++) {
          var parent = this[i].parentNode;
          while (parent) {
            if (selector) {
              if ($(parent).is(selector))
                parents.push(parent);
            } else {
              parents.push(parent);
            }
            parent = parent.parentNode;
          }
        }
        return $($.unique(parents));
      },
      find: function find(selector) {
        var foundElements = [];
        for (var i = 0; i < this.length; i++) {
          var found = this[i].querySelectorAll(selector);
          for (var j = 0; j < found.length; j++) {
            foundElements.push(found[j]);
          }
        }
        return new Dom7(foundElements);
      },
      children: function children(selector) {
        var children = [];
        for (var i = 0; i < this.length; i++) {
          var childNodes = this[i].childNodes;
          for (var j = 0; j < childNodes.length; j++) {
            if (!selector) {
              if (childNodes[j].nodeType === 1)
                children.push(childNodes[j]);
            } else {
              if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector))
                children.push(childNodes[j]);
            }
          }
        }
        return new Dom7($.unique(children));
      },
      remove: function remove() {
        for (var i = 0; i < this.length; i++) {
          if (this[i].parentNode)
            this[i].parentNode.removeChild(this[i]);
        }
        return this;
      },
      add: function add() {
        var dom = this;
        var i,
            j;
        for (i = 0; i < arguments.length; i++) {
          var toAdd = $(arguments[i]);
          for (j = 0; j < toAdd.length; j++) {
            dom[dom.length] = toAdd[j];
            dom.length++;
          }
        }
        return dom;
      }
    };
    $.fn = Dom7.prototype;
    $.unique = function(arr) {
      var unique = [];
      for (var i = 0; i < arr.length; i++) {
        if (unique.indexOf(arr[i]) === -1)
          unique.push(arr[i]);
      }
      return unique;
    };
    return $;
  })();
  var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];
  for (var i = 0; i < swiperDomPlugins.length; i++) {
    if (window[swiperDomPlugins[i]]) {
      addLibraryPlugin(window[swiperDomPlugins[i]]);
    }
  }
  var domLib;
  if (typeof Dom7 === 'undefined') {
    domLib = window.Dom7 || window.Zepto || window.jQuery;
  } else {
    domLib = Dom7;
  }
  function addLibraryPlugin(lib) {
    lib.fn.swiper = function(params) {
      var firstInstance;
      lib(this).each(function() {
        var s = new Swiper(this, params);
        if (!firstInstance)
          firstInstance = s;
      });
      return firstInstance;
    };
  }
  if (domLib) {
    if (!('transitionEnd' in domLib.fn)) {
      domLib.fn.transitionEnd = function(callback) {
        var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],
            i,
            j,
            dom = this;
        function fireCallBack(e) {
          if (e.target !== this)
            return;
          callback.call(this, e);
          for (i = 0; i < events.length; i++) {
            dom.off(events[i], fireCallBack);
          }
        }
        if (callback) {
          for (i = 0; i < events.length; i++) {
            dom.on(events[i], fireCallBack);
          }
        }
        return this;
      };
    }
    if (!('transform' in domLib.fn)) {
      domLib.fn.transform = function(transform) {
        for (var i = 0; i < this.length; i++) {
          var elStyle = this[i].style;
          elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;
        }
        return this;
      };
    }
    if (!('transition' in domLib.fn)) {
      domLib.fn.transition = function(duration) {
        if (typeof duration !== 'string') {
          duration = duration + 'ms';
        }
        for (var i = 0; i < this.length; i++) {
          var elStyle = this[i].style;
          elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;
        }
        return this;
      };
    }
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/slides", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/swiper-widget"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _ionicAnimationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var _ionicGesturesGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/gesture');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var util = _interopRequireWildcard(_ionicUtil);
  var _swiperWidget = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/swiper-widget');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Slides = (function(_Ion) {
    _inherits(Slides, _Ion);
    function Slides(elementRef, config) {
      var _this = this;
      _classCallCheck(this, Slides);
      _get(Object.getPrototypeOf(Slides.prototype), "constructor", this).call(this, elementRef, config);
      this.rapidUpdate = util.debounce(function() {
        _this.update();
      }, 10);
    }
    _createClass(Slides, [{
      key: "onInit",
      value: function onInit() {
        var _this2 = this;
        if (!this.options) {
          this.options = {};
        }
        this.showPager = util.isTrueProperty(this.pager);
        var options = util.defaults({
          pagination: '.swiper-pagination',
          paginationClickable: true,
          lazyLoading: true,
          preloadImages: false
        }, this.options);
        options.onTap = function(swiper, e) {
          _this2.onTap(swiper, e);
          return _this2.options.onTap && _this2.options.onTap(swiper, e);
        };
        options.onClick = function(swiper, e) {
          _this2.onClick(swiper, e);
          return _this2.options.onClick && _this2.options.onClick(swiper, e);
        };
        options.onDoubleTap = function(swiper, e) {
          _this2.onDoubleTap(swiper, e);
          return _this2.options.onDoubleTap && _this2.options.onDoubleTap(swiper, e);
        };
        options.onTransitionStart = function(swiper, e) {
          _this2.onTransitionStart(swiper, e);
          return _this2.options.onTransitionStart && _this2.options.onTransitionStart(swiper, e);
        };
        options.onTransitionEnd = function(swiper, e) {
          _this2.onTransitionEnd(swiper, e);
          return _this2.options.onTransitionEnd && _this2.options.onTransitionEnd(swiper, e);
        };
        options.onSlideChangeStart = function(swiper) {
          return _this2.options.onSlideChangeStart && _this2.options.onSlideChangeStart(swiper);
        };
        options.onSlideChangeEnd = function(swiper) {
          return _this2.options.onSlideChangeEnd && _this2.options.onSlideChangeEnd(swiper);
        };
        options.onLazyImageLoad = function(swiper, slide, img) {
          return _this2.options.onLazyImageLoad && _this2.options.onLazyImageLoad(swiper, slide, img);
        };
        options.onLazyImageReady = function(swiper, slide, img) {
          return _this2.options.onLazyImageReady && _this2.options.onLazyImageReady(swiper, slide, img);
        };
        var swiper = new _swiperWidget.Swiper(this.getNativeElement().children[0], options);
        this.slider = swiper;
      }
    }, {
      key: "onTap",
      value: function onTap(swiper, e) {}
    }, {
      key: "onClick",
      value: function onClick(swiper, e) {}
    }, {
      key: "onDoubleTap",
      value: function onDoubleTap(swiper, e) {
        this.toggleZoom(swiper, e);
      }
    }, {
      key: "onLazyImageLoad",
      value: function onLazyImageLoad(swiper, slide, img) {}
    }, {
      key: "onLazyImageReady",
      value: function onLazyImageReady(swiper, slide, img) {}
    }, {
      key: "initZoom",
      value: function initZoom() {
        var _this3 = this;
        this.zoomDuration = this.zoomDuration || 230;
        this.maxScale = this.zoomMax || 3;
        this.zoomElement = this.getNativeElement().children[0].children[0];
        this.zoomElement && this.zoomElement.classList.add('ion-scroll-zoom');
        this.zoomGesture = new _ionicGesturesGesture.Gesture(this.zoomElement);
        this.zoomGesture.listen();
        this.scale = 1;
        this.zoomLastPosX = 0;
        this.zoomLastPosY = 0;
        var last_scale = undefined,
            startX = undefined,
            startY = undefined,
            posX = 0,
            posY = 0,
            zoomRect = undefined;
        this.viewportWidth = this.getNativeElement().offsetWidth;
        this.viewportHeight = this.getNativeElement().offsetHeight;
        this.zoomElement.addEventListener('touchstart', function(e) {
          _this3.onTouchStart(e);
        });
        this.zoomElement.addEventListener('touchmove', function(e) {
          _this3.onTouchMove(e);
        });
        this.zoomElement.addEventListener('touchend', function(e) {
          _this3.onTouchEnd(e);
        });
        this.zoomGesture.on('pinchstart', function(e) {
          last_scale = _this3.scale;
          console.log('Last scale', e.scale);
        });
        this.zoomGesture.on('pinch', function(e) {
          _this3.scale = Math.max(1, Math.min(last_scale * e.scale, 10));
          console.log('Scaling', _this3.scale);
          _this3.zoomElement.style[_utilDom.CSS.transform] = 'scale(' + _this3.scale + ')';
          zoomRect = _this3.zoomElement.getBoundingClientRect();
        });
        this.zoomGesture.on('pinchend', function(e) {
          if (_this3.scale > _this3.maxScale) {
            var za = new _ionicAnimationsAnimation.Animation(_this3.zoomElement).duration(_this3.zoomDuration).easing('linear').from('scale', _this3.scale).to('scale', _this3.maxScale);
            za.play();
            _this3.scale = _this3.maxScale;
          }
        });
      }
    }, {
      key: "resetZoom",
      value: function resetZoom() {
        if (this.zoomElement) {
          this.zoomElement.parentElement.style[_utilDom.CSS.transform] = '';
          this.zoomElement.style[_utilDom.CSS.transform] = 'scale(1)';
        }
        this.scale = 1;
        this.zoomLastPosX = 0;
        this.zoomLastPosY = 0;
      }
    }, {
      key: "toggleZoom",
      value: function toggleZoom(swiper, e) {
        console.log('Try toggle zoom');
        if (!this.enableZoom) {
          return;
        }
        console.log('Toggling zoom', e);
        var zi = new _ionicAnimationsAnimation.Animation(this.touch.target.children[0]).duration(this.zoomDuration).easing('linear').fill('none');
        var zw = new _ionicAnimationsAnimation.Animation(this.touch.target.children[0]).duration(this.zoomDuration).easing('linear');
        var za = new _ionicAnimationsAnimation.Animation();
        za.fill('none');
        za.add(zi);
        if (this.scale > 1) {
          zi.from('scale', this.scale);
          zi.to('scale', 1);
          za.play();
          this.scale = 1;
        } else {
          zi.from('scale', this.scale);
          zi.to('scale', this.maxScale);
          za.play();
          this.scale = this.maxScale;
        }
      }
    }, {
      key: "onTransitionStart",
      value: function onTransitionStart(swiper) {}
    }, {
      key: "onTransitionEnd",
      value: function onTransitionEnd(swiper) {}
    }, {
      key: "onTouchStart",
      value: function onTouchStart(e) {
        console.log('Touch start', e);
        var target = _ionicUtil.dom.closest(e.target, '.slide').children[0].children[0];
        this.touch = {
          startX: e.touches[0].clientX,
          startY: e.touches[0].clientY,
          deltaX: 0,
          deltaY: 0,
          lastX: 0,
          lastY: 0,
          target: target.parentElement,
          zoomable: target,
          zoomableWidth: target.offsetWidth,
          zoomableHeight: target.offsetHeight
        };
        console.log('Target', this.touch.target);
      }
    }, {
      key: "onTouchMove",
      value: function onTouchMove(e) {
        this.touch.deltaX = e.touches[0].clientX - this.touch.startX;
        this.touch.deltaY = e.touches[0].clientY - this.touch.startY;
        var zoomableScaledWidth = this.touch.zoomableWidth * this.scale;
        var zoomableScaledHeight = this.touch.zoomableHeight * this.scale;
        var x1 = Math.min(this.viewportWidth / 2 - zoomableScaledWidth / 2, 0);
        var x2 = -x1;
        var y1 = Math.min(this.viewportHeight / 2 - zoomableScaledHeight / 2, 0);
        var y2 = -y1;
        console.log('BOUNDS', x1, x2, y1, y2);
        if (this.scale <= 1) {
          return;
        }
        console.log('PAN', e);
        this.touch.x = this.touch.deltaX + this.touch.lastX;
        this.touch.y = this.touch.deltaY + this.touch.lastY;
        console.log(this.touch.x, this.touch.y);
        if (this.touch.x < x1) {
          console.log('OUT ON LEFT');
        }
        if (this.touch.x > x2) {
          console.log('OUT ON RIGHT');
        }
        if (this.touch.x > this.viewportWidth) {} else if (-this.touch.x > this.viewportWidth) {} else {
          console.log('TRANSFORM', this.touch.x, this.touch.y, this.touch.target);
          this.touch.target.style[_utilDom.CSS.transform] = 'translateX(' + this.touch.x + 'px) translateY(' + this.touch.y + 'px)';
          e.preventDefault();
          e.stopPropagation();
          return false;
        }
      }
    }, {
      key: "onTouchEnd",
      value: function onTouchEnd(e) {
        console.log('PANEND', e);
        if (this.scale > 1) {
          if (Math.abs(this.touch.x) > this.viewportWidth) {
            posX = posX > 0 ? this.viewportWidth - 1 : -(this.viewportWidth - 1);
            console.log('Setting on posx', this.touch.x);
          }
          this.touch.lastX = this.touch.x;
          this.touch.lastY = this.touch.y;
        }
      }
    }, {
      key: "update",
      value: function update() {
        var _this4 = this;
        setTimeout(function() {
          _this4.slider.update();
          if (_this4.slider.slides.length > 10) {
            _this4.showPager = false;
          }
        });
      }
    }, {
      key: "next",
      value: function next() {
        this.slider.slideNext();
      }
    }, {
      key: "prev",
      value: function prev() {
        this.slider.slidePrev();
      }
    }, {
      key: "getIndex",
      value: function getIndex() {
        return this.slider.activeIndex;
      }
    }, {
      key: "getNumSlides",
      value: function getNumSlides() {
        return this.slider.slides.length;
      }
    }, {
      key: "isAtEnd",
      value: function isAtEnd() {
        return this.slider.isEnd;
      }
    }, {
      key: "isAtBeginning",
      value: function isAtBeginning() {
        return this.slider.isBeginning;
      }
    }, {
      key: "getSliderWidget",
      value: function getSliderWidget() {
        return this.slider;
      }
    }]);
    return Slides;
  })(_ion.Ion);
  exports.Slides = Slides;
  exports.Slides = Slides = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-slides',
    inputs: ['loop', 'index', 'bounce', 'pager', 'options', 'zoom', 'zoomDuration', 'zoomMax'],
    template: '<div class="swiper-container">' + '<div class="swiper-wrapper">' + '<ng-content></ng-content>' + '</div>' + '<div [class.hide]="!showPager" class="swiper-pagination"></div>' + '</div>',
    directives: [_angular2Angular2.NgClass]
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object])], Slides);
  var Slide = function Slide(elementRef, slides) {
    _classCallCheck(this, Slide);
    this.ele = elementRef.nativeElement;
    this.ele.classList.add('swiper-slide');
    slides.rapidUpdate();
  };
  exports.Slide = Slide;
  exports.Slide = Slide = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-slide',
    inputs: ['zoom'],
    template: '<div class="slide-zoom"><ng-content></ng-content></div>'
  }), __param(1, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object, Slides])], Slide);
  var SlideLazy = function SlideLazy(elementRef) {
    _classCallCheck(this, SlideLazy);
    elementRef.getNativeElement().classList.add('swiper-lazy');
  };
  exports.SlideLazy = SlideLazy;
  exports.SlideLazy = SlideLazy = __decorate([(0, _angular2Angular2.Directive)({selector: 'slide-lazy'}), __metadata('design:paramtypes', [typeof(_d = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _d || Object])], SlideLazy);
  var _a,
      _b,
      _c,
      _d;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/pull-to-refresh", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _contentContent = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var _ionicUtilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Refresher = (function() {
    function Refresher(content, element) {
      _classCallCheck(this, Refresher);
      this.ele = element.nativeElement;
      this.ele.classList.add('content');
      this.content = content;
      this.refresh = new _angular2Angular2.EventEmitter('refresh');
      this.starting = new _angular2Angular2.EventEmitter('starting');
      this.pulling = new _angular2Angular2.EventEmitter('pulling');
    }
    _createClass(Refresher, [{
      key: "onInit",
      value: function onInit() {
        this.initEvents();
      }
    }, {
      key: "initEvents",
      value: function initEvents() {
        var sp = this.content.getNativeElement();
        var sc = this.content.scrollElement;
        this.isDragging = false;
        this.isOverscrolling = false;
        this.dragOffset = 0;
        this.lastOverscroll = 0;
        this.ptrThreshold = 60;
        this.activated = false;
        this.scrollTime = 500;
        this.startY = null;
        this.deltaY = null;
        this.canOverscroll = true;
        this.scrollHost = sp;
        this.scrollChild = sc;
        util.defaults(this, {
          pullingIcon: 'ion-android-arrow-down',
          refreshingIcon: 'ion-ionic'
        });
        this.showSpinner = !util.isDefined(this.refreshingIcon) && this.spinner != 'none';
        this.showIcon = util.isDefined(this.refreshingIcon);
        this._touchMoveListener = this._handleTouchMov.bind(this);
        this._touchEndListener = this._handleTouchEnd.bind(this);
        this._handleScrollListener = this._handleScroll.bind(this);
        sc.addEventListener('touchmove', this._touchMoveListener);
        sc.addEventListener('touchend', this._touchEndListener);
        sc.addEventListener('scroll', this._handleScrollListener);
      }
    }, {
      key: "onDehydrate",
      value: function onDehydrate() {
        console.log('DEHYDRATION');
        var sc = this.content.scrollElement;
        sc.removeEventListener('touchmove', this._touchMoveListener);
        sc.removeEventListener('touchend', this._touchEndListener);
        sc.removeEventListener('scroll', this._handleScrollListener);
      }
    }, {
      key: "overscroll",
      value: function overscroll(val) {
        this.scrollChild.style[_ionicUtilDom.CSS.transform] = 'translateY(' + val + 'px)';
        this.lastOverscroll = val;
      }
    }, {
      key: "nativescroll",
      value: function nativescroll(target, newScrollTop) {
        target.scrollTop = newScrollTop;
        var e = document.createEvent("UIEvents");
        e.initUIEvent("scroll", true, true, window, 1);
        target.dispatchEvent(e);
      }
    }, {
      key: "setScrollLock",
      value: function setScrollLock(enabled) {
        var _this = this;
        if (enabled) {
          (0, _ionicUtilDom.raf)(function() {
            _this.scrollChild.classList.add('overscroll');
            _this.show();
          });
        } else {
          (0, _ionicUtilDom.raf)(function() {
            _this.scrollChild.classList.remove('overscroll');
            _this.hide();
            _this.deactivate();
          });
        }
      }
    }, {
      key: "activate",
      value: function activate() {
        this.isActive = true;
      }
    }, {
      key: "deactivate",
      value: function deactivate() {
        var _this2 = this;
        setTimeout(function() {
          _this2.isActive = false;
          _this2.isRefreshing = false;
          _this2.isRefreshingTail = false;
          if (_this2.activated)
            _this2.activated = false;
        }, 150);
      }
    }, {
      key: "start",
      value: function start() {
        this.isRefreshing = true;
        this.refresh.next(this);
      }
    }, {
      key: "show",
      value: function show() {
        this.ele.classList.remove('invisible');
      }
    }, {
      key: "hide",
      value: function hide() {
        this.ele.classList.add('invisible');
      }
    }, {
      key: "tail",
      value: function tail() {
        this.ele.classList.add('refreshing-tail');
      }
    }, {
      key: "complete",
      value: function complete() {
        var _this3 = this;
        setTimeout(function() {
          (0, _ionicUtilDom.raf)(_this3.tail.bind(_this3));
          _this3.scrollTo(0, _this3.scrollTime, _this3.deactivate.bind(_this3));
          setTimeout(function() {
            if (_this3.isOverscrolling) {
              _this3.isOverscrolling = false;
              _this3.setScrollLock(false);
            }
          }, _this3.scrollTime);
        }, this.scrollTime);
      }
    }, {
      key: "scrollTo",
      value: function scrollTo(Y, duration, callback) {
        var start = Date.now(),
            from = this.lastOverscroll;
        if (from === Y) {
          callback();
          return;
        }
        function easeOutCubic(t) {
          return --t * t * t + 1;
        }
        function scroll() {
          var currentTime = Date.now(),
              time = Math.min(1, (currentTime - start) / duration),
              easedT = easeOutCubic(time);
          this.overscroll(parseInt(easedT * (Y - from) + from, 10));
          if (time < 1) {
            (0, _ionicUtilDom.raf)(scroll.bind(this));
          } else {
            if (Y < 5 && Y > -5) {
              this.isOverscrolling = false;
              this.setScrollLock(false);
            }
            callback && callback();
          }
        }
        (0, _ionicUtilDom.raf)(scroll.bind(this));
      }
    }, {
      key: "_handleTouchMove",
      value: function _handleTouchMove(e) {
        if (!this.canOverscroll || e.touches.length > 1) {
          return;
        }
        if (this.startY === null) {
          this.startY = parseInt(e.touches[0].screenY, 10);
        }
        this.deltaY = parseInt(e.touches[0].screenY, 10) - this.startY;
        if (this.deltaY - this.dragOffset <= 0 || this.scrollHost.scrollTop !== 0) {
          if (this.isOverscrolling) {
            this.isOverscrolling = false;
            this.setScrollLock(false);
          }
          if (this.isDragging) {
            this.nativescroll(this.scrollHost, parseInt(this.deltaY - this.dragOffset, 10) * -1);
          }
          if (this.lastOverscroll !== 0) {
            this.overscroll(0);
          }
          return;
        } else if (this.deltaY > 0 && this.scrollHost.scrollTop === 0 && !this.isOverscrolling) {
          this.dragOffset = this.deltaY;
        }
        e.preventDefault();
        if (!this.isOverscrolling) {
          this.isOverscrolling = true;
          this.setScrollLock(true);
        }
        this.isDragging = true;
        this.overscroll(parseInt((this.deltaY - this.dragOffset) / 3, 10));
        this.pulling.next(this.lastOverscroll);
        if (!this.activated && this.lastOverscroll > this.ptrThreshold) {
          this.activated = true;
          (0, _ionicUtilDom.raf)(this.activate.bind(this));
        } else if (this.activated && this.lastOverscroll < this.ptrThreshold) {
          this.activated = false;
          (0, _ionicUtilDom.raf)(this.deactivate.bind(this));
        }
      }
    }, {
      key: "_handleTouchEnd",
      value: function _handleTouchEnd(e) {
        console.log('TOUCHEND', e);
        if (!this.canOverscroll && !this.isDragging) {
          return;
        }
        this.startY = null;
        if (!this.isDragging) {
          this.dragOffset = 0;
          this.isOverscrolling = false;
          this.setScrollLock(false);
        } else {
          this.isDragging = false;
          this.dragOffset = 0;
          if (this.lastOverscroll > this.ptrThreshold) {
            this.start();
            this.scrollTo(this.ptrThreshold, this.scrollTime);
          } else {
            this.scrollTo(0, this.scrollTime, this.deactivate.bind(this));
            this.isOverscrolling = false;
          }
        }
      }
    }, {
      key: "_handleScroll",
      value: function _handleScroll(e) {
        console.log('SCROLL', e.target.scrollTop);
      }
    }]);
    return Refresher;
  })();
  exports.Refresher = Refresher;
  exports.Refresher = Refresher = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-refresher',
    inputs: ['pullingIcon', 'pullingText', 'refreshingIcon', 'refreshingText', 'spinner', 'disablePullingRotation'],
    outputs: ['refresh', 'starting', 'pulling'],
    host: {
      '[class.active]': 'isActive',
      '[class.refreshing]': 'isRefreshing',
      '[class.refreshingTail]': 'isRefreshingTail'
    },
    template: '<div class="refresher-content" [class.refresher-with-text]="pullingText || refreshingText">' + '<div class="icon-pulling">' + '<i class="icon" [ng-class]="pullingIcon"></i>' + '</div>' + '<div class="text-pulling" [inner-html]="pullingText" *ng-if="pullingText"></div>' + '<div class="icon-refreshing">' + '<i class="icon" [ng-class]="refreshingIcon"></i>' + '</div>' + '<div class="text-refreshing" [inner-html]="refreshingText" *ng-if="refreshingText"></div>' + '</div>',
    directives: [_angular2Angular2.NgIf, _angular2Angular2.NgClass]
  }), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [typeof(_a = typeof _contentContent.Content !== 'undefined' && _contentContent.Content) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object])], Refresher);
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/scroll", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Scroll = (function(_Ion) {
    _inherits(Scroll, _Ion);
    function Scroll(elementRef, Config) {
      _classCallCheck(this, Scroll);
      _get(Object.getPrototypeOf(Scroll.prototype), "constructor", this).call(this, elementRef, Config);
      this.maxScale = 3;
      this.zoomDuration = 250;
    }
    _createClass(Scroll, [{
      key: "onInit",
      value: function onInit() {
        this.scrollElement = this.getNativeElement().children[0];
      }
    }, {
      key: "addScrollEventListener",
      value: function addScrollEventListener(handler) {
        var _this = this;
        if (!this.scrollElement) {
          return;
        }
        this.scrollElement.addEventListener('scroll', handler);
        return function() {
          _this.scrollElement.removeEventListener('scroll', handler);
        };
      }
    }]);
    return Scroll;
  })(_ion.Ion);
  exports.Scroll = Scroll;
  exports.Scroll = Scroll = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-scroll',
    inputs: ['scrollX', 'scrollY', 'zoom', 'maxZoom'],
    host: {
      '[class.scroll-x]': 'scrollX',
      '[class.scroll-y]': 'scrollY'
    },
    template: '<scroll-content>' + '<div class="scroll-zoom-wrapper">' + '<ng-content></ng-content>' + '</div>' + '</scroll-content>'
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object])], Scroll);
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/scroll-to", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var ScrollTo = (function() {
    function ScrollTo(ele, x, y, duration) {
      _classCallCheck(this, ScrollTo);
      if (typeof ele === 'string') {
        ele = document.querySelector(ele);
      }
      if (ele) {
        if (ele.nativeElement) {
          ele = ele.nativeElement;
        }
        if (ele.nodeType === 1) {
          this._el = ele;
        }
      }
    }
    _createClass(ScrollTo, [{
      key: 'start',
      value: function start(x, y, duration, tolerance) {
        var self = this;
        if (!self._el) {
          return Promise.resolve();
        }
        x = x || 0;
        y = y || 0;
        tolerance = tolerance || 0;
        var ele = self._el;
        var fromY = ele.scrollTop;
        var fromX = ele.scrollLeft;
        var xDistance = Math.abs(x - fromX);
        var yDistance = Math.abs(y - fromY);
        if (yDistance <= tolerance && xDistance <= tolerance) {
          this._el = ele = null;
          return Promise.resolve();
        }
        return new Promise(function(resolve, reject) {
          var start = undefined;
          self.isPlaying = true;
          (0, _utilDom.raf)(function() {
            start = Date.now();
            (0, _utilDom.raf)(step);
          });
          function step() {
            var time = Math.min(1, (Date.now() - start) / duration);
            var easedT = easeOutCubic(time);
            if (fromY != y) {
              ele.scrollTop = parseInt(easedT * (y - fromY) + fromY, 10);
            }
            if (fromX != x) {
              ele.scrollLeft = parseInt(easedT * (x - fromX) + fromX, 10);
            }
            if (time < 1 && self.isPlaying) {
              (0, _utilDom.raf)(step);
            } else if (!self.isPlaying) {
              this._el = ele = null;
              reject();
            } else {
              this._el = ele = null;
              resolve();
            }
          }
        });
      }
    }, {
      key: 'stop',
      value: function stop() {
        this.isPlaying = false;
      }
    }, {
      key: 'dispose',
      value: function dispose() {
        this.stop();
        this._el = null;
      }
    }]);
    return ScrollTo;
  })();
  exports.ScrollTo = ScrollTo;
  function easeOutCubic(t) {
    return --t * t * t + 1;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/scroll-to"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var _utilKeyboard = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard');
  var _navViewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var _animationsScrollTo = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/scroll-to');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Content = (function(_Ion) {
    _inherits(Content, _Ion);
    function Content(elementRef, config, keyboard, viewCtrl, _zone) {
      _classCallCheck(this, Content);
      _get(Object.getPrototypeOf(Content.prototype), "constructor", this).call(this, elementRef, config);
      this._zone = _zone;
      this.scrollPadding = 0;
      this.keyboard = keyboard;
      if (viewCtrl) {
        viewCtrl.setContent(this);
        viewCtrl.setContentRef(elementRef);
      }
    }
    _createClass(Content, [{
      key: "onInit",
      value: function onInit() {
        _get(Object.getPrototypeOf(Content.prototype), "onInit", this).call(this);
        this.scrollElement = this.getNativeElement().children[0];
      }
    }, {
      key: "addScrollEventListener",
      value: function addScrollEventListener(handler) {
        var _this = this;
        if (!this.scrollElement) {
          return;
        }
        this.scrollElement.removeEventListener('scroll', handler);
        this.scrollElement.addEventListener('scroll', handler);
        return function() {
          _this.scrollElement.removeEventListener('scroll', handler);
        };
      }
    }, {
      key: "onScrollEnd",
      value: function onScrollEnd(callback) {
        var lastScrollTop = null;
        var framesUnchanged = 0;
        var scrollElement = this.scrollElement;
        function next() {
          var currentScrollTop = scrollElement.scrollTop;
          if (lastScrollTop !== null) {
            if (Math.round(lastScrollTop) === Math.round(currentScrollTop)) {
              framesUnchanged++;
            } else {
              framesUnchanged = 0;
            }
            if (framesUnchanged > 9) {
              return callback();
            }
          }
          lastScrollTop = currentScrollTop;
          (0, _utilDom.raf)(function() {
            (0, _utilDom.raf)(next);
          });
        }
        setTimeout(next, 100);
      }
    }, {
      key: "addTouchMoveListener",
      value: function addTouchMoveListener(handler) {
        var _this2 = this;
        if (!this.scrollElement) {
          return;
        }
        this.scrollElement.removeEventListener('touchmove', handler);
        this.scrollElement.addEventListener('touchmove', handler);
        return function() {
          _this2.scrollElement.removeEventListener('touchmove', handler);
        };
      }
    }, {
      key: "scrollTo",
      value: function scrollTo(x, y, duration, tolerance) {
        if (this._scrollTo) {
          this._scrollTo.dispose();
        }
        this._scrollTo = new _animationsScrollTo.ScrollTo(this.scrollElement);
        return this._scrollTo.start(x, y, duration, tolerance);
      }
    }, {
      key: "scrollToTop",
      value: function scrollToTop() {
        if (this._scrollTo) {
          this._scrollTo.dispose();
        }
        this._scrollTo = new _animationsScrollTo.ScrollTo(this.scrollElement);
        return this._scrollTo.start(0, 0, 300, 0);
      }
    }, {
      key: "getDimensions",
      value: function getDimensions() {
        var scrollElement = this.scrollElement;
        var parentElement = scrollElement.parentElement;
        return {
          contentHeight: parentElement.offsetHeight,
          contentTop: parentElement.offsetTop,
          contentBottom: parentElement.offsetTop + parentElement.offsetHeight,
          contentWidth: parentElement.offsetWidth,
          contentLeft: parentElement.offsetLeft,
          contentRight: parentElement.offsetLeft + parentElement.offsetWidth,
          scrollHeight: scrollElement.scrollHeight,
          scrollTop: scrollElement.scrollTop,
          scrollBottom: scrollElement.scrollTop + scrollElement.scrollHeight,
          scrollWidth: scrollElement.scrollWidth,
          scrollLeft: scrollElement.scrollLeft,
          scrollRight: scrollElement.scrollLeft + scrollElement.scrollWidth
        };
      }
    }, {
      key: "addScrollPadding",
      value: function addScrollPadding(newScrollPadding) {
        var _this3 = this;
        if (newScrollPadding > this.scrollPadding) {
          console.debug('addScrollPadding', newScrollPadding);
          this.scrollPadding = newScrollPadding;
          this.scrollElement.style.paddingBottom = newScrollPadding + 'px';
          if (!this.keyboardPromise) {
            console.debug('add scroll keyboard close callback', newScrollPadding);
            this.keyboardPromise = this.keyboard.onClose(function() {
              console.debug('scroll keyboard closed', newScrollPadding);
              if (_this3) {
                if (_this3.scrollPadding && _this3.scrollElement) {
                  var _close = new _animationsAnimation.Animation(_this3.scrollElement);
                  _close.duration(150).fromTo('paddingBottom', _this3.scrollPadding + 'px', '0px').play();
                }
                _this3.scrollPadding = 0;
                _this3.keyboardPromise = null;
              }
            });
          }
        }
      }
    }]);
    return Content;
  })(_ion.Ion);
  exports.Content = Content;
  exports.Content = Content = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-content',
    template: '<scroll-content>' + '<ng-content></ng-content>' + '</scroll-content>'
  }), __param(3, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _utilKeyboard.Keyboard !== 'undefined' && _utilKeyboard.Keyboard) === 'function' && _c || Object, typeof(_d = typeof _navViewController.ViewController !== 'undefined' && _navViewController.ViewController) === 'function' && _d || Object, typeof(_e = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _e || Object])], Content);
  var _a,
      _b,
      _c,
      _d,
      _e;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/blur/blur", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Blur = function Blur(elementRef, renderer) {
    _classCallCheck(this, Blur);
    this.elementRef = elementRef;
    this.renderer = renderer;
    renderer.setElementStyle(elementRef, '-webkit-backdrop-filter', 'blur(10px)');
  };
  exports.Blur = Blur;
  exports.Blur = Blur = __decorate([(0, _angular2Angular2.Directive)({selector: '[ion-blur]'}), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _b || Object])], Blur);
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-close", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var MenuClose = (function(_Ion) {
    _inherits(MenuClose, _Ion);
    function MenuClose(app, elementRef) {
      _classCallCheck(this, MenuClose);
      _get(Object.getPrototypeOf(MenuClose.prototype), "constructor", this).call(this, elementRef, null);
      this.app = app;
    }
    _createClass(MenuClose, [{
      key: "close",
      value: function close() {
        var menu = this.app.getComponent(this.menuClose || 'menu');
        menu && menu.close();
      }
    }]);
    return MenuClose;
  })(_ion.Ion);
  exports.MenuClose = MenuClose;
  exports.MenuClose = MenuClose = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[menu-close]',
    inputs: ['menuClose'],
    host: {'(click)': 'close()'}
  }), __metadata('design:paramtypes', [typeof(_a = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object])], MenuClose);
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _navbarNavbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var ToolbarBase = (function(_Ion) {
    _inherits(ToolbarBase, _Ion);
    function ToolbarBase(elementRef, config) {
      _classCallCheck(this, ToolbarBase);
      _get(Object.getPrototypeOf(ToolbarBase.prototype), "constructor", this).call(this, elementRef, config);
      this.itemRefs = [];
      this.titleRef = null;
    }
    _createClass(ToolbarBase, [{
      key: "setTitleCmp",
      value: function setTitleCmp(titleCmp) {
        this.titleCmp = titleCmp;
      }
    }, {
      key: "getTitleText",
      value: function getTitleText() {
        return this.titleCmp && this.titleCmp.getTitleText() || '';
      }
    }, {
      key: "getTitleRef",
      value: function getTitleRef() {
        return this.titleCmp && this.titleCmp.elementRef;
      }
    }, {
      key: "getItemRefs",
      value: function getItemRefs() {
        return this.itemRefs;
      }
    }, {
      key: "addItemRef",
      value: function addItemRef(itemElementRef) {
        this.itemRefs.push(itemElementRef);
      }
    }]);
    return ToolbarBase;
  })(_ion.Ion);
  exports.ToolbarBase = ToolbarBase;
  var Toolbar = (function(_ToolbarBase) {
    _inherits(Toolbar, _ToolbarBase);
    function Toolbar(elementRef, config) {
      _classCallCheck(this, Toolbar);
      _get(Object.getPrototypeOf(Toolbar.prototype), "constructor", this).call(this, elementRef, config);
    }
    return Toolbar;
  })(ToolbarBase);
  exports.Toolbar = Toolbar;
  exports.Toolbar = Toolbar = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-toolbar',
    template: '<toolbar-background></toolbar-background>' + '<ng-content select="[menu-toggle]"></ng-content>' + '<ng-content select="ion-nav-items[primary]"></ng-content>' + '<ng-content select="ion-nav-items[secondary]"></ng-content>' + '<toolbar-content>' + '<ng-content></ng-content>' + '</toolbar-content>',
    host: {'class': 'toolbar'}
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object])], Toolbar);
  var ToolbarTitle = (function(_Ion2) {
    _inherits(ToolbarTitle, _Ion2);
    function ToolbarTitle(elementRef, toolbar, navbar) {
      _classCallCheck(this, ToolbarTitle);
      _get(Object.getPrototypeOf(ToolbarTitle.prototype), "constructor", this).call(this, elementRef, null);
      toolbar && toolbar.setTitleCmp(this);
      navbar && navbar.setTitleCmp(this);
    }
    _createClass(ToolbarTitle, [{
      key: "getTitleText",
      value: function getTitleText() {
        return this.getNativeElement().textContent;
      }
    }]);
    return ToolbarTitle;
  })(_ion.Ion);
  exports.ToolbarTitle = ToolbarTitle;
  exports.ToolbarTitle = ToolbarTitle = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-title',
    template: '<div class="toolbar-title">' + '<ng-content></ng-content>' + '</div>'
  }), __param(1, (0, _angular2Angular2.Optional)()), __param(2, (0, _angular2Angular2.Optional)()), __param(2, (0, _angular2Angular2.Inject)((0, _angular2Angular2.forwardRef)(function() {
    return _navbarNavbar.Navbar;
  }))), __metadata('design:paramtypes', [typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object, Toolbar, typeof(_d = typeof _navbarNavbar.Navbar !== 'undefined' && _navbarNavbar.Navbar) === 'function' && _d || Object])], ToolbarTitle);
  var ToolbarItem = (function(_Ion3) {
    _inherits(ToolbarItem, _Ion3);
    function ToolbarItem(elementRef, toolbar, navbar) {
      _classCallCheck(this, ToolbarItem);
      _get(Object.getPrototypeOf(ToolbarItem.prototype), "constructor", this).call(this, elementRef, null);
      toolbar && toolbar.addItemRef(elementRef);
      navbar && navbar.addItemRef(elementRef);
    }
    return ToolbarItem;
  })(_ion.Ion);
  exports.ToolbarItem = ToolbarItem;
  exports.ToolbarItem = ToolbarItem = __decorate([(0, _angular2Angular2.Directive)({selector: 'ion-nav-items,[menu-toggle]'}), __param(1, (0, _angular2Angular2.Optional)()), __param(2, (0, _angular2Angular2.Optional)()), __param(2, (0, _angular2Angular2.Inject)((0, _angular2Angular2.forwardRef)(function() {
    return _navbarNavbar.Navbar;
  }))), __metadata('design:paramtypes', [typeof(_e = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _e || Object, Toolbar, typeof(_f = typeof _navbarNavbar.Navbar !== 'undefined' && _navbarNavbar.Navbar) === 'function' && _f || Object])], ToolbarItem);
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _iconIcon = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon');
  var _toolbarToolbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _navViewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  var _navNavController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var BackButton = (function(_Ion) {
    _inherits(BackButton, _Ion);
    function BackButton(navCtrl, elementRef, navbar) {
      _classCallCheck(this, BackButton);
      _get(Object.getPrototypeOf(BackButton.prototype), "constructor", this).call(this, elementRef, null);
      this.navCtrl = navCtrl;
      navbar && navbar.setBackButtonRef(elementRef);
    }
    _createClass(BackButton, [{
      key: "goBack",
      value: function goBack(ev) {
        ev.stopPropagation();
        ev.preventDefault();
        this.navCtrl && this.navCtrl.pop();
      }
    }]);
    return BackButton;
  })(_ion.Ion);
  BackButton = __decorate([(0, _angular2Angular2.Directive)({
    selector: '.back-button',
    host: {'(click)': 'goBack($event)'}
  }), __param(0, (0, _angular2Angular2.Optional)()), __param(2, (0, _angular2Angular2.Optional)()), __param(2, (0, _angular2Angular2.Inject)((0, _angular2Angular2.forwardRef)(function() {
    return Navbar;
  }))), __metadata('design:paramtypes', [typeof(_a = typeof _navNavController.NavController !== 'undefined' && _navNavController.NavController) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, Navbar])], BackButton);
  var BackButtonText = function BackButtonText(elementRef, navbar) {
    _classCallCheck(this, BackButtonText);
    navbar.setBackButtonTextRef(elementRef);
  };
  BackButtonText = __decorate([(0, _angular2Angular2.Directive)({selector: '.back-button-text'}), __param(1, (0, _angular2Angular2.Inject)((0, _angular2Angular2.forwardRef)(function() {
    return Navbar;
  }))), __metadata('design:paramtypes', [typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object, Navbar])], BackButtonText);
  var ToolbarBackground = function ToolbarBackground(elementRef, navbar) {
    _classCallCheck(this, ToolbarBackground);
    navbar.setBackgroundRef(elementRef);
  };
  ToolbarBackground = __decorate([(0, _angular2Angular2.Directive)({selector: 'toolbar-background'}), __param(1, (0, _angular2Angular2.Inject)((0, _angular2Angular2.forwardRef)(function() {
    return Navbar;
  }))), __metadata('design:paramtypes', [typeof(_d = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _d || Object, Navbar])], ToolbarBackground);
  var Navbar = (function(_ToolbarBase) {
    _inherits(Navbar, _ToolbarBase);
    function Navbar(app, viewCtrl, elementRef, config, renderer) {
      _classCallCheck(this, Navbar);
      _get(Object.getPrototypeOf(Navbar.prototype), "constructor", this).call(this, elementRef, config);
      this.app = app;
      this.renderer = renderer;
      var navbarStyle = config.get('navbarStyle');
      if (navbarStyle) {
        renderer.setElementAttribute(elementRef, navbarStyle, '');
      }
      viewCtrl && viewCtrl.setNavbar(this);
      this.bbIcon = config.get('backButtonIcon');
      this.bbDefault = config.get('backButtonText');
    }
    _createClass(Navbar, [{
      key: "onInit",
      value: function onInit() {
        _get(Object.getPrototypeOf(Navbar.prototype), "onInit", this).call(this);
        var hideBackButton = this.hideBackButton;
        if (typeof hideBackButton === 'string') {
          this.hideBackButton = hideBackButton === '' || hideBackButton === 'true';
        }
        if (this.navbarStyle) {
          this.renderer.setElementAttribute(this.elementRef, this.navbarStyle, '');
        }
      }
    }, {
      key: "getBackButtonRef",
      value: function getBackButtonRef() {
        return this.bbRef;
      }
    }, {
      key: "setBackButtonRef",
      value: function setBackButtonRef(backButtonElementRef) {
        this.bbRef = backButtonElementRef;
      }
    }, {
      key: "getBackButtonTextRef",
      value: function getBackButtonTextRef() {
        return this.bbtRef;
      }
    }, {
      key: "setBackButtonTextRef",
      value: function setBackButtonTextRef(backButtonTextElementRef) {
        this.bbtRef = backButtonTextElementRef;
      }
    }, {
      key: "setBackgroundRef",
      value: function setBackgroundRef(backgrouneElementRef) {
        this.bgRef = backgrouneElementRef;
      }
    }, {
      key: "getBackgroundRef",
      value: function getBackgroundRef() {
        return this.bgRef;
      }
    }, {
      key: "didEnter",
      value: function didEnter() {
        this.app.setTitle(this.getTitleText());
      }
    }, {
      key: "setHidden",
      value: function setHidden(isHidden) {
        this._hidden = isHidden;
      }
    }]);
    return Navbar;
  })(_toolbarToolbar.ToolbarBase);
  exports.Navbar = Navbar;
  exports.Navbar = Navbar = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-navbar',
    template: '<toolbar-background></toolbar-background>' + '<button class="back-button" [hidden]="hideBackButton">' + '<icon class="back-button-icon" [name]="bbIcon"></icon>' + '<span class="back-button-text">' + '<span class="back-default">{{bbDefault}}</span>' + '</span>' + '</button>' + '<ng-content select="[menu-toggle]"></ng-content>' + '<ng-content select="ion-nav-items[primary]"></ng-content>' + '<ng-content select="ion-nav-items[secondary]"></ng-content>' + '<toolbar-content>' + '<ng-content></ng-content>' + '</toolbar-content>',
    host: {
      '[hidden]': '_hidden',
      'class': 'toolbar'
    },
    inputs: ['hideBackButton', 'navbarStyle'],
    directives: [BackButton, BackButtonText, _iconIcon.Icon, ToolbarBackground]
  }), __param(1, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_e = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _e || Object, typeof(_f = typeof _navViewController.ViewController !== 'undefined' && _navViewController.ViewController) === 'function' && _f || Object, typeof(_g = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _g || Object, typeof(_h = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _h || Object, typeof(_j = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _j || Object])], Navbar);
  var NavbarTemplate = function NavbarTemplate(viewContainerRef, templateRef, viewCtrl) {
    _classCallCheck(this, NavbarTemplate);
    if (viewCtrl) {
      viewCtrl.setNavbarTemplateRef(templateRef);
      viewCtrl.setNavbarViewRef(viewContainerRef);
    }
  };
  exports.NavbarTemplate = NavbarTemplate;
  exports.NavbarTemplate = NavbarTemplate = __decorate([(0, _angular2Angular2.Directive)({selector: 'template[navbar]'}), __param(2, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_k = typeof _angular2Angular2.ViewContainerRef !== 'undefined' && _angular2Angular2.ViewContainerRef) === 'function' && _k || Object, typeof(_l = typeof _angular2Angular2.TemplateRef !== 'undefined' && _angular2Angular2.TemplateRef) === 'function' && _l || Object, typeof(_m = typeof _navViewController.ViewController !== 'undefined' && _navViewController.ViewController) === 'function' && _m || Object])], NavbarTemplate);
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f,
      _g,
      _h,
      _j,
      _k,
      _l,
      _m;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/swipe-back", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-edge-gesture"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ionicGesturesSlideEdgeGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-edge-gesture');
  var SwipeBackGesture = (function(_SlideEdgeGesture) {
    _inherits(SwipeBackGesture, _SlideEdgeGesture);
    function SwipeBackGesture(element, opts, navCtrl) {
      if (opts === undefined)
        opts = {};
      _classCallCheck(this, SwipeBackGesture);
      _get(Object.getPrototypeOf(SwipeBackGesture.prototype), 'constructor', this).call(this, element, opts);
      this.edges = opts.edge.split(' ');
      this.threshold = opts.threshold;
      this.navCtrl = navCtrl;
    }
    _createClass(SwipeBackGesture, [{
      key: 'onSlideStart',
      value: function onSlideStart() {
        this.navCtrl.swipeBackStart();
      }
    }, {
      key: 'onSlide',
      value: function onSlide(slide, ev) {
        this.navCtrl.swipeBackProgress(slide.distance / slide.max);
      }
    }, {
      key: 'onSlideEnd',
      value: function onSlideEnd(slide, ev) {
        var shouldComplete = Math.abs(ev.velocityX) > 0.2 || Math.abs(slide.delta) > Math.abs(slide.max) * 0.5;
        this.navCtrl.swipeBackEnd(shouldComplete, 1);
      }
    }]);
    return SwipeBackGesture;
  })(_ionicGesturesSlideEdgeGesture.SlideEdgeGesture);
  exports.SwipeBackGesture = SwipeBackGesture;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Transition = (function() {
    function Transition() {
      _classCallCheck(this, Transition);
    }
    _createClass(Transition, null, [{
      key: 'create',
      value: function create(navCtrl) {
        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        var name = opts.animation || 'ios';
        var TransitionClass = transitionRegistry[name];
        if (!TransitionClass) {
          TransitionClass = transitionRegistry.ios;
        }
        return new TransitionClass(navCtrl, opts);
      }
    }, {
      key: 'register',
      value: function register(name, TransitionClass) {
        transitionRegistry[name] = TransitionClass;
      }
    }]);
    return Transition;
  })();
  exports.Transition = Transition;
  var transitionRegistry = {};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/swipe-back", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x12, _x13, _x14) {
    var _again = true;
    _function: while (_again) {
      var object = _x12,
          property = _x13,
          receiver = _x14;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x12 = parent;
          _x13 = property;
          _x14 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _viewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  var _transitionsTransition = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition');
  var _swipeBack = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/swipe-back');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var NavController = (function(_Ion) {
    _inherits(NavController, _Ion);
    function NavController(parentnavCtrl, app, config, elementRef, compiler, loader, viewManager, zone, renderer) {
      _classCallCheck(this, NavController);
      _get(Object.getPrototypeOf(NavController.prototype), 'constructor', this).call(this, elementRef, config);
      this.parent = parentnavCtrl;
      this.app = app;
      this.config = config;
      this._compiler = compiler;
      this._loader = loader;
      this._viewManager = viewManager;
      this._zone = zone;
      this.renderer = renderer;
      this._views = [];
      this._sbTrans = null;
      this._sbEnabled = config.get('swipeBackEnabled') || false;
      this._sbThreshold = config.get('swipeBackThreshold') || 40;
      this.id = ++ctrlIds;
      this._ids = -1;
      this.providers = _angular2Angular2.Injector.resolve([(0, _angular2Angular2.provide)(NavController, {useValue: this})]);
    }
    _createClass(NavController, [{
      key: 'push',
      value: function push(componentType) {
        var _this = this;
        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
        if (!componentType) {
          return Promise.reject();
        }
        if (typeof componentType !== 'function') {
          throw 'Loading component must be a component class, not "' + componentType.toString() + '"';
        }
        var resolve = undefined;
        var promise = new Promise(function(res) {
          resolve = res;
        });
        if (!this._views.length) {
          opts.animate = false;
        }
        opts.direction = opts.direction || 'forward';
        var leavingView = this.getActive() || new _viewController.ViewController();
        leavingView.shouldCache = util.isBoolean(opts.cacheLeavingView) ? opts.cacheLeavingView : true;
        leavingView.shouldDestroy = !leavingView.shouldCache;
        if (leavingView.shouldDestroy) {
          leavingView.willUnload();
        }
        var enteringView = new _viewController.ViewController(this, componentType, params);
        enteringView.shouldDestroy = false;
        enteringView.shouldCache = false;
        this._add(enteringView);
        if (opts.preCleanup !== false) {
          (0, _utilDom.raf)(function() {
            _this._cleanup(enteringView);
          });
        }
        if (this.router) {
          this.router.stateChange('push', enteringView, params);
        }
        this._transition(enteringView, leavingView, opts, resolve);
        return promise;
      }
    }, {
      key: 'pop',
      value: function pop() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        if (!this.canGoBack()) {
          return Promise.reject();
        }
        var resolve = undefined;
        var promise = new Promise(function(res) {
          resolve = res;
        });
        opts.direction = opts.direction || 'back';
        var leavingView = this.getActive() || new _viewController.ViewController();
        leavingView.shouldCache = util.isBoolean(opts.cacheLeavingView) ? opts.cacheLeavingView : false;
        leavingView.shouldDestroy = !leavingView.shouldCache;
        if (leavingView.shouldDestroy) {
          leavingView.willUnload();
        }
        var enteringView = this.getPrevious(leavingView);
        if (enteringView) {
          if (this.router) {
            this.router.stateChange('pop', enteringView);
          }
          this._transition(enteringView, leavingView, opts, resolve);
        } else {
          this._transComplete();
          resolve();
        }
        return promise;
      }
    }, {
      key: 'popTo',
      value: function popTo(viewCtrl) {
        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        var viewIndex = this._views.indexOf(viewCtrl);
        var targetIndex = viewIndex + 1;
        if (viewIndex < 0 || targetIndex > this._views.length - 1) {
          return Promise.resolve();
        }
        var resolve = undefined;
        var promise = new Promise(function(res) {
          resolve = res;
        });
        opts.direction = opts.direction || 'back';
        if (this._views.length > 1) {
          var autoRemoveItems = this._views.slice(targetIndex, this._views.length);
          for (var i = 0; i < autoRemoveItems.length; i++) {
            autoRemoveItems[i].shouldDestroy = true;
            autoRemoveItems[i].shouldCache = false;
            autoRemoveItems[i].willUnload();
          }
        }
        var leavingView = this.getPrevious(viewCtrl);
        if (this.router) {
          this.router.stateChange('pop', viewCtrl);
        }
        this._transition(viewCtrl, leavingView, opts, resolve);
        return promise;
      }
    }, {
      key: 'popToRoot',
      value: function popToRoot() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        return this.popTo(this.first(), opts);
      }
    }, {
      key: 'insert',
      value: function insert(componentType, index) {
        var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
        var opts = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];
        if (!componentType || index < 0) {
          return Promise.reject();
        }
        if (index >= this._views.length) {
          return this.push(componentType, params, opts);
        }
        var viewCtrl = new _viewController.ViewController(this, componentType);
        viewCtrl.state = CACHED_STATE;
        viewCtrl.shouldDestroy = false;
        viewCtrl.shouldCache = false;
        this._incrementId(viewCtrl);
        this._views.splice(index, 0, viewCtrl);
        return Promise.resolve();
      }
    }, {
      key: 'remove',
      value: function remove(index) {
        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        if (index < 0 || index >= this._views.length) {
          return Promise.reject("Index out of range");
        }
        var viewToRemove = this._views[index];
        if (this.isActive(viewToRemove)) {
          return this.pop(opts);
        }
        viewToRemove.shouldDestroy = true;
        this._cleanup();
        return Promise.resolve();
      }
    }, {
      key: 'setViews',
      value: function setViews(components) {
        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        if (!components || !components.length) {
          return Promise.resolve();
        }
        opts.animate = opts.animate || false;
        opts.preCleanup = false;
        opts.cacheLeavingView = false;
        if (this._views.length > 1) {
          var autoRemoveItems = this._views.slice(0, this._views.length - 1);
          for (var i = 0; i < autoRemoveItems.length; i++) {
            autoRemoveItems[i].shouldDestroy = true;
            autoRemoveItems[i].shouldCache = false;
            autoRemoveItems[i].willUnload();
          }
        }
        var componentObj = null;
        var componentType = null;
        var viewCtrl = null;
        if (components.length > 1) {
          var newBeforeItems = components.slice(0, components.length - 1);
          for (var j = 0; j < newBeforeItems.length; j++) {
            componentObj = newBeforeItems[j];
            if (componentObj) {
              componentType = componentObj.componentType || componentObj;
              viewCtrl = new _viewController.ViewController(this, componentType, componentObj.params);
              viewCtrl.state = CACHED_STATE;
              viewCtrl.shouldDestroy = false;
              viewCtrl.shouldCache = false;
              this._add(viewCtrl);
            }
          }
        }
        componentObj = components[components.length - 1];
        componentType = componentObj.componentType || componentObj;
        return this.push(componentType, componentObj.params, opts);
      }
    }, {
      key: 'setRoot',
      value: function setRoot(componentType) {
        var params = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
        return this.setViews([{
          componentType: componentType,
          params: params
        }], opts);
      }
    }, {
      key: '_transition',
      value: function _transition(enteringView, leavingView, opts, done) {
        var _this2 = this;
        if (!enteringView || enteringView === leavingView) {
          return done();
        }
        if (!opts.animation) {
          opts.animation = this.config.get('pageTransition');
        }
        if (this.config.get('animate') === false) {
          opts.animate = false;
        }
        this._stage(enteringView, function() {
          if (enteringView.shouldDestroy) {
            return done();
          }
          _this2._setZIndex(enteringView.instance, leavingView.instance, opts.direction);
          _this2._zone.runOutsideAngular(function() {
            enteringView.shouldDestroy = false;
            enteringView.shouldCache = false;
            if (!opts.preload) {
              enteringView.willEnter();
              leavingView.willLeave();
            }
            enteringView.state = STAGED_ENTERING_STATE;
            leavingView.state = STAGED_LEAVING_STATE;
            opts.renderDelay = _this2.config.get('pageTransitionDelay');
            var transAnimation = _transitionsTransition.Transition.create(_this2, opts);
            if (opts.animate === false) {
              transAnimation.clearDuration();
              transAnimation.duration(0);
            }
            var duration = transAnimation.duration();
            if (duration > 64) {
              _this2.app.setEnabled(false, duration);
              _this2.app.setTransitioning(true, duration);
            }
            transAnimation.play().then(function() {
              enteringView.state = ACTIVE_STATE;
              leavingView.state = CACHED_STATE;
              transAnimation.dispose();
              if (!opts.preload) {
                enteringView.didEnter();
                leavingView.didLeave();
              }
              _this2._zone.run(function() {
                _this2._transComplete();
                done();
              });
            });
          });
        });
      }
    }, {
      key: '_stage',
      value: function _stage(viewCtrl, done) {
        if (viewCtrl.instance || viewCtrl.shouldDestroy) {
          return done();
        }
        this.loadPage(viewCtrl, null, function() {
          try {
            viewCtrl.loaded();
          } catch (e) {
            console.error(e);
          }
          done();
        });
      }
    }, {
      key: 'loadPage',
      value: function loadPage(viewCtrl, navbarContainerRef, done) {
        var _this3 = this;
        var providers = this.providers.concat(_angular2Angular2.Injector.resolve([(0, _angular2Angular2.provide)(_viewController.ViewController, {useValue: viewCtrl}), (0, _angular2Angular2.provide)(NavParams, {useValue: viewCtrl.params})]));
        console.time('loadPage ' + viewCtrl.componentType.name + ': loadIntoLocation');
        this._loader.loadIntoLocation(viewCtrl.componentType, this.elementRef, 'contents', providers).then(function(componentRef) {
          console.timeEnd('loadPage ' + viewCtrl.componentType.name + ': loadIntoLocation');
          viewCtrl.addDestroy(function() {
            componentRef.dispose();
          });
          viewCtrl.setInstance(componentRef.instance);
          viewCtrl.setPageRef(componentRef.location);
          if (!navbarContainerRef) {
            navbarContainerRef = viewCtrl.getNavbarViewRef();
          }
          var navbarTemplateRef = viewCtrl.getNavbarTemplateRef();
          if (navbarContainerRef && navbarTemplateRef) {
            (function() {
              console.time('loadPage ' + viewCtrl.componentType.name + ': createEmbeddedView');
              var navbarView = navbarContainerRef.createEmbeddedView(navbarTemplateRef);
              console.timeEnd('loadPage ' + viewCtrl.componentType.name + ': createEmbeddedView');
              viewCtrl.addDestroy(function() {
                var index = navbarContainerRef.indexOf(navbarView);
                if (index > -1) {
                  navbarContainerRef.remove(index);
                }
              });
            })();
          }
          if (_this3._views.length === 1) {
            _this3._zone.runOutsideAngular(function() {
              setTimeout(function() {
                _this3.renderer.setElementClass(_this3.elementRef, 'has-views', true);
              }, 200);
            });
          }
          done(viewCtrl);
        });
      }
    }, {
      key: '_setZIndex',
      value: function _setZIndex(enteringInstance, leavingInstance, direction) {
        if (!leavingInstance) {
          enteringInstance._zIndex = 10;
        } else if (direction === 'back') {
          enteringInstance._zIndex = leavingInstance._zIndex - 1;
        } else {
          enteringInstance._zIndex = leavingInstance._zIndex + 1;
        }
      }
    }, {
      key: 'swipeBackStart',
      value: function swipeBackStart() {
        var _this4 = this;
        return;
        if (!this.app.isEnabled() || !this.canSwipeBack()) {
          return;
        }
        this.app.setEnabled(false);
        this.app.setTransitioning(true);
        var opts = {direction: 'back'};
        var leavingView = this.getActive() || new _viewController.ViewController();
        leavingView.shouldDestroy = true;
        leavingView.shouldCache = false;
        leavingView.willLeave();
        leavingView.willUnload();
        var enteringView = this.getPrevious(leavingView);
        enteringView.shouldDestroy = false;
        enteringView.shouldCache = false;
        enteringView.willEnter();
        enteringView._stage(function() {
          _this4._zone.runOutsideAngular(function() {
            enteringView.state = STAGED_ENTERING_STATE;
            leavingView.state = STAGED_LEAVING_STATE;
            _this4._sbTrans = _transitionsTransition.Transition.create(_this4, opts);
            _this4._sbTrans.easing('linear').progressStart();
          });
        });
      }
    }, {
      key: 'swipeBackProgress',
      value: function swipeBackProgress(value) {
        return;
        if (this._sbTrans) {
          this.app.setEnabled(false, 4000);
          this.app.setTransitioning(true, 4000);
          this._sbTrans.progress(value);
        }
      }
    }, {
      key: 'swipeBackEnd',
      value: function swipeBackEnd(completeSwipeBack, rate) {
        var _this5 = this;
        return;
        if (!this._sbTrans)
          return;
        this.app.setEnabled(false);
        this.app.setTransitioning(true);
        this._sbTrans.progressEnd(completeSwipeBack, rate).then(function() {
          _this5._zone.run(function() {
            var enteringView = _this5.getStagedEnteringView();
            var leavingView = _this5.getStagedLeavingView();
            if (enteringView && leavingView) {
              if (completeSwipeBack) {
                enteringView.state = ACTIVE_STATE;
                leavingView.state = CACHED_STATE;
                enteringView.didEnter();
                leavingView.didLeave();
                if (_this5.router) {
                  _this5.router.stateChange('pop', enteringView);
                }
              } else {
                leavingView.state = ACTIVE_STATE;
                enteringView.state = CACHED_STATE;
                leavingView.willEnter();
                leavingView.didEnter();
                enteringView.didLeave();
                leavingView.shouldDestroy = false;
                enteringView.shouldDestroy = false;
              }
            }
            _this5._sbTrans && _this5._sbTrans.dispose();
            _this5._sbTrans = null;
            _this5._transComplete();
          });
        });
      }
    }, {
      key: '_sbComplete',
      value: function _sbComplete() {
        return;
        if (this.canSwipeBack()) {
          if (this.sbGesture) {
            return;
          }
          var opts = {
            edge: 'left',
            threshold: this._sbThreshold
          };
          this.sbGesture = new _swipeBack.SwipeBackGesture(this.getNativeElement(), opts, this);
          console.debug('SwipeBackGesture listen');
          this.sbGesture.listen();
        } else if (this.sbGesture) {
          console.debug('SwipeBackGesture unlisten');
          this.sbGesture.unlisten();
          this.sbGesture = null;
        }
      }
    }, {
      key: 'isSwipeBackEnabled',
      value: function isSwipeBackEnabled(val) {
        if (arguments.length) {
          this._sbEnabled = !!val;
        }
        return this._sbEnabled;
      }
    }, {
      key: 'canSwipeBack',
      value: function canSwipeBack() {
        return this._sbEnabled && this.canGoBack();
      }
    }, {
      key: 'canGoBack',
      value: function canGoBack() {
        var activeView = this.getActive();
        if (activeView) {
          return activeView.enableBack();
        }
        return false;
      }
    }, {
      key: '_transComplete',
      value: function _transComplete() {
        var _this6 = this;
        this._views.forEach(function(view) {
          if (view) {
            if (view.shouldDestroy) {
              view.didUnload();
            } else if (view.state === CACHED_STATE && view.shouldCache) {
              view.shouldCache = false;
            }
          }
        });
        this.app.setEnabled(true);
        this.app.setTransitioning(false);
        this._sbComplete();
        (0, _utilDom.raf)(function() {
          _this6._cleanup();
        });
      }
    }, {
      key: '_cleanup',
      value: function _cleanup(activeView) {
        var _this7 = this;
        var destroys = [];
        activeView = activeView || this.getActive();
        var previousView = this.getPrevious(activeView);
        this._views.forEach(function(view) {
          if (view) {
            if (view.shouldDestroy) {
              destroys.push(view);
            } else {
              var isActiveView = view === activeView;
              var isPreviousView = view === previousView;
              view.domCache && view.domCache(isActiveView, isPreviousView);
            }
          }
        });
        destroys.forEach(function(view) {
          _this7._remove(view);
          view.destroy();
        });
      }
    }, {
      key: 'navbarViewContainer',
      value: function navbarViewContainer(nbContainer) {
        if (nbContainer) {
          this._nbContainer = nbContainer;
        }
        if (this._nbContainer) {
          return this._nbContainer;
        }
        if (this.parent) {
          return this.parent.navbarViewContainer();
        }
      }
    }, {
      key: 'anchorElementRef',
      value: function anchorElementRef() {
        if (arguments.length) {
          this._anchorER = arguments[0];
        }
        return this._anchorER;
      }
    }, {
      key: '_add',
      value: function _add(view) {
        this._incrementId(view);
        this._views.push(view);
      }
    }, {
      key: '_incrementId',
      value: function _incrementId(view) {
        view.id = this.id + '-' + ++this._ids;
      }
    }, {
      key: '_remove',
      value: function _remove(viewOrIndex) {
        util.array.remove(this._views, viewOrIndex);
      }
    }, {
      key: 'getActive',
      value: function getActive() {
        for (var i = this._views.length - 1; i >= 0; i--) {
          if (this._views[i].state === ACTIVE_STATE && !this._views[i].shouldDestroy) {
            return this._views[i];
          }
        }
        return null;
      }
    }, {
      key: 'getByIndex',
      value: function getByIndex(index) {
        if (index < this._views.length && index > -1) {
          return this._views[index];
        }
        return null;
      }
    }, {
      key: 'getPrevious',
      value: function getPrevious(view) {
        if (view) {
          var viewIndex = this._views.indexOf(view);
          for (var i = viewIndex - 1; i >= 0; i--) {
            if (!this._views[i].shouldDestroy) {
              return this._views[i];
            }
          }
        }
        return null;
      }
    }, {
      key: 'getStagedEnteringView',
      value: function getStagedEnteringView() {
        for (var i = 0,
            ii = this._views.length; i < ii; i++) {
          if (this._views[i].state === STAGED_ENTERING_STATE) {
            return this._views[i];
          }
        }
        return null;
      }
    }, {
      key: 'getStagedLeavingView',
      value: function getStagedLeavingView() {
        for (var i = 0,
            ii = this._views.length; i < ii; i++) {
          if (this._views[i].state === STAGED_LEAVING_STATE) {
            return this._views[i];
          }
        }
        return null;
      }
    }, {
      key: 'first',
      value: function first() {
        for (var i = 0,
            l = this._views.length; i < l; i++) {
          if (!this._views[i].shouldDestroy) {
            return this._views[i];
          }
        }
        return null;
      }
    }, {
      key: 'last',
      value: function last() {
        for (var i = this._views.length - 1; i >= 0; i--) {
          if (!this._views[i].shouldDestroy) {
            return this._views[i];
          }
        }
        return null;
      }
    }, {
      key: 'indexOf',
      value: function indexOf(view) {
        return this._views.indexOf(view);
      }
    }, {
      key: 'length',
      value: function length() {
        var len = 0;
        for (var i = 0,
            l = this._views.length; i < l; i++) {
          if (!this._views[i].shouldDestroy) {
            len++;
          }
        }
        return len;
      }
    }, {
      key: 'instances',
      value: function instances() {
        var instances = [];
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          for (var _iterator = this._views[Symbol.iterator](),
              _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var view = _step.value;
            if (view.instance) {
              instances.push(view.instance);
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
        return instances;
      }
    }, {
      key: 'isActive',
      value: function isActive(view) {
        return view && view.state === ACTIVE_STATE;
      }
    }, {
      key: 'isStagedEntering',
      value: function isStagedEntering(view) {
        return view && view.state === STAGED_ENTERING_STATE;
      }
    }, {
      key: 'registerRouter',
      value: function registerRouter(router) {
        this.router = router;
      }
    }]);
    return NavController;
  })(_ion.Ion);
  exports.NavController = NavController;
  var ACTIVE_STATE = 1;
  var CACHED_STATE = 2;
  var STAGED_ENTERING_STATE = 3;
  var STAGED_LEAVING_STATE = 4;
  var ctrlIds = -1;
  var NavParams = (function() {
    function NavParams(data) {
      _classCallCheck(this, NavParams);
      this.data = data || {};
    }
    _createClass(NavParams, [{
      key: 'get',
      value: function get(param) {
        return this.data[param];
      }
    }]);
    return NavParams;
  })();
  exports.NavParams = NavParams;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _navController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-controller');
  var ViewController = (function() {
    function ViewController(navCtrl, componentType) {
      var params = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
      _classCallCheck(this, ViewController);
      this.navCtrl = navCtrl;
      this.componentType = componentType;
      this.params = new _navController.NavParams(params);
      this.instance = null;
      this.state = 0;
      this._destroys = [];
    }
    _createClass(ViewController, [{
      key: 'enableBack',
      value: function enableBack() {
        if (this.navCtrl) {
          var previousItem = this.navCtrl.getPrevious(this);
          return !!(previousItem && !previousItem.shouldDestroy);
        }
        return false;
      }
    }, {
      key: 'setInstance',
      value: function setInstance(instance) {
        this.instance = instance;
      }
    }, {
      key: 'isRoot',
      value: function isRoot() {
        return this.index === 0;
      }
    }, {
      key: 'addDestroy',
      value: function addDestroy(destroyFn) {
        this._destroys.push(destroyFn);
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        for (var i = 0; i < this._destroys.length; i++) {
          this._destroys[i]();
        }
        this._destroys = [];
      }
    }, {
      key: 'setNavbarTemplateRef',
      value: function setNavbarTemplateRef(templateRef) {
        this._nbTmpRef = templateRef;
      }
    }, {
      key: 'getNavbarTemplateRef',
      value: function getNavbarTemplateRef() {
        return this._nbTmpRef;
      }
    }, {
      key: 'getNavbarViewRef',
      value: function getNavbarViewRef() {
        return this._nbVwRef;
      }
    }, {
      key: 'setNavbarViewRef',
      value: function setNavbarViewRef(viewContainerRef) {
        this._nbVwRef = viewContainerRef;
      }
    }, {
      key: 'setPageRef',
      value: function setPageRef(elementRef) {
        this._pgRef = elementRef;
      }
    }, {
      key: 'pageRef',
      value: function pageRef() {
        return this._pgRef;
      }
    }, {
      key: 'setContentRef',
      value: function setContentRef(elementRef) {
        this._cntRef = elementRef;
      }
    }, {
      key: 'contentRef',
      value: function contentRef() {
        return this._cntRef;
      }
    }, {
      key: 'setContent',
      value: function setContent(directive) {
        this._cntDir = directive;
      }
    }, {
      key: 'getContent',
      value: function getContent() {
        return this._cntDir;
      }
    }, {
      key: 'setNavbar',
      value: function setNavbar(directive) {
        this._nbDir = directive;
      }
    }, {
      key: 'getNavbar',
      value: function getNavbar() {
        return this._nbDir;
      }
    }, {
      key: 'hasNavbar',
      value: function hasNavbar() {
        return !!this.getNavbar();
      }
    }, {
      key: 'navbarRef',
      value: function navbarRef() {
        var navbar = this.getNavbar();
        return navbar && navbar.getElementRef();
      }
    }, {
      key: 'titleRef',
      value: function titleRef() {
        var navbar = this.getNavbar();
        return navbar && navbar.getTitleRef();
      }
    }, {
      key: 'navbarItemRefs',
      value: function navbarItemRefs() {
        var navbar = this.getNavbar();
        return navbar && navbar.getItemRefs();
      }
    }, {
      key: 'backBtnRef',
      value: function backBtnRef() {
        var navbar = this.getNavbar();
        return navbar && navbar.getBackButtonRef();
      }
    }, {
      key: 'backBtnTextRef',
      value: function backBtnTextRef() {
        var navbar = this.getNavbar();
        return navbar && navbar.getBackButtonTextRef();
      }
    }, {
      key: 'navbarBgRef',
      value: function navbarBgRef() {
        var navbar = this.getNavbar();
        return navbar && navbar.getBackgroundRef();
      }
    }, {
      key: 'hideBackButton',
      value: function hideBackButton(shouldHide) {
        var navbar = this.getNavbar();
        if (navbar) {
          navbar.hideBackButton = !!shouldHide;
        }
      }
    }, {
      key: 'loaded',
      value: function loaded() {
        if (!this.shouldDestroy) {
          this.instance && this.instance.onPageLoaded && this.instance.onPageLoaded();
        }
      }
    }, {
      key: 'willEnter',
      value: function willEnter() {
        if (!this.shouldDestroy) {
          this.instance && this.instance.onPageWillEnter && this.instance.onPageWillEnter();
        }
      }
    }, {
      key: 'didEnter',
      value: function didEnter() {
        var navbar = this.getNavbar();
        navbar && navbar.didEnter();
        this.instance && this.instance.onPageDidEnter && this.instance.onPageDidEnter();
      }
    }, {
      key: 'willLeave',
      value: function willLeave() {
        this.instance && this.instance.onPageWillLeave && this.instance.onPageWillLeave();
      }
    }, {
      key: 'didLeave',
      value: function didLeave() {
        this.instance && this.instance.onPageDidLeave && this.instance.onPageDidLeave();
      }
    }, {
      key: 'willUnload',
      value: function willUnload() {
        this.instance && this.instance.onPageWillUnload && this.instance.onPageWillUnload();
      }
    }, {
      key: 'didUnload',
      value: function didUnload() {
        this.instance && this.instance.onPageDidUnload && this.instance.onPageDidUnload();
      }
    }, {
      key: 'domCache',
      value: function domCache(isActiveView, isPreviousView) {
        if (this.instance) {
          this.instance._hidden = !isActiveView && !isPreviousView;
        }
      }
    }, {
      key: 'index',
      get: function get() {
        return this.navCtrl ? this.navCtrl.indexOf(this) : -1;
      }
    }]);
    return ViewController;
  })();
  exports.ViewController = ViewController;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-toggle", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _navViewController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/view-controller');
  var _navbarNavbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var MenuToggle = (function(_Ion) {
    _inherits(MenuToggle, _Ion);
    function MenuToggle(app, elementRef, viewCtrl, navbar) {
      _classCallCheck(this, MenuToggle);
      _get(Object.getPrototypeOf(MenuToggle.prototype), "constructor", this).call(this, elementRef, null);
      this.app = app;
      this.viewCtrl = viewCtrl;
      this.withinNavbar = !!navbar;
    }
    _createClass(MenuToggle, [{
      key: "toggle",
      value: function toggle() {
        var menu = this.app.getComponent(this.menuToggle || 'menu');
        menu && menu.toggle();
      }
    }, {
      key: "isHidden",
      get: function get() {
        if (this.withinNavbar && this.viewCtrl) {
          return !this.viewCtrl.isRoot();
        }
        return false;
      }
    }]);
    return MenuToggle;
  })(_ion.Ion);
  exports.MenuToggle = MenuToggle;
  exports.MenuToggle = MenuToggle = __decorate([(0, _angular2Angular2.Directive)({
    selector: '[menu-toggle]',
    inputs: ['menuToggle'],
    host: {
      '(click)': 'toggle()',
      '[hidden]': 'isHidden',
      'menu-toggle': ''
    }
  }), __param(2, (0, _angular2Angular2.Optional)()), __param(3, (0, _angular2Angular2.Optional)()), __metadata('design:paramtypes', [typeof(_a = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _navViewController.ViewController !== 'undefined' && _navViewController.ViewController) === 'function' && _c || Object, typeof(_d = typeof _navbarNavbar.Navbar !== 'undefined' && _navbarNavbar.Navbar) === 'function' && _d || Object])], MenuToggle);
  var _a,
      _b,
      _c,
      _d;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/hammer", ["github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    Object.defineProperty(exports, '__esModule', {value: true});
    var VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];
    var TEST_ELEMENT = document.createElement('div');
    var TYPE_FUNCTION = 'function';
    var round = Math.round;
    var abs = Math.abs;
    var now = Date.now;
    function setTimeoutContext(fn, timeout, context) {
      return setTimeout(bindFn(fn, context), timeout);
    }
    function invokeArrayArg(arg, fn, context) {
      if (Array.isArray(arg)) {
        each(arg, context[fn], context);
        return true;
      }
      return false;
    }
    function each(obj, iterator, context) {
      var i;
      if (!obj) {
        return;
      }
      if (obj.forEach) {
        obj.forEach(iterator, context);
      } else if (obj.length !== undefined) {
        i = 0;
        while (i < obj.length) {
          iterator.call(context, obj[i], i, obj);
          i++;
        }
      } else {
        for (i in obj) {
          obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);
        }
      }
    }
    function extend(dest, src, merge) {
      var keys = Object.keys(src);
      var i = 0;
      while (i < keys.length) {
        if (!merge || merge && dest[keys[i]] === undefined) {
          dest[keys[i]] = src[keys[i]];
        }
        i++;
      }
      return dest;
    }
    function merge(dest, src) {
      return extend(dest, src, true);
    }
    function inherit(child, base, properties) {
      var baseP = base.prototype,
          childP;
      childP = child.prototype = Object.create(baseP);
      childP.constructor = child;
      childP._super = baseP;
      if (properties) {
        extend(childP, properties);
      }
    }
    function bindFn(fn, context) {
      return function boundFn() {
        return fn.apply(context, arguments);
      };
    }
    function boolOrFn(val, args) {
      if (typeof val == TYPE_FUNCTION) {
        return val.apply(args ? args[0] || undefined : undefined, args);
      }
      return val;
    }
    function ifUndefined(val1, val2) {
      return val1 === undefined ? val2 : val1;
    }
    function addEventListeners(target, types, handler) {
      each(splitStr(types), function(type) {
        target.addEventListener(type, handler, false);
      });
    }
    function removeEventListeners(target, types, handler) {
      each(splitStr(types), function(type) {
        target.removeEventListener(type, handler, false);
      });
    }
    function hasParent(node, parent) {
      while (node) {
        if (node == parent) {
          return true;
        }
        node = node.parentNode;
      }
      return false;
    }
    function inStr(str, find) {
      return str.indexOf(find) > -1;
    }
    function splitStr(str) {
      return str.trim().split(/\s+/g);
    }
    function inArray(src, find, findByKey) {
      if (src.indexOf && !findByKey) {
        return src.indexOf(find);
      } else {
        var i = 0;
        while (i < src.length) {
          if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {
            return i;
          }
          i++;
        }
        return -1;
      }
    }
    function toArray(obj) {
      return Array.prototype.slice.call(obj, 0);
    }
    function uniqueArray(src, key, sort) {
      var results = [];
      var values = [];
      var i = 0;
      while (i < src.length) {
        var val = key ? src[i][key] : src[i];
        if (inArray(values, val) < 0) {
          results.push(src[i]);
        }
        values[i] = val;
        i++;
      }
      if (sort) {
        if (!key) {
          results = results.sort();
        } else {
          results = results.sort(function sortUniqueArray(a, b) {
            return a[key] > b[key];
          });
        }
      }
      return results;
    }
    function prefixed(obj, property) {
      var prefix,
          prop;
      var camelProp = property[0].toUpperCase() + property.slice(1);
      var i = 0;
      while (i < VENDOR_PREFIXES.length) {
        prefix = VENDOR_PREFIXES[i];
        prop = prefix ? prefix + camelProp : property;
        if (prop in obj) {
          return prop;
        }
        i++;
      }
      return undefined;
    }
    var _uniqueId = 1;
    function uniqueId() {
      return _uniqueId++;
    }
    function getWindowForElement(element) {
      var doc = element.ownerDocument;
      return doc.defaultView || doc.parentWindow;
    }
    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;
    var SUPPORT_TOUCH = ('ontouchstart' in window);
    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;
    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);
    var INPUT_TYPE_TOUCH = 'touch';
    var INPUT_TYPE_PEN = 'pen';
    var INPUT_TYPE_MOUSE = 'mouse';
    var INPUT_TYPE_KINECT = 'kinect';
    var COMPUTE_INTERVAL = 25;
    var INPUT_START = 1;
    var INPUT_MOVE = 2;
    var INPUT_END = 4;
    var INPUT_CANCEL = 8;
    var DIRECTION_NONE = 1;
    var DIRECTION_LEFT = 2;
    var DIRECTION_RIGHT = 4;
    var DIRECTION_UP = 8;
    var DIRECTION_DOWN = 16;
    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;
    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;
    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;
    var PROPS_XY = ['x', 'y'];
    var PROPS_CLIENT_XY = ['clientX', 'clientY'];
    function Input(manager, callback) {
      var self = this;
      this.manager = manager;
      this.callback = callback;
      this.element = manager.element;
      this.target = manager.options.inputTarget;
      this.domHandler = function(ev) {
        if (boolOrFn(manager.options.enable, [manager])) {
          self.handler(ev);
        }
      };
      this.init();
    }
    Input.prototype = {
      handler: function handler() {},
      init: function init() {
        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
      },
      destroy: function destroy() {
        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);
        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);
        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);
      }
    };
    function createInputInstance(manager) {
      var Type;
      var inputClass = manager.options.inputClass;
      if (inputClass) {
        Type = inputClass;
      } else if (SUPPORT_POINTER_EVENTS) {
        Type = PointerEventInput;
      } else if (SUPPORT_ONLY_TOUCH) {
        Type = TouchInput;
      } else if (!SUPPORT_TOUCH) {
        Type = MouseInput;
      } else {
        Type = TouchMouseInput;
      }
      return new Type(manager, inputHandler);
    }
    function inputHandler(manager, eventType, input) {
      var pointersLen = input.pointers.length;
      var changedPointersLen = input.changedPointers.length;
      var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;
      var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;
      input.isFirst = !!isFirst;
      input.isFinal = !!isFinal;
      if (isFirst) {
        manager.session = {};
      }
      input.eventType = eventType;
      computeInputData(manager, input);
      manager.emit('hammer.input', input);
      manager.recognize(input);
      manager.session.prevInput = input;
    }
    function computeInputData(manager, input) {
      var session = manager.session;
      var pointers = input.pointers;
      var pointersLength = pointers.length;
      if (!session.firstInput) {
        session.firstInput = simpleCloneInputData(input);
      }
      if (pointersLength > 1 && !session.firstMultiple) {
        session.firstMultiple = simpleCloneInputData(input);
      } else if (pointersLength === 1) {
        session.firstMultiple = false;
      }
      var firstInput = session.firstInput;
      var firstMultiple = session.firstMultiple;
      var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;
      var center = input.center = getCenter(pointers);
      input.timeStamp = now();
      input.deltaTime = input.timeStamp - firstInput.timeStamp;
      input.angle = getAngle(offsetCenter, center);
      input.distance = getDistance(offsetCenter, center);
      computeDeltaXY(session, input);
      input.offsetDirection = getDirection(input.deltaX, input.deltaY);
      input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;
      input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;
      computeIntervalInputData(session, input);
      var target = manager.element;
      if (hasParent(input.srcEvent.target, target)) {
        target = input.srcEvent.target;
      }
      input.target = target;
    }
    function computeDeltaXY(session, input) {
      var center = input.center;
      var offset = session.offsetDelta || {};
      var prevDelta = session.prevDelta || {};
      var prevInput = session.prevInput || {};
      if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {
        prevDelta = session.prevDelta = {
          x: prevInput.deltaX || 0,
          y: prevInput.deltaY || 0
        };
        offset = session.offsetDelta = {
          x: center.x,
          y: center.y
        };
      }
      input.deltaX = prevDelta.x + (center.x - offset.x);
      input.deltaY = prevDelta.y + (center.y - offset.y);
    }
    function computeIntervalInputData(session, input) {
      var last = session.lastInterval || input,
          deltaTime = input.timeStamp - last.timeStamp,
          velocity,
          velocityX,
          velocityY,
          direction;
      if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {
        var deltaX = last.deltaX - input.deltaX;
        var deltaY = last.deltaY - input.deltaY;
        var v = getVelocity(deltaTime, deltaX, deltaY);
        velocityX = v.x;
        velocityY = v.y;
        velocity = abs(v.x) > abs(v.y) ? v.x : v.y;
        direction = getDirection(deltaX, deltaY);
        session.lastInterval = input;
      } else {
        velocity = last.velocity;
        velocityX = last.velocityX;
        velocityY = last.velocityY;
        direction = last.direction;
      }
      input.velocity = velocity;
      input.velocityX = velocityX;
      input.velocityY = velocityY;
      input.direction = direction;
    }
    function simpleCloneInputData(input) {
      var pointers = [];
      var i = 0;
      while (i < input.pointers.length) {
        pointers[i] = {
          clientX: round(input.pointers[i].clientX),
          clientY: round(input.pointers[i].clientY)
        };
        i++;
      }
      return {
        timeStamp: now(),
        pointers: pointers,
        center: getCenter(pointers),
        deltaX: input.deltaX,
        deltaY: input.deltaY
      };
    }
    function getCenter(pointers) {
      var pointersLength = pointers.length;
      if (pointersLength === 1) {
        return {
          x: round(pointers[0].clientX),
          y: round(pointers[0].clientY)
        };
      }
      var x = 0,
          y = 0,
          i = 0;
      while (i < pointersLength) {
        x += pointers[i].clientX;
        y += pointers[i].clientY;
        i++;
      }
      return {
        x: round(x / pointersLength),
        y: round(y / pointersLength)
      };
    }
    function getVelocity(deltaTime, x, y) {
      return {
        x: x / deltaTime || 0,
        y: y / deltaTime || 0
      };
    }
    function getDirection(x, y) {
      if (x === y) {
        return DIRECTION_NONE;
      }
      if (abs(x) >= abs(y)) {
        return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
      }
      return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;
    }
    function getDistance(p1, p2, props) {
      if (!props) {
        props = PROPS_XY;
      }
      var x = p2[props[0]] - p1[props[0]],
          y = p2[props[1]] - p1[props[1]];
      return Math.sqrt(x * x + y * y);
    }
    function getAngle(p1, p2, props) {
      if (!props) {
        props = PROPS_XY;
      }
      var x = p2[props[0]] - p1[props[0]],
          y = p2[props[1]] - p1[props[1]];
      return Math.atan2(y, x) * 180 / Math.PI;
    }
    function getRotation(start, end) {
      return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[1], start[0], PROPS_CLIENT_XY);
    }
    function getScale(start, end) {
      return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);
    }
    var MOUSE_INPUT_MAP = {
      mousedown: INPUT_START,
      mousemove: INPUT_MOVE,
      mouseup: INPUT_END
    };
    var MOUSE_ELEMENT_EVENTS = 'mousedown';
    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';
    function MouseInput() {
      this.evEl = MOUSE_ELEMENT_EVENTS;
      this.evWin = MOUSE_WINDOW_EVENTS;
      this.allow = true;
      this.pressed = false;
      Input.apply(this, arguments);
    }
    inherit(MouseInput, Input, {handler: function MEhandler(ev) {
        var eventType = MOUSE_INPUT_MAP[ev.type];
        if (eventType & INPUT_START && ev.button === 0) {
          this.pressed = true;
        }
        if (eventType & INPUT_MOVE && ev.which !== 1) {
          eventType = INPUT_END;
        }
        if (!this.pressed || !this.allow) {
          return;
        }
        if (eventType & INPUT_END) {
          this.pressed = false;
        }
        this.callback(this.manager, eventType, {
          pointers: [ev],
          changedPointers: [ev],
          pointerType: INPUT_TYPE_MOUSE,
          srcEvent: ev
        });
      }});
    var POINTER_INPUT_MAP = {
      pointerdown: INPUT_START,
      pointermove: INPUT_MOVE,
      pointerup: INPUT_END,
      pointercancel: INPUT_CANCEL,
      pointerout: INPUT_CANCEL
    };
    var IE10_POINTER_TYPE_ENUM = {
      2: INPUT_TYPE_TOUCH,
      3: INPUT_TYPE_PEN,
      4: INPUT_TYPE_MOUSE,
      5: INPUT_TYPE_KINECT
    };
    var POINTER_ELEMENT_EVENTS = 'pointerdown';
    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';
    if (window.MSPointerEvent) {
      POINTER_ELEMENT_EVENTS = 'MSPointerDown';
      POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';
    }
    function PointerEventInput() {
      this.evEl = POINTER_ELEMENT_EVENTS;
      this.evWin = POINTER_WINDOW_EVENTS;
      Input.apply(this, arguments);
      this.store = this.manager.session.pointerEvents = [];
    }
    inherit(PointerEventInput, Input, {handler: function PEhandler(ev) {
        var store = this.store;
        var removePointer = false;
        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');
        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];
        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;
        var isTouch = pointerType == INPUT_TYPE_TOUCH;
        var storeIndex = inArray(store, ev.pointerId, 'pointerId');
        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {
          if (storeIndex < 0) {
            store.push(ev);
            storeIndex = store.length - 1;
          }
        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {
          removePointer = true;
        }
        if (storeIndex < 0) {
          return;
        }
        store[storeIndex] = ev;
        this.callback(this.manager, eventType, {
          pointers: store,
          changedPointers: [ev],
          pointerType: pointerType,
          srcEvent: ev
        });
        if (removePointer) {
          store.splice(storeIndex, 1);
        }
      }});
    var SINGLE_TOUCH_INPUT_MAP = {
      touchstart: INPUT_START,
      touchmove: INPUT_MOVE,
      touchend: INPUT_END,
      touchcancel: INPUT_CANCEL
    };
    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';
    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';
    function SingleTouchInput() {
      this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;
      this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;
      this.started = false;
      Input.apply(this, arguments);
    }
    inherit(SingleTouchInput, Input, {handler: function TEhandler(ev) {
        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];
        if (type === INPUT_START) {
          this.started = true;
        }
        if (!this.started) {
          return;
        }
        var touches = normalizeSingleTouches.call(this, ev, type);
        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {
          this.started = false;
        }
        this.callback(this.manager, type, {
          pointers: touches[0],
          changedPointers: touches[1],
          pointerType: INPUT_TYPE_TOUCH,
          srcEvent: ev
        });
      }});
    function normalizeSingleTouches(ev, type) {
      var all = toArray(ev.touches);
      var changed = toArray(ev.changedTouches);
      if (type & (INPUT_END | INPUT_CANCEL)) {
        all = uniqueArray(all.concat(changed), 'identifier', true);
      }
      return [all, changed];
    }
    var TOUCH_INPUT_MAP = {
      touchstart: INPUT_START,
      touchmove: INPUT_MOVE,
      touchend: INPUT_END,
      touchcancel: INPUT_CANCEL
    };
    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';
    function TouchInput() {
      this.evTarget = TOUCH_TARGET_EVENTS;
      this.targetIds = {};
      Input.apply(this, arguments);
    }
    inherit(TouchInput, Input, {handler: function MTEhandler(ev) {
        var type = TOUCH_INPUT_MAP[ev.type];
        var touches = getTouches.call(this, ev, type);
        if (!touches) {
          return;
        }
        this.callback(this.manager, type, {
          pointers: touches[0],
          changedPointers: touches[1],
          pointerType: INPUT_TYPE_TOUCH,
          srcEvent: ev
        });
      }});
    function getTouches(ev, type) {
      var allTouches = toArray(ev.touches);
      var targetIds = this.targetIds;
      if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {
        targetIds[allTouches[0].identifier] = true;
        return [allTouches, allTouches];
      }
      var i,
          targetTouches,
          changedTouches = toArray(ev.changedTouches),
          changedTargetTouches = [],
          target = this.target;
      targetTouches = allTouches.filter(function(touch) {
        return hasParent(touch.target, target);
      });
      if (type === INPUT_START) {
        i = 0;
        while (i < targetTouches.length) {
          targetIds[targetTouches[i].identifier] = true;
          i++;
        }
      }
      i = 0;
      while (i < changedTouches.length) {
        if (targetIds[changedTouches[i].identifier]) {
          changedTargetTouches.push(changedTouches[i]);
        }
        if (type & (INPUT_END | INPUT_CANCEL)) {
          delete targetIds[changedTouches[i].identifier];
        }
        i++;
      }
      if (!changedTargetTouches.length) {
        return;
      }
      return [uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];
    }
    function TouchMouseInput() {
      Input.apply(this, arguments);
      var handler = bindFn(this.handler, this);
      this.touch = new TouchInput(this.manager, handler);
      this.mouse = new MouseInput(this.manager, handler);
    }
    inherit(TouchMouseInput, Input, {
      handler: function TMEhandler(manager, inputEvent, inputData) {
        var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,
            isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;
        if (isTouch) {
          this.mouse.allow = false;
        } else if (isMouse && !this.mouse.allow) {
          return;
        }
        if (inputEvent & (INPUT_END | INPUT_CANCEL)) {
          this.mouse.allow = true;
        }
        this.callback(manager, inputEvent, inputData);
      },
      destroy: function destroy() {
        this.touch.destroy();
        this.mouse.destroy();
      }
    });
    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');
    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;
    var TOUCH_ACTION_COMPUTE = 'compute';
    var TOUCH_ACTION_AUTO = 'auto';
    var TOUCH_ACTION_MANIPULATION = 'manipulation';
    var TOUCH_ACTION_NONE = 'none';
    var TOUCH_ACTION_PAN_X = 'pan-x';
    var TOUCH_ACTION_PAN_Y = 'pan-y';
    function TouchAction(manager, value) {
      this.manager = manager;
      this.set(value);
    }
    TouchAction.prototype = {
      set: function set(value) {
        if (value == TOUCH_ACTION_COMPUTE) {
          value = this.compute();
        }
        if (NATIVE_TOUCH_ACTION) {
          this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;
        }
        this.actions = value.toLowerCase().trim();
      },
      update: function update() {
        this.set(this.manager.options.touchAction);
      },
      compute: function compute() {
        var actions = [];
        each(this.manager.recognizers, function(recognizer) {
          if (boolOrFn(recognizer.options.enable, [recognizer])) {
            actions = actions.concat(recognizer.getTouchAction());
          }
        });
        return cleanTouchActions(actions.join(' '));
      },
      preventDefaults: function preventDefaults(input) {
        if (NATIVE_TOUCH_ACTION) {
          return;
        }
        var srcEvent = input.srcEvent;
        var direction = input.offsetDirection;
        if (this.manager.session.prevented) {
          srcEvent.preventDefault();
          return;
        }
        var actions = this.actions;
        var hasNone = inStr(actions, TOUCH_ACTION_NONE);
        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);
        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
        if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {
          return this.preventSrc(srcEvent);
        }
      },
      preventSrc: function preventSrc(srcEvent) {
        this.manager.session.prevented = true;
        srcEvent.preventDefault();
      }
    };
    function cleanTouchActions(actions) {
      if (inStr(actions, TOUCH_ACTION_NONE)) {
        return TOUCH_ACTION_NONE;
      }
      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);
      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);
      if (hasPanX && hasPanY) {
        return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;
      }
      if (hasPanX || hasPanY) {
        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;
      }
      if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {
        return TOUCH_ACTION_MANIPULATION;
      }
      return TOUCH_ACTION_AUTO;
    }
    var STATE_POSSIBLE = 1;
    var STATE_BEGAN = 2;
    var STATE_CHANGED = 4;
    var STATE_ENDED = 8;
    var STATE_RECOGNIZED = STATE_ENDED;
    var STATE_CANCELLED = 16;
    var STATE_FAILED = 32;
    function Recognizer(options) {
      this.id = uniqueId();
      this.manager = null;
      this.options = merge(options || {}, this.defaults);
      this.options.enable = ifUndefined(this.options.enable, true);
      this.state = STATE_POSSIBLE;
      this.simultaneous = {};
      this.requireFail = [];
    }
    Recognizer.prototype = {
      defaults: {},
      set: function set(options) {
        extend(this.options, options);
        this.manager && this.manager.touchAction.update();
        return this;
      },
      recognizeWith: function recognizeWith(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {
          return this;
        }
        var simultaneous = this.simultaneous;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (!simultaneous[otherRecognizer.id]) {
          simultaneous[otherRecognizer.id] = otherRecognizer;
          otherRecognizer.recognizeWith(this);
        }
        return this;
      },
      dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {
          return this;
        }
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        delete this.simultaneous[otherRecognizer.id];
        return this;
      },
      requireFailure: function requireFailure(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {
          return this;
        }
        var requireFail = this.requireFail;
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        if (inArray(requireFail, otherRecognizer) === -1) {
          requireFail.push(otherRecognizer);
          otherRecognizer.requireFailure(this);
        }
        return this;
      },
      dropRequireFailure: function dropRequireFailure(otherRecognizer) {
        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {
          return this;
        }
        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);
        var index = inArray(this.requireFail, otherRecognizer);
        if (index > -1) {
          this.requireFail.splice(index, 1);
        }
        return this;
      },
      hasRequireFailures: function hasRequireFailures() {
        return this.requireFail.length > 0;
      },
      canRecognizeWith: function canRecognizeWith(otherRecognizer) {
        return !!this.simultaneous[otherRecognizer.id];
      },
      emit: function emit(input) {
        var self = this;
        var state = this.state;
        function emit(withState) {
          self.manager.emit(self.options.event + (withState ? stateStr(state) : ''), input);
        }
        if (state < STATE_ENDED) {
          emit(true);
        }
        emit();
        if (state >= STATE_ENDED) {
          emit(true);
        }
      },
      tryEmit: function tryEmit(input) {
        if (this.canEmit()) {
          return this.emit(input);
        }
        this.state = STATE_FAILED;
      },
      canEmit: function canEmit() {
        var i = 0;
        while (i < this.requireFail.length) {
          if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {
            return false;
          }
          i++;
        }
        return true;
      },
      recognize: function recognize(inputData) {
        var inputDataClone = extend({}, inputData);
        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {
          this.reset();
          this.state = STATE_FAILED;
          return;
        }
        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {
          this.state = STATE_POSSIBLE;
        }
        this.state = this.process(inputDataClone);
        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {
          this.tryEmit(inputDataClone);
        }
      },
      process: function process(inputData) {},
      getTouchAction: function getTouchAction() {},
      reset: function reset() {}
    };
    function stateStr(state) {
      if (state & STATE_CANCELLED) {
        return 'cancel';
      } else if (state & STATE_ENDED) {
        return 'end';
      } else if (state & STATE_CHANGED) {
        return 'move';
      } else if (state & STATE_BEGAN) {
        return 'start';
      }
      return '';
    }
    function directionStr(direction) {
      if (direction == DIRECTION_DOWN) {
        return 'down';
      } else if (direction == DIRECTION_UP) {
        return 'up';
      } else if (direction == DIRECTION_LEFT) {
        return 'left';
      } else if (direction == DIRECTION_RIGHT) {
        return 'right';
      }
      return '';
    }
    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {
      var manager = recognizer.manager;
      if (manager) {
        return manager.get(otherRecognizer);
      }
      return otherRecognizer;
    }
    function AttrRecognizer() {
      Recognizer.apply(this, arguments);
    }
    inherit(AttrRecognizer, Recognizer, {
      defaults: {pointers: 1},
      attrTest: function attrTest(input) {
        var optionPointers = this.options.pointers;
        return optionPointers === 0 || input.pointers.length === optionPointers;
      },
      process: function process(input) {
        var state = this.state;
        var eventType = input.eventType;
        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);
        var isValid = this.attrTest(input);
        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {
          return state | STATE_CANCELLED;
        } else if (isRecognized || isValid) {
          if (eventType & INPUT_END) {
            return state | STATE_ENDED;
          } else if (!(state & STATE_BEGAN)) {
            return STATE_BEGAN;
          }
          return state | STATE_CHANGED;
        }
        return STATE_FAILED;
      }
    });
    function PanRecognizer() {
      AttrRecognizer.apply(this, arguments);
      this.pX = null;
      this.pY = null;
    }
    inherit(PanRecognizer, AttrRecognizer, {
      defaults: {
        event: 'pan',
        threshold: 10,
        pointers: 1,
        direction: DIRECTION_ALL
      },
      getTouchAction: function getTouchAction() {
        var direction = this.options.direction;
        var actions = [];
        if (direction & DIRECTION_HORIZONTAL) {
          actions.push(TOUCH_ACTION_PAN_Y);
        }
        if (direction & DIRECTION_VERTICAL) {
          actions.push(TOUCH_ACTION_PAN_X);
        }
        return actions;
      },
      directionTest: function directionTest(input) {
        var options = this.options;
        var hasMoved = true;
        var distance = input.distance;
        var direction = input.direction;
        var x = input.deltaX;
        var y = input.deltaY;
        if (!(direction & options.direction)) {
          if (options.direction & DIRECTION_HORIZONTAL) {
            direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;
            hasMoved = x != this.pX;
            distance = Math.abs(input.deltaX);
          } else {
            direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;
            hasMoved = y != this.pY;
            distance = Math.abs(input.deltaY);
          }
        }
        input.direction = direction;
        return hasMoved && distance > options.threshold && direction & options.direction;
      },
      attrTest: function attrTest(input) {
        return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));
      },
      emit: function emit(input) {
        this.pX = input.deltaX;
        this.pY = input.deltaY;
        var direction = directionStr(input.direction);
        if (direction) {
          this.manager.emit(this.options.event + direction, input);
        }
        this._super.emit.call(this, input);
      }
    });
    function PinchRecognizer() {
      AttrRecognizer.apply(this, arguments);
    }
    inherit(PinchRecognizer, AttrRecognizer, {
      defaults: {
        event: 'pinch',
        threshold: 0,
        pointers: 2
      },
      getTouchAction: function getTouchAction() {
        return [TOUCH_ACTION_NONE];
      },
      attrTest: function attrTest(input) {
        return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);
      },
      emit: function emit(input) {
        this._super.emit.call(this, input);
        if (input.scale !== 1) {
          var inOut = input.scale < 1 ? 'in' : 'out';
          this.manager.emit(this.options.event + inOut, input);
        }
      }
    });
    function PressRecognizer() {
      Recognizer.apply(this, arguments);
      this._timer = null;
      this._input = null;
    }
    inherit(PressRecognizer, Recognizer, {
      defaults: {
        event: 'press',
        pointers: 1,
        time: 500,
        threshold: 5
      },
      getTouchAction: function getTouchAction() {
        return [TOUCH_ACTION_AUTO];
      },
      process: function process(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTime = input.deltaTime > options.time;
        this._input = input;
        if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {
          this.reset();
        } else if (input.eventType & INPUT_START) {
          this.reset();
          this._timer = setTimeoutContext(function() {
            this.state = STATE_RECOGNIZED;
            this.tryEmit();
          }, options.time, this);
        } else if (input.eventType & INPUT_END) {
          return STATE_RECOGNIZED;
        }
        return STATE_FAILED;
      },
      reset: function reset() {
        clearTimeout(this._timer);
      },
      emit: function emit(input) {
        if (this.state !== STATE_RECOGNIZED) {
          return;
        }
        if (input && input.eventType & INPUT_END) {
          this.manager.emit(this.options.event + 'up', input);
        } else {
          this._input.timeStamp = now();
          this.manager.emit(this.options.event, this._input);
        }
      }
    });
    function RotateRecognizer() {
      AttrRecognizer.apply(this, arguments);
    }
    inherit(RotateRecognizer, AttrRecognizer, {
      defaults: {
        event: 'rotate',
        threshold: 0,
        pointers: 2
      },
      getTouchAction: function getTouchAction() {
        return [TOUCH_ACTION_NONE];
      },
      attrTest: function attrTest(input) {
        return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);
      }
    });
    function SwipeRecognizer() {
      AttrRecognizer.apply(this, arguments);
    }
    inherit(SwipeRecognizer, AttrRecognizer, {
      defaults: {
        event: 'swipe',
        threshold: 10,
        velocity: 0.65,
        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,
        pointers: 1
      },
      getTouchAction: function getTouchAction() {
        return PanRecognizer.prototype.getTouchAction.call(this);
      },
      attrTest: function attrTest(input) {
        var direction = this.options.direction;
        var velocity;
        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {
          velocity = input.velocity;
        } else if (direction & DIRECTION_HORIZONTAL) {
          velocity = input.velocityX;
        } else if (direction & DIRECTION_VERTICAL) {
          velocity = input.velocityY;
        }
        return this._super.attrTest.call(this, input) && direction & input.direction && input.distance > this.options.threshold && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;
      },
      emit: function emit(input) {
        var direction = directionStr(input.direction);
        if (direction) {
          this.manager.emit(this.options.event + direction, input);
        }
        this.manager.emit(this.options.event, input);
      }
    });
    function TapRecognizer() {
      Recognizer.apply(this, arguments);
      this.pTime = false;
      this.pCenter = false;
      this._timer = null;
      this._input = null;
      this.count = 0;
    }
    inherit(TapRecognizer, Recognizer, {
      defaults: {
        event: 'tap',
        pointers: 1,
        taps: 1,
        interval: 300,
        time: 250,
        threshold: 2,
        posThreshold: 10
      },
      getTouchAction: function getTouchAction() {
        return [TOUCH_ACTION_MANIPULATION];
      },
      process: function process(input) {
        var options = this.options;
        var validPointers = input.pointers.length === options.pointers;
        var validMovement = input.distance < options.threshold;
        var validTouchTime = input.deltaTime < options.time;
        this.reset();
        if (input.eventType & INPUT_START && this.count === 0) {
          return this.failTimeout();
        }
        if (validMovement && validTouchTime && validPointers) {
          if (input.eventType != INPUT_END) {
            return this.failTimeout();
          }
          var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;
          var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;
          this.pTime = input.timeStamp;
          this.pCenter = input.center;
          if (!validMultiTap || !validInterval) {
            this.count = 1;
          } else {
            this.count += 1;
          }
          this._input = input;
          var tapCount = this.count % options.taps;
          if (tapCount === 0) {
            if (!this.hasRequireFailures()) {
              return STATE_RECOGNIZED;
            } else {
              this._timer = setTimeoutContext(function() {
                this.state = STATE_RECOGNIZED;
                this.tryEmit();
              }, options.interval, this);
              return STATE_BEGAN;
            }
          }
        }
        return STATE_FAILED;
      },
      failTimeout: function failTimeout() {
        this._timer = setTimeoutContext(function() {
          this.state = STATE_FAILED;
        }, this.options.interval, this);
        return STATE_FAILED;
      },
      reset: function reset() {
        clearTimeout(this._timer);
      },
      emit: function emit() {
        if (this.state == STATE_RECOGNIZED) {
          this._input.tapCount = this.count;
          this.manager.emit(this.options.event, this._input);
        }
      }
    });
    function Hammer(element, options) {
      options = options || {};
      options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);
      return new Manager(element, options);
    }
    Hammer.VERSION = '2.0.4';
    Hammer.defaults = {
      domEvents: false,
      touchAction: TOUCH_ACTION_COMPUTE,
      enable: true,
      inputTarget: null,
      inputClass: null,
      preset: [[RotateRecognizer, {enable: false}], [PinchRecognizer, {enable: false}, ['rotate']], [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}], [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']], [TapRecognizer], [TapRecognizer, {
        event: 'doubletap',
        taps: 2
      }, ['tap']], [PressRecognizer]],
      cssProps: {
        userSelect: 'none',
        touchSelect: 'none',
        touchCallout: 'none',
        contentZooming: 'none',
        userDrag: 'none',
        tapHighlightColor: 'rgba(0,0,0,0)'
      }
    };
    var STOP = 1;
    var FORCED_STOP = 2;
    function Manager(element, options) {
      options = options || {};
      this.options = merge(options, Hammer.defaults);
      this.options.inputTarget = this.options.inputTarget || element;
      this.handlers = {};
      this.session = {};
      this.recognizers = [];
      this.element = element;
      this.input = createInputInstance(this);
      this.touchAction = new TouchAction(this, this.options.touchAction);
      toggleCssProps(this, true);
      each(options.recognizers, function(item) {
        var recognizer = this.add(new item[0](item[1]));
        item[2] && recognizer.recognizeWith(item[2]);
        item[3] && recognizer.requireFailure(item[3]);
      }, this);
    }
    Manager.prototype = {
      set: function set(options) {
        extend(this.options, options);
        if (options.touchAction) {
          this.touchAction.update();
        }
        if (options.inputTarget) {
          this.input.destroy();
          this.input.target = options.inputTarget;
          this.input.init();
        }
        return this;
      },
      stop: function stop(force) {
        this.session.stopped = force ? FORCED_STOP : STOP;
      },
      recognize: function recognize(inputData) {
        var session = this.session;
        if (session.stopped) {
          return;
        }
        this.touchAction.preventDefaults(inputData);
        var recognizer;
        var recognizers = this.recognizers;
        var curRecognizer = session.curRecognizer;
        if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {
          curRecognizer = session.curRecognizer = null;
        }
        var i = 0;
        while (i < recognizers.length) {
          recognizer = recognizers[i];
          if (session.stopped !== FORCED_STOP && (!curRecognizer || recognizer == curRecognizer || recognizer.canRecognizeWith(curRecognizer))) {
            recognizer.recognize(inputData);
          } else {
            recognizer.reset();
          }
          if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {
            curRecognizer = session.curRecognizer = recognizer;
          }
          i++;
        }
      },
      get: function get(recognizer) {
        if (recognizer instanceof Recognizer) {
          return recognizer;
        }
        var recognizers = this.recognizers;
        for (var i = 0; i < recognizers.length; i++) {
          if (recognizers[i].options.event == recognizer) {
            return recognizers[i];
          }
        }
        return null;
      },
      add: function add(recognizer) {
        if (invokeArrayArg(recognizer, 'add', this)) {
          return this;
        }
        var existing = this.get(recognizer.options.event);
        if (existing) {
          this.remove(existing);
        }
        this.recognizers.push(recognizer);
        recognizer.manager = this;
        this.touchAction.update();
        return recognizer;
      },
      remove: function remove(recognizer) {
        if (invokeArrayArg(recognizer, 'remove', this)) {
          return this;
        }
        var recognizers = this.recognizers;
        recognizer = this.get(recognizer);
        recognizers.splice(inArray(recognizers, recognizer), 1);
        this.touchAction.update();
        return this;
      },
      on: function on(events, handler) {
        var handlers = this.handlers;
        each(splitStr(events), function(event) {
          handlers[event] = handlers[event] || [];
          handlers[event].push(handler);
        });
        return this;
      },
      off: function off(events, handler) {
        var handlers = this.handlers;
        each(splitStr(events), function(event) {
          if (!handler) {
            delete handlers[event];
          } else {
            handlers[event].splice(inArray(handlers[event], handler), 1);
          }
        });
        return this;
      },
      emit: function emit(event, data) {
        if (this.options.domEvents) {
          triggerDomEvent(event, data);
        }
        var handlers = this.handlers[event] && this.handlers[event].slice();
        if (!handlers || !handlers.length) {
          return;
        }
        data.type = event;
        data.preventDefault = function() {
          data.srcEvent.preventDefault();
        };
        var i = 0;
        while (i < handlers.length) {
          handlers[i](data);
          i++;
        }
      },
      destroy: function destroy() {
        this.element && toggleCssProps(this, false);
        this.handlers = {};
        this.session = {};
        this.input.destroy();
        this.element = null;
      }
    };
    function toggleCssProps(manager, add) {
      var element = manager.element;
      each(manager.options.cssProps, function(value, name) {
        element.style[prefixed(element.style, name)] = add ? value : '';
      });
    }
    function triggerDomEvent(event, data) {
      var gestureEvent = document.createEvent('Event');
      gestureEvent.initEvent(event, true, true);
      gestureEvent.gesture = data;
      data.target.dispatchEvent(gestureEvent);
    }
    extend(Hammer, {
      INPUT_START: INPUT_START,
      INPUT_MOVE: INPUT_MOVE,
      INPUT_END: INPUT_END,
      INPUT_CANCEL: INPUT_CANCEL,
      STATE_POSSIBLE: STATE_POSSIBLE,
      STATE_BEGAN: STATE_BEGAN,
      STATE_CHANGED: STATE_CHANGED,
      STATE_ENDED: STATE_ENDED,
      STATE_RECOGNIZED: STATE_RECOGNIZED,
      STATE_CANCELLED: STATE_CANCELLED,
      STATE_FAILED: STATE_FAILED,
      DIRECTION_NONE: DIRECTION_NONE,
      DIRECTION_LEFT: DIRECTION_LEFT,
      DIRECTION_RIGHT: DIRECTION_RIGHT,
      DIRECTION_UP: DIRECTION_UP,
      DIRECTION_DOWN: DIRECTION_DOWN,
      DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,
      DIRECTION_VERTICAL: DIRECTION_VERTICAL,
      DIRECTION_ALL: DIRECTION_ALL,
      Manager: Manager,
      Input: Input,
      TouchAction: TouchAction,
      TouchInput: TouchInput,
      MouseInput: MouseInput,
      PointerEventInput: PointerEventInput,
      TouchMouseInput: TouchMouseInput,
      SingleTouchInput: SingleTouchInput,
      Recognizer: Recognizer,
      AttrRecognizer: AttrRecognizer,
      Tap: TapRecognizer,
      Pan: PanRecognizer,
      Swipe: SwipeRecognizer,
      Pinch: PinchRecognizer,
      Rotate: RotateRecognizer,
      Press: PressRecognizer,
      on: addEventListeners,
      off: removeEventListeners,
      each: each,
      merge: merge,
      extend: extend,
      inherit: inherit,
      bindFn: bindFn,
      prefixed: prefixed
    });
    exports.Hammer = Hammer;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/gesture", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/hammer"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var _ionicGesturesHammer = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/hammer');
  var Gesture = (function() {
    function Gesture(element) {
      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      _classCallCheck(this, Gesture);
      util.defaults(opts, {domEvents: true});
      this.element = element;
      this.direction = opts.direction || 'x';
      opts.direction = this.direction === 'x' ? _ionicGesturesHammer.Hammer.DIRECTION_HORIZONTAL : _ionicGesturesHammer.Hammer.DIRECTION_VERTICAL;
      this._options = opts;
      this._callbacks = {};
    }
    _createClass(Gesture, [{
      key: 'options',
      value: function options() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        util.extend(this._options, opts);
      }
    }, {
      key: 'on',
      value: function on(type, cb) {
        if (type == 'pinch' || type == 'rotate') {
          this.hammertime.get('pinch').set({enable: true});
        }
        this.hammertime.on(type, cb);
        (this._callbacks[type] || (this._callbacks[type] = [])).push(cb);
      }
    }, {
      key: 'listen',
      value: function listen() {
        this.hammertime = (0, _ionicGesturesHammer.Hammer)(this.element, this._options);
      }
    }, {
      key: 'unlisten',
      value: function unlisten() {
        if (this.hammertime) {
          for (var type in this._callbacks) {
            for (var i = 0; i < this._callbacks[type].length; i++) {
              this.hammertime.off(type, this._callbacks[type]);
            }
          }
          this.hammertime.destroy();
          this.hammertime = null;
          this._callbacks = {};
        }
      }
    }, {
      key: 'destroy',
      value: function destroy() {
        this.unlisten();
      }
    }]);
    return Gesture;
  })();
  exports.Gesture = Gesture;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/drag-gesture", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x2, _x3, _x4) {
    var _again = true;
    _function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;
          _x3 = property;
          _x4 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ionicGesturesGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/gesture');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var DragGesture = (function(_Gesture) {
    _inherits(DragGesture, _Gesture);
    function DragGesture(element) {
      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      _classCallCheck(this, DragGesture);
      util.defaults(opts, {});
      _get(Object.getPrototypeOf(DragGesture.prototype), 'constructor', this).call(this, element, opts);
    }
    _createClass(DragGesture, [{
      key: 'listen',
      value: function listen() {
        var _this = this;
        _get(Object.getPrototypeOf(DragGesture.prototype), 'listen', this).call(this);
        this.on('panstart', function(ev) {
          if (_this.onDragStart(ev) !== false) {
            _this.dragging = true;
          }
        });
        this.on('panmove', function(ev) {
          if (!_this.dragging)
            return;
          if (_this.onDrag(ev) === false) {
            _this.dragging = false;
          }
        });
        this.on('panend', function(ev) {
          if (!_this.dragging)
            return;
          _this.onDragEnd(ev);
          _this.dragging = false;
        });
        this.hammertime.get('pan').set(this._options);
      }
    }, {
      key: 'onDrag',
      value: function onDrag() {}
    }, {
      key: 'onDragStart',
      value: function onDragStart() {}
    }, {
      key: 'onDragEnd',
      value: function onDragEnd() {}
    }]);
    return DragGesture;
  })(_ionicGesturesGesture.Gesture);
  exports.DragGesture = DragGesture;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-gesture", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/drag-gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x2, _x3, _x4) {
    var _again = true;
    _function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;
          _x3 = property;
          _x4 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ionicGesturesDragGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/drag-gesture');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var SlideGesture = (function(_DragGesture) {
    _inherits(SlideGesture, _DragGesture);
    function SlideGesture(element) {
      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      _classCallCheck(this, SlideGesture);
      _get(Object.getPrototypeOf(SlideGesture.prototype), 'constructor', this).call(this, element, opts);
      this.element = element;
    }
    _createClass(SlideGesture, [{
      key: 'getSlideBoundaries',
      value: function getSlideBoundaries(slide, ev) {
        return {
          min: 0,
          max: this.element.offsetWidth
        };
      }
    }, {
      key: 'getElementStartPos',
      value: function getElementStartPos(slide, ev) {
        return 0;
      }
    }, {
      key: 'canStart',
      value: function canStart() {
        return true;
      }
    }, {
      key: 'onDragStart',
      value: function onDragStart(ev) {
        var _this = this;
        if (!this.canStart(ev))
          return false;
        this.slide = {};
        var promise = this.onSlideBeforeStart(this.slide, ev) || Promise.resolve();
        promise.then(function() {
          var _getSlideBoundaries = _this.getSlideBoundaries(_this.slide, ev);
          var min = _getSlideBoundaries.min;
          var max = _getSlideBoundaries.max;
          _this.slide.min = min;
          _this.slide.max = max;
          _this.slide.elementStartPos = _this.getElementStartPos(_this.slide, ev);
          _this.slide.pointerStartPos = ev.center[_this.direction];
          _this.slide.started = true;
          _this.onSlideStart(_this.slide, ev);
        })['catch'](function() {
          _this.slide = null;
        });
      }
    }, {
      key: 'onDrag',
      value: function onDrag(ev) {
        if (!this.slide || !this.slide.started)
          return;
        this.slide.pos = ev.center[this.direction];
        this.slide.distance = util.clamp(this.slide.min, this.slide.pos - this.slide.pointerStartPos + this.slide.elementStartPos, this.slide.max);
        this.slide.delta = this.slide.pos - this.slide.pointerStartPos;
        this.onSlide(this.slide, ev);
      }
    }, {
      key: 'onDragEnd',
      value: function onDragEnd(ev) {
        if (!this.slide || !this.slide.started)
          return;
        this.onSlideEnd(this.slide, ev);
        this.slide = null;
      }
    }, {
      key: 'onSlideBeforeStart',
      value: function onSlideBeforeStart() {}
    }, {
      key: 'onSlideStart',
      value: function onSlideStart() {}
    }, {
      key: 'onSlide',
      value: function onSlide() {}
    }, {
      key: 'onSlideEnd',
      value: function onSlideEnd() {}
    }]);
    return SlideGesture;
  })(_ionicGesturesDragGesture.DragGesture);
  exports.SlideGesture = SlideGesture;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-edge-gesture", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x2, _x3, _x4) {
    var _again = true;
    _function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;
          _x3 = property;
          _x4 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ionicGesturesSlideGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-gesture');
  var _utilUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var SlideEdgeGesture = (function(_SlideGesture) {
    _inherits(SlideEdgeGesture, _SlideGesture);
    function SlideEdgeGesture(element) {
      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      _classCallCheck(this, SlideEdgeGesture);
      (0, _utilUtil.defaults)(opts, {
        edge: 'left',
        threshold: 50
      });
      _get(Object.getPrototypeOf(SlideEdgeGesture.prototype), 'constructor', this).call(this, element, opts);
      this.edges = opts.edge.split(' ');
      this.threshold = opts.threshold;
    }
    _createClass(SlideEdgeGesture, [{
      key: 'canStart',
      value: function canStart(ev) {
        var _this = this;
        this._d = this.getContainerDimensions();
        return this.edges.every(function(edge) {
          return _this._checkEdge(edge, ev.center);
        });
      }
    }, {
      key: 'getContainerDimensions',
      value: function getContainerDimensions() {
        return {
          left: 0,
          top: 0,
          width: (0, _utilDom.windowDimensions)().width,
          height: (0, _utilDom.windowDimensions)().height
        };
      }
    }, {
      key: '_checkEdge',
      value: function _checkEdge(edge, pos) {
        switch (edge) {
          case 'left':
            return pos.x <= this._d.left + this.threshold;
          case 'right':
            return pos.x >= this._d.width - this.threshold;
          case 'top':
            return pos.y <= this._d.top + this.threshold;
          case 'bottom':
            return pos.y >= this._d.height - this.threshold;
        }
      }
    }]);
    return SlideEdgeGesture;
  })(_ionicGesturesSlideGesture.SlideGesture);
  exports.SlideEdgeGesture = SlideEdgeGesture;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-gestures", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-edge-gesture", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x2, _x3, _x4) {
    var _again = true;
    _function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;
          _x3 = property;
          _x4 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ionicGesturesSlideEdgeGesture = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/gestures/slide-edge-gesture');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var MenuContentGesture = (function(_SlideEdgeGesture) {
    _inherits(MenuContentGesture, _SlideEdgeGesture);
    function MenuContentGesture(menu, targetEl) {
      var options = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
      _classCallCheck(this, MenuContentGesture);
      _get(Object.getPrototypeOf(MenuContentGesture.prototype), 'constructor', this).call(this, targetEl, util.extend({
        direction: menu.side === 'left' || menu.side === 'right' ? 'x' : 'y',
        edge: menu.side,
        threshold: 75
      }, options));
      this.menu = menu;
      this.listen();
    }
    _createClass(MenuContentGesture, [{
      key: 'canStart',
      value: function canStart(ev) {
        return this.menu.isOpen && this.menu.isEnabled ? true : _get(Object.getPrototypeOf(MenuContentGesture.prototype), 'canStart', this).call(this, ev);
      }
    }, {
      key: 'onSlideBeforeStart',
      value: function onSlideBeforeStart(slide, ev) {
        this.menu.setProgressStart();
      }
    }, {
      key: 'onSlide',
      value: function onSlide(slide, ev) {
        this.menu.setProgess(slide.distance / slide.max);
      }
    }, {
      key: 'onSlideEnd',
      value: function onSlideEnd(slide, ev) {
        var shouldComplete = Math.abs(ev.velocityX) > 0.2 || Math.abs(slide.delta) > Math.abs(slide.max) * 0.5;
        this.menu.setProgressEnd(shouldComplete);
      }
    }, {
      key: 'getElementStartPos',
      value: function getElementStartPos(slide, ev) {
        return this.menu.isOpen ? slide.max : slide.min;
      }
    }, {
      key: 'getSlideBoundaries',
      value: function getSlideBoundaries() {
        return {
          min: 0,
          max: this.menu.width()
        };
      }
    }]);
    return MenuContentGesture;
  })(_ionicGesturesSlideEdgeGesture.SlideEdgeGesture);
  var TargetGesture = (function(_MenuContentGesture) {
    _inherits(TargetGesture, _MenuContentGesture);
    function TargetGesture(menu) {
      _classCallCheck(this, TargetGesture);
      _get(Object.getPrototypeOf(TargetGesture.prototype), 'constructor', this).call(this, menu, menu.getNativeElement(), {threshold: 0});
    }
    return TargetGesture;
  })(MenuContentGesture);
  exports.TargetGesture = TargetGesture;
  var LeftMenuGesture = (function(_MenuContentGesture2) {
    _inherits(LeftMenuGesture, _MenuContentGesture2);
    function LeftMenuGesture(menu) {
      _classCallCheck(this, LeftMenuGesture);
      _get(Object.getPrototypeOf(LeftMenuGesture.prototype), 'constructor', this).call(this, menu, menu.getContentElement());
    }
    return LeftMenuGesture;
  })(MenuContentGesture);
  exports.LeftMenuGesture = LeftMenuGesture;
  var RightMenuGesture = (function(_MenuContentGesture3) {
    _inherits(RightMenuGesture, _MenuContentGesture3);
    function RightMenuGesture(menu) {
      _classCallCheck(this, RightMenuGesture);
      _get(Object.getPrototypeOf(RightMenuGesture.prototype), 'constructor', this).call(this, menu, menu.getContentElement());
    }
    _createClass(RightMenuGesture, [{
      key: 'onSlide',
      value: function onSlide(slide, ev) {
        this.menu.setProgess(slide.distance / slide.min);
      }
    }, {
      key: 'getElementStartPos',
      value: function getElementStartPos(slide, ev) {
        return this.menu.isOpen ? slide.min : slide.max;
      }
    }, {
      key: 'getSlideBoundaries',
      value: function getSlideBoundaries() {
        return {
          min: -this.menu.width(),
          max: 0
        };
      }
    }]);
    return RightMenuGesture;
  })(MenuContentGesture);
  exports.RightMenuGesture = RightMenuGesture;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _ionicUtilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var dom = _interopRequireWildcard(_ionicUtilDom);
  var Ion = (function() {
    function Ion(elementRef, config) {
      _classCallCheck(this, Ion);
      this.elementRef = elementRef;
      this.config = config;
    }
    _createClass(Ion, [{
      key: 'onInit',
      value: function onInit() {
        var cls = this.constructor;
        if (cls.defaultInputs && this.config) {
          for (var prop in cls.defaultInputs) {
            if (this[prop]) {
              continue;
            }
            var configVal = this.config.get(prop);
            if (configVal) {
              this[prop] = configVal;
              continue;
            }
            this[prop] = cls.defaultInputs[prop];
          }
        }
      }
    }, {
      key: 'getElementRef',
      value: function getElementRef() {
        return this.elementRef;
      }
    }, {
      key: 'getNativeElement',
      value: function getNativeElement() {
        return this.elementRef.nativeElement;
      }
    }, {
      key: 'getDimensions',
      value: function getDimensions() {
        return dom.getDimensions(this);
      }
    }, {
      key: 'width',
      value: function width() {
        return dom.getDimensions(this).width;
      }
    }, {
      key: 'height',
      value: function height() {
        return dom.getDimensions(this).height;
      }
    }]);
    return Ion;
  })();
  exports.Ion = Ion;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-gestures"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ion = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/ion');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  var _utilKeyboard = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard');
  var _menuGestures = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-gestures');
  var gestures = _interopRequireWildcard(_menuGestures);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Menu = (function(_Ion) {
    _inherits(Menu, _Ion);
    function Menu(app, elementRef, config, platform, keyboard) {
      _classCallCheck(this, Menu);
      _get(Object.getPrototypeOf(Menu.prototype), "constructor", this).call(this, elementRef, config);
      this.app = app;
      this.platform = platform;
      this.keyboard = keyboard;
      this.opening = new _angular2Angular2.EventEmitter('opening');
      this.isOpen = false;
      this._preventTime = 0;
      this.isEnabled = true;
    }
    _createClass(Menu, [{
      key: "onInit",
      value: function onInit() {
        _get(Object.getPrototypeOf(Menu.prototype), "onInit", this).call(this);
        var content = this.content;
        this._cntEle = content instanceof Node ? content : content && content.getNativeElement && content.getNativeElement();
        if (!this._cntEle) {
          return console.error('Menu: must have a [content] element to listen for drag events on. Example:\n\n<ion-menu [content]="content"></ion-menu>\n\n<ion-nav #content></ion-nav>');
        }
        if (this.side !== 'left' && this.side !== 'right') {
          this.side = 'left';
        }
        if (!this.id) {
          this.id = 'menu';
          this.app.register(this.id, this);
        }
        this._initGesture();
        this._initType(this.type);
        this._cntEle.classList.add('menu-content');
        this._cntEle.classList.add('menu-content-' + this.type);
        var self = this;
        this.onContentClick = function(ev) {
          if (self.isEnabled) {
            ev.preventDefault();
            ev.stopPropagation();
            self.close();
          }
        };
      }
    }, {
      key: "_initGesture",
      value: function _initGesture() {
        switch (this.side) {
          case 'right':
            this._gesture = new gestures.RightMenuGesture(this);
            break;
          case 'left':
            this._gesture = new gestures.LeftMenuGesture(this);
            break;
        }
        this._targetGesture = new gestures.TargetGesture(this);
      }
    }, {
      key: "_initType",
      value: function _initType(type) {
        type = type && type.trim().toLowerCase();
        if (!type) {
          type = this.config.get('menuType');
        }
        this._type = new menuTypes[type](this);
        this.type = type;
        if (this.config.get('animate') === false) {
          this._type.open.duration(33);
          this._type.close.duration(33);
        }
      }
    }, {
      key: "setOpen",
      value: function setOpen(shouldOpen) {
        var _this = this;
        if (shouldOpen === this.isOpen || this._isPrevented()) {
          return Promise.resolve();
        }
        this._before();
        return this._type.setOpen(shouldOpen).then(function() {
          _this._after(shouldOpen);
        });
      }
    }, {
      key: "setProgressStart",
      value: function setProgressStart() {
        if (this._isPrevented() || !this.isEnabled)
          return;
        this._before();
        this._type.setProgressStart(this.isOpen);
      }
    }, {
      key: "setProgess",
      value: function setProgess(value) {
        if (this.isEnabled) {
          this._prevent();
          this.app.setTransitioning(true);
          this._type.setProgess(value);
        }
      }
    }, {
      key: "setProgressEnd",
      value: function setProgressEnd(shouldComplete) {
        var _this2 = this;
        if (this.isEnabled) {
          this._prevent();
          this.app.setTransitioning(true);
          this._type.setProgressEnd(shouldComplete).then(function(isOpen) {
            _this2._after(isOpen);
          });
        }
      }
    }, {
      key: "_before",
      value: function _before() {
        if (this.isEnabled) {
          this.getNativeElement().classList.add('show-menu');
          this.getBackdropElement().classList.add('show-backdrop');
          this._prevent();
          this.app.setTransitioning(true);
          this.keyboard.close();
        }
      }
    }, {
      key: "_after",
      value: function _after(isOpen) {
        if (this.isEnabled) {
          this._prevent();
          this.app.setTransitioning(false);
          this.isOpen = isOpen;
          this._cntEle.classList[isOpen ? 'add' : 'remove']('menu-content-open');
          this._cntEle.removeEventListener('click', this.onContentClick);
          if (isOpen) {
            this._cntEle.addEventListener('click', this.onContentClick);
          } else {
            this.getNativeElement().classList.remove('show-menu');
            this.getBackdropElement().classList.remove('show-backdrop');
          }
        }
      }
    }, {
      key: "_prevent",
      value: function _prevent() {
        this._preventTime = Date.now() + 20;
      }
    }, {
      key: "_isPrevented",
      value: function _isPrevented() {
        return this._preventTime > Date.now();
      }
    }, {
      key: "open",
      value: function open() {
        return this.setOpen(true);
      }
    }, {
      key: "close",
      value: function close() {
        return this.setOpen(false);
      }
    }, {
      key: "toggle",
      value: function toggle() {
        return this.setOpen(!this.isOpen);
      }
    }, {
      key: "enable",
      value: function enable(shouldEnable) {
        this.isEnabled = shouldEnable;
      }
    }, {
      key: "getMenuElement",
      value: function getMenuElement() {
        return this.getNativeElement();
      }
    }, {
      key: "getContentElement",
      value: function getContentElement() {
        return this._cntEle;
      }
    }, {
      key: "getBackdropElement",
      value: function getBackdropElement() {
        return this.backdrop.elementRef.nativeElement;
      }
    }, {
      key: "onDestroy",
      value: function onDestroy() {
        this.app.unregister(this.id);
        this._gesture && this._gesture.destroy();
        this._targetGesture && this._targetGesture.destroy();
        this._type && this._type.onDestroy();
        this._cntEle = null;
      }
    }], [{
      key: "register",
      value: function register(name, cls) {
        menuTypes[name] = cls;
      }
    }]);
    return Menu;
  })(_ion.Ion);
  exports.Menu = Menu;
  exports.Menu = Menu = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-menu',
    inputs: ['content', 'dragThreshold', 'id', 'side', 'type'],
    defaultInputs: {
      'side': 'left',
      'menuType': 'reveal'
    },
    outputs: ['opening'],
    host: {
      'role': 'navigation',
      '[attr.side]': 'side',
      '[attr.type]': 'type'
    },
    template: '<ng-content></ng-content><backdrop tappable disable-activated></backdrop>',
    directives: [(0, _angular2Angular2.forwardRef)(function() {
      return MenuBackdrop;
    })]
  }), __metadata('design:paramtypes', [typeof(_a = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _c || Object, typeof(_d = typeof _platformPlatform.Platform !== 'undefined' && _platformPlatform.Platform) === 'function' && _d || Object, typeof(_e = typeof _utilKeyboard.Keyboard !== 'undefined' && _utilKeyboard.Keyboard) === 'function' && _e || Object])], Menu);
  var menuTypes = {};
  var MenuBackdrop = (function() {
    function MenuBackdrop(menu, elementRef) {
      _classCallCheck(this, MenuBackdrop);
      this.menu = menu;
      this.elementRef = elementRef;
      menu.backdrop = this;
    }
    _createClass(MenuBackdrop, [{
      key: "clicked",
      value: function clicked(ev) {
        console.debug('backdrop clicked');
        ev.preventDefault();
        ev.stopPropagation();
        this.menu.close();
      }
    }]);
    return MenuBackdrop;
  })();
  MenuBackdrop = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'backdrop',
    host: {'(click)': 'clicked($event)'}
  }), __param(0, (0, _angular2Angular2.Host)()), __metadata('design:paramtypes', [Menu, typeof(_f = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _f || Object])], MenuBackdrop);
  var _a,
      _b,
      _c,
      _d,
      _e,
      _f;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _overlayController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var OverlayAnchor = (function() {
    function OverlayAnchor(overlayCtrl, elementRef, loader) {
      _classCallCheck(this, OverlayAnchor);
      if (overlayCtrl.anchor) {
        throw 'An app should only have one <ion-overlay></ion-overlay>';
      }
      this.elementRef = elementRef;
      this.loader = loader;
      overlayCtrl.anchor = this;
    }
    _createClass(OverlayAnchor, [{
      key: "append",
      value: function append(componentType) {
        return this.loader.loadIntoLocation(componentType, this.elementRef, 'contents')["catch"](function(err) {
          console.error(err);
        });
      }
    }]);
    return OverlayAnchor;
  })();
  exports.OverlayAnchor = OverlayAnchor;
  exports.OverlayAnchor = OverlayAnchor = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-overlay',
    template: '<template #contents></template>'
  }), __metadata('design:paramtypes', [typeof(_a = typeof _overlayController.OverlayController !== 'undefined' && _overlayController.OverlayController) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.DynamicComponentLoader !== 'undefined' && _angular2Angular2.DynamicComponentLoader) === 'function' && _c || Object])], OverlayAnchor);
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/directives", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-toggle", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-close", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/blur/blur", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/scroll", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/pull-to-refresh", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/slides", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tab", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-group", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/checkbox/checkbox", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/switch/switch", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/label", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/segment/segment", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/radio/radio", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/searchbar/searchbar", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-push", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-router", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/show-hide-when/show-hide-when"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _componentsOverlayOverlay = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay');
  var _componentsMenuMenu = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu');
  var _componentsMenuMenuToggle = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-toggle');
  var _componentsMenuMenuClose = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/menu/menu-close');
  var _componentsButtonButton = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button');
  var _componentsBlurBlur = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/blur/blur');
  var _componentsContentContent = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/content/content');
  var _componentsScrollScroll = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/scroll');
  var _componentsScrollPullToRefresh = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/scroll/pull-to-refresh');
  var _componentsSlidesSlides = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/slides/slides');
  var _componentsTabsTabs = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tabs');
  var _componentsTabsTab = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tabs/tab');
  var _componentsListList = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/list/list');
  var _componentsItemItem = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item');
  var _componentsItemItemGroup = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-group');
  var _componentsItemItemSliding = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/item/item-sliding');
  var _componentsToolbarToolbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/toolbar/toolbar');
  var _componentsIconIcon = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon');
  var _componentsCheckboxCheckbox = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/checkbox/checkbox');
  var _componentsSwitchSwitch = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/switch/switch');
  var _componentsTextInputTextInput = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/text-input');
  var _componentsTextInputLabel = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/text-input/label');
  var _componentsSegmentSegment = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/segment/segment');
  var _componentsRadioRadio = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/radio/radio');
  var _componentsSearchbarSearchbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/searchbar/searchbar');
  var _componentsNavNav = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav');
  var _componentsNavNavPush = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-push');
  var _componentsNavNavRouter = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-router');
  var _componentsNavbarNavbar = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/navbar/navbar');
  var _componentsAppId = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/id');
  var _componentsShowHideWhenShowHideWhen = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/show-hide-when/show-hide-when');
  var IONIC_DIRECTIVES = [_angular2Angular2.CORE_DIRECTIVES, _angular2Angular2.FORM_DIRECTIVES, _componentsOverlayOverlay.OverlayAnchor, _componentsMenuMenu.Menu, _componentsMenuMenuToggle.MenuToggle, _componentsMenuMenuClose.MenuClose, _componentsButtonButton.Button, _componentsBlurBlur.Blur, _componentsContentContent.Content, _componentsScrollScroll.Scroll, _componentsScrollPullToRefresh.Refresher, _componentsListList.List, _componentsListList.ListHeader, _componentsItemItem.Item, _componentsItemItemGroup.ItemGroup, _componentsItemItemGroup.ItemGroupTitle, _componentsItemItemSliding.ItemSliding, _componentsSlidesSlides.Slides, _componentsSlidesSlides.Slide, _componentsSlidesSlides.SlideLazy, _componentsTabsTabs.Tabs, _componentsTabsTab.Tab, _componentsToolbarToolbar.Toolbar, _componentsToolbarToolbar.ToolbarTitle, _componentsToolbarToolbar.ToolbarItem, _componentsIconIcon.Icon, _componentsSearchbarSearchbar.SearchBar, _componentsSegmentSegment.Segment, _componentsSegmentSegment.SegmentButton, _componentsCheckboxCheckbox.Checkbox, _componentsRadioRadio.RadioGroup, _componentsRadioRadio.RadioButton, _componentsSwitchSwitch.Switch, _componentsTextInputTextInput.TextInput, _componentsTextInputTextInput.TextInputElement, _componentsTextInputLabel.Label, _componentsNavNav.Nav, _componentsNavbarNavbar.NavbarTemplate, _componentsNavbarNavbar.Navbar, _componentsNavNavPush.NavPush, _componentsNavNavPush.NavPop, _componentsNavNavRouter.NavRouter, _componentsAppId.IdRef, _componentsShowHideWhenShowHideWhen.ShowWhen, _componentsShowHideWhenShowHideWhen.HideWhen];
  exports.IONIC_DIRECTIVES = IONIC_DIRECTIVES;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/bootstrap", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/directives"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports.Page = Page;
  exports.ConfigComponent = ConfigComponent;
  exports.App = App;
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var _bootstrap = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/bootstrap');
  var _directives = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/directives');
  function Page() {
    var config = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    return function(cls) {
      config.selector = 'ion-page';
      config.directives = config.directives ? config.directives.concat(_directives.IONIC_DIRECTIVES) : _directives.IONIC_DIRECTIVES;
      config.host = config.host || {};
      config.host['[hidden]'] = '_hidden';
      config.host['[class.tab-subpage]'] = '_tabSubPage';
      config.host['[style.zIndex]'] = '_zIndex';
      var annotations = Reflect.getMetadata('annotations', cls) || [];
      annotations.push(new _angular2Angular2.Component(config));
      Reflect.defineMetadata('annotations', annotations, cls);
      return cls;
    };
  }
  function ConfigComponent(config) {
    return function(cls) {
      var annotations = Reflect.getMetadata('annotations', cls) || [];
      annotations.push(new _angular2Angular2.Component(appendConfig(cls, config)));
      Reflect.defineMetadata('annotations', annotations, cls);
      return cls;
    };
  }
  function appendConfig(cls, config) {
    config.host = config.host || {};
    cls.defaultInputs = config.defaultInputs || {};
    config.inputs = config.inputs || [];
    for (var prop in cls.defaultInputs) {
      config.inputs.push(prop);
      config.host['[attr.' + util.pascalCaseToDashCase(prop) + ']'] = prop;
    }
    cls.delegates = config.delegates;
    return config;
  }
  function App() {
    var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    return function(cls) {
      var annotations = Reflect.getMetadata('annotations', cls) || [];
      args.selector = 'ion-app';
      args.directives = args.directives ? args.directives.concat(_directives.IONIC_DIRECTIVES) : _directives.IONIC_DIRECTIVES;
      if (!args.templateUrl && !args.template) {
        args.template = '<ion-nav></ion-nav>';
      }
      annotations.push(new _angular2Angular2.Component(args));
      Reflect.defineMetadata('annotations', annotations, cls);
      console.time('bootstrap');
      (0, _angular2Angular2.bootstrap)(cls, (0, _bootstrap.ionicProviders)(args)).then(function() {
        console.timeEnd('bootstrap');
      });
      return cls;
    };
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/modes", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var _config = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  _config.Config.setModeConfig('ios', {
    activator: 'highlight',
    actionSheetEnter: 'action-sheet-slide-in',
    actionSheetLeave: 'action-sheet-slide-out',
    actionSheetCancelIcon: '',
    actionSheetDestructiveIcon: '',
    backButtonText: 'Back',
    backButtonIcon: 'ion-ios-arrow-back',
    iconMode: 'ios',
    menuType: 'reveal',
    modalEnter: 'modal-slide-in',
    modalLeave: 'modal-slide-out',
    pageTransition: 'ios',
    pageTransitionDelay: 16,
    popupEnter: 'popup-pop-in',
    popupLeave: 'popup-pop-out',
    tabbarPlacement: 'bottom'
  });
  _config.Config.setModeConfig('md', {
    activator: 'ripple',
    actionSheetEnter: 'action-sheet-md-slide-in',
    actionSheetLeave: 'action-sheet-md-slide-out',
    actionSheetCancelIcon: 'ion-md-close',
    actionSheetDestructiveIcon: 'ion-md-trash',
    backButtonText: '',
    backButtonIcon: 'ion-md-arrow-back',
    iconMode: 'md',
    menuType: 'overlay',
    modalEnter: 'modal-md-slide-in',
    modalLeave: 'modal-md-slide-out',
    pageTransition: 'md',
    pageTransitionDelay: 120,
    popupEnter: 'popup-md-pop-in',
    popupLeave: 'popup-md-pop-out',
    tabbarHighlight: true,
    tabbarPlacement: 'top',
    tabSubPages: true
  });
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/ripple", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/activator", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  var _get = function get(_x, _x2, _x3) {
    var _again = true;
    _function: while (_again) {
      var object = _x,
          property = _x2,
          receiver = _x3;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x = parent;
          _x2 = property;
          _x3 = receiver;
          _again = true;
          continue _function;
        }
      } else if ('value' in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _activator = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/activator');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var RippleActivator = (function(_Activator) {
    _inherits(RippleActivator, _Activator);
    function RippleActivator(app, config, fastdom) {
      _classCallCheck(this, RippleActivator);
      _get(Object.getPrototypeOf(RippleActivator.prototype), 'constructor', this).call(this, app, config, fastdom);
      this.expands = {};
      this.fades = {};
      this.expandSpeed = null;
    }
    _createClass(RippleActivator, [{
      key: 'downAction',
      value: function downAction(ev, activatableEle, pointerX, pointerY) {
        var _this = this;
        if (_get(Object.getPrototypeOf(RippleActivator.prototype), 'downAction', this).call(this, ev, activatableEle, pointerX, pointerY)) {
          this.expandSpeed = EXPAND_DOWN_PLAYBACK_RATE;
          this.fastdom.defer(2, function() {
            _this.fastdom.read(function() {
              var clientRect = activatableEle.getBoundingClientRect();
              _this.fastdom.write(function() {
                _this.createRipple(activatableEle, pointerX, pointerY, clientRect);
              });
            });
          });
        }
      }
    }, {
      key: 'createRipple',
      value: function createRipple(activatableEle, pointerX, pointerY, clientRect) {
        var _this2 = this;
        var clientPointerX = pointerX - clientRect.left;
        var clientPointerY = pointerY - clientRect.top;
        var x = Math.max(Math.abs(clientRect.width - clientPointerX), clientPointerX) * 2;
        var y = Math.max(Math.abs(clientRect.height - clientPointerY), clientPointerY) * 2;
        var diameter = Math.max(Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)), 64);
        var radius = Math.sqrt(clientRect.width + clientRect.height);
        var duration = 1000 * Math.sqrt(radius / TOUCH_DOWN_ACCEL) + 0.5;
        var rippleEle = document.createElement('md-ripple');
        var rippleId = Date.now();
        var eleStyle = rippleEle.style;
        eleStyle.width = eleStyle.height = diameter + 'px';
        eleStyle.marginTop = eleStyle.marginLeft = -(diameter / 2) + 'px';
        eleStyle.left = clientPointerX + 'px';
        eleStyle.top = clientPointerY + 'px';
        activatableEle.appendChild(rippleEle);
        this.fades[rippleId] = new _animationsAnimation.Animation(rippleEle, {renderDelay: 0});
        this.fades[rippleId].fadeOut().duration(FADE_OUT_DURATION).playbackRate(1).onFinish(function() {
          _this2.fastdom.write(function() {
            _this2.fades[rippleId].dispose(true);
            delete _this2.fades[rippleId];
          });
        });
        this.expands[rippleId] = new _animationsAnimation.Animation(rippleEle, {renderDelay: 0});
        this.expands[rippleId].fromTo('scale', '0.001', '1').duration(duration).playbackRate(this.expandSpeed).onFinish(function() {
          _this2.expands[rippleId].dispose();
          delete _this2.expands[rippleId];
          _this2.next();
        }).play();
      }
    }, {
      key: 'upAction',
      value: function upAction() {
        var _this3 = this;
        this.deactivate();
        this.expandSpeed = 1;
        this.fastdom.defer(4, function() {
          _this3.next();
        });
      }
    }, {
      key: 'next',
      value: function next() {
        var now = Date.now();
        var rippleId = undefined;
        for (rippleId in this.expands) {
          if (parseInt(rippleId, 10) + 4000 < now) {
            this.expands[rippleId].dispose(true);
            delete this.expands[rippleId];
          } else if (this.expands[rippleId].playbackRate() === EXPAND_DOWN_PLAYBACK_RATE) {
            this.expands[rippleId].playbackRate(EXPAND_OUT_PLAYBACK_RATE);
          }
        }
        for (rippleId in this.fades) {
          if (parseInt(rippleId, 10) + 4000 < now) {
            this.fades[rippleId].dispose(true);
            delete this.fades[rippleId];
          } else if (!this.fades[rippleId].isPlaying) {
            this.fades[rippleId].isPlaying = true;
            this.fades[rippleId].play();
          }
        }
      }
    }, {
      key: 'clearState',
      value: function clearState() {
        this.deactivate();
        this.next();
      }
    }]);
    return RippleActivator;
  })(_activator.Activator);
  exports.RippleActivator = RippleActivator;
  var TOUCH_DOWN_ACCEL = 512;
  var EXPAND_DOWN_PLAYBACK_RATE = 0.35;
  var EXPAND_OUT_PLAYBACK_RATE = 3;
  var FADE_OUT_DURATION = 700;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/activator", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var Activator = (function() {
    function Activator(app, config, fastdom) {
      _classCallCheck(this, Activator);
      this.app = app;
      this.fastdom = fastdom;
      this.queue = [];
      this.active = [];
      this.clearStateDefers = 5;
      this.clearAttempt = 0;
      this.activatedClass = config.get('activatedClass') || 'activated';
      this.x = 0;
      this.y = 0;
    }
    _createClass(Activator, [{
      key: 'downAction',
      value: function downAction(ev, activatableEle, pointerX, pointerY, callback) {
        var _this = this;
        if (this.disableActivated(ev))
          return false;
        this.x = pointerX;
        this.y = pointerY;
        this.queue.push(activatableEle);
        this.fastdom.write(function() {
          var activatableEle = undefined;
          for (var i = 0; i < _this.queue.length; i++) {
            activatableEle = _this.queue[i];
            if (activatableEle && activatableEle.parentNode) {
              _this.active.push(activatableEle);
              activatableEle.classList.add(_this.activatedClass);
            }
          }
          _this.queue = [];
        });
        return true;
      }
    }, {
      key: 'upAction',
      value: function upAction() {
        var _this2 = this;
        this.fastdom.defer(this.clearStateDefers, function() {
          _this2.clearState();
        });
      }
    }, {
      key: 'clearState',
      value: function clearState() {
        if ((!this.app.isEnabled() || this.app.isTransitioning()) && this.clearAttempt < 100) {
          ++this.clearAttempt;
          this.upAction();
        } else {
          this.deactivate();
          this.clearAttempt = 0;
        }
      }
    }, {
      key: 'deactivate',
      value: function deactivate() {
        var _this3 = this;
        this.queue = [];
        this.fastdom.write(function() {
          for (var i = 0; i < _this3.active.length; i++) {
            _this3.active[i].classList.remove(_this3.activatedClass);
          }
          _this3.active = [];
        });
      }
    }, {
      key: 'disableActivated',
      value: function disableActivated(ev) {
        if (ev.defaultPrevented)
          return true;
        var targetEle = ev.target;
        for (var x = 0; x < 4; x++) {
          if (!targetEle)
            break;
          if (targetEle.hasAttribute('disable-activated'))
            return true;
          targetEle = targetEle.parentElement;
        }
        return false;
      }
    }]);
    return Activator;
  })();
  exports.Activator = Activator;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/tap-click", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/activator", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/ripple"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports.initTapClick = initTapClick;
  exports.isActivatable = isActivatable;
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var _activator = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/activator');
  var _ripple = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/ripple');
  var startCoord = null;
  var pointerTolerance = 4;
  var lastTouch = 0;
  var lastActivated = 0;
  var disableNativeClickUntil = 0;
  var disableNativeClickAmount = 3000;
  var activator = null;
  var isTapPolyfill = false;
  var app = null;
  var win = null;
  var doc = null;
  function initTapClick(windowInstance, documentInstance, appInstance, config, fastdom) {
    win = windowInstance;
    doc = documentInstance;
    app = appInstance;
    if (config.get('activator') == 'ripple') {
      activator = new _ripple.RippleActivator(app, config, fastdom);
    } else if (config.get('activator') == 'highlight') {
      activator = new _activator.Activator(app, config, fastdom);
    }
    isTapPolyfill = config.get('tapPolyfill') === true;
    addListener('click', click, true);
    addListener('touchstart', touchStart);
    addListener('touchend', touchEnd);
    addListener('touchcancel', touchCancel);
    addListener('mousedown', mouseDown, true);
    addListener('mouseup', mouseUp, true);
  }
  function touchStart(ev) {
    touchAction();
    pointerStart(ev);
  }
  function touchEnd(ev) {
    touchAction();
    if (isTapPolyfill && startCoord && app.isEnabled()) {
      var endCoord = (0, _utilDom.pointerCoord)(ev);
      if (!(0, _utilDom.hasPointerMoved)(pointerTolerance, startCoord, endCoord)) {
        console.debug('create click from touch');
        disableNativeClickUntil = Date.now() + disableNativeClickAmount;
        var clickEvent = doc.createEvent('MouseEvents');
        clickEvent.initMouseEvent('click', true, true, win, 1, 0, 0, endCoord.x, endCoord.y, false, false, false, false, 0, null);
        clickEvent.isIonicTap = true;
        ev.target.dispatchEvent(clickEvent);
      }
    }
    pointerEnd(ev);
  }
  function touchCancel(ev) {
    touchAction();
    pointerCancel(ev);
  }
  function mouseDown(ev) {
    if (isDisabledNativeClick()) {
      console.debug('mouseDown prevent');
      ev.preventDefault();
      ev.stopPropagation();
    } else if (lastTouch + disableNativeClickAmount < Date.now()) {
      pointerStart(ev);
    }
  }
  function mouseUp(ev) {
    if (isDisabledNativeClick()) {
      console.debug('mouseUp prevent');
      ev.preventDefault();
      ev.stopPropagation();
    }
    if (lastTouch + disableNativeClickAmount < Date.now()) {
      pointerEnd(ev);
    }
  }
  function pointerStart(ev) {
    var activatableEle = getActivatableTarget(ev.target);
    if (activatableEle) {
      startCoord = (0, _utilDom.pointerCoord)(ev);
      var now = Date.now();
      if (lastActivated + 150 < now) {
        activator && activator.downAction(ev, activatableEle, startCoord.x, startCoord.y);
        lastActivated = now;
      }
      moveListeners(true);
    } else {
      startCoord = null;
    }
  }
  function pointerEnd(ev) {
    moveListeners(false);
    activator && activator.upAction();
  }
  function pointerMove(ev) {
    var moveCoord = (0, _utilDom.pointerCoord)(ev);
    if ((0, _utilDom.hasPointerMoved)(10, startCoord, moveCoord)) {
      pointerCancel(ev);
    }
  }
  function pointerCancel(ev) {
    console.debug('pointerCancel from', ev.type);
    activator && activator.clearState();
    moveListeners(false);
  }
  function moveListeners(shouldAdd) {
    if (shouldAdd) {
      if (isTapPolyfill) {
        addListener('touchmove', pointerMove);
      }
      addListener('mousemove', pointerMove);
    } else {
      if (isTapPolyfill) {
        removeListener('touchmove', pointerMove);
      }
      removeListener('mousemove', pointerMove);
    }
  }
  function setDisableNativeClick() {
    if (isTapPolyfill) {
      disableNativeClickTime = Date.now() + disableNativeClickLimit;
    }
  }
  function isDisabledNativeClick() {
    return disableNativeClickUntil > Date.now();
  }
  function click(ev) {
    var preventReason = null;
    if (!app.isEnabled()) {
      preventReason = 'appDisabled';
    } else if (!ev.isIonicTap && isDisabledNativeClick()) {
      preventReason = 'nativeClick';
    }
    if (preventReason !== null) {
      console.debug('click prevent', preventReason);
      ev.preventDefault();
      ev.stopPropagation();
    }
  }
  function getActivatableTarget(ele) {
    var targetEle = ele;
    for (var x = 0; x < 4; x++) {
      if (!targetEle)
        break;
      if (isActivatable(targetEle))
        return targetEle;
      targetEle = targetEle.parentElement;
    }
    return null;
  }
  function isActivatable(ele) {
    if (ACTIVATABLE_ELEMENTS.test(ele.tagName)) {
      return true;
    }
    var attributes = ele.attributes;
    for (var i = 0,
        l = attributes.length; i < l; i++) {
      if (ACTIVATABLE_ATTRIBUTES.test(attributes[i].name)) {
        return true;
      }
    }
    return false;
  }
  function touchAction() {
    lastTouch = Date.now();
  }
  function addListener(type, listener, useCapture) {
    doc.addEventListener(type, listener, useCapture);
  }
  function removeListener(type, listener) {
    doc.removeEventListener(type, listener);
  }
  var ACTIVATABLE_ELEMENTS = /^(A|BUTTON)$/;
  var ACTIVATABLE_ATTRIBUTES = /tappable/;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/feature-detect", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var FeatureDetect = (function() {
    function FeatureDetect() {
      _classCallCheck(this, FeatureDetect);
    }
    _createClass(FeatureDetect, [{
      key: 'run',
      value: function run(window, document) {
        this._results = {};
        for (var _name in featureDetects) {
          this._results[_name] = featureDetects[_name](window, document, document.body);
        }
      }
    }, {
      key: 'has',
      value: function has(featureName) {
        return !!this._results[featureName];
      }
    }], [{
      key: 'add',
      value: function add(name, fn) {
        featureDetects[name] = fn;
      }
    }]);
    return FeatureDetect;
  })();
  exports.FeatureDetect = FeatureDetect;
  var featureDetects = {};
  FeatureDetect.add('sticky', function(window, document) {
    var ele = document.createElement('div');
    ele.style.cssText = 'position:-webkit-sticky;position:sticky';
    return ele.style.position.indexOf('sticky') > -1;
  });
  FeatureDetect.add('hairlines', function(window, document, body) {
    var canDo = false;
    if (window.devicePixelRatio >= 2) {
      var hairlineEle = document.createElement('div');
      hairlineEle.style.border = '.5px solid transparent';
      body.appendChild(hairlineEle);
      if (hairlineEle.offsetHeight === 1) {
        body.classList.add('hairlines');
        canDo = true;
      }
      body.removeChild(hairlineEle);
    }
    return canDo;
  });
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Translate = (function() {
    function Translate() {
      _classCallCheck(this, Translate);
      this._transMap = {};
    }
    _createClass(Translate, [{
      key: "translations",
      value: function translations(lang, map) {
        this._transMap[lang] = map;
      }
    }, {
      key: "setLanguage",
      value: function setLanguage(lang) {
        this._language = lang;
      }
    }, {
      key: "getTranslations",
      value: function getTranslations(lang) {
        return this._transMap[lang];
      }
    }, {
      key: "translate",
      value: function translate(key, lang) {
        if (!lang && !this._language) {
          return key;
        }
        var setLanguage = lang || this._language;
        var map = this.getTranslations(setLanguage);
        if (!map) {
          console.warn('I18N: No translation for key', key, 'using language', setLanguage);
          return '';
        }
        return this._getTranslation(map, key);
      }
    }, {
      key: "_getTranslation",
      value: function _getTranslation(map, key) {
        return map && map[key] || '';
      }
    }]);
    return Translate;
  })();
  exports.Translate = Translate;
  exports.Translate = Translate = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [])], Translate);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-registry", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var NavRegistry = (function() {
    function NavRegistry() {
      var pages = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
      _classCallCheck(this, NavRegistry);
      this._pages = new Map(pages.map(function(page) {
        return [page.name, page];
      }));
    }
    _createClass(NavRegistry, [{
      key: "get",
      value: function get(pageName) {
        return this._pages.get(pageName);
      }
    }, {
      key: "set",
      value: function set(page) {
        this._pages.set(page.name, page);
      }
    }]);
    return NavRegistry;
  })();
  exports.NavRegistry = NavRegistry;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/events", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Events = (function() {
    function Events() {
      _classCallCheck(this, Events);
      this.channels = [];
    }
    _createClass(Events, [{
      key: "subscribe",
      value: function subscribe(topic) {
        var _this = this;
        if (!this.channels[topic]) {
          this.channels[topic] = [];
        }
        for (var _len = arguments.length,
            handlers = Array(_len > 1 ? _len - 1 : 0),
            _key = 1; _key < _len; _key++) {
          handlers[_key - 1] = arguments[_key];
        }
        handlers.forEach(function(handler) {
          _this.channels[topic].push(handler);
        });
      }
    }, {
      key: "unsubscribe",
      value: function unsubscribe(topic, handler) {
        var t = this.channels[topic];
        if (!t) {
          return false;
        }
        if (!handler) {
          delete this.channels[topic];
          return true;
        }
        var i = t.indexOf(handler);
        if (i < 0) {
          return false;
        }
        t.splice(i, 1);
        if (!t.length) {
          delete this.channels[topic];
        }
        return true;
      }
    }, {
      key: "publish",
      value: function publish(topic) {
        for (var _len2 = arguments.length,
            args = Array(_len2 > 1 ? _len2 - 1 : 0),
            _key2 = 1; _key2 < _len2; _key2++) {
          args[_key2 - 1] = arguments[_key2];
        }
        var t = this.channels[topic];
        if (!t) {
          return null;
        }
        var responses = [];
        t.forEach(function(handler) {
          responses.push(handler(args));
        });
        return responses;
      }
    }]);
    return Events;
  })();
  exports.Events = Events;
  exports.Events = Events = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [])], Events);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = undefined && undefined.__param || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var Button = function Button(config, elementRef, renderer, type) {
    _classCallCheck(this, Button);
    var element = elementRef.nativeElement;
    if (config.get('hoverCSS') === false) {
      renderer.setElementClass(elementRef, 'disable-hover', true);
    }
    if (element.hasAttribute('ion-item')) {
      return;
    }
    if (type) {
      renderer.setElementAttribute(elementRef, type, '');
    }
    var childNodes = element.childNodes;
    var childNode = undefined;
    var nodes = [];
    for (var i = 0,
        l = childNodes.length; i < l; i++) {
      childNode = childNodes[i];
      if (childNode.nodeType === 3) {
        if (childNode.textContent.trim() !== '') {
          nodes.push(TEXT);
        }
      } else if (childNode.nodeType === 1) {
        if (childNode.nodeName === 'ICON') {
          nodes.push(ICON);
        } else {
          nodes.push(TEXT);
        }
      }
    }
    if (nodes.length > 1) {
      if (nodes[0] === ICON && nodes[1] === TEXT) {
        element.classList.add('icon-left');
      } else if (nodes[0] === TEXT && nodes[1] === ICON) {
        element.classList.add('icon-right');
      }
    } else if (nodes.length === 1 && nodes[0] === ICON) {
      element.classList.add('icon-only');
    }
  };
  exports.Button = Button;
  exports.Button = Button = __decorate([(0, _angular2Angular2.Directive)({selector: 'button,[button]'}), __param(3, (0, _angular2Angular2.Attribute)('type')), __metadata('design:paramtypes', [typeof(_a = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _a || Object, typeof(_b = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _c || Object, String])], Button);
  var TEXT = 1;
  var ICON = 2;
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/popup/popup", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _get = function get(_x4, _x5, _x6) {
    var _again = true;
    _function: while (_again) {
      var object = _x4,
          property = _x5,
          receiver = _x6;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x4 = parent;
          _x5 = property;
          _x6 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _overlayOverlayController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var _buttonButton = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/button/button');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Popup = (function() {
    function Popup(ctrl, config) {
      _classCallCheck(this, Popup);
      this.ctrl = ctrl;
      this._defaults = {
        enterAnimation: config.get('popupEnter'),
        leaveAnimation: config.get('popupLeave')
      };
    }
    _createClass(Popup, [{
      key: "open",
      value: function open(opts) {
        var _this = this;
        return new Promise(function(resolve, reject) {
          opts.promiseResolve = resolve;
          opts.promiseReject = reject;
          var defaults = util.merge({}, _this._defaults);
          return _this.ctrl.open(OVERLAY_TYPE, PopupCmp, util.extend(defaults, opts));
        });
      }
    }, {
      key: "alert",
      value: function alert() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        if (typeof opts === 'string') {
          opts = {title: opts};
        }
        var button = {
          text: opts.okText || 'OK',
          type: opts.okType || '',
          onTap: function onTap(event, popupRef) {}
        };
        opts = util.extend({
          showPrompt: false,
          cancel: function cancel() {},
          buttons: [button]
        }, opts);
        return this.open(opts);
      }
    }, {
      key: "confirm",
      value: function confirm() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        if (typeof opts === 'string') {
          opts = {title: opts};
        }
        var okButton = {
          text: opts.okText || 'OK',
          type: opts.okType || '',
          onTap: function onTap(event, popupRef) {}
        };
        var cancelButton = {
          text: opts.cancelText || 'Cancel',
          type: opts.cancelType || '',
          isCancel: true,
          onTap: function onTap(event, popupRef) {}
        };
        opts = util.extend({
          showPrompt: false,
          cancel: function cancel() {},
          buttons: [cancelButton, okButton]
        }, opts);
        return this.open(opts);
      }
    }, {
      key: "prompt",
      value: function prompt() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        if (typeof opts === 'string') {
          opts = {title: opts};
        }
        var okButton = {
          text: opts.okText || 'OK',
          type: opts.okType || '',
          onTap: function onTap(event, popupRef) {}
        };
        var cancelButton = {
          text: opts.cancelText || 'Cancel',
          type: opts.cancelType || '',
          isCancel: true,
          onTap: function onTap(event, popupRef) {}
        };
        opts = util.extend({
          showPrompt: true,
          promptPlaceholder: '',
          cancel: function cancel() {},
          buttons: [cancelButton, okButton]
        }, opts);
        return this.open(opts);
      }
    }, {
      key: "get",
      value: function get(handle) {
        if (handle) {
          return this.ctrl.getByHandle(handle, OVERLAY_TYPE);
        }
        return this.ctrl.getByType(OVERLAY_TYPE);
      }
    }]);
    return Popup;
  })();
  exports.Popup = Popup;
  exports.Popup = Popup = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [typeof(_a = typeof _overlayOverlayController.OverlayController !== 'undefined' && _overlayOverlayController.OverlayController) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object])], Popup);
  var OVERLAY_TYPE = 'popup';
  var PopupCmp = (function() {
    function PopupCmp(elementRef) {
      _classCallCheck(this, PopupCmp);
      this.elementRef = elementRef;
    }
    _createClass(PopupCmp, [{
      key: "onInit",
      value: function onInit() {
        var _this2 = this;
        setTimeout(function() {
          _this2.promptInput = _this2.elementRef.nativeElement.querySelector('input');
          if (_this2.promptInput) {
            _this2.promptInput.value = '';
          }
        });
      }
    }, {
      key: "buttonTapped",
      value: function buttonTapped(button, event) {
        var promptValue = this.promptInput && this.promptInput.value;
        var retVal = button.onTap && button.onTap(event, this, {promptValue: promptValue});
        if (!event.defaultPrevented) {
          if (button.isCancel) {
            this.promiseReject();
          } else {
            this.promiseResolve(promptValue);
          }
          return this.close();
        }
      }
    }, {
      key: "_cancel",
      value: function _cancel(event) {
        this.cancel && this.cancel(event);
        if (!event.defaultPrevented) {
          this.promiseReject();
          return this.close();
        }
      }
    }]);
    return PopupCmp;
  })();
  PopupCmp = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-popup',
    template: '<backdrop (click)="_cancel($event)" tappable disable-activated></backdrop>' + '<popup-wrapper [ng-class]="cssClass">' + '<div class="popup-head">' + '<h2 class="popup-title" [inner-html]="title" *ng-if="title"></h2>' + '<h3 class="popup-sub-title" [inner-html]="subTitle" *ng-if="subTitle"></h3>' + '</div>' + '<div class="popup-body">' + '<div [inner-html]="template" *ng-if="template"></div>' + '<input type="{{inputType || \'text\'}}" placeholder="{{inputPlaceholder}}" *ng-if="showPrompt" class="prompt-input">' + '</div>' + '<div class="popup-buttons" *ng-if="buttons.length">' + '<button *ng-for="#button of buttons" (click)="buttonTapped(button, $event)" [inner-html]="button.text"></button>' + '</div>' + '</popup-wrapper>',
    host: {'[style.zIndex]': '_zIndex'},
    directives: [_angular2Angular2.FORM_DIRECTIVES, _angular2Angular2.NgClass, _angular2Angular2.NgIf, _angular2Angular2.NgFor, _buttonButton.Button]
  }), __metadata('design:paramtypes', [typeof(_c = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _c || Object])], PopupCmp);
  var PopupAnimation = (function(_Animation) {
    _inherits(PopupAnimation, _Animation);
    function PopupAnimation(element) {
      _classCallCheck(this, PopupAnimation);
      _get(Object.getPrototypeOf(PopupAnimation.prototype), "constructor", this).call(this, element);
      this.easing('ease-in-out').duration(200);
      this.backdrop = new _animationsAnimation.Animation(element.querySelector('backdrop'));
      this.wrapper = new _animationsAnimation.Animation(element.querySelector('popup-wrapper'));
      this.add(this.backdrop, this.wrapper);
    }
    return PopupAnimation;
  })(_animationsAnimation.Animation);
  var PopupPopIn = (function(_PopupAnimation) {
    _inherits(PopupPopIn, _PopupAnimation);
    function PopupPopIn(element) {
      _classCallCheck(this, PopupPopIn);
      _get(Object.getPrototypeOf(PopupPopIn.prototype), "constructor", this).call(this, element);
      this.wrapper.fromTo('opacity', '0.01', '1');
      this.wrapper.fromTo('scale', '1.1', '1');
      this.backdrop.fromTo('opacity', '0', '0.3');
    }
    return PopupPopIn;
  })(PopupAnimation);
  _animationsAnimation.Animation.register('popup-pop-in', PopupPopIn);
  var PopupPopOut = (function(_PopupAnimation2) {
    _inherits(PopupPopOut, _PopupAnimation2);
    function PopupPopOut(element) {
      _classCallCheck(this, PopupPopOut);
      _get(Object.getPrototypeOf(PopupPopOut.prototype), "constructor", this).call(this, element);
      this.wrapper.fromTo('opacity', '1', '0');
      this.wrapper.fromTo('scale', '1', '0.9');
      this.backdrop.fromTo('opacity', '0.3', '0');
    }
    return PopupPopOut;
  })(PopupAnimation);
  _animationsAnimation.Animation.register('popup-pop-out', PopupPopOut);
  var PopupMdPopIn = (function(_PopupPopIn) {
    _inherits(PopupMdPopIn, _PopupPopIn);
    function PopupMdPopIn(element) {
      _classCallCheck(this, PopupMdPopIn);
      _get(Object.getPrototypeOf(PopupMdPopIn.prototype), "constructor", this).call(this, element);
      this.backdrop.fromTo('opacity', '0.01', '0.5');
    }
    return PopupMdPopIn;
  })(PopupPopIn);
  _animationsAnimation.Animation.register('popup-md-pop-in', PopupMdPopIn);
  var PopupMdPopOut = (function(_PopupPopOut) {
    _inherits(PopupMdPopOut, _PopupPopOut);
    function PopupMdPopOut(element) {
      _classCallCheck(this, PopupMdPopOut);
      _get(Object.getPrototypeOf(PopupMdPopOut.prototype), "constructor", this).call(this, element);
      this.backdrop.fromTo('opacity', '0.5', '0');
    }
    return PopupMdPopOut;
  })(PopupPopOut);
  _animationsAnimation.Animation.register('popup-md-pop-out', PopupMdPopOut);
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/modal/modal", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _get = function get(_x2, _x3, _x4) {
    var _again = true;
    _function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;
          _x3 = property;
          _x4 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _overlayOverlayController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Modal = (function() {
    function Modal(ctrl, config) {
      _classCallCheck(this, Modal);
      this.ctrl = ctrl;
      this._defaults = {
        enterAnimation: config.get('modalEnter') || 'modal-slide-in',
        leaveAnimation: config.get('modalLeave') || 'modal-slide-out'
      };
    }
    _createClass(Modal, [{
      key: "open",
      value: function open(componentType) {
        var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
        return this.ctrl.open(OVERLAY_TYPE, componentType, util.extend(this._defaults, opts));
      }
    }, {
      key: "get",
      value: function get(handle) {
        if (handle) {
          return this.ctrl.getByHandle(handle, OVERLAY_TYPE);
        }
        return this.ctrl.getByType(OVERLAY_TYPE);
      }
    }]);
    return Modal;
  })();
  exports.Modal = Modal;
  exports.Modal = Modal = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [typeof(_a = typeof _overlayOverlayController.OverlayController !== 'undefined' && _overlayOverlayController.OverlayController) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object])], Modal);
  var OVERLAY_TYPE = 'modal';
  var ModalSlideIn = (function(_Animation) {
    _inherits(ModalSlideIn, _Animation);
    function ModalSlideIn(element) {
      _classCallCheck(this, ModalSlideIn);
      _get(Object.getPrototypeOf(ModalSlideIn.prototype), "constructor", this).call(this, element);
      this.easing('cubic-bezier(0.36,0.66,0.04,1)').duration(400).fromTo('translateY', '100%', '0%');
    }
    return ModalSlideIn;
  })(_animationsAnimation.Animation);
  _animationsAnimation.Animation.register('modal-slide-in', ModalSlideIn);
  var ModalSlideOut = (function(_Animation2) {
    _inherits(ModalSlideOut, _Animation2);
    function ModalSlideOut(element) {
      _classCallCheck(this, ModalSlideOut);
      _get(Object.getPrototypeOf(ModalSlideOut.prototype), "constructor", this).call(this, element);
      this.easing('ease-out').duration(250).fromTo('translateY', '0%', '100%');
    }
    return ModalSlideOut;
  })(_animationsAnimation.Animation);
  _animationsAnimation.Animation.register('modal-slide-out', ModalSlideOut);
  var ModalMDSlideIn = (function(_Animation3) {
    _inherits(ModalMDSlideIn, _Animation3);
    function ModalMDSlideIn(element) {
      _classCallCheck(this, ModalMDSlideIn);
      _get(Object.getPrototypeOf(ModalMDSlideIn.prototype), "constructor", this).call(this, element);
      this.easing('cubic-bezier(0.36,0.66,0.04,1)').duration(280).fromTo('translateY', '40px', '0px').fadeIn();
    }
    return ModalMDSlideIn;
  })(_animationsAnimation.Animation);
  _animationsAnimation.Animation.register('modal-md-slide-in', ModalMDSlideIn);
  var ModalMDSlideOut = (function(_Animation4) {
    _inherits(ModalMDSlideOut, _Animation4);
    function ModalMDSlideOut(element) {
      _classCallCheck(this, ModalMDSlideOut);
      _get(Object.getPrototypeOf(ModalMDSlideOut.prototype), "constructor", this).call(this, element);
      this.duration(200).easing('cubic-bezier(0.47,0,0.745,0.715)').fromTo('translateY', '0px', '40px').fadeOut();
    }
    return ModalMDSlideOut;
  })(_animationsAnimation.Animation);
  _animationsAnimation.Animation.register('modal-md-slide-out', ModalMDSlideOut);
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Icon = (function() {
    function Icon(elementRef, config, renderer) {
      _classCallCheck(this, Icon);
      this.elementRef = elementRef;
      this.renderer = renderer;
      this.config = config;
      this.mode = config.get('iconMode');
    }
    _createClass(Icon, [{
      key: "onInit",
      value: function onInit() {
        var ele = this.elementRef.nativeElement;
        if (this.mode == 'ios' && this.ios) {
          this.name = this.ios;
        } else if (this.mode == 'md' && this.md) {
          this.name = this.md;
        } else if (!this.name) {
          for (var i = 0,
              l = ele.attributes.length; i < l; i++) {
            if (ele.attributes[i].value === '' && /_|item-|is-active|large|small|class/.test(ele.attributes[i].name) !== true) {
              this.name = ele.attributes[i].name;
              break;
            }
          }
        }
        if (!this.name)
          return;
        if (!/^ion-/.test(this.name)) {
          this.name = 'ion-' + this.mode + '-' + this.name;
        }
        this.update();
      }
    }, {
      key: "update",
      value: function update() {
        if (this.name && this.mode == 'ios') {
          if (this.isActive) {
            if (/-outline/.test(this.name)) {
              this.name = this.name.replace('-outline', '');
            }
          } else if (!/-outline/.test(this.name)) {
            this.name += '-outline';
          }
        }
        if (this._name !== this.name) {
          if (this._name) {
            this.renderer.setElementClass(this.elementRef, this._name, false);
          }
          this._name = this.name;
          this.renderer.setElementClass(this.elementRef, this.name, true);
          this.renderer.setElementAttribute(this.elementRef, 'aria-label', this.name.replace('ion-', '').replace('ios-', '').replace('md-', '').replace('-', ' '));
        }
      }
    }, {
      key: "isActive",
      get: function get() {
        return this._isActive === undefined || this._isActive === true || this._isActive === 'true';
      },
      set: function set(val) {
        this._isActive = val;
        this.update();
      }
    }]);
    return Icon;
  })();
  exports.Icon = Icon;
  exports.Icon = Icon = __decorate([(0, _angular2Angular2.Directive)({
    selector: 'icon',
    inputs: ['name', 'ios', 'md', 'isActive'],
    host: {'role': 'img'}
  }), __metadata('design:paramtypes', [typeof(_a = typeof _angular2Angular2.ElementRef !== 'undefined' && _angular2Angular2.ElementRef) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _c || Object])], Icon);
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/action-sheet/action-sheet", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _get = function get(_x2, _x3, _x4) {
    var _again = true;
    _function: while (_again) {
      var object = _x2,
          property = _x3,
          receiver = _x4;
      desc = parent = getter = undefined;
      _again = false;
      if (object === null)
        object = Function.prototype;
      var desc = Object.getOwnPropertyDescriptor(object, property);
      if (desc === undefined) {
        var parent = Object.getPrototypeOf(object);
        if (parent === null) {
          return undefined;
        } else {
          _x2 = parent;
          _x3 = property;
          _x4 = receiver;
          _again = true;
          continue _function;
        }
      } else if ("value" in desc) {
        return desc.value;
      } else {
        var getter = desc.get;
        if (getter === undefined) {
          return undefined;
        }
        return getter.call(receiver);
      }
    }
  };
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _overlayOverlayController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _iconIcon = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/icon/icon');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var ActionSheetCmp = (function() {
    function ActionSheetCmp() {
      _classCallCheck(this, ActionSheetCmp);
    }
    _createClass(ActionSheetCmp, [{
      key: "_cancel",
      value: function _cancel() {
        this.cancel && this.cancel();
        return this.close();
      }
    }, {
      key: "_destructive",
      value: function _destructive() {
        var shouldClose = this.destructiveButtonClicked();
        if (shouldClose === true) {
          return this.close();
        }
      }
    }, {
      key: "_buttonClicked",
      value: function _buttonClicked(index) {
        var shouldClose = this.buttonClicked(index);
        if (shouldClose === true) {
          return this.close();
        }
      }
    }]);
    return ActionSheetCmp;
  })();
  ActionSheetCmp = __decorate([(0, _angular2Angular2.Component)({
    selector: 'ion-action-sheet',
    template: '<backdrop (click)="_cancel()" tappable disable-activated></backdrop>' + '<action-sheet-wrapper>' + '<div class="action-sheet-container">' + '<div class="action-sheet-group action-sheet-options">' + '<div class="action-sheet-title" *ng-if="titleText">{{titleText}}</div>' + '<button (click)="_buttonClicked(i)" *ng-for="#b of buttons; #i=index" class="action-sheet-option disable-hover">' + '<icon [name]="b.icon" *ng-if="b.icon"></icon> ' + '{{b.text}}' + '</button>' + '<button *ng-if="destructiveText" (click)="_destructive()" class="action-sheet-destructive disable-hover">' + '<icon [name]="destructiveIcon" *ng-if="destructiveIcon"></icon> ' + '{{destructiveText}}</button>' + '</div>' + '<div class="action-sheet-group action-sheet-cancel" *ng-if="cancelText">' + '<button (click)="_cancel()" class=" disable-hover">' + '<icon [name]="cancelIcon"></icon> ' + '{{cancelText}}</button>' + '</div>' + '</div>' + '</action-sheet-wrapper>',
    host: {'[style.zIndex]': '_zIndex'},
    directives: [_angular2Angular2.NgFor, _angular2Angular2.NgIf, _iconIcon.Icon]
  }), __metadata('design:paramtypes', [])], ActionSheetCmp);
  var ActionSheet = (function() {
    function ActionSheet(ctrl, config) {
      _classCallCheck(this, ActionSheet);
      this.ctrl = ctrl;
      this._defaults = {
        enterAnimation: config.get('actionSheetEnter'),
        leaveAnimation: config.get('actionSheetLeave'),
        cancelIcon: config.get('actionSheetCancelIcon'),
        destructiveIcon: config.get('actionSheetDestructiveIcon')
      };
    }
    _createClass(ActionSheet, [{
      key: "open",
      value: function open() {
        var opts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
        return this.ctrl.open(OVERLAY_TYPE, ActionSheetCmp, util.extend(this._defaults, opts));
      }
    }, {
      key: "get",
      value: function get(handle) {
        if (handle) {
          return this.ctrl.getByHandle(handle, OVERLAY_TYPE);
        }
        return this.ctrl.getByType(OVERLAY_TYPE);
      }
    }]);
    return ActionSheet;
  })();
  exports.ActionSheet = ActionSheet;
  exports.ActionSheet = ActionSheet = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [typeof(_a = typeof _overlayOverlayController.OverlayController !== 'undefined' && _overlayOverlayController.OverlayController) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object])], ActionSheet);
  var OVERLAY_TYPE = 'action-sheet';
  var ActionSheetAnimation = (function(_Animation) {
    _inherits(ActionSheetAnimation, _Animation);
    function ActionSheetAnimation(element) {
      _classCallCheck(this, ActionSheetAnimation);
      _get(Object.getPrototypeOf(ActionSheetAnimation.prototype), "constructor", this).call(this, element);
      this.easing('cubic-bezier(.36, .66, .04, 1)');
      this.backdrop = new _animationsAnimation.Animation(element.querySelector('backdrop'));
      this.wrapper = new _animationsAnimation.Animation(element.querySelector('action-sheet-wrapper'));
      this.add(this.backdrop, this.wrapper);
    }
    return ActionSheetAnimation;
  })(_animationsAnimation.Animation);
  var ActionSheetSlideIn = (function(_ActionSheetAnimation) {
    _inherits(ActionSheetSlideIn, _ActionSheetAnimation);
    function ActionSheetSlideIn(element) {
      _classCallCheck(this, ActionSheetSlideIn);
      _get(Object.getPrototypeOf(ActionSheetSlideIn.prototype), "constructor", this).call(this, element);
      this.duration(400);
      this.backdrop.fromTo('opacity', 0.01, 0.4);
      this.wrapper.fromTo('translateY', '100%', '0%');
    }
    return ActionSheetSlideIn;
  })(ActionSheetAnimation);
  _animationsAnimation.Animation.register('action-sheet-slide-in', ActionSheetSlideIn);
  var ActionSheetSlideOut = (function(_ActionSheetAnimation2) {
    _inherits(ActionSheetSlideOut, _ActionSheetAnimation2);
    function ActionSheetSlideOut(element) {
      _classCallCheck(this, ActionSheetSlideOut);
      _get(Object.getPrototypeOf(ActionSheetSlideOut.prototype), "constructor", this).call(this, element);
      this.duration(300);
      this.backdrop.fromTo('opacity', 0.4, 0.01);
      this.wrapper.fromTo('translateY', '0%', '100%');
    }
    return ActionSheetSlideOut;
  })(ActionSheetAnimation);
  _animationsAnimation.Animation.register('action-sheet-slide-out', ActionSheetSlideOut);
  var ActionSheetMdSlideIn = (function(_ActionSheetSlideIn) {
    _inherits(ActionSheetMdSlideIn, _ActionSheetSlideIn);
    function ActionSheetMdSlideIn(element) {
      _classCallCheck(this, ActionSheetMdSlideIn);
      _get(Object.getPrototypeOf(ActionSheetMdSlideIn.prototype), "constructor", this).call(this, element);
      this.duration(450);
      this.backdrop.fromTo('opacity', 0.01, 0.26);
    }
    return ActionSheetMdSlideIn;
  })(ActionSheetSlideIn);
  _animationsAnimation.Animation.register('action-sheet-md-slide-in', ActionSheetMdSlideIn);
  var ActionSheetMdSlideOut = (function(_ActionSheetSlideOut) {
    _inherits(ActionSheetMdSlideOut, _ActionSheetSlideOut);
    function ActionSheetMdSlideOut(element) {
      _classCallCheck(this, ActionSheetMdSlideOut);
      _get(Object.getPrototypeOf(ActionSheetMdSlideOut.prototype), "constructor", this).call(this, element);
      this.duration(450);
      this.backdrop.fromTo('opacity', 0.26, 0.01);
    }
    return ActionSheetMdSlideOut;
  })(ActionSheetSlideOut);
  _animationsAnimation.Animation.register('action-sheet-md-slide-out', ActionSheetMdSlideOut);
  var _a,
      _b;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _form = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form');
  var _dom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var dom = _interopRequireWildcard(_dom);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Keyboard = (function() {
    function Keyboard(config, form, zone) {
      var _this = this;
      _classCallCheck(this, Keyboard);
      this.form = form;
      this.zone = zone;
      zone.runOutsideAngular(function() {
        _this.focusOutline(config.get('focusOutline'), document);
      });
    }
    _createClass(Keyboard, [{
      key: "isOpen",
      value: function isOpen() {
        return dom.hasFocusedTextInput();
      }
    }, {
      key: "onClose",
      value: function onClose(callback) {
        var self = this;
        var promise = null;
        if (!callback) {
          promise = new Promise(function(resolve) {
            callback = resolve;
          });
        }
        self.zone.runOutsideAngular(function() {
          function checkKeyboard() {
            if (!self.isOpen()) {
              self.zone.run(function() {
                console.debug('keyboard closed');
                callback();
              });
            } else {
              setTimeout(checkKeyboard, KEYBOARD_CLOSE_POLLING);
            }
          }
          setTimeout(checkKeyboard, KEYBOARD_CLOSE_POLLING);
        });
        return promise;
      }
    }, {
      key: "close",
      value: function close() {
        var _this2 = this;
        dom.raf(function() {
          if (dom.hasFocusedTextInput()) {
            _this2.form.focusOut();
          }
        });
      }
    }, {
      key: "focusOutline",
      value: function focusOutline(setting, document) {
        var self = this;
        var isKeyInputEnabled = false;
        function cssClass() {
          dom.raf(function() {
            document.body.classList[isKeyInputEnabled ? 'add' : 'remove']('focus-outline');
          });
        }
        if (setting === true) {
          isKeyInputEnabled = true;
          return cssClass();
        } else if (setting === false) {
          return;
        }
        function keyDown(ev) {
          if (!isKeyInputEnabled && ev.keyCode == 9) {
            isKeyInputEnabled = true;
            enableKeyInput();
          }
        }
        function pointerDown() {
          isKeyInputEnabled = false;
          enableKeyInput();
        }
        function enableKeyInput() {
          cssClass();
          self.zone.runOutsideAngular(function() {
            document.removeEventListener('mousedown', pointerDown);
            document.removeEventListener('touchstart', pointerDown);
            if (isKeyInputEnabled) {
              document.addEventListener('mousedown', pointerDown);
              document.addEventListener('touchstart', pointerDown);
            }
          });
        }
        document.addEventListener('keydown', keyDown);
      }
    }]);
    return Keyboard;
  })();
  exports.Keyboard = Keyboard;
  exports.Keyboard = Keyboard = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [typeof(_a = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _a || Object, typeof(_b = typeof _form.Form !== 'undefined' && _form.Form) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _c || Object])], Keyboard);
  var KEYBOARD_CLOSE_POLLING = 150;
  var _a,
      _b,
      _c;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var Form = (function() {
    function Form() {
      _classCallCheck(this, Form);
      this._inputs = [];
      this._focused = null;
      this.focusCtrl(document);
    }
    _createClass(Form, [{
      key: "register",
      value: function register(input) {
        this._inputs.push(input);
      }
    }, {
      key: "deregister",
      value: function deregister(input) {
        var index = this._inputs.indexOf(input);
        if (index > -1) {
          this._inputs.splice(index, 1);
        }
        if (input === this._focused) {
          this._focused = null;
        }
      }
    }, {
      key: "focusCtrl",
      value: function focusCtrl(document) {
        var focusCtrl = document.createElement('focus-ctrl');
        focusCtrl.setAttribute('aria-hidden', true);
        this._blur = document.createElement('button');
        this._blur.tabIndex = -1;
        focusCtrl.appendChild(this._blur);
        document.body.appendChild(focusCtrl);
      }
    }, {
      key: "focusOut",
      value: function focusOut() {
        console.debug('focusOut');
        this._blur.focus();
      }
    }, {
      key: "setAsFocused",
      value: function setAsFocused(input) {
        this._focused = input;
      }
    }, {
      key: "focusNext",
      value: function focusNext(currentInput) {
        console.debug('focusNext');
        var index = this._inputs.indexOf(currentInput);
        if (index > -1 && index + 1 < this._inputs.length) {
          var nextInput = this._inputs[index + 1];
          if (nextInput !== this._focused) {
            return nextInput.initFocus();
          }
        }
        index = this._inputs.indexOf(this._focused);
        if (index > 0) {
          var previousInput = this._inputs[index - 1];
          if (previousInput) {
            previousInput.initFocus();
          }
        }
      }
    }]);
    return Form;
  })();
  exports.Form = Form;
  exports.Form = Form = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [])], Form);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/fastdom", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports.FastDom = FastDom;
  var _dom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  function FastDom() {
    this.frames = [];
    this.lastId = 0;
    this.raf = _dom.raf;
    this.batch = {
      hash: {},
      read: [],
      write: [],
      mode: null
    };
  }
  FastDom.prototype.read = function(fn, ctx) {
    var job = this.add('read', fn, ctx);
    var id = job.id;
    this.batch.read.push(job.id);
    var doesntNeedFrame = this.batch.mode === 'reading' || this.batch.scheduled;
    if (doesntNeedFrame)
      return id;
    this.scheduleBatch();
    return id;
  };
  FastDom.prototype.write = function(fn, ctx) {
    var job = this.add('write', fn, ctx);
    var mode = this.batch.mode;
    var id = job.id;
    this.batch.write.push(job.id);
    var doesntNeedFrame = mode === 'writing' || mode === 'reading' || this.batch.scheduled;
    if (doesntNeedFrame)
      return id;
    this.scheduleBatch();
    return id;
  };
  FastDom.prototype.defer = function(frame, fn, ctx) {
    if (typeof frame === 'function') {
      ctx = fn;
      fn = frame;
      frame = 1;
    }
    var self = this;
    var index = frame - 1;
    return this.schedule(index, function() {
      self.run({
        fn: fn,
        ctx: ctx
      });
    });
  };
  FastDom.prototype.clear = function(id) {
    if (typeof id === 'function') {
      return this.clearFrame(id);
    }
    id = Number(id);
    var job = this.batch.hash[id];
    if (!job)
      return;
    var list = this.batch[job.type];
    var index = list.indexOf(id);
    delete this.batch.hash[id];
    if (~index)
      list.splice(index, 1);
  };
  FastDom.prototype.clearFrame = function(frame) {
    var index = this.frames.indexOf(frame);
    if (~index)
      this.frames.splice(index, 1);
  };
  FastDom.prototype.scheduleBatch = function() {
    var self = this;
    this.schedule(0, function() {
      self.batch.scheduled = false;
      self.runBatch();
    });
    this.batch.scheduled = true;
  };
  FastDom.prototype.uniqueId = function() {
    return ++this.lastId;
  };
  FastDom.prototype.flush = function(list) {
    var id;
    while (id = list.shift()) {
      this.run(this.batch.hash[id]);
    }
  };
  FastDom.prototype.runBatch = function() {
    try {
      this.batch.mode = 'reading';
      this.flush(this.batch.read);
      this.batch.mode = 'writing';
      this.flush(this.batch.write);
      this.batch.mode = null;
    } catch (e) {
      this.runBatch();
      throw e;
    }
  };
  FastDom.prototype.add = function(type, fn, ctx) {
    var id = this.uniqueId();
    return this.batch.hash[id] = {
      id: id,
      fn: fn,
      ctx: ctx,
      type: type
    };
  };
  FastDom.prototype.run = function(job) {
    var ctx = job.ctx || this;
    var fn = job.fn;
    delete this.batch.hash[job.id];
    if (!this.onError) {
      return fn.call(ctx);
    }
    try {
      fn.call(ctx);
    } catch (e) {
      this.onError(e);
    }
  };
  FastDom.prototype.loop = function() {
    var self = this;
    var raf = this.raf;
    if (this.looping)
      return;
    raf(function frame() {
      var fn = self.frames.shift();
      if (!self.frames.length) {
        self.looping = false;
      } else {
        raf(frame);
      }
      if (fn)
        fn();
    });
    this.looping = true;
  };
  FastDom.prototype.schedule = function(index, fn) {
    if (this.frames[index]) {
      return this.schedule(index + 1, fn);
    }
    this.loop();
    return this.frames[index] = fn;
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);
    delete newObj['default'];
    return newObj;
  }
  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  var _ionicUtilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var domUtil = _interopRequireWildcard(_ionicUtilDom);
  var dom = domUtil;
  exports.dom = dom;
  var _ionicUtilUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util');
  _defaults(exports, _interopExportWildcard(_ionicUtilUtil, _defaults));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var _utilUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util');
  var Animation = (function() {
    function Animation(ele) {
      var opts = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
      var fastdom = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];
      _classCallCheck(this, Animation);
      this.reset();
      this._fastdom = fastdom;
      this._opts = (0, _utilUtil.extend)({renderDelay: 16}, opts);
      this.elements(ele);
      if (!document.documentElement.animate) {
        console.error('Web Animations polyfill missing');
      }
    }
    _createClass(Animation, [{
      key: 'reset',
      value: function reset() {
        this._el = [];
        this._chld = [];
        this._ani = [];
        this._bfAdd = [];
        this._bfSty = {};
        this._bfRmv = [];
        this._afAdd = [];
        this._afRmv = [];
        this._readys = [];
        this._plays = [];
        this._finishes = [];
      }
    }, {
      key: 'elements',
      value: function elements(ele) {
        if (ele) {
          if (typeof ele === 'string') {
            ele = document.querySelectorAll(ele);
          }
          if (ele.length) {
            for (var i = 0; i < ele.length; i++) {
              this.addElement(ele[i]);
            }
          } else {
            this.addElement(ele);
          }
        }
        return this;
      }
    }, {
      key: 'addElement',
      value: function addElement(ele) {
        if (ele) {
          if (ele.nativeElement) {
            ele = ele.nativeElement;
          }
          if (ele.nodeType === 1) {
            this._el.push(ele);
          }
        }
      }
    }, {
      key: 'parent',
      value: function parent(parentAnimation) {
        this._parent = parentAnimation;
        return this;
      }
    }, {
      key: 'add',
      value: function add(childAnimations) {
        var _childAnimations = Array.isArray(childAnimations) ? childAnimations : arguments;
        for (var i = 0; i < _childAnimations.length; i++) {
          _childAnimations[i].parent(this);
          this._chld.push(_childAnimations[i]);
        }
        return this;
      }
    }, {
      key: 'duration',
      value: function duration(value) {
        if (arguments.length) {
          this._duration = value;
          return this;
        }
        return this._duration || this._parent && this._parent.duration() || 0;
      }
    }, {
      key: 'clearDuration',
      value: function clearDuration() {
        this._duration = null;
        for (var i = 0,
            l = this._chld.length; i < l; i++) {
          this._chld[i].clearDuration();
        }
      }
    }, {
      key: 'easing',
      value: function easing(name, opts) {
        if (arguments.length) {
          this._easing = {
            name: name,
            opts: opts
          };
          return this;
        }
        return this._easing || this._parent && this._parent.easing();
      }
    }, {
      key: 'playbackRate',
      value: function playbackRate(value) {
        if (arguments.length) {
          this._rate = value;
          var i = undefined;
          for (i = 0; i < this._chld.length; i++) {
            this._chld[i].playbackRate(value);
          }
          for (i = 0; i < this._ani.length; i++) {
            this._ani[i].playbackRate(value);
          }
          return this;
        }
        return typeof this._rate !== 'undefined' ? this._rate : this._parent && this._parent.playbackRate();
      }
    }, {
      key: 'reverse',
      value: function reverse() {
        return this.playbackRate(-1);
      }
    }, {
      key: 'forward',
      value: function forward() {
        return this.playbackRate(1);
      }
    }, {
      key: 'from',
      value: function from(property, value) {
        if (!this._from) {
          this._from = {};
        }
        this._from[property] = value;
        return this;
      }
    }, {
      key: 'to',
      value: function to(property, value) {
        if (!this._to) {
          this._to = {};
        }
        this._to[property] = value;
        return this;
      }
    }, {
      key: 'fromTo',
      value: function fromTo(property, from, to) {
        return this.from(property, from).to(property, to);
      }
    }, {
      key: 'fadeIn',
      value: function fadeIn() {
        return this.fromTo('opacity', 0.001, 1);
      }
    }, {
      key: 'fadeOut',
      value: function fadeOut() {
        return this.fromTo('opacity', 0.999, 0);
      }
    }, {
      key: 'play',
      value: function play() {
        var _this = this;
        var self = this;
        function beginPlay() {
          var promises = [];
          for (var i = 0,
              l = self._chld.length; i < l; i++) {
            promises.push(self._chld[i].play());
          }
          self._ani.forEach(function(animation) {
            promises.push(new Promise(function(resolve) {
              animation.play(resolve);
            }));
          });
          return Promise.all(promises);
        }
        if (!self._parent) {
          var _ret = (function() {
            var kickoff = function kickoff() {
              self._onPlay();
              beginPlay().then(function() {
                self._onFinish();
                resolve();
              });
            };
            self.stage();
            var resolve = undefined;
            var promise = new Promise(function(res) {
              resolve = res;
            });
            if (self._duration > 16 && _this._opts.renderDelay > 0) {
              if (_this._fastdom) {
                _this._fastdom.write(kickoff);
              } else {
                setTimeout(kickoff, _this._opts.renderDelay);
              }
            } else {
              kickoff();
            }
            return {v: promise};
          })();
          if (typeof _ret === 'object')
            return _ret.v;
        }
        return beginPlay();
      }
    }, {
      key: 'stage',
      value: function stage() {
        if (!this._isStaged) {
          this._isStaged = true;
          var i = undefined,
              p = undefined,
              l = undefined,
              j = undefined,
              ele = undefined,
              animation = undefined;
          for (i = 0, l = this._chld.length; i < l; i++) {
            this._chld[i].stage();
          }
          for (i = 0; i < this._el.length; i++) {
            ele = this._el[i];
            for (j = 0; j < this._bfAdd.length; j++) {
              ele.classList.add(this._bfAdd[j]);
            }
            for (p in this._bfSty) {
              ele.style[p] = this._bfSty[p];
            }
            for (j = 0; j < this._bfRmv.length; j++) {
              ele.classList.remove(this._bfRmv[j]);
            }
          }
          if (this._to) {
            for (i = 0; i < this._el.length; i++) {
              animation = new Animate(this._el[i], this._from, this._to, this.duration(), this.easing(), this.playbackRate());
              if (animation.shouldAnimate) {
                this._ani.push(animation);
              }
            }
          }
          for (i = 0; i < this._readys.length; i++) {
            this._readys[i](this);
          }
        }
      }
    }, {
      key: '_onPlay',
      value: function _onPlay() {
        var i = undefined;
        this._isFinished = false;
        for (i = 0; i < this._chld.length; i++) {
          this._chld[i]._onPlay();
        }
        for (i = 0; i < this._plays.length; i++) {
          this._plays[i](this);
        }
      }
    }, {
      key: '_onFinish',
      value: function _onFinish() {
        if (!this._isFinished && !this.isProgress) {
          this._isFinished = true;
          var i = undefined,
              j = undefined,
              ele = undefined;
          for (i = 0; i < this._chld.length; i++) {
            this._chld[i]._onFinish();
          }
          if (this.playbackRate() < 0) {
            for (i = 0; i < this._el.length; i++) {
              ele = this._el[i];
              for (j = 0; j < this._bfAdd.length; j++) {
                ele.classList.remove(this._bfAdd[j]);
              }
              for (j = 0; j < this._bfRmv.length; j++) {
                ele.classList.add(this._bfRmv[j]);
              }
            }
          } else {
            for (i = 0; i < this._el.length; i++) {
              ele = this._el[i];
              for (j = 0; j < this._afAdd.length; j++) {
                ele.classList.add(this._afAdd[j]);
              }
              for (j = 0; j < this._afRmv.length; j++) {
                ele.classList.remove(this._afRmv[j]);
              }
            }
          }
          for (i = 0; i < this._finishes.length; i++) {
            this._finishes[i](this);
          }
        }
      }
    }, {
      key: 'pause',
      value: function pause() {
        var i = undefined;
        for (i = 0; i < this._chld.length; i++) {
          this._chld[i].pause();
        }
        for (i = 0; i < this._ani.length; i++) {
          this._ani[i].pause();
        }
      }
    }, {
      key: 'progressStart',
      value: function progressStart() {
        this.isProgress = true;
        for (var i = 0; i < this._chld.length; i++) {
          this._chld[i].progressStart();
        }
        this.duration(1000);
        this.play();
        this.pause();
      }
    }, {
      key: 'progress',
      value: function progress(value) {
        value = Math.min(1, Math.max(0, value));
        this.isProgress = true;
        var i = undefined;
        for (i = 0; i < this._chld.length; i++) {
          this._chld[i].progress(value);
        }
        for (i = 0; i < this._ani.length; i++) {
          this._ani[i].progress(value);
        }
      }
    }, {
      key: 'getCurrentTime',
      value: function getCurrentTime() {
        if (this._chld.length > 0) {
          return this._chld[0].getCurrentTime();
        }
        if (this._ani.length > 0) {
          return this._ani[0].getCurrentTime();
        }
        return 0;
      }
    }, {
      key: 'progressEnd',
      value: function progressEnd(shouldComplete) {
        var rate = arguments.length <= 1 || arguments[1] === undefined ? 3 : arguments[1];
        var promises = [];
        this.isProgress = false;
        for (var i = 0; i < this._chld.length; i++) {
          promises.push(this._chld[i].progressEnd(shouldComplete));
        }
        this._ani.forEach(function(animation) {
          if (shouldComplete) {
            animation.playbackRate(rate);
          } else {
            animation.playbackRate(rate * -1);
          }
          promises.push(new Promise(function(resolve) {
            animation.play(resolve);
          }));
        });
        return Promise.all(promises);
      }
    }, {
      key: 'onReady',
      value: function onReady(fn, clear) {
        if (clear) {
          this._readys = [];
        }
        this._readys.push(fn);
        return this;
      }
    }, {
      key: 'onPlay',
      value: function onPlay(fn, clear) {
        if (clear) {
          this._plays = [];
        }
        this._plays.push(fn);
        return this;
      }
    }, {
      key: 'onFinish',
      value: function onFinish(fn, clear) {
        if (clear) {
          this._finishes = [];
        }
        this._finishes.push(fn);
        return this;
      }
    }, {
      key: 'clone',
      value: function clone() {
        function copy(dest, src) {
          (0, _utilUtil.extend)(dest, src);
          dest._isFinished = dest._isStaged = dest.isProgress = false;
          dest._chld = [];
          dest._ani = [];
          for (var i = 0; i < src._chld.length; i++) {
            dest.add(copy(new Animation(), src._chld[i]));
          }
          return dest;
        }
        return copy(new Animation(), this);
      }
    }, {
      key: 'dispose',
      value: function dispose(removeElement) {
        var i = undefined;
        for (i = 0; i < this._chld.length; i++) {
          this._chld[i].dispose(removeElement);
        }
        for (i = 0; i < this._ani.length; i++) {
          this._ani[i].dispose(removeElement);
        }
        if (removeElement) {
          for (i = 0; i < this._el.length; i++) {
            this._el[i].parentNode && this._el[i].parentNode.removeChild(this._el[i]);
          }
        }
        this.reset();
      }
    }, {
      key: 'before',
      get: function get() {
        var _this2 = this;
        return {
          addClass: function addClass(className) {
            _this2._bfAdd.push(className);
            return _this2;
          },
          removeClass: function removeClass(className) {
            _this2._bfRmv.push(className);
            return _this2;
          },
          setStyles: function setStyles(styles) {
            _this2._bfSty = styles;
            return _this2;
          }
        };
      }
    }, {
      key: 'after',
      get: function get() {
        var _this3 = this;
        return {
          addClass: function addClass(className) {
            _this3._afAdd.push(className);
            return _this3;
          },
          removeClass: function removeClass(className) {
            _this3._afRmv.push(className);
            return _this3;
          }
        };
      }
    }], [{
      key: 'create',
      value: function create(element, name) {
        var AnimationClass = AnimationRegistry[name];
        if (!AnimationClass) {
          AnimationClass = Animation;
        }
        return new AnimationClass(element);
      }
    }, {
      key: 'register',
      value: function register(name, AnimationClass) {
        AnimationRegistry[name] = AnimationClass;
      }
    }]);
    return Animation;
  })();
  exports.Animation = Animation;
  var Animate = (function() {
    function Animate(ele, fromEffect, toEffect, duration, easingConfig, playbackRate) {
      _classCallCheck(this, Animate);
      if (!fromEffect) {
        return console.error(ele.tagName, 'animation fromEffect required, toEffect:', toEffect);
      }
      this.toEffect = parseEffect(toEffect);
      this.shouldAnimate = duration > 32;
      if (!this.shouldAnimate) {
        return inlineStyle(ele, this.toEffect);
      }
      this.ele = ele;
      this.fromEffect = parseEffect(fromEffect);
      inlineStyle(ele, this.fromEffect);
      this.duration = duration;
      this.rate = typeof playbackRate !== 'undefined' ? playbackRate : 1;
      this.easing = easingConfig && easingConfig.name || 'linear';
      this.effects = [convertProperties(this.fromEffect)];
      if (this.easing in EASING_FN) {
        insertEffects(this.effects, this.fromEffect, this.toEffect, easingConfig);
      } else if (this.easing in CUBIC_BEZIERS) {
        this.easing = 'cubic-bezier(' + CUBIC_BEZIERS[this.easing] + ')';
      }
      this.effects.push(convertProperties(this.toEffect));
    }
    _createClass(Animate, [{
      key: 'play',
      value: function play(done) {
        var self = this;
        if (self.ani) {
          self.ani.play();
        } else {
          self.ani = self.ele.animate(self.effects, {
            duration: self.duration || 0,
            easing: self.easing,
            playbackRate: self.rate
          });
          self.ani.playbackRate = self.rate;
        }
        self.ani.onfinish = function() {
          if (self.ani) {
            inlineStyle(self.ele, self.rate < 0 ? self.fromEffect : self.toEffect);
            self.ani = self.ani.onfinish = null;
            done && done();
          }
        };
      }
    }, {
      key: 'pause',
      value: function pause() {
        this.ani && this.ani.pause();
      }
    }, {
      key: 'progress',
      value: function progress(value) {
        if (this.ani) {
          if (this.ani.playState !== 'paused') {
            this.ani.pause();
          }
          value = Math.min(0.999, Math.max(0.001, value));
          this.ani.currentTime = this.duration * value;
        }
      }
    }, {
      key: 'getCurrentTime',
      value: function getCurrentTime() {
        return this.ani && this.ani.currentTime || 0;
      }
    }, {
      key: 'playbackRate',
      value: function playbackRate(value) {
        this.rate = value;
        if (this.ani) {
          this.ani.playbackRate = value;
        }
      }
    }, {
      key: 'dispose',
      value: function dispose() {
        this.ele = this.ani = this.effects = this.toEffect = null;
      }
    }]);
    return Animate;
  })();
  function insertEffects(effects, fromEffect, toEffect, easingConfig) {
    easingConfig.opts = easingConfig.opts || {};
    var increment = easingConfig.opts.increment || 0.04;
    var easingFn = EASING_FN[easingConfig.name];
    var pos = undefined,
        tweenEffect = undefined,
        addEffect = undefined,
        property = undefined,
        toProperty = undefined,
        fromValue = undefined,
        diffValue = undefined;
    for (pos = increment; pos <= 1 - increment; pos += increment) {
      tweenEffect = {};
      addEffect = false;
      for (property in toEffect) {
        toProperty = toEffect[property];
        if (toProperty.tween) {
          fromValue = fromEffect[property].num;
          diffValue = toProperty.num - fromValue;
          tweenEffect[property] = {value: roundValue(easingFn(pos, easingConfig.opts) * diffValue + fromValue) + toProperty.unit};
          addEffect = true;
        }
      }
      if (addEffect) {
        effects.push(convertProperties(tweenEffect));
      }
    }
  }
  function parseEffect(inputEffect) {
    var val = undefined,
        r = undefined,
        num = undefined,
        property = undefined;
    var outputEffect = {};
    for (property in inputEffect) {
      val = inputEffect[property];
      r = val.toString().match(/(^-?\d*\.?\d*)(.*)/);
      num = parseFloat(r[1]);
      outputEffect[property] = {
        value: val,
        num: num,
        unit: r[0] != r[2] ? r[2] : '',
        tween: !isNaN(num) && ANIMATE_PROPERTIES.indexOf(property) > -1
      };
    }
    return outputEffect;
  }
  function convertProperties(inputEffect) {
    var outputEffect = {};
    var transforms = [];
    var value = undefined,
        property = undefined;
    for (property in inputEffect) {
      value = inputEffect[property].value;
      if (TRANSFORMS.indexOf(property) > -1) {
        transforms.push(property + '(' + value + ')');
      } else {
        outputEffect[property] = value;
      }
    }
    if (transforms.length) {
      transforms.push('translateZ(0px)');
      outputEffect.transform = transforms.join(' ');
    }
    return outputEffect;
  }
  function inlineStyle(ele, effect) {
    if (ele && effect) {
      var transforms = [];
      var value = undefined,
          property = undefined;
      for (property in effect) {
        value = effect[property].value;
        if (TRANSFORMS.indexOf(property) > -1) {
          transforms.push(property + '(' + value + ')');
        } else {
          ele.style[property] = value;
        }
      }
      if (transforms.length) {
        transforms.push('translateZ(0px)');
        ele.style[_utilDom.CSS.transform] = transforms.join(' ');
      }
    }
  }
  function roundValue(val) {
    return Math.round(val * 10000) / 10000;
  }
  var TRANSFORMS = ['translateX', 'translateY', 'translateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'skewX', 'skewY', 'perspective'];
  var ANIMATE_PROPERTIES = TRANSFORMS.concat('opacity');
  var CUBIC_BEZIERS = {
    'ease-in-cubic': '0.55,0.055,0.675,0.19',
    'ease-out-cubic': '0.215,0.61,0.355,1',
    'ease-in-Out-cubic': '0.645,0.045,0.355,1',
    'ease-in-circ': '0.6,0.04,0.98,0.335',
    'ease-out-circ': '0.075,0.82,0.165,1',
    'ease-in-out-circ': '0.785,0.135,0.15,0.86',
    'ease-in-expo': '0.95,0.05,0.795,0.035',
    'ease-out-expo': '0.19,1,0.22,1',
    'ease-in-out-expo': '1,0,0,1',
    'ease-in-quad': '0.55,0.085,0.68,0.53',
    'ease-out-quad': '0.25,0.46,0.45,0.94',
    'ease-in-out-quad': '0.455,0.03,0.515,0.955',
    'ease-in-quart': '0.895,0.03,0.685,0.22',
    'ease-out-quart': '0.165,0.84,0.44,1',
    'ease-in-out-quart': '0.77,0,0.175,1',
    'ease-in-quint': '0.755,0.05,0.855,0.06',
    'ease-out-quint': '0.23,1,0.32,1',
    'ease-in-out-quint': '0.86,0,0.07,1',
    'ease-in-sine': '0.47,0,0.745,0.715',
    'ease-out-sine': '0.39,0.575,0.565,1',
    'ease-in-out-sine': '0.445,0.05,0.55,0.95',
    'ease-in-back': '0.6,-0.28,0.735,0.045',
    'ease-out-back': '0.175,0.885,0.32,1.275',
    'ease-in-out-back': '0.68,-0.55,0.265,1.55'
  };
  var EASING_FN = {
    'elastic': function elastic(pos) {
      return -1 * Math.pow(4, -8 * pos) * Math.sin((pos * 6 - 1) * (2 * Math.PI) / 2) + 1;
    },
    'swing-from-to': function swingFromTo(pos, opts) {
      var s = opts.s || 1.70158;
      return (pos /= 0.5) < 1 ? 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s)) : 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
    },
    'swing-from': function swingFrom(pos, opts) {
      var s = opts.s || 1.70158;
      return pos * pos * ((s + 1) * pos - s);
    },
    'swing-to': function swingTo(pos, opts) {
      var s = opts.s || 1.70158;
      return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
    },
    'bounce': function bounce(pos) {
      if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
      } else if (pos < 2 / 2.75) {
        return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
      } else if (pos < 2.5 / 2.75) {
        return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
      }
      return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    },
    'bounce-past': function bouncePast(pos) {
      if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
      } else if (pos < 2 / 2.75) {
        return 2 - (7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75);
      } else if (pos < 2.5 / 2.75) {
        return 2 - (7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375);
      }
      return 2 - (7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375);
    },
    'ease-out-bounce': function easeOutBounce(pos) {
      if (pos < 1 / 2.75) {
        return 7.5625 * pos * pos;
      } else if (pos < 2 / 2.75) {
        return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
      } else if (pos < 2.5 / 2.75) {
        return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
      }
      return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984375;
    },
    'ease-from-to': function easeFromTo(pos) {
      if ((pos /= 0.5) < 1)
        return 0.5 * Math.pow(pos, 4);
      return -0.5 * ((pos -= 2) * Math.pow(pos, 3) - 2);
    },
    'ease-from': function easeFrom(pos, opts) {
      return Math.pow(pos, opts.s || 4);
    },
    'ease-to': function easeTo(pos, opts) {
      return Math.pow(pos, opts.s || 0.25);
    },
    'spring': function spring(pos, opts) {
      var damping = opts.damping || 4.5;
      var elasticity = opts.elasticity || 6;
      return 1 - Math.cos(pos * damping * Math.PI) * Math.exp(-pos * elasticity);
    },
    'sinusoidal': function sinusoidal(pos) {
      return -Math.cos(pos * Math.PI) / 2 + 0.5;
    }
  };
  var AnimationRegistry = {};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, "__esModule", {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj["default"] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _appApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  var _ionicUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util');
  var util = _interopRequireWildcard(_ionicUtil);
  var __decorate = undefined && undefined.__decorate || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return d && d(o) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key), void 0);
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return d && d(target, key, o) || o;
        }, desc);
    }
  };
  var __metadata = undefined && undefined.__metadata || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var OverlayController = (function() {
    function OverlayController(app, config, zone, renderer) {
      _classCallCheck(this, OverlayController);
      this.app = app;
      this.config = config;
      this.zone = zone;
      this.renderer = renderer;
      this.refs = [];
    }
    _createClass(OverlayController, [{
      key: "open",
      value: function open(overlayType, componentType) {
        var _this = this;
        var opts = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];
        if (!this.anchor) {
          console.error('<ion-overlay></ion-overlay> required in root component template to use: ' + overlayType);
          return Promise.reject();
        }
        var resolve = undefined,
            reject = undefined;
        var promise = new Promise(function(res, rej) {
          resolve = res;
          reject = rej;
        });
        try {
          this.anchor.append(componentType).then(function(ref) {
            var instance = ref && ref.instance;
            if (!instance) {
              return reject();
            }
            instance._zIndex = ROOT_Z_INDEX;
            for (var i = 0; i < _this.refs.length; i++) {
              if (_this.refs[i].instance._zIndex >= ref.instance._zIndex) {
                ref.instance._zIndex = _this.refs[i].instance._zIndex + 1;
              }
            }
            _this.renderer.setElementAttribute(ref.location, 'role', 'dialog');
            util.extend(instance, opts);
            ref._type = overlayType;
            ref._handle = opts.handle || overlayType + ref._z;
            _this.add(ref);
            instance.close = function() {
              var closeOpts = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
              _this.close(ref, util.extend(opts, closeOpts));
            };
            instance.onPageLoaded && instance.onPageLoaded();
            instance.onPageWillEnter && instance.onPageWillEnter();
            var animation = _animationsAnimation.Animation.create(ref.location.nativeElement, opts.enterAnimation);
            if (_this.config.get('animate') === false) {
              animation.duration(0);
            }
            animation.before.addClass(overlayType);
            if (overlayType == 'modal') {
              animation.before.addClass('show-page');
            }
            _this.app.setEnabled(false, animation.duration());
            _this.app.setTransitioning(true, animation.duration());
            _this.zone.runOutsideAngular(function() {
              animation.play().then(function() {
                animation.dispose();
                _this.zone.run(function() {
                  _this.app.setEnabled(true);
                  _this.app.setTransitioning(false);
                  instance.onPageDidEnter && instance.onPageDidEnter();
                  resolve();
                });
              });
            });
          })["catch"](function(err) {
            console.error(err);
          });
        } catch (e) {
          console.error(e);
        }
        return promise;
      }
    }, {
      key: "close",
      value: function close(ref, opts) {
        var _this2 = this;
        var resolve = undefined;
        var promise = new Promise(function(res) {
          resolve = res;
        });
        var instance = ref.instance;
        instance.onPageWillLeave && instance.onPageWillLeave();
        instance.onPageWillUnload && instance.onPageWillUnload();
        var animation = _animationsAnimation.Animation.create(ref.location.nativeElement, opts.leaveAnimation);
        if (this.config.get('animate') === false) {
          animation.duration(0);
        }
        this.app.setEnabled(false, animation.duration());
        this.app.setTransitioning(true, animation.duration());
        this.zone.runOutsideAngular(function() {
          animation.play().then(function() {
            animation.dispose();
            _this2.zone.run(function() {
              instance.onPageDidLeave && instance.onPageDidLeave();
              instance.onPageDidUnload && instance.onPageDidUnload();
              _this2.app.setEnabled(true);
              _this2.app.setTransitioning(false);
              _this2.remove(ref);
              resolve();
            });
          });
        });
        return promise;
      }
    }, {
      key: "add",
      value: function add(ref) {
        this.refs.push(ref);
      }
    }, {
      key: "remove",
      value: function remove(ref) {
        util.array.remove(this.refs, ref);
        ref.dispose && ref.dispose();
      }
    }, {
      key: "getByType",
      value: function getByType(overlayType) {
        for (var i = this.refs.length - 1; i >= 0; i--) {
          if (overlayType === this.refs[i]._type) {
            return this.refs[i].instance;
          }
        }
        return null;
      }
    }, {
      key: "getByHandle",
      value: function getByHandle(handle, overlayType) {
        for (var i = this.refs.length - 1; i >= 0; i--) {
          if (handle === this.refs[i]._handle && overlayType === this.refs[i]._type) {
            return this.refs[i].instance;
          }
        }
        return null;
      }
    }]);
    return OverlayController;
  })();
  exports.OverlayController = OverlayController;
  exports.OverlayController = OverlayController = __decorate([(0, _angular2Angular2.Injectable)(), __metadata('design:paramtypes', [typeof(_a = typeof _appApp.IonicApp !== 'undefined' && _appApp.IonicApp) === 'function' && _a || Object, typeof(_b = typeof _configConfig.Config !== 'undefined' && _configConfig.Config) === 'function' && _b || Object, typeof(_c = typeof _angular2Angular2.NgZone !== 'undefined' && _angular2Angular2.NgZone) === 'function' && _c || Object, typeof(_d = typeof _angular2Angular2.Renderer !== 'undefined' && _angular2Angular2.Renderer) === 'function' && _d || Object])], OverlayController);
  var ROOT_Z_INDEX = 1000;
  var _a,
      _b,
      _c,
      _d;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports.rafPromise = rafPromise;
  exports.transitionEnd = transitionEnd;
  exports.animationStart = animationStart;
  exports.animationEnd = animationEnd;
  exports.ready = ready;
  exports.windowLoad = windowLoad;
  exports.pointerCoord = pointerCoord;
  exports.hasPointerMoved = hasPointerMoved;
  exports.isActive = isActive;
  exports.hasFocus = hasFocus;
  exports.isTextInput = isTextInput;
  exports.hasFocusedTextInput = hasFocusedTextInput;
  exports.closest = closest;
  exports.removeElement = removeElement;
  exports.getDimensions = getDimensions;
  exports.windowDimensions = windowDimensions;
  exports.flushDimensionCache = flushDimensionCache;
  exports.parentOffsetEl = parentOffsetEl;
  exports.position = position;
  exports.offset = offset;
  var nativeRaf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;
  var nativeCancelRaf = window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.webkitCancelRequestAnimationFrame;
  var raf = nativeRaf || function(callback) {
    var timeCurrent = new Date().getTime(),
        timeDelta = undefined;
    timeDelta = Math.max(0, 16 - (timeCurrent - timeLast));
    timeLast = timeCurrent + timeDelta;
    return setTimeout(function() {
      callback(timeCurrent + timeDelta);
    }, timeDelta);
  };
  exports.raf = raf;
  var rafCancel = nativeRaf ? nativeCancelRaf : function(id) {
    return window.cancelTimeout(id);
  };
  exports.rafCancel = rafCancel;
  function rafPromise() {
    return new Promise(function(resolve) {
      return raf(resolve);
    });
  }
  var CSS = {};
  exports.CSS = CSS;
  (function() {
    var i,
        keys = ['webkitTransform', 'transform', '-webkit-transform', 'webkit-transform', '-moz-transform', 'moz-transform', 'MozTransform', 'mozTransform', 'msTransform'];
    for (i = 0; i < keys.length; i++) {
      if (document.documentElement.style[keys[i]] !== undefined) {
        CSS.transform = keys[i];
        break;
      }
    }
    keys = ['webkitTransition', 'mozTransition', 'msTransition', 'transition'];
    for (i = 0; i < keys.length; i++) {
      if (document.documentElement.style[keys[i]] !== undefined) {
        CSS.transition = keys[i];
        break;
      }
    }
    var isWebkit = CSS.transition.indexOf('webkit') > -1;
    CSS.prefix = isWebkit ? '-webkit-' : '';
    CSS.transitionDuration = (isWebkit ? '-webkit-' : '') + 'transition-duration';
    CSS.transitionEnd = (isWebkit ? 'webkitTransitionEnd ' : '') + 'transitionend';
  })();
  if (window.onanimationend === undefined && window.onwebkitanimationend !== undefined) {
    CSS.animation = 'WebkitAnimation';
    CSS.animationStart = 'webkitAnimationStart animationstart';
    CSS.animationEnd = 'webkitAnimationEnd animationend';
  } else {
    CSS.animation = 'animation';
    CSS.animationStart = 'animationstart';
    CSS.animationEnd = 'animationend';
  }
  function transitionEnd(el) {
    return cssPromise(el, CSS.transitionEnd);
  }
  function animationStart(el, animationName) {
    return cssPromise(el, CSS.animationStart, animationName);
  }
  function animationEnd(el, animationName) {
    return cssPromise(el, CSS.animationEnd, animationName);
  }
  function cssPromise(el, eventNames, animationName) {
    return new Promise(function(resolve) {
      eventNames.split(' ').forEach(function(eventName) {
        el.addEventListener(eventName, onEvent);
      });
      function onEvent(ev) {
        if (ev.animationName && animationName) {
          if (ev.animationName !== animationName) {
            return;
          }
        } else if (ev.target !== el) {
          return;
        }
        ev.stopPropagation();
        eventNames.split(' ').forEach(function(eventName) {
          el.removeEventListener(eventName, onEvent);
        });
        resolve(ev);
      }
    });
  }
  function ready(callback) {
    var promise = null;
    if (!callback) {
      promise = new Promise(function(resolve) {
        callback = resolve;
      });
    }
    if (document.readyState === 'complete' || document.readyState === 'interactive') {
      callback();
    } else {
      (function() {
        var completed = function completed() {
          document.removeEventListener('DOMContentLoaded', completed, false);
          window.removeEventListener('load', completed, false);
          callback();
        };
        document.addEventListener('DOMContentLoaded', completed, false);
        window.addEventListener('load', completed, false);
      })();
    }
    return promise;
  }
  function windowLoad(callback) {
    var promise = null;
    if (!callback) {
      promise = new Promise(function(resolve) {
        callback = resolve;
      });
    }
    if (document.readyState === 'complete') {
      callback();
    } else {
      (function() {
        var completed = function completed() {
          window.removeEventListener('load', completed, false);
          callback();
        };
        window.addEventListener('load', completed, false);
      })();
    }
    return promise;
  }
  function pointerCoord(ev) {
    var c = {
      x: 0,
      y: 0
    };
    if (ev) {
      var touches = ev.touches && ev.touches.length ? ev.touches : [ev];
      var e = ev.changedTouches && ev.changedTouches[0] || touches[0];
      if (e) {
        c.x = e.clientX || e.pageX || 0;
        c.y = e.clientY || e.pageY || 0;
      }
    }
    return c;
  }
  function hasPointerMoved(threshold, startCoord, endCoord) {
    return startCoord && endCoord && (Math.abs(startCoord.x - endCoord.x) > threshold || Math.abs(startCoord.y - endCoord.y) > threshold);
  }
  function isActive(ele) {
    return !!(ele && document.activeElement === ele);
  }
  function hasFocus(ele) {
    return isActive(ele) && ele.parentElement.querySelector(':focus') === ele;
  }
  function isTextInput(ele) {
    return !!ele && (ele.tagName == 'TEXTAREA' || ele.contentEditable === 'true' || ele.tagName == 'INPUT' && !/^(radio|checkbox|range|file|submit|reset|color|image|button)$/i.test(ele.type));
  }
  function hasFocusedTextInput() {
    var ele = document.activeElement;
    if (isTextInput(ele)) {
      return ele.parentElement.querySelector(':focus') === ele;
    }
    return false;
  }
  var matchesFn = undefined;
  ['matches', 'webkitMatchesSelector', 'mozMatchesSelector', 'msMatchesSelector'].some(function(fn) {
    if (typeof document.documentElement[fn] == 'function') {
      matchesFn = fn;
    }
  });
  function closest(ele, selector, checkSelf) {
    if (ele && matchesFn) {
      ele = checkSelf ? ele : ele.parentElement;
      while (ele !== null) {
        if (ele[matchesFn](selector)) {
          return ele;
        }
        ele = ele.parentElement;
      }
    }
    return null;
  }
  function removeElement(ele) {
    ele && ele.parentNode && ele.parentNode.removeChild(ele);
  }
  function getDimensions(ion, ele) {
    if (!ion._dimId) {
      ion._dimId = ++dimensionIds;
      if (ion._dimId % 1000 === 0) {
        flushDimensionCache();
      }
    }
    var dimensions = dimensionCache[ion._dimId];
    if (!dimensions) {
      var _ele = ion.getNativeElement();
      if (_ele.offsetWidth && _ele.offsetHeight) {
        dimensions = dimensionCache[ion._dimId] = {
          width: _ele.offsetWidth,
          height: _ele.offsetHeight,
          left: _ele.offsetLeft,
          top: _ele.offsetTop
        };
      } else {
        return {
          width: 0,
          height: 0,
          left: 0,
          top: 0
        };
      }
    }
    return dimensions;
  }
  function windowDimensions() {
    if (!dimensionCache.win) {
      if (window.innerWidth && window.innerHeight) {
        dimensionCache.win = {
          width: window.innerWidth,
          height: window.innerHeight
        };
      } else {
        return {
          width: 0,
          height: 0
        };
      }
    }
    return dimensionCache.win;
  }
  function flushDimensionCache() {
    dimensionCache = {};
  }
  var dimensionCache = {};
  var dimensionIds = 0;
  function isStaticPositioned(element) {
    return (element.style.position || 'static') === 'static';
  }
  function parentOffsetEl(element) {
    var offsetParent = element.offsetParent || document;
    while (offsetParent && offsetParent !== document && isStaticPositioned(offsetParent)) {
      offsetParent = offsetParent.offsetParent;
    }
    return offsetParent || document;
  }
  ;
  function position(element) {
    var elBCR = offset(element);
    var offsetParentBCR = {
      top: 0,
      left: 0
    };
    var offsetParentEl = parentOffsetEl(element);
    if (offsetParentEl != document) {
      offsetParentBCR = offset(offsetParentEl);
      offsetParentBCR.top += offsetParentEl.clientTop - offsetParentEl.scrollTop;
      offsetParentBCR.left += offsetParentEl.clientLeft - offsetParentEl.scrollLeft;
    }
    var boundingClientRect = element.getBoundingClientRect();
    return {
      width: boundingClientRect.width || element.offsetWidth,
      height: boundingClientRect.height || element.offsetHeight,
      top: elBCR.top - offsetParentBCR.top,
      left: elBCR.left - offsetParentBCR.left
    };
  }
  function offset(element) {
    var boundingClientRect = element.getBoundingClientRect();
    return {
      width: boundingClientRect.width || element.offsetWidth,
      height: boundingClientRect.height || element.offsetHeight,
      top: boundingClientRect.top + (window.pageYOffset || document.documentElement.scrollTop),
      left: boundingClientRect.left + (window.pageXOffset || document.documentElement.scrollLeft)
    };
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports.noop = noop;
  exports.clamp = clamp;
  exports.extend = extend;
  exports.merge = merge;
  exports.debounce = debounce;
  exports.defaults = defaults;
  exports.pascalCaseToDashCase = pascalCaseToDashCase;
  exports.nextUid = nextUid;
  exports.getQuerystring = getQuerystring;
  exports.throttle = throttle;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function noop() {}
  ;
  function clamp(min, n, max) {
    return Math.max(min, Math.min(n, max));
  }
  function extend(dst) {
    return _baseExtend(dst, [].slice.call(arguments, 1), false);
  }
  function merge(dst) {
    return _baseExtend(dst, [].slice.call(arguments, 1), true);
  }
  function _baseExtend(dst, objs, deep) {
    for (var i = 0,
        ii = objs.length; i < ii; ++i) {
      var obj = objs[i];
      if (!obj || !isObject(obj) && !isFunction(obj))
        continue;
      var keys = Object.keys(obj);
      for (var j = 0,
          jj = keys.length; j < jj; j++) {
        var key = keys[j];
        var src = obj[key];
        if (deep && isObject(src)) {
          if (!isObject(dst[key]))
            dst[key] = isArray(src) ? [] : {};
          _baseExtend(dst[key], [src], true);
        } else {
          dst[key] = src;
        }
      }
    }
    return dst;
  }
  function debounce(func, wait, immediate) {
    var timeout,
        args,
        context,
        timestamp,
        result;
    return function() {
      context = this;
      args = arguments;
      timestamp = new Date();
      var later = function later() {
        var last = new Date() - timestamp;
        if (last < wait) {
          timeout = setTimeout(later, wait - last);
        } else {
          timeout = null;
          if (!immediate)
            result = func.apply(context, args);
        }
      };
      var callNow = immediate && !timeout;
      if (!timeout) {
        timeout = setTimeout(later, wait);
      }
      if (callNow)
        result = func.apply(context, args);
      return result;
    };
  }
  function defaults(dest) {
    for (var i = arguments.length - 1; i >= 1; i--) {
      var source = arguments[i] || {};
      for (var key in source) {
        if (source.hasOwnProperty(key) && !dest.hasOwnProperty(key)) {
          dest[key] = source[key];
        }
      }
    }
    return dest;
  }
  var isBoolean = function isBoolean(val) {
    return typeof val === 'boolean';
  };
  exports.isBoolean = isBoolean;
  var isString = function isString(val) {
    return typeof val === 'string';
  };
  exports.isString = isString;
  var isNumber = function isNumber(val) {
    return typeof val === 'number';
  };
  exports.isNumber = isNumber;
  var isFunction = function isFunction(val) {
    return typeof val === 'function';
  };
  exports.isFunction = isFunction;
  var isDefined = function isDefined(val) {
    return typeof val !== 'undefined';
  };
  exports.isDefined = isDefined;
  var isUndefined = function isUndefined(val) {
    return typeof val === 'undefined';
  };
  exports.isUndefined = isUndefined;
  var isBlank = function isBlank(val) {
    return val === undefined || val === null;
  };
  exports.isBlank = isBlank;
  var isObject = function isObject(val) {
    return typeof val === 'object';
  };
  exports.isObject = isObject;
  var isArray = Array.isArray;
  exports.isArray = isArray;
  var isTrueProperty = function isTrueProperty(val) {
    return typeof val !== 'undefined' && val !== "false";
  };
  exports.isTrueProperty = isTrueProperty;
  function pascalCaseToDashCase() {
    var str = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];
    return str.charAt(0).toLowerCase() + str.substring(1).replace(/[A-Z]/g, function(match) {
      return '-' + match.toLowerCase();
    });
  }
  var uid = 0;
  function nextUid() {
    return ++uid;
  }
  var Log = (function() {
    function Log() {
      _classCallCheck(this, Log);
    }
    _createClass(Log, null, [{
      key: 'log',
      value: function log() {
        for (var _len = arguments.length,
            args = Array(_len),
            _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        console.log.apply(console, args);
      }
    }, {
      key: 'info',
      value: function info() {
        for (var _len2 = arguments.length,
            args = Array(_len2),
            _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }
        console.info.apply(console, args);
      }
    }, {
      key: 'warn',
      value: function warn() {
        for (var _len3 = arguments.length,
            args = Array(_len3),
            _key3 = 0; _key3 < _len3; _key3++) {
          args[_key3] = arguments[_key3];
        }
        console.warn.apply(console, args);
      }
    }, {
      key: 'error',
      value: function error() {
        for (var _len4 = arguments.length,
            args = Array(_len4),
            _key4 = 0; _key4 < _len4; _key4++) {
          args[_key4] = arguments[_key4];
        }
        console.error.apply(console, args);
      }
    }]);
    return Log;
  })();
  exports.Log = Log;
  var array = {
    find: function find(arr, cb) {
      for (var i = 0,
          ii = arr.length; i < ii; i++) {
        if (cb(arr[i], i))
          return arr[i];
      }
    },
    remove: function remove(arr, itemOrIndex) {
      var index = -1;
      if (isNumber(itemOrIndex)) {
        index = itemOrIndex;
      } else {
        index = arr.indexOf(itemOrIndex);
      }
      if (index < 0) {
        return false;
      }
      arr.splice(index, 1);
      return true;
    }
  };
  exports.array = array;
  function getQuerystring(url, key) {
    var queryParams = {};
    if (url) {
      var startIndex = url.indexOf('?');
      if (startIndex !== -1) {
        var queries = url.slice(startIndex + 1).split('&');
        queries.forEach(function(param) {
          var split = param.split('=');
          queryParams[split[0].toLowerCase()] = split[1].split('#')[0];
        });
      }
      if (key) {
        return queryParams[key] || '';
      }
    }
    return queryParams;
  }
  function throttle(func, wait, options) {
    var context,
        args,
        result;
    var timeout = null;
    var previous = 0;
    options || (options = {});
    var later = function later() {
      previous = options.leading === false ? 0 : Date.now();
      timeout = null;
      result = func.apply(context, args);
    };
    return function() {
      var now = Date.now();
      if (!previous && options.leading === false)
        previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util');
  var util = _interopRequireWildcard(_utilUtil);
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var dom = _interopRequireWildcard(_utilDom);
  var Platform = (function() {
    function Platform() {
      var _this = this;
      var platforms = arguments.length <= 0 || arguments[0] === undefined ? [] : arguments[0];
      _classCallCheck(this, Platform);
      this._platforms = platforms;
      this._versions = {};
      this._onResizes = [];
      this._readyPromise = new Promise(function(res) {
        _this._readyResolve = res;
      });
    }
    _createClass(Platform, [{
      key: 'is',
      value: function is(platformName) {
        return this._platforms.indexOf(platformName) > -1;
      }
    }, {
      key: 'platforms',
      value: function platforms() {
        return this._platforms;
      }
    }, {
      key: 'versions',
      value: function versions(platformName) {
        if (arguments.length) {
          return this._versions[platformName];
        }
        return this._versions;
      }
    }, {
      key: 'ready',
      value: function ready() {
        return this._readyPromise;
      }
    }, {
      key: 'prepareReady',
      value: function prepareReady(config) {
        var self = this;
        function resolve() {
          self._readyResolve(config);
        }
        if (this._engineReady) {
          this._engineReady(resolve);
        } else {
          dom.ready(resolve);
        }
      }
    }, {
      key: 'on',
      value: function on() {}
    }, {
      key: 'onHardwareBackButton',
      value: function onHardwareBackButton() {}
    }, {
      key: 'registerBackButtonAction',
      value: function registerBackButtonAction() {}
    }, {
      key: 'exitApp',
      value: function exitApp() {}
    }, {
      key: 'fullScreen',
      value: function fullScreen() {}
    }, {
      key: 'showStatusBar',
      value: function showStatusBar() {}
    }, {
      key: 'url',
      value: function url(val) {
        if (arguments.length) {
          this._url = val;
          this._qs = util.getQuerystring(val);
        }
        return this._url;
      }
    }, {
      key: 'query',
      value: function query(key) {
        return (this._qs || {})[key];
      }
    }, {
      key: 'userAgent',
      value: function userAgent(val) {
        if (arguments.length) {
          this._ua = val;
        }
        return this._ua || '';
      }
    }, {
      key: 'navigatorPlatform',
      value: function navigatorPlatform(val) {
        if (arguments.length) {
          this._bPlt = val;
        }
        return this._bPlt || '';
      }
    }, {
      key: 'width',
      value: function width() {
        return dom.windowDimensions().width;
      }
    }, {
      key: 'height',
      value: function height() {
        return dom.windowDimensions().height;
      }
    }, {
      key: 'isPortrait',
      value: function isPortrait() {
        return this.width() < this.height();
      }
    }, {
      key: 'isLandscape',
      value: function isLandscape() {
        return !this.isPortrait();
      }
    }, {
      key: 'windowResize',
      value: function windowResize() {
        var self = this;
        clearTimeout(self._resizeTimer);
        self._resizeTimer = setTimeout(function() {
          dom.flushDimensionCache();
          for (var i = 0; i < self._onResizes.length; i++) {
            try {
              self._onResizes[i]();
            } catch (e) {
              console.error(e);
            }
          }
        }, 500);
      }
    }, {
      key: 'onResize',
      value: function onResize(cb) {
        this._onResizes.push(cb);
      }
    }, {
      key: 'testQuery',
      value: function testQuery(queryValue, queryTestValue) {
        var valueSplit = queryValue.toLowerCase().split(';');
        return valueSplit.indexOf(queryTestValue) > -1;
      }
    }, {
      key: 'testUserAgent',
      value: function testUserAgent(userAgentExpression) {
        var rgx = new RegExp(userAgentExpression, 'i');
        return rgx.test(this._ua || '');
      }
    }, {
      key: 'matchUserAgentVersion',
      value: function matchUserAgentVersion(userAgentExpression) {
        if (this._ua && userAgentExpression) {
          var val = this._ua.match(userAgentExpression);
          if (val) {
            return {
              major: val[1],
              minor: val[2]
            };
          }
        }
      }
    }, {
      key: 'isPlatform',
      value: function isPlatform(queryTestValue, userAgentExpression) {
        if (!userAgentExpression) {
          userAgentExpression = queryTestValue;
        }
        var queryValue = this.query('ionicplatform');
        if (queryValue) {
          return this.testQuery(queryValue, queryTestValue);
        }
        return this.testUserAgent(userAgentExpression);
      }
    }, {
      key: 'load',
      value: function load(platformOverride) {
        var rootPlatformNode = null;
        var engineNode = null;
        var self = this;
        this.platformOverride = platformOverride;
        var tmpPlatform = null;
        for (var platformName in platformRegistry) {
          tmpPlatform = this.matchPlatform(platformName);
          if (tmpPlatform) {
            if (tmpPlatform.isEngine) {
              engineNode = tmpPlatform;
            } else if (!rootPlatformNode || tmpPlatform.depth > rootPlatformNode.depth) {
              rootPlatformNode = tmpPlatform;
            }
          }
        }
        if (!rootPlatformNode) {
          rootPlatformNode = new PlatformNode(platformDefault);
        }
        if (rootPlatformNode) {
          if (engineNode) {
            engineNode.child(rootPlatformNode);
            rootPlatformNode.parent(engineNode);
            rootPlatformNode = engineNode;
            var engineMethods = engineNode.methods();
            engineMethods._engineReady = engineMethods.ready;
            delete engineMethods.ready;
            util.extend(this, engineMethods);
          }
          var platformNode = rootPlatformNode;
          while (platformNode) {
            insertSuperset(platformNode);
            platformNode = platformNode.child();
          }
          platformNode = rootPlatformNode.parent();
          while (platformNode) {
            rootPlatformNode = platformNode;
            platformNode = platformNode.parent();
          }
          platformNode = rootPlatformNode;
          while (platformNode) {
            this._platforms.push(platformNode.name());
            this._versions[platformNode.name()] = platformNode.version(this);
            platformNode = platformNode.child();
          }
        }
      }
    }, {
      key: 'matchPlatform',
      value: function matchPlatform(platformName) {
        var platformNode = new PlatformNode(platformName);
        var rootNode = platformNode.getRoot(this, 0);
        if (rootNode) {
          rootNode.depth = 0;
          var childPlatform = rootNode.child();
          while (childPlatform) {
            rootNode.depth++;
            childPlatform = childPlatform.child();
          }
        }
        return rootNode;
      }
    }], [{
      key: 'register',
      value: function register(platformConfig) {
        platformRegistry[platformConfig.name] = platformConfig;
      }
    }, {
      key: 'registry',
      value: function registry() {
        return platformRegistry;
      }
    }, {
      key: 'get',
      value: function get(platformName) {
        return platformRegistry[platformName] || {};
      }
    }, {
      key: 'setDefault',
      value: function setDefault(platformName) {
        platformDefault = platformName;
      }
    }]);
    return Platform;
  })();
  exports.Platform = Platform;
  function insertSuperset(platformNode) {
    var supersetPlaformName = platformNode.superset();
    if (supersetPlaformName) {
      var supersetPlatform = new PlatformNode(supersetPlaformName);
      supersetPlatform.parent(platformNode.parent());
      supersetPlatform.child(platformNode);
      if (supersetPlatform.parent()) {
        supersetPlatform.parent().child(supersetPlatform);
      }
      platformNode.parent(supersetPlatform);
    }
  }
  var PlatformNode = (function() {
    function PlatformNode(platformName) {
      _classCallCheck(this, PlatformNode);
      this.c = Platform.get(platformName);
      this.isEngine = this.c.isEngine;
    }
    _createClass(PlatformNode, [{
      key: 'name',
      value: function name() {
        return this.c.name;
      }
    }, {
      key: 'settings',
      value: function settings() {
        return this.c.settings || {};
      }
    }, {
      key: 'superset',
      value: function superset() {
        return this.c.superset;
      }
    }, {
      key: 'methods',
      value: function methods() {
        return this.c.methods || {};
      }
    }, {
      key: 'parent',
      value: function parent(val) {
        if (arguments.length) {
          this._parent = val;
        }
        return this._parent;
      }
    }, {
      key: 'child',
      value: function child(val) {
        if (arguments.length) {
          this._child = val;
        }
        return this._child;
      }
    }, {
      key: 'isMatch',
      value: function isMatch(p) {
        if (p.platformOverride && !this.isEngine) {
          return p.platformOverride === this.c.name;
        } else if (!this.c.isMatch) {
          return false;
        }
        return this.c.isMatch(p);
      }
    }, {
      key: 'version',
      value: function version(p) {
        if (this.c.versionParser) {
          var v = this.c.versionParser(p);
          if (v) {
            var str = v.major + '.' + v.minor;
            return {
              str: str,
              num: parseFloat(str),
              major: parseInt(v.major, 10),
              minor: parseInt(v.minor, 10)
            };
          }
        }
      }
    }, {
      key: 'getRoot',
      value: function getRoot(p) {
        if (this.isMatch(p)) {
          var parents = this.getSubsetParents(this.name());
          if (!parents.length) {
            return this;
          }
          var platform = null;
          var rootPlatform = null;
          for (var i = 0; i < parents.length; i++) {
            platform = new PlatformNode(parents[i]);
            platform.child(this);
            rootPlatform = platform.getRoot(p);
            if (rootPlatform) {
              this.parent(platform);
              return rootPlatform;
            }
          }
        }
        return null;
      }
    }, {
      key: 'getSubsetParents',
      value: function getSubsetParents(subsetPlatformName) {
        var platformRegistry = Platform.registry();
        var parentPlatformNames = [];
        var platform = null;
        for (var platformName in platformRegistry) {
          platform = platformRegistry[platformName];
          if (platform.subsets && platform.subsets.indexOf(subsetPlatformName) > -1) {
            parentPlatformNames.push(platformName);
          }
        }
        return parentPlatformNames;
      }
    }]);
    return PlatformNode;
  })();
  var platformRegistry = {};
  var platformDefault = null;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  var _utilUtil = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/util');
  var Config = (function() {
    function Config(config) {
      _classCallCheck(this, Config);
      this._s = config && (0, _utilUtil.isObject)(config) && !(0, _utilUtil.isArray)(config) ? config : {};
      this._c = {};
    }
    _createClass(Config, [{
      key: 'settings',
      value: function settings() {
        var args = arguments;
        switch (args.length) {
          case 0:
            return this._s;
          case 1:
            this._s = args[0];
            this._c = {};
            break;
          case 2:
            this._s.platforms = this._s.platforms || {};
            this._s.platforms[args[0]] = args[1];
            this._c = {};
            break;
        }
        return this;
      }
    }, {
      key: 'set',
      value: function set() {
        var args = arguments;
        var arg0 = args[0];
        var arg1 = args[1];
        switch (args.length) {
          case 2:
            this._s[arg0] = arg1;
            delete this._c[arg0];
            break;
          case 3:
            this._s.platforms = this._s.platforms || {};
            this._s.platforms[arg0] = this._s.platforms[arg0] || {};
            this._s.platforms[arg0][arg1] = args[2];
            delete this._c[arg1];
            break;
        }
        return this;
      }
    }, {
      key: 'get',
      value: function get(key) {
        if (!(0, _utilUtil.isDefined)(this._c[key])) {
          var userPlatformValue = undefined;
          var userDefaultValue = this._s[key];
          var userPlatformModeValue = undefined;
          var userDefaultModeValue = undefined;
          var platformValue = undefined;
          var platformModeValue = undefined;
          var configObj = null;
          if (this._platform) {
            var queryStringValue = this._platform.query('ionic' + key.toLowerCase());
            if ((0, _utilUtil.isDefined)(queryStringValue)) {
              return this._c[key] = queryStringValue === 'true' ? true : queryStringValue === 'false' ? false : queryStringValue;
            }
            var activePlatformKeys = this._platform.platforms();
            for (var i = 0,
                l = activePlatformKeys.length; i < l; i++) {
              if (this._s.platforms) {
                configObj = this._s.platforms[activePlatformKeys[i]];
                if (configObj) {
                  if ((0, _utilUtil.isDefined)(configObj[key])) {
                    userPlatformValue = configObj[key];
                  }
                  configObj = Config.getModeConfig(configObj.mode);
                  if (configObj && (0, _utilUtil.isDefined)(configObj[key])) {
                    userPlatformModeValue = configObj[key];
                  }
                }
              }
              configObj = _platformPlatform.Platform.get(activePlatformKeys[i]);
              if (configObj && configObj.settings) {
                if ((0, _utilUtil.isDefined)(configObj.settings[key])) {
                  platformValue = configObj.settings[key];
                }
                configObj = Config.getModeConfig(configObj.settings.mode);
                if (configObj && (0, _utilUtil.isDefined)(configObj[key])) {
                  platformModeValue = configObj[key];
                }
              }
            }
          }
          configObj = Config.getModeConfig(this._s.mode);
          if (configObj && (0, _utilUtil.isDefined)(configObj[key])) {
            userDefaultModeValue = configObj[key];
          }
          this._c[key] = (0, _utilUtil.isDefined)(userPlatformValue) ? userPlatformValue : (0, _utilUtil.isDefined)(userDefaultValue) ? userDefaultValue : (0, _utilUtil.isDefined)(userPlatformModeValue) ? userPlatformModeValue : (0, _utilUtil.isDefined)(userDefaultModeValue) ? userDefaultModeValue : (0, _utilUtil.isDefined)(platformValue) ? platformValue : (0, _utilUtil.isDefined)(platformModeValue) ? platformModeValue : null;
        }
        if ((0, _utilUtil.isFunction)(this._c[key])) {
          return this._c[key](this._platform);
        }
        return this._c[key];
      }
    }, {
      key: 'setPlatform',
      value: function setPlatform(platform) {
        this._platform = platform;
      }
    }], [{
      key: 'setModeConfig',
      value: function setModeConfig(mode, config) {
        modeConfigs[mode] = config;
      }
    }, {
      key: 'getModeConfig',
      value: function getModeConfig(mode) {
        return modeConfigs[mode] || null;
      }
    }]);
    return Config;
  })();
  exports.Config = Config;
  var modeConfigs = {};
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/click-block", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var CSS_CLICK_BLOCK = 'click-block-active';
  var DEFAULT_EXPIRE = 330;
  var cbEle = undefined,
      fallbackTimerId = undefined;
  var isShowing = false;
  function disableInput(ev) {
    ev.preventDefault();
    ev.stopPropagation();
  }
  function show(expire) {
    clearTimeout(fallbackTimerId);
    fallbackTimerId = setTimeout(hide, expire || DEFAULT_EXPIRE);
    if (!isShowing) {
      isShowing = true;
      if (cbEle) {
        cbEle.classList.add(CSS_CLICK_BLOCK);
      } else {
        cbEle = document.createElement('div');
        cbEle.className = 'click-block ' + CSS_CLICK_BLOCK;
        document.body.appendChild(cbEle);
      }
      cbEle.addEventListener('touchmove', disableInput);
    }
  }
  function hide() {
    clearTimeout(fallbackTimerId);
    if (isShowing) {
      cbEle.classList.remove(CSS_CLICK_BLOCK);
      isShowing = false;
      cbEle.removeEventListener('touchmove', disableInput);
    }
  }
  var ClickBlock = function ClickBlock(shouldShow, expire) {
    (shouldShow ? show : hide)(expire);
  };
  exports.ClickBlock = ClickBlock;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/click-block"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _utilClickBlock = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/click-block');
  var IonicApp = (function() {
    function IonicApp(fastdom) {
      _classCallCheck(this, IonicApp);
      this._fastdom = fastdom;
      this._titleSrv = new _angular2Angular2.Title();
      this._title = '';
      this._disTime = 0;
      this._trnsTime = 0;
      this.components = {};
    }
    _createClass(IonicApp, [{
      key: 'setTitle',
      value: function setTitle(val) {
        var _this = this;
        if (val !== this._title) {
          this._title = val;
          this._fastdom.defer(4, function() {
            _this._titleSrv.setTitle(_this._title);
          });
        }
      }
    }, {
      key: 'setEnabled',
      value: function setEnabled(isEnabled) {
        var fallback = arguments.length <= 1 || arguments[1] === undefined ? 700 : arguments[1];
        this._disTime = isEnabled ? 0 : Date.now() + fallback;
        (0, _utilClickBlock.ClickBlock)(!isEnabled, fallback + 100);
      }
    }, {
      key: 'isEnabled',
      value: function isEnabled() {
        return this._disTime < Date.now();
      }
    }, {
      key: 'setTransitioning',
      value: function setTransitioning(isTransitioning) {
        var fallback = arguments.length <= 1 || arguments[1] === undefined ? 700 : arguments[1];
        this._trnsTime = isTransitioning ? Date.now() + fallback : 0;
      }
    }, {
      key: 'isTransitioning',
      value: function isTransitioning() {
        return this._trnsTime > Date.now();
      }
    }, {
      key: 'register',
      value: function register(id, component) {
        if (this.components[id] && this.components[id] !== component) {}
        this.components[id] = component;
      }
    }, {
      key: 'unregister',
      value: function unregister(id) {
        delete this.components[id];
      }
    }, {
      key: 'getRegisteredComponent',
      value: function getRegisteredComponent(cls) {
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;
        try {
          for (var _iterator = this.components[Symbol.iterator](),
              _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var component = _step.value;
            if (component instanceof cls) {
              return component;
            }
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator['return']) {
              _iterator['return']();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    }, {
      key: 'getComponent',
      value: function getComponent(id) {
        return this.components[id];
      }
    }]);
    return IonicApp;
  })();
  exports.IonicApp = IonicApp;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/backends/mock_backend", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/http/static_request", "npm:angular2@2.0.0-alpha.46/src/http/enums", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Rx"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var static_request_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/static_request');
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var Rx = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Rx');
  var Subject = Rx.Subject,
      ReplaySubject = Rx.ReplaySubject;
  var MockConnection = (function() {
    function MockConnection(req) {
      this.response = new ReplaySubject(1).take(1);
      this.readyState = enums_1.ReadyStates.Open;
      this.request = req;
    }
    MockConnection.prototype.mockRespond = function(res) {
      if (this.readyState === enums_1.ReadyStates.Done || this.readyState === enums_1.ReadyStates.Cancelled) {
        throw new exceptions_1.BaseException('Connection has already been resolved');
      }
      this.readyState = enums_1.ReadyStates.Done;
      this.response.next(res);
      this.response.complete();
    };
    MockConnection.prototype.mockDownload = function(res) {};
    MockConnection.prototype.mockError = function(err) {
      this.readyState = enums_1.ReadyStates.Done;
      this.response.error(err);
    };
    return MockConnection;
  })();
  exports.MockConnection = MockConnection;
  var MockBackend = (function() {
    function MockBackend() {
      var _this = this;
      this.connectionsArray = [];
      this.connections = new Subject();
      this.connections.subscribe(function(connection) {
        return _this.connectionsArray.push(connection);
      });
      this.pendingConnections = new Subject();
    }
    MockBackend.prototype.verifyNoPendingRequests = function() {
      var pending = 0;
      this.pendingConnections.subscribe(function(c) {
        return pending++;
      });
      if (pending > 0)
        throw new exceptions_1.BaseException(pending + " pending connections to be resolved");
    };
    MockBackend.prototype.resolveAllConnections = function() {
      this.connections.subscribe(function(c) {
        return c.readyState = 4;
      });
    };
    MockBackend.prototype.createConnection = function(req) {
      if (!lang_1.isPresent(req) || !(req instanceof static_request_1.Request)) {
        throw new exceptions_1.BaseException("createConnection requires an instance of Request, got " + req);
      }
      var connection = new MockConnection(req);
      this.connections.next(connection);
      return connection;
    };
    MockBackend = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], MockBackend);
    return MockBackend;
  })();
  exports.MockBackend = MockBackend;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/backends/browser_jsonp", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var _nextRequestId = 0;
  exports.JSONP_HOME = '__ng_jsonp__';
  var _jsonpConnections = null;
  function _getJsonpConnections() {
    if (_jsonpConnections === null) {
      _jsonpConnections = lang_1.global[exports.JSONP_HOME] = {};
    }
    return _jsonpConnections;
  }
  var BrowserJsonp = (function() {
    function BrowserJsonp() {}
    BrowserJsonp.prototype.build = function(url) {
      var node = document.createElement('script');
      node.src = url;
      return node;
    };
    BrowserJsonp.prototype.nextRequestID = function() {
      return "__req" + _nextRequestId++;
    };
    BrowserJsonp.prototype.requestCallback = function(id) {
      return exports.JSONP_HOME + "." + id + ".finished";
    };
    BrowserJsonp.prototype.exposeConnection = function(id, connection) {
      var connections = _getJsonpConnections();
      connections[id] = connection;
    };
    BrowserJsonp.prototype.removeConnection = function(id) {
      var connections = _getJsonpConnections();
      connections[id] = null;
    };
    BrowserJsonp.prototype.send = function(node) {
      document.body.appendChild((node));
    };
    BrowserJsonp.prototype.cleanup = function(node) {
      if (node.parentNode) {
        node.parentNode.removeChild((node));
      }
    };
    BrowserJsonp = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], BrowserJsonp);
    return BrowserJsonp;
  })();
  exports.BrowserJsonp = BrowserJsonp;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/backends/jsonp_backend", ["npm:angular2@2.0.0-alpha.46/src/http/interfaces", "npm:angular2@2.0.0-alpha.46/src/http/enums", "npm:angular2@2.0.0-alpha.46/src/http/static_response", "npm:angular2@2.0.0-alpha.46/src/http/base_response_options", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/http/backends/browser_jsonp", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/interfaces');
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  var static_response_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/static_response');
  var base_response_options_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_response_options');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var browser_jsonp_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/browser_jsonp');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var angular2_2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';
  var JSONP_ERR_WRONG_METHOD = 'JSONP requests must use GET request method.';
  var JSONPConnection = (function() {
    function JSONPConnection() {}
    return JSONPConnection;
  })();
  exports.JSONPConnection = JSONPConnection;
  var JSONPConnection_ = (function(_super) {
    __extends(JSONPConnection_, _super);
    function JSONPConnection_(req, _dom, baseResponseOptions) {
      var _this = this;
      _super.call(this);
      this._dom = _dom;
      this.baseResponseOptions = baseResponseOptions;
      this._finished = false;
      if (req.method !== enums_1.RequestMethods.Get) {
        throw exceptions_1.makeTypeError(JSONP_ERR_WRONG_METHOD);
      }
      this.request = req;
      this.response = new angular2_2.Observable(function(responseObserver) {
        _this.readyState = enums_1.ReadyStates.Loading;
        var id = _this._id = _dom.nextRequestID();
        _dom.exposeConnection(id, _this);
        var callback = _dom.requestCallback(_this._id);
        var url = req.url;
        if (url.indexOf('=JSONP_CALLBACK&') > -1) {
          url = lang_1.StringWrapper.replace(url, '=JSONP_CALLBACK&', "=" + callback + "&");
        } else if (url.lastIndexOf('=JSONP_CALLBACK') === url.length - '=JSONP_CALLBACK'.length) {
          url = url.substring(0, url.length - '=JSONP_CALLBACK'.length) + ("=" + callback);
        }
        var script = _this._script = _dom.build(url);
        var onLoad = function(event) {
          if (_this.readyState === enums_1.ReadyStates.Cancelled)
            return;
          _this.readyState = enums_1.ReadyStates.Done;
          _dom.cleanup(script);
          if (!_this._finished) {
            var responseOptions_1 = new base_response_options_1.ResponseOptions({
              body: JSONP_ERR_NO_CALLBACK,
              type: enums_1.ResponseTypes.Error
            });
            if (lang_1.isPresent(baseResponseOptions)) {
              responseOptions_1 = baseResponseOptions.merge(responseOptions_1);
            }
            responseObserver.error(new static_response_1.Response(responseOptions_1));
            return;
          }
          var responseOptions = new base_response_options_1.ResponseOptions({body: _this._responseData});
          if (lang_1.isPresent(_this.baseResponseOptions)) {
            responseOptions = _this.baseResponseOptions.merge(responseOptions);
          }
          responseObserver.next(new static_response_1.Response(responseOptions));
          responseObserver.complete();
        };
        var onError = function(error) {
          if (_this.readyState === enums_1.ReadyStates.Cancelled)
            return;
          _this.readyState = enums_1.ReadyStates.Done;
          _dom.cleanup(script);
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: error.message,
            type: enums_1.ResponseTypes.Error
          });
          if (lang_1.isPresent(baseResponseOptions)) {
            responseOptions = baseResponseOptions.merge(responseOptions);
          }
          responseObserver.error(new static_response_1.Response(responseOptions));
        };
        script.addEventListener('load', onLoad);
        script.addEventListener('error', onError);
        _dom.send(script);
        return function() {
          _this.readyState = enums_1.ReadyStates.Cancelled;
          script.removeEventListener('load', onLoad);
          script.removeEventListener('error', onError);
          if (lang_1.isPresent(script)) {
            _this._dom.cleanup(script);
          }
        };
      });
    }
    JSONPConnection_.prototype.finished = function(data) {
      this._finished = true;
      this._dom.removeConnection(this._id);
      if (this.readyState === enums_1.ReadyStates.Cancelled)
        return;
      this._responseData = data;
    };
    return JSONPConnection_;
  })(JSONPConnection);
  exports.JSONPConnection_ = JSONPConnection_;
  var JSONPBackend = (function(_super) {
    __extends(JSONPBackend, _super);
    function JSONPBackend() {
      _super.apply(this, arguments);
    }
    return JSONPBackend;
  })(interfaces_1.ConnectionBackend);
  exports.JSONPBackend = JSONPBackend;
  var JSONPBackend_ = (function(_super) {
    __extends(JSONPBackend_, _super);
    function JSONPBackend_(_browserJSONP, _baseResponseOptions) {
      _super.call(this);
      this._browserJSONP = _browserJSONP;
      this._baseResponseOptions = _baseResponseOptions;
    }
    JSONPBackend_.prototype.createConnection = function(request) {
      return new JSONPConnection_(request, this._browserJSONP, this._baseResponseOptions);
    };
    JSONPBackend_ = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [browser_jsonp_1.BrowserJsonp, base_response_options_1.ResponseOptions])], JSONPBackend_);
    return JSONPBackend_;
  })(JSONPBackend);
  exports.JSONPBackend_ = JSONPBackend_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/backends/browser_xhr", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var BrowserXhr = (function() {
    function BrowserXhr() {}
    BrowserXhr.prototype.build = function() {
      return (new XMLHttpRequest());
    };
    BrowserXhr = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], BrowserXhr);
    return BrowserXhr;
  })();
  exports.BrowserXhr = BrowserXhr;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/base_response_options", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/http/headers", "npm:angular2@2.0.0-alpha.46/src/http/enums"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var headers_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/headers');
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  var ResponseOptions = (function() {
    function ResponseOptions(_a) {
      var _b = _a === void 0 ? {} : _a,
          body = _b.body,
          status = _b.status,
          headers = _b.headers,
          statusText = _b.statusText,
          type = _b.type,
          url = _b.url;
      this.body = lang_1.isPresent(body) ? body : null;
      this.status = lang_1.isPresent(status) ? status : null;
      this.headers = lang_1.isPresent(headers) ? headers : null;
      this.statusText = lang_1.isPresent(statusText) ? statusText : null;
      this.type = lang_1.isPresent(type) ? type : null;
      this.url = lang_1.isPresent(url) ? url : null;
    }
    ResponseOptions.prototype.merge = function(options) {
      return new ResponseOptions({
        body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,
        status: lang_1.isPresent(options) && lang_1.isPresent(options.status) ? options.status : this.status,
        headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,
        statusText: lang_1.isPresent(options) && lang_1.isPresent(options.statusText) ? options.statusText : this.statusText,
        type: lang_1.isPresent(options) && lang_1.isPresent(options.type) ? options.type : this.type,
        url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url
      });
    };
    return ResponseOptions;
  })();
  exports.ResponseOptions = ResponseOptions;
  var BaseResponseOptions = (function(_super) {
    __extends(BaseResponseOptions, _super);
    function BaseResponseOptions() {
      _super.call(this, {
        status: 200,
        statusText: 'Ok',
        type: enums_1.ResponseTypes.Default,
        headers: new headers_1.Headers()
      });
    }
    BaseResponseOptions = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], BaseResponseOptions);
    return BaseResponseOptions;
  })(ResponseOptions);
  exports.BaseResponseOptions = BaseResponseOptions;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/static_response", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/http/http_utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var http_utils_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/http_utils');
  var Response = (function() {
    function Response(responseOptions) {
      this._body = responseOptions.body;
      this.status = responseOptions.status;
      this.statusText = responseOptions.statusText;
      this.headers = responseOptions.headers;
      this.type = responseOptions.type;
      this.url = responseOptions.url;
    }
    Response.prototype.blob = function() {
      throw new exceptions_1.BaseException('"blob()" method not implemented on Response superclass');
    };
    Response.prototype.json = function() {
      var jsonResponse;
      if (http_utils_1.isJsObject(this._body)) {
        jsonResponse = this._body;
      } else if (lang_1.isString(this._body)) {
        jsonResponse = lang_1.Json.parse(this._body);
      }
      return jsonResponse;
    };
    Response.prototype.text = function() {
      return this._body.toString();
    };
    Response.prototype.arrayBuffer = function() {
      throw new exceptions_1.BaseException('"arrayBuffer()" method not implemented on Response superclass');
    };
    return Response;
  })();
  exports.Response = Response;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/backends/xhr_backend", ["npm:angular2@2.0.0-alpha.46/src/http/enums", "npm:angular2@2.0.0-alpha.46/src/http/static_response", "npm:angular2@2.0.0-alpha.46/src/http/base_response_options", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/http/backends/browser_xhr", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  var static_response_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/static_response');
  var base_response_options_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_response_options');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var browser_xhr_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/browser_xhr');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var angular2_2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var XHRConnection = (function() {
    function XHRConnection(req, browserXHR, baseResponseOptions) {
      var _this = this;
      this.request = req;
      this.response = new angular2_2.Observable(function(responseObserver) {
        var _xhr = browserXHR.build();
        _xhr.open(enums_1.RequestMethods[req.method].toUpperCase(), req.url);
        var onLoad = function() {
          var response = lang_1.isPresent(_xhr.response) ? _xhr.response : _xhr.responseText;
          var status = _xhr.status === 1223 ? 204 : _xhr.status;
          if (status === 0) {
            status = response ? 200 : 0;
          }
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: response,
            status: status
          });
          if (lang_1.isPresent(baseResponseOptions)) {
            responseOptions = baseResponseOptions.merge(responseOptions);
          }
          responseObserver.next(new static_response_1.Response(responseOptions));
          responseObserver.complete();
        };
        var onError = function(err) {
          var responseOptions = new base_response_options_1.ResponseOptions({
            body: err,
            type: enums_1.ResponseTypes.Error
          });
          if (lang_1.isPresent(baseResponseOptions)) {
            responseOptions = baseResponseOptions.merge(responseOptions);
          }
          responseObserver.error(new static_response_1.Response(responseOptions));
        };
        if (lang_1.isPresent(req.headers)) {
          req.headers.forEach(function(values, name) {
            return _xhr.setRequestHeader(name, values.join(','));
          });
        }
        _xhr.addEventListener('load', onLoad);
        _xhr.addEventListener('error', onError);
        _xhr.send(_this.request.text());
        return function() {
          _xhr.removeEventListener('load', onLoad);
          _xhr.removeEventListener('error', onError);
          _xhr.abort();
        };
      });
    }
    return XHRConnection;
  })();
  exports.XHRConnection = XHRConnection;
  var XHRBackend = (function() {
    function XHRBackend(_browserXHR, _baseResponseOptions) {
      this._browserXHR = _browserXHR;
      this._baseResponseOptions = _baseResponseOptions;
    }
    XHRBackend.prototype.createConnection = function(request) {
      return new XHRConnection(request, this._browserXHR, this._baseResponseOptions);
    };
    XHRBackend = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [browser_xhr_1.BrowserXhr, base_response_options_1.ResponseOptions])], XHRBackend);
    return XHRBackend;
  })();
  exports.XHRBackend = XHRBackend;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/url_search_params", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  function paramParser(rawParams) {
    if (rawParams === void 0) {
      rawParams = '';
    }
    var map = new collection_1.Map();
    if (rawParams.length > 0) {
      var params = rawParams.split('&');
      params.forEach(function(param) {
        var split = param.split('=');
        var key = split[0];
        var val = split[1];
        var list = lang_1.isPresent(map.get(key)) ? map.get(key) : [];
        list.push(val);
        map.set(key, list);
      });
    }
    return map;
  }
  var URLSearchParams = (function() {
    function URLSearchParams(rawParams) {
      if (rawParams === void 0) {
        rawParams = '';
      }
      this.rawParams = rawParams;
      this.paramsMap = paramParser(rawParams);
    }
    URLSearchParams.prototype.clone = function() {
      var clone = new URLSearchParams();
      clone.appendAll(this);
      return clone;
    };
    URLSearchParams.prototype.has = function(param) {
      return this.paramsMap.has(param);
    };
    URLSearchParams.prototype.get = function(param) {
      var storedParam = this.paramsMap.get(param);
      if (collection_1.isListLikeIterable(storedParam)) {
        return collection_1.ListWrapper.first(storedParam);
      } else {
        return null;
      }
    };
    URLSearchParams.prototype.getAll = function(param) {
      var mapParam = this.paramsMap.get(param);
      return lang_1.isPresent(mapParam) ? mapParam : [];
    };
    URLSearchParams.prototype.set = function(param, val) {
      var mapParam = this.paramsMap.get(param);
      var list = lang_1.isPresent(mapParam) ? mapParam : [];
      collection_1.ListWrapper.clear(list);
      list.push(val);
      this.paramsMap.set(param, list);
    };
    URLSearchParams.prototype.setAll = function(searchParams) {
      var _this = this;
      searchParams.paramsMap.forEach(function(value, param) {
        var mapParam = _this.paramsMap.get(param);
        var list = lang_1.isPresent(mapParam) ? mapParam : [];
        collection_1.ListWrapper.clear(list);
        list.push(value[0]);
        _this.paramsMap.set(param, list);
      });
    };
    URLSearchParams.prototype.append = function(param, val) {
      var mapParam = this.paramsMap.get(param);
      var list = lang_1.isPresent(mapParam) ? mapParam : [];
      list.push(val);
      this.paramsMap.set(param, list);
    };
    URLSearchParams.prototype.appendAll = function(searchParams) {
      var _this = this;
      searchParams.paramsMap.forEach(function(value, param) {
        var mapParam = _this.paramsMap.get(param);
        var list = lang_1.isPresent(mapParam) ? mapParam : [];
        for (var i = 0; i < value.length; ++i) {
          list.push(value[i]);
        }
        _this.paramsMap.set(param, list);
      });
    };
    URLSearchParams.prototype.replaceAll = function(searchParams) {
      var _this = this;
      searchParams.paramsMap.forEach(function(value, param) {
        var mapParam = _this.paramsMap.get(param);
        var list = lang_1.isPresent(mapParam) ? mapParam : [];
        collection_1.ListWrapper.clear(list);
        for (var i = 0; i < value.length; ++i) {
          list.push(value[i]);
        }
        _this.paramsMap.set(param, list);
      });
    };
    URLSearchParams.prototype.toString = function() {
      var paramsList = [];
      this.paramsMap.forEach(function(values, k) {
        values.forEach(function(v) {
          return paramsList.push(k + '=' + v);
        });
      });
      return paramsList.join('&');
    };
    URLSearchParams.prototype.delete = function(param) {
      this.paramsMap.delete(param);
    };
    return URLSearchParams;
  })();
  exports.URLSearchParams = URLSearchParams;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/base_request_options", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/http/headers", "npm:angular2@2.0.0-alpha.46/src/http/enums", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/http/url_search_params", "npm:angular2@2.0.0-alpha.46/src/http/http_utils"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var headers_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/headers');
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var url_search_params_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/url_search_params');
  var http_utils_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/http_utils');
  var RequestOptions = (function() {
    function RequestOptions(_a) {
      var _b = _a === void 0 ? {} : _a,
          method = _b.method,
          headers = _b.headers,
          body = _b.body,
          url = _b.url,
          search = _b.search;
      this.method = lang_1.isPresent(method) ? http_utils_1.normalizeMethodName(method) : null;
      this.headers = lang_1.isPresent(headers) ? headers : null;
      this.body = lang_1.isPresent(body) ? body : null;
      this.url = lang_1.isPresent(url) ? url : null;
      this.search = lang_1.isPresent(search) ? (lang_1.isString(search) ? new url_search_params_1.URLSearchParams((search)) : (search)) : null;
    }
    RequestOptions.prototype.merge = function(options) {
      return new RequestOptions({
        method: lang_1.isPresent(options) && lang_1.isPresent(options.method) ? options.method : this.method,
        headers: lang_1.isPresent(options) && lang_1.isPresent(options.headers) ? options.headers : this.headers,
        body: lang_1.isPresent(options) && lang_1.isPresent(options.body) ? options.body : this.body,
        url: lang_1.isPresent(options) && lang_1.isPresent(options.url) ? options.url : this.url,
        search: lang_1.isPresent(options) && lang_1.isPresent(options.search) ? (lang_1.isString(options.search) ? new url_search_params_1.URLSearchParams((options.search)) : (options.search).clone()) : this.search
      });
    };
    return RequestOptions;
  })();
  exports.RequestOptions = RequestOptions;
  var BaseRequestOptions = (function(_super) {
    __extends(BaseRequestOptions, _super);
    function BaseRequestOptions() {
      _super.call(this, {
        method: enums_1.RequestMethods.Get,
        headers: new headers_1.Headers()
      });
    }
    BaseRequestOptions = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], BaseRequestOptions);
    return BaseRequestOptions;
  })(RequestOptions);
  exports.BaseRequestOptions = BaseRequestOptions;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/enums", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(RequestMethods) {
    RequestMethods[RequestMethods["Get"] = 0] = "Get";
    RequestMethods[RequestMethods["Post"] = 1] = "Post";
    RequestMethods[RequestMethods["Put"] = 2] = "Put";
    RequestMethods[RequestMethods["Delete"] = 3] = "Delete";
    RequestMethods[RequestMethods["Options"] = 4] = "Options";
    RequestMethods[RequestMethods["Head"] = 5] = "Head";
    RequestMethods[RequestMethods["Patch"] = 6] = "Patch";
  })(exports.RequestMethods || (exports.RequestMethods = {}));
  var RequestMethods = exports.RequestMethods;
  (function(ReadyStates) {
    ReadyStates[ReadyStates["Unsent"] = 0] = "Unsent";
    ReadyStates[ReadyStates["Open"] = 1] = "Open";
    ReadyStates[ReadyStates["HeadersReceived"] = 2] = "HeadersReceived";
    ReadyStates[ReadyStates["Loading"] = 3] = "Loading";
    ReadyStates[ReadyStates["Done"] = 4] = "Done";
    ReadyStates[ReadyStates["Cancelled"] = 5] = "Cancelled";
  })(exports.ReadyStates || (exports.ReadyStates = {}));
  var ReadyStates = exports.ReadyStates;
  (function(ResponseTypes) {
    ResponseTypes[ResponseTypes["Basic"] = 0] = "Basic";
    ResponseTypes[ResponseTypes["Cors"] = 1] = "Cors";
    ResponseTypes[ResponseTypes["Default"] = 2] = "Default";
    ResponseTypes[ResponseTypes["Error"] = 3] = "Error";
    ResponseTypes[ResponseTypes["Opaque"] = 4] = "Opaque";
  })(exports.ResponseTypes || (exports.ResponseTypes = {}));
  var ResponseTypes = exports.ResponseTypes;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/http_utils", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/http/enums", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  function normalizeMethodName(method) {
    if (lang_1.isString(method)) {
      var originalMethod = method;
      method = method.replace(/(\w)(\w*)/g, function(g0, g1, g2) {
        return g1.toUpperCase() + g2.toLowerCase();
      });
      method = enums_1.RequestMethods[method];
      if (typeof method !== 'number')
        throw exceptions_1.makeTypeError("Invalid request method. The method \"" + originalMethod + "\" is not supported.");
    }
    return method;
  }
  exports.normalizeMethodName = normalizeMethodName;
  var lang_2 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.isJsObject = lang_2.isJsObject;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/headers", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var Headers = (function() {
    function Headers(headers) {
      var _this = this;
      if (headers instanceof Headers) {
        this._headersMap = headers._headersMap;
        return;
      }
      this._headersMap = new collection_1.Map();
      if (lang_1.isBlank(headers)) {
        return;
      }
      collection_1.StringMapWrapper.forEach(headers, function(v, k) {
        _this._headersMap.set(k, collection_1.isListLikeIterable(v) ? v : [v]);
      });
    }
    Headers.prototype.append = function(name, value) {
      var mapName = this._headersMap.get(name);
      var list = collection_1.isListLikeIterable(mapName) ? mapName : [];
      list.push(value);
      this._headersMap.set(name, list);
    };
    Headers.prototype.delete = function(name) {
      this._headersMap.delete(name);
    };
    Headers.prototype.forEach = function(fn) {
      this._headersMap.forEach(fn);
    };
    Headers.prototype.get = function(header) {
      return collection_1.ListWrapper.first(this._headersMap.get(header));
    };
    Headers.prototype.has = function(header) {
      return this._headersMap.has(header);
    };
    Headers.prototype.keys = function() {
      return collection_1.MapWrapper.keys(this._headersMap);
    };
    Headers.prototype.set = function(header, value) {
      var list = [];
      if (collection_1.isListLikeIterable(value)) {
        var pushValue = value.join(',');
        list.push(pushValue);
      } else {
        list.push(value);
      }
      this._headersMap.set(header, list);
    };
    Headers.prototype.values = function() {
      return collection_1.MapWrapper.values(this._headersMap);
    };
    Headers.prototype.getAll = function(header) {
      var headers = this._headersMap.get(header);
      return collection_1.isListLikeIterable(headers) ? headers : [];
    };
    Headers.prototype.entries = function() {
      throw new exceptions_1.BaseException('"entries" method is not implemented on Headers class');
    };
    return Headers;
  })();
  exports.Headers = Headers;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/static_request", ["npm:angular2@2.0.0-alpha.46/src/http/headers", "npm:angular2@2.0.0-alpha.46/src/http/http_utils", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var headers_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/headers');
  var http_utils_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/http_utils');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var Request = (function() {
    function Request(requestOptions) {
      var url = requestOptions.url;
      this.url = requestOptions.url;
      if (lang_1.isPresent(requestOptions.search)) {
        var search = requestOptions.search.toString();
        if (search.length > 0) {
          var prefix = '?';
          if (lang_1.StringWrapper.contains(this.url, '?')) {
            prefix = (this.url[this.url.length - 1] == '&') ? '' : '&';
          }
          this.url = url + prefix + search;
        }
      }
      this._body = requestOptions.body;
      this.method = http_utils_1.normalizeMethodName(requestOptions.method);
      this.headers = new headers_1.Headers(requestOptions.headers);
    }
    Request.prototype.text = function() {
      return lang_1.isPresent(this._body) ? this._body.toString() : '';
    };
    return Request;
  })();
  exports.Request = Request;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/interfaces", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var ConnectionBackend = (function() {
    function ConnectionBackend() {}
    return ConnectionBackend;
  })();
  exports.ConnectionBackend = ConnectionBackend;
  var Connection = (function() {
    function Connection() {}
    return Connection;
  })();
  exports.Connection = Connection;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/http/http", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/http/interfaces", "npm:angular2@2.0.0-alpha.46/src/http/static_request", "npm:angular2@2.0.0-alpha.46/src/http/base_request_options", "npm:angular2@2.0.0-alpha.46/src/http/enums"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/interfaces');
  var static_request_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/static_request');
  var base_request_options_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_request_options');
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  function httpRequest(backend, request) {
    return backend.createConnection(request).response;
  }
  function mergeOptions(defaultOpts, providedOpts, method, url) {
    var newOptions = defaultOpts;
    if (lang_1.isPresent(providedOpts)) {
      newOptions = newOptions.merge(new base_request_options_1.RequestOptions({
        method: providedOpts.method,
        url: providedOpts.url,
        search: providedOpts.search,
        headers: providedOpts.headers,
        body: providedOpts.body
      }));
    }
    if (lang_1.isPresent(method)) {
      return newOptions.merge(new base_request_options_1.RequestOptions({
        method: method,
        url: url
      }));
    } else {
      return newOptions.merge(new base_request_options_1.RequestOptions({url: url}));
    }
  }
  var Http = (function() {
    function Http(_backend, _defaultOptions) {
      this._backend = _backend;
      this._defaultOptions = _defaultOptions;
    }
    Http.prototype.request = function(url, options) {
      var responseObservable;
      if (lang_1.isString(url)) {
        responseObservable = httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethods.Get, url)));
      } else if (url instanceof static_request_1.Request) {
        responseObservable = httpRequest(this._backend, url);
      } else {
        throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');
      }
      return responseObservable;
    };
    Http.prototype.get = function(url, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethods.Get, url)));
    };
    Http.prototype.post = function(url, body, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({body: body})), options, enums_1.RequestMethods.Post, url)));
    };
    Http.prototype.put = function(url, body, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({body: body})), options, enums_1.RequestMethods.Put, url)));
    };
    Http.prototype.delete = function(url, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethods.Delete, url)));
    };
    Http.prototype.patch = function(url, body, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions.merge(new base_request_options_1.RequestOptions({body: body})), options, enums_1.RequestMethods.Patch, url)));
    };
    Http.prototype.head = function(url, options) {
      return httpRequest(this._backend, new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethods.Head, url)));
    };
    Http = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [interfaces_1.ConnectionBackend, base_request_options_1.RequestOptions])], Http);
    return Http;
  })();
  exports.Http = Http;
  var Jsonp = (function(_super) {
    __extends(Jsonp, _super);
    function Jsonp(backend, defaultOptions) {
      _super.call(this, backend, defaultOptions);
    }
    Jsonp.prototype.request = function(url, options) {
      var responseObservable;
      if (lang_1.isString(url)) {
        url = new static_request_1.Request(mergeOptions(this._defaultOptions, options, enums_1.RequestMethods.Get, url));
      }
      if (url instanceof static_request_1.Request) {
        if (url.method !== enums_1.RequestMethods.Get) {
          exceptions_1.makeTypeError('JSONP requests must use GET request method.');
        }
        responseObservable = httpRequest(this._backend, url);
      } else {
        throw exceptions_1.makeTypeError('First argument must be a url string or Request instance.');
      }
      return responseObservable;
    };
    Jsonp = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [interfaces_1.ConnectionBackend, base_request_options_1.RequestOptions])], Jsonp);
    return Jsonp;
  })(Http);
  exports.Jsonp = Jsonp;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/http", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/http/http", "npm:angular2@2.0.0-alpha.46/src/http/backends/xhr_backend", "npm:angular2@2.0.0-alpha.46/src/http/backends/jsonp_backend", "npm:angular2@2.0.0-alpha.46/src/http/backends/browser_xhr", "npm:angular2@2.0.0-alpha.46/src/http/backends/browser_jsonp", "npm:angular2@2.0.0-alpha.46/src/http/base_request_options", "npm:angular2@2.0.0-alpha.46/src/http/base_response_options", "npm:angular2@2.0.0-alpha.46/src/http/backends/mock_backend", "npm:angular2@2.0.0-alpha.46/src/http/static_request", "npm:angular2@2.0.0-alpha.46/src/http/static_response", "npm:angular2@2.0.0-alpha.46/src/http/interfaces", "npm:angular2@2.0.0-alpha.46/src/http/headers", "npm:angular2@2.0.0-alpha.46/src/http/enums", "npm:angular2@2.0.0-alpha.46/src/http/url_search_params"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var http_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/http');
  var xhr_backend_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/xhr_backend');
  var jsonp_backend_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/jsonp_backend');
  var browser_xhr_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/browser_xhr');
  var browser_jsonp_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/browser_jsonp');
  var base_request_options_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_request_options');
  var base_response_options_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_response_options');
  var mock_backend_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/mock_backend');
  exports.MockConnection = mock_backend_1.MockConnection;
  exports.MockBackend = mock_backend_1.MockBackend;
  var static_request_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/static_request');
  exports.Request = static_request_1.Request;
  var static_response_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/static_response');
  exports.Response = static_response_1.Response;
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/interfaces');
  exports.Connection = interfaces_1.Connection;
  exports.ConnectionBackend = interfaces_1.ConnectionBackend;
  var browser_xhr_2 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/browser_xhr');
  exports.BrowserXhr = browser_xhr_2.BrowserXhr;
  var base_request_options_2 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_request_options');
  exports.BaseRequestOptions = base_request_options_2.BaseRequestOptions;
  exports.RequestOptions = base_request_options_2.RequestOptions;
  var base_response_options_2 = $__require('npm:angular2@2.0.0-alpha.46/src/http/base_response_options');
  exports.BaseResponseOptions = base_response_options_2.BaseResponseOptions;
  exports.ResponseOptions = base_response_options_2.ResponseOptions;
  var xhr_backend_2 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/xhr_backend');
  exports.XHRBackend = xhr_backend_2.XHRBackend;
  exports.XHRConnection = xhr_backend_2.XHRConnection;
  var jsonp_backend_2 = $__require('npm:angular2@2.0.0-alpha.46/src/http/backends/jsonp_backend');
  exports.JSONPBackend = jsonp_backend_2.JSONPBackend;
  exports.JSONPConnection = jsonp_backend_2.JSONPConnection;
  var http_2 = $__require('npm:angular2@2.0.0-alpha.46/src/http/http');
  exports.Http = http_2.Http;
  exports.Jsonp = http_2.Jsonp;
  var headers_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/headers');
  exports.Headers = headers_1.Headers;
  var enums_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/enums');
  exports.ResponseTypes = enums_1.ResponseTypes;
  exports.ReadyStates = enums_1.ReadyStates;
  exports.RequestMethods = enums_1.RequestMethods;
  var url_search_params_1 = $__require('npm:angular2@2.0.0-alpha.46/src/http/url_search_params');
  exports.URLSearchParams = url_search_params_1.URLSearchParams;
  exports.HTTP_PROVIDERS = [angular2_1.provide(http_1.Http, {
    useFactory: function(xhrBackend, requestOptions) {
      return new http_1.Http(xhrBackend, requestOptions);
    },
    deps: [xhr_backend_1.XHRBackend, base_request_options_1.RequestOptions]
  }), browser_xhr_1.BrowserXhr, angular2_1.provide(base_request_options_1.RequestOptions, {useClass: base_request_options_1.BaseRequestOptions}), angular2_1.provide(base_response_options_1.ResponseOptions, {useClass: base_response_options_1.BaseResponseOptions}), xhr_backend_1.XHRBackend];
  exports.HTTP_BINDINGS = exports.HTTP_PROVIDERS;
  exports.JSONP_PROVIDERS = [angular2_1.provide(http_1.Jsonp, {
    useFactory: function(jsonpBackend, requestOptions) {
      return new http_1.Jsonp(jsonpBackend, requestOptions);
    },
    deps: [jsonp_backend_1.JSONPBackend, base_request_options_1.RequestOptions]
  }), browser_jsonp_1.BrowserJsonp, angular2_1.provide(base_request_options_1.RequestOptions, {useClass: base_request_options_1.BaseRequestOptions}), angular2_1.provide(base_response_options_1.ResponseOptions, {useClass: base_response_options_1.BaseResponseOptions}), angular2_1.provide(jsonp_backend_1.JSONPBackend, {useClass: jsonp_backend_1.JSONPBackend_})];
  exports.JSON_BINDINGS = exports.JSONP_PROVIDERS;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_definition", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/path_location_strategy", ["npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/router/location_strategy"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var location_strategy_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location_strategy');
  var PathLocationStrategy = (function(_super) {
    __extends(PathLocationStrategy, _super);
    function PathLocationStrategy() {
      _super.call(this);
      this._location = dom_adapter_1.DOM.getLocation();
      this._history = dom_adapter_1.DOM.getHistory();
      this._baseHref = dom_adapter_1.DOM.getBaseHref();
    }
    PathLocationStrategy.prototype.onPopState = function(fn) {
      dom_adapter_1.DOM.getGlobalEventTarget('window').addEventListener('popstate', fn, false);
      dom_adapter_1.DOM.getGlobalEventTarget('window').addEventListener('hashchange', fn, false);
    };
    PathLocationStrategy.prototype.getBaseHref = function() {
      return this._baseHref;
    };
    PathLocationStrategy.prototype.prepareExternalUrl = function(internal) {
      return this._baseHref + internal;
    };
    PathLocationStrategy.prototype.path = function() {
      return this._location.pathname + location_strategy_1.normalizeQueryParams(this._location.search);
    };
    PathLocationStrategy.prototype.pushState = function(state, title, url, queryParams) {
      this._history.pushState(state, title, (url + location_strategy_1.normalizeQueryParams(queryParams)));
    };
    PathLocationStrategy.prototype.forward = function() {
      this._history.forward();
    };
    PathLocationStrategy.prototype.back = function() {
      this._history.back();
    };
    PathLocationStrategy = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], PathLocationStrategy);
    return PathLocationStrategy;
  })(location_strategy_1.LocationStrategy);
  exports.PathLocationStrategy = PathLocationStrategy;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/hash_location_strategy", ["npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/router/location_strategy"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var location_strategy_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location_strategy');
  var HashLocationStrategy = (function(_super) {
    __extends(HashLocationStrategy, _super);
    function HashLocationStrategy() {
      _super.call(this);
      this._location = dom_adapter_1.DOM.getLocation();
      this._history = dom_adapter_1.DOM.getHistory();
    }
    HashLocationStrategy.prototype.onPopState = function(fn) {
      dom_adapter_1.DOM.getGlobalEventTarget('window').addEventListener('popstate', fn, false);
    };
    HashLocationStrategy.prototype.getBaseHref = function() {
      return '';
    };
    HashLocationStrategy.prototype.path = function() {
      var path = this._location.hash;
      return (path.length > 0 ? path.substring(1) : path) + location_strategy_1.normalizeQueryParams(this._location.search);
    };
    HashLocationStrategy.prototype.prepareExternalUrl = function(internal) {
      return internal.length > 0 ? ('#' + internal) : internal;
    };
    HashLocationStrategy.prototype.pushState = function(state, title, path, queryParams) {
      var url = path + location_strategy_1.normalizeQueryParams(queryParams);
      if (url.length == 0) {
        url = this._location.pathname;
      } else {
        url = this.prepareExternalUrl(url);
      }
      this._history.pushState(state, title, url);
    };
    HashLocationStrategy.prototype.forward = function() {
      this._history.forward();
    };
    HashLocationStrategy.prototype.back = function() {
      this._history.back();
    };
    HashLocationStrategy = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], HashLocationStrategy);
    return HashLocationStrategy;
  })(location_strategy_1.LocationStrategy);
  exports.HashLocationStrategy = HashLocationStrategy;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_config_decorator", ["npm:angular2@2.0.0-alpha.46/src/router/route_config_impl", "npm:angular2@2.0.0-alpha.46/src/core/util/decorators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var route_config_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_impl');
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/util/decorators');
  var route_config_impl_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_impl');
  exports.Route = route_config_impl_2.Route;
  exports.Redirect = route_config_impl_2.Redirect;
  exports.AuxRoute = route_config_impl_2.AuxRoute;
  exports.AsyncRoute = route_config_impl_2.AsyncRoute;
  exports.RouteConfig = decorators_1.makeDecorator(route_config_impl_1.RouteConfig);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_config_nomalizer", ["npm:angular2@2.0.0-alpha.46/src/router/route_config_decorator", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var route_config_decorator_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_decorator');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  function normalizeRouteConfig(config) {
    if (config instanceof route_config_decorator_1.Route || config instanceof route_config_decorator_1.Redirect || config instanceof route_config_decorator_1.AsyncRoute || config instanceof route_config_decorator_1.AuxRoute) {
      return config;
    }
    if ((+!!config.component) + (+!!config.redirectTo) + (+!!config.loader) != 1) {
      throw new exceptions_1.BaseException("Route config should contain exactly one \"component\", \"loader\", or \"redirectTo\" property.");
    }
    if (config.as && config.name) {
      throw new exceptions_1.BaseException("Route config should contain exactly one \"as\" or \"name\" property.");
    }
    if (config.as) {
      config.name = config.as;
    }
    if (config.loader) {
      return new route_config_decorator_1.AsyncRoute({
        path: config.path,
        loader: config.loader,
        name: config.name
      });
    }
    if (config.aux) {
      return new route_config_decorator_1.AuxRoute({
        path: config.aux,
        component: config.component,
        name: config.name
      });
    }
    if (config.component) {
      if (typeof config.component == 'object') {
        var componentDefinitionObject = config.component;
        if (componentDefinitionObject.type == 'constructor') {
          return new route_config_decorator_1.Route({
            path: config.path,
            component: componentDefinitionObject.constructor,
            name: config.name
          });
        } else if (componentDefinitionObject.type == 'loader') {
          return new route_config_decorator_1.AsyncRoute({
            path: config.path,
            loader: componentDefinitionObject.loader,
            name: config.name
          });
        } else {
          throw new exceptions_1.BaseException("Invalid component type \"" + componentDefinitionObject.type + "\". Valid types are \"constructor\" and \"loader\".");
        }
      }
      return new route_config_decorator_1.Route(config);
    }
    if (config.redirectTo) {
      return new route_config_decorator_1.Redirect({
        path: config.path,
        redirectTo: config.redirectTo
      });
    }
    return config;
  }
  exports.normalizeRouteConfig = normalizeRouteConfig;
  function assertComponentExists(component, path) {
    if (!lang_1.isType(component)) {
      throw new exceptions_1.BaseException("Component for route \"" + path + "\" is not defined, or is not a class.");
    }
  }
  exports.assertComponentExists = assertComponentExists;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/sync_route_handler", ["npm:angular2@2.0.0-alpha.46/src/facade/async"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var SyncRouteHandler = (function() {
    function SyncRouteHandler(componentType, data) {
      this.componentType = componentType;
      this.data = data;
      this._resolvedComponent = null;
      this._resolvedComponent = async_1.PromiseWrapper.resolve(componentType);
    }
    SyncRouteHandler.prototype.resolveComponentType = function() {
      return this._resolvedComponent;
    };
    return SyncRouteHandler;
  })();
  exports.SyncRouteHandler = SyncRouteHandler;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/async_route_handler", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var AsyncRouteHandler = (function() {
    function AsyncRouteHandler(_loader, data) {
      this._loader = _loader;
      this.data = data;
      this._resolvedComponent = null;
    }
    AsyncRouteHandler.prototype.resolveComponentType = function() {
      var _this = this;
      if (lang_1.isPresent(this._resolvedComponent)) {
        return this._resolvedComponent;
      }
      return this._resolvedComponent = this._loader().then(function(componentType) {
        _this.componentType = componentType;
        return componentType;
      });
    };
    return AsyncRouteHandler;
  })();
  exports.AsyncRouteHandler = AsyncRouteHandler;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_config_impl", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var RouteConfig = (function() {
    function RouteConfig(configs) {
      this.configs = configs;
    }
    RouteConfig = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Array])], RouteConfig);
    return RouteConfig;
  })();
  exports.RouteConfig = RouteConfig;
  var Route = (function() {
    function Route(_a) {
      var path = _a.path,
          component = _a.component,
          name = _a.name,
          data = _a.data;
      this.aux = null;
      this.loader = null;
      this.redirectTo = null;
      this.path = path;
      this.component = component;
      this.name = name;
      this.data = data;
    }
    Route = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], Route);
    return Route;
  })();
  exports.Route = Route;
  var AuxRoute = (function() {
    function AuxRoute(_a) {
      var path = _a.path,
          component = _a.component,
          name = _a.name;
      this.data = null;
      this.aux = null;
      this.loader = null;
      this.redirectTo = null;
      this.path = path;
      this.component = component;
      this.name = name;
    }
    AuxRoute = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], AuxRoute);
    return AuxRoute;
  })();
  exports.AuxRoute = AuxRoute;
  var AsyncRoute = (function() {
    function AsyncRoute(_a) {
      var path = _a.path,
          loader = _a.loader,
          name = _a.name,
          data = _a.data;
      this.aux = null;
      this.path = path;
      this.loader = loader;
      this.name = name;
      this.data = data;
    }
    AsyncRoute = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], AsyncRoute);
    return AsyncRoute;
  })();
  exports.AsyncRoute = AsyncRoute;
  var Redirect = (function() {
    function Redirect(_a) {
      var path = _a.path,
          redirectTo = _a.redirectTo;
      this.name = null;
      this.loader = null;
      this.data = null;
      this.aux = null;
      this.path = path;
      this.redirectTo = redirectTo;
    }
    Redirect = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], Redirect);
    return Redirect;
  })();
  exports.Redirect = Redirect;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/url_parser", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var Url = (function() {
    function Url(path, child, auxiliary, params) {
      if (child === void 0) {
        child = null;
      }
      if (auxiliary === void 0) {
        auxiliary = lang_1.CONST_EXPR([]);
      }
      if (params === void 0) {
        params = null;
      }
      this.path = path;
      this.child = child;
      this.auxiliary = auxiliary;
      this.params = params;
    }
    Url.prototype.toString = function() {
      return this.path + this._matrixParamsToString() + this._auxToString() + this._childString();
    };
    Url.prototype.segmentToString = function() {
      return this.path + this._matrixParamsToString();
    };
    Url.prototype._auxToString = function() {
      return this.auxiliary.length > 0 ? ('(' + this.auxiliary.map(function(sibling) {
        return sibling.toString();
      }).join('//') + ')') : '';
    };
    Url.prototype._matrixParamsToString = function() {
      if (lang_1.isBlank(this.params)) {
        return '';
      }
      return ';' + serializeParams(this.params).join(';');
    };
    Url.prototype._childString = function() {
      return lang_1.isPresent(this.child) ? ('/' + this.child.toString()) : '';
    };
    return Url;
  })();
  exports.Url = Url;
  var RootUrl = (function(_super) {
    __extends(RootUrl, _super);
    function RootUrl(path, child, auxiliary, params) {
      if (child === void 0) {
        child = null;
      }
      if (auxiliary === void 0) {
        auxiliary = lang_1.CONST_EXPR([]);
      }
      if (params === void 0) {
        params = null;
      }
      _super.call(this, path, child, auxiliary, params);
    }
    RootUrl.prototype.toString = function() {
      return this.path + this._auxToString() + this._childString() + this._queryParamsToString();
    };
    RootUrl.prototype.segmentToString = function() {
      return this.path + this._queryParamsToString();
    };
    RootUrl.prototype._queryParamsToString = function() {
      if (lang_1.isBlank(this.params)) {
        return '';
      }
      return '?' + serializeParams(this.params).join('&');
    };
    return RootUrl;
  })(Url);
  exports.RootUrl = RootUrl;
  function pathSegmentsToUrl(pathSegments) {
    var url = new Url(pathSegments[pathSegments.length - 1]);
    for (var i = pathSegments.length - 2; i >= 0; i -= 1) {
      url = new Url(pathSegments[i], url);
    }
    return url;
  }
  exports.pathSegmentsToUrl = pathSegmentsToUrl;
  var SEGMENT_RE = lang_1.RegExpWrapper.create('^[^\\/\\(\\)\\?;=&#]+');
  function matchUrlSegment(str) {
    var match = lang_1.RegExpWrapper.firstMatch(SEGMENT_RE, str);
    return lang_1.isPresent(match) ? match[0] : '';
  }
  var UrlParser = (function() {
    function UrlParser() {}
    UrlParser.prototype.peekStartsWith = function(str) {
      return this._remaining.startsWith(str);
    };
    UrlParser.prototype.capture = function(str) {
      if (!this._remaining.startsWith(str)) {
        throw new exceptions_1.BaseException("Expected \"" + str + "\".");
      }
      this._remaining = this._remaining.substring(str.length);
    };
    UrlParser.prototype.parse = function(url) {
      this._remaining = url;
      if (url == '' || url == '/') {
        return new Url('');
      }
      return this.parseRoot();
    };
    UrlParser.prototype.parseRoot = function() {
      if (this.peekStartsWith('/')) {
        this.capture('/');
      }
      var path = matchUrlSegment(this._remaining);
      this.capture(path);
      var aux = [];
      if (this.peekStartsWith('(')) {
        aux = this.parseAuxiliaryRoutes();
      }
      if (this.peekStartsWith(';')) {
        this.parseMatrixParams();
      }
      var child = null;
      if (this.peekStartsWith('/') && !this.peekStartsWith('//')) {
        this.capture('/');
        child = this.parseSegment();
      }
      var queryParams = null;
      if (this.peekStartsWith('?')) {
        queryParams = this.parseQueryParams();
      }
      return new RootUrl(path, child, aux, queryParams);
    };
    UrlParser.prototype.parseSegment = function() {
      if (this._remaining.length == 0) {
        return null;
      }
      if (this.peekStartsWith('/')) {
        this.capture('/');
      }
      var path = matchUrlSegment(this._remaining);
      this.capture(path);
      var matrixParams = null;
      if (this.peekStartsWith(';')) {
        matrixParams = this.parseMatrixParams();
      }
      var aux = [];
      if (this.peekStartsWith('(')) {
        aux = this.parseAuxiliaryRoutes();
      }
      var child = null;
      if (this.peekStartsWith('/') && !this.peekStartsWith('//')) {
        this.capture('/');
        child = this.parseSegment();
      }
      return new Url(path, child, aux, matrixParams);
    };
    UrlParser.prototype.parseQueryParams = function() {
      var params = {};
      this.capture('?');
      this.parseParam(params);
      while (this._remaining.length > 0 && this.peekStartsWith('&')) {
        this.capture('&');
        this.parseParam(params);
      }
      return params;
    };
    UrlParser.prototype.parseMatrixParams = function() {
      var params = {};
      while (this._remaining.length > 0 && this.peekStartsWith(';')) {
        this.capture(';');
        this.parseParam(params);
      }
      return params;
    };
    UrlParser.prototype.parseParam = function(params) {
      var key = matchUrlSegment(this._remaining);
      if (lang_1.isBlank(key)) {
        return;
      }
      this.capture(key);
      var value = true;
      if (this.peekStartsWith('=')) {
        this.capture('=');
        var valueMatch = matchUrlSegment(this._remaining);
        if (lang_1.isPresent(valueMatch)) {
          value = valueMatch;
          this.capture(value);
        }
      }
      params[key] = value;
    };
    UrlParser.prototype.parseAuxiliaryRoutes = function() {
      var routes = [];
      this.capture('(');
      while (!this.peekStartsWith(')') && this._remaining.length > 0) {
        routes.push(this.parseSegment());
        if (this.peekStartsWith('//')) {
          this.capture('//');
        }
      }
      this.capture(')');
      return routes;
    };
    return UrlParser;
  })();
  exports.UrlParser = UrlParser;
  exports.parser = new UrlParser();
  function serializeParams(paramMap) {
    var params = [];
    if (lang_1.isPresent(paramMap)) {
      collection_1.StringMapWrapper.forEach(paramMap, function(value, key) {
        if (value == true) {
          params.push(key);
        } else {
          params.push(key + '=' + value);
        }
      });
    }
    return params;
  }
  exports.serializeParams = serializeParams;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/path_recognizer", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/router/url_parser", "npm:angular2@2.0.0-alpha.46/src/router/instruction"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var url_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/url_parser');
  var instruction_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  var TouchMap = (function() {
    function TouchMap(map) {
      var _this = this;
      this.map = {};
      this.keys = {};
      if (lang_1.isPresent(map)) {
        collection_1.StringMapWrapper.forEach(map, function(value, key) {
          _this.map[key] = lang_1.isPresent(value) ? value.toString() : null;
          _this.keys[key] = true;
        });
      }
    }
    TouchMap.prototype.get = function(key) {
      collection_1.StringMapWrapper.delete(this.keys, key);
      return this.map[key];
    };
    TouchMap.prototype.getUnused = function() {
      var _this = this;
      var unused = collection_1.StringMapWrapper.create();
      var keys = collection_1.StringMapWrapper.keys(this.keys);
      keys.forEach(function(key) {
        return unused[key] = collection_1.StringMapWrapper.get(_this.map, key);
      });
      return unused;
    };
    return TouchMap;
  })();
  function normalizeString(obj) {
    if (lang_1.isBlank(obj)) {
      return null;
    } else {
      return obj.toString();
    }
  }
  var ContinuationSegment = (function() {
    function ContinuationSegment() {
      this.name = '';
    }
    ContinuationSegment.prototype.generate = function(params) {
      return '';
    };
    ContinuationSegment.prototype.match = function(path) {
      return true;
    };
    return ContinuationSegment;
  })();
  var StaticSegment = (function() {
    function StaticSegment(path) {
      this.path = path;
      this.name = '';
    }
    StaticSegment.prototype.match = function(path) {
      return path == this.path;
    };
    StaticSegment.prototype.generate = function(params) {
      return this.path;
    };
    return StaticSegment;
  })();
  var DynamicSegment = (function() {
    function DynamicSegment(name) {
      this.name = name;
    }
    DynamicSegment.prototype.match = function(path) {
      return path.length > 0;
    };
    DynamicSegment.prototype.generate = function(params) {
      if (!collection_1.StringMapWrapper.contains(params.map, this.name)) {
        throw new exceptions_1.BaseException("Route generator for '" + this.name + "' was not included in parameters passed.");
      }
      return normalizeString(params.get(this.name));
    };
    return DynamicSegment;
  })();
  var StarSegment = (function() {
    function StarSegment(name) {
      this.name = name;
    }
    StarSegment.prototype.match = function(path) {
      return true;
    };
    StarSegment.prototype.generate = function(params) {
      return normalizeString(params.get(this.name));
    };
    return StarSegment;
  })();
  var paramMatcher = /^:([^\/]+)$/g;
  var wildcardMatcher = /^\*([^\/]+)$/g;
  function parsePathString(route) {
    if (route.startsWith("/")) {
      route = route.substring(1);
    }
    var segments = splitBySlash(route);
    var results = [];
    var specificity = 0;
    if (segments.length > 98) {
      throw new exceptions_1.BaseException("'" + route + "' has more than the maximum supported number of segments.");
    }
    var limit = segments.length - 1;
    for (var i = 0; i <= limit; i++) {
      var segment = segments[i],
          match;
      if (lang_1.isPresent(match = lang_1.RegExpWrapper.firstMatch(paramMatcher, segment))) {
        results.push(new DynamicSegment(match[1]));
        specificity += (100 - i);
      } else if (lang_1.isPresent(match = lang_1.RegExpWrapper.firstMatch(wildcardMatcher, segment))) {
        results.push(new StarSegment(match[1]));
      } else if (segment == '...') {
        if (i < limit) {
          throw new exceptions_1.BaseException("Unexpected \"...\" before the end of the path for \"" + route + "\".");
        }
        results.push(new ContinuationSegment());
      } else {
        results.push(new StaticSegment(segment));
        specificity += 100 * (100 - i);
      }
    }
    var result = collection_1.StringMapWrapper.create();
    collection_1.StringMapWrapper.set(result, 'segments', results);
    collection_1.StringMapWrapper.set(result, 'specificity', specificity);
    return result;
  }
  function pathDslHash(segments) {
    return segments.map(function(segment) {
      if (segment instanceof StarSegment) {
        return '*';
      } else if (segment instanceof ContinuationSegment) {
        return '...';
      } else if (segment instanceof DynamicSegment) {
        return ':';
      } else if (segment instanceof StaticSegment) {
        return segment.path;
      }
    }).join('/');
  }
  function splitBySlash(url) {
    return url.split('/');
  }
  var RESERVED_CHARS = lang_1.RegExpWrapper.create('//|\\(|\\)|;|\\?|=');
  function assertPath(path) {
    if (lang_1.StringWrapper.contains(path, '#')) {
      throw new exceptions_1.BaseException("Path \"" + path + "\" should not include \"#\". Use \"HashLocationStrategy\" instead.");
    }
    var illegalCharacter = lang_1.RegExpWrapper.firstMatch(RESERVED_CHARS, path);
    if (lang_1.isPresent(illegalCharacter)) {
      throw new exceptions_1.BaseException("Path \"" + path + "\" contains \"" + illegalCharacter[0] + "\" which is not allowed in a route config.");
    }
  }
  var PathMatch = (function() {
    function PathMatch(instruction, remaining, remainingAux) {
      this.instruction = instruction;
      this.remaining = remaining;
      this.remainingAux = remainingAux;
    }
    return PathMatch;
  })();
  exports.PathMatch = PathMatch;
  var PathRecognizer = (function() {
    function PathRecognizer(path, handler) {
      this.path = path;
      this.handler = handler;
      this.terminal = true;
      this._cache = new collection_1.Map();
      assertPath(path);
      var parsed = parsePathString(path);
      this._segments = parsed['segments'];
      this.specificity = parsed['specificity'];
      this.hash = pathDslHash(this._segments);
      var lastSegment = this._segments[this._segments.length - 1];
      this.terminal = !(lastSegment instanceof ContinuationSegment);
    }
    PathRecognizer.prototype.recognize = function(beginningSegment) {
      var nextSegment = beginningSegment;
      var currentSegment;
      var positionalParams = {};
      var captured = [];
      for (var i = 0; i < this._segments.length; i += 1) {
        var segment = this._segments[i];
        currentSegment = nextSegment;
        if (segment instanceof ContinuationSegment) {
          break;
        }
        if (lang_1.isPresent(currentSegment)) {
          captured.push(currentSegment.path);
          if (segment instanceof StarSegment) {
            positionalParams[segment.name] = currentSegment.toString();
            nextSegment = null;
            break;
          }
          if (segment instanceof DynamicSegment) {
            positionalParams[segment.name] = currentSegment.path;
          } else if (!segment.match(currentSegment.path)) {
            return null;
          }
          nextSegment = currentSegment.child;
        } else if (!segment.match('')) {
          return null;
        }
      }
      if (this.terminal && lang_1.isPresent(nextSegment)) {
        return null;
      }
      var urlPath = captured.join('/');
      var auxiliary;
      var instruction;
      var urlParams;
      var allParams;
      if (lang_1.isPresent(currentSegment)) {
        var paramsSegment = beginningSegment instanceof url_parser_1.RootUrl ? beginningSegment : currentSegment;
        allParams = lang_1.isPresent(paramsSegment.params) ? collection_1.StringMapWrapper.merge(paramsSegment.params, positionalParams) : positionalParams;
        urlParams = url_parser_1.serializeParams(paramsSegment.params);
        auxiliary = currentSegment.auxiliary;
      } else {
        allParams = positionalParams;
        auxiliary = [];
        urlParams = [];
      }
      instruction = this._getInstruction(urlPath, urlParams, this, allParams);
      return new PathMatch(instruction, nextSegment, auxiliary);
    };
    PathRecognizer.prototype.generate = function(params) {
      var paramTokens = new TouchMap(params);
      var path = [];
      for (var i = 0; i < this._segments.length; i++) {
        var segment = this._segments[i];
        if (!(segment instanceof ContinuationSegment)) {
          path.push(segment.generate(paramTokens));
        }
      }
      var urlPath = path.join('/');
      var nonPositionalParams = paramTokens.getUnused();
      var urlParams = url_parser_1.serializeParams(nonPositionalParams);
      return this._getInstruction(urlPath, urlParams, this, params);
    };
    PathRecognizer.prototype._getInstruction = function(urlPath, urlParams, _recognizer, params) {
      var hashKey = urlPath + '?' + urlParams.join('?');
      if (this._cache.has(hashKey)) {
        return this._cache.get(hashKey);
      }
      var instruction = new instruction_1.ComponentInstruction_(urlPath, urlParams, _recognizer, params);
      this._cache.set(hashKey, instruction);
      return instruction;
    };
    return PathRecognizer;
  })();
  exports.PathRecognizer = PathRecognizer;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_recognizer", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/router/path_recognizer", "npm:angular2@2.0.0-alpha.46/src/router/route_config_impl", "npm:angular2@2.0.0-alpha.46/src/router/async_route_handler", "npm:angular2@2.0.0-alpha.46/src/router/sync_route_handler", "npm:angular2@2.0.0-alpha.46/src/router/url_parser"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var path_recognizer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/path_recognizer');
  var route_config_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_impl');
  var async_route_handler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/async_route_handler');
  var sync_route_handler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/sync_route_handler');
  var url_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/url_parser');
  var RouteRecognizer = (function() {
    function RouteRecognizer() {
      this.names = new collection_1.Map();
      this.auxRoutes = new collection_1.Map();
      this.matchers = [];
      this.redirects = [];
    }
    RouteRecognizer.prototype.config = function(config) {
      var handler;
      if (lang_1.isPresent(config.name) && config.name[0].toUpperCase() != config.name[0]) {
        var suggestedName = config.name[0].toUpperCase() + config.name.substring(1);
        throw new exceptions_1.BaseException("Route \"" + config.path + "\" with name \"" + config.name + "\" does not begin with an uppercase letter. Route names should be CamelCase like \"" + suggestedName + "\".");
      }
      if (config instanceof route_config_impl_1.AuxRoute) {
        handler = new sync_route_handler_1.SyncRouteHandler(config.component, config.data);
        var path = config.path.startsWith('/') ? config.path.substring(1) : config.path;
        var recognizer = new path_recognizer_1.PathRecognizer(config.path, handler);
        this.auxRoutes.set(path, recognizer);
        return recognizer.terminal;
      }
      if (config instanceof route_config_impl_1.Redirect) {
        this.redirects.push(new Redirector(config.path, config.redirectTo));
        return true;
      }
      if (config instanceof route_config_impl_1.Route) {
        handler = new sync_route_handler_1.SyncRouteHandler(config.component, config.data);
      } else if (config instanceof route_config_impl_1.AsyncRoute) {
        handler = new async_route_handler_1.AsyncRouteHandler(config.loader, config.data);
      }
      var recognizer = new path_recognizer_1.PathRecognizer(config.path, handler);
      this.matchers.forEach(function(matcher) {
        if (recognizer.hash == matcher.hash) {
          throw new exceptions_1.BaseException("Configuration '" + config.path + "' conflicts with existing route '" + matcher.path + "'");
        }
      });
      this.matchers.push(recognizer);
      if (lang_1.isPresent(config.name)) {
        this.names.set(config.name, recognizer);
      }
      return recognizer.terminal;
    };
    RouteRecognizer.prototype.recognize = function(urlParse) {
      var solutions = [];
      urlParse = this._redirect(urlParse);
      this.matchers.forEach(function(pathRecognizer) {
        var pathMatch = pathRecognizer.recognize(urlParse);
        if (lang_1.isPresent(pathMatch)) {
          solutions.push(pathMatch);
        }
      });
      return solutions;
    };
    RouteRecognizer.prototype._redirect = function(urlParse) {
      for (var i = 0; i < this.redirects.length; i += 1) {
        var redirector = this.redirects[i];
        var redirectedUrl = redirector.redirect(urlParse);
        if (lang_1.isPresent(redirectedUrl)) {
          return redirectedUrl;
        }
      }
      return urlParse;
    };
    RouteRecognizer.prototype.recognizeAuxiliary = function(urlParse) {
      var pathRecognizer = this.auxRoutes.get(urlParse.path);
      if (lang_1.isBlank(pathRecognizer)) {
        return null;
      }
      return pathRecognizer.recognize(urlParse);
    };
    RouteRecognizer.prototype.hasRoute = function(name) {
      return this.names.has(name);
    };
    RouteRecognizer.prototype.generate = function(name, params) {
      var pathRecognizer = this.names.get(name);
      if (lang_1.isBlank(pathRecognizer)) {
        return null;
      }
      return pathRecognizer.generate(params);
    };
    return RouteRecognizer;
  })();
  exports.RouteRecognizer = RouteRecognizer;
  var Redirector = (function() {
    function Redirector(path, redirectTo) {
      this.segments = [];
      this.toSegments = [];
      if (path.startsWith('/')) {
        path = path.substring(1);
      }
      this.segments = path.split('/');
      if (redirectTo.startsWith('/')) {
        redirectTo = redirectTo.substring(1);
      }
      this.toSegments = redirectTo.split('/');
    }
    Redirector.prototype.redirect = function(urlParse) {
      for (var i = 0; i < this.segments.length; i += 1) {
        if (lang_1.isBlank(urlParse)) {
          return null;
        }
        var segment = this.segments[i];
        if (segment != urlParse.path) {
          return null;
        }
        urlParse = urlParse.child;
      }
      for (var i = this.toSegments.length - 1; i >= 0; i -= 1) {
        var segment = this.toSegments[i];
        urlParse = new url_parser_1.Url(segment, urlParse);
      }
      return urlParse;
    };
    return Redirector;
  })();
  exports.Redirector = Redirector;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_registry", ["npm:angular2@2.0.0-alpha.46/src/router/route_recognizer", "npm:angular2@2.0.0-alpha.46/src/router/instruction", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/router/route_config_impl", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/router/route_config_nomalizer", "npm:angular2@2.0.0-alpha.46/src/router/url_parser"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var route_recognizer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_recognizer');
  var instruction_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var route_config_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_impl');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var route_config_nomalizer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_nomalizer');
  var url_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/url_parser');
  var _resolveToNull = async_1.PromiseWrapper.resolve(null);
  var RouteRegistry = (function() {
    function RouteRegistry() {
      this._rules = new collection_1.Map();
    }
    RouteRegistry.prototype.config = function(parentComponent, config) {
      config = route_config_nomalizer_1.normalizeRouteConfig(config);
      if (config instanceof route_config_impl_1.Route) {
        route_config_nomalizer_1.assertComponentExists(config.component, config.path);
      } else if (config instanceof route_config_impl_1.AuxRoute) {
        route_config_nomalizer_1.assertComponentExists(config.component, config.path);
      }
      var recognizer = this._rules.get(parentComponent);
      if (lang_1.isBlank(recognizer)) {
        recognizer = new route_recognizer_1.RouteRecognizer();
        this._rules.set(parentComponent, recognizer);
      }
      var terminal = recognizer.config(config);
      if (config instanceof route_config_impl_1.Route) {
        if (terminal) {
          assertTerminalComponent(config.component, config.path);
        } else {
          this.configFromComponent(config.component);
        }
      }
    };
    RouteRegistry.prototype.configFromComponent = function(component) {
      var _this = this;
      if (!lang_1.isType(component)) {
        return;
      }
      if (this._rules.has(component)) {
        return;
      }
      var annotations = reflection_1.reflector.annotations(component);
      if (lang_1.isPresent(annotations)) {
        for (var i = 0; i < annotations.length; i++) {
          var annotation = annotations[i];
          if (annotation instanceof route_config_impl_1.RouteConfig) {
            var routeCfgs = annotation.configs;
            routeCfgs.forEach(function(config) {
              return _this.config(component, config);
            });
          }
        }
      }
    };
    RouteRegistry.prototype.recognize = function(url, parentComponent) {
      var parsedUrl = url_parser_1.parser.parse(url);
      return this._recognize(parsedUrl, parentComponent);
    };
    RouteRegistry.prototype._recognize = function(parsedUrl, parentComponent) {
      var _this = this;
      return this._recognizePrimaryRoute(parsedUrl, parentComponent).then(function(instruction) {
        return _this._completeAuxiliaryRouteMatches(instruction, parentComponent);
      });
    };
    RouteRegistry.prototype._recognizePrimaryRoute = function(parsedUrl, parentComponent) {
      var _this = this;
      var componentRecognizer = this._rules.get(parentComponent);
      if (lang_1.isBlank(componentRecognizer)) {
        return _resolveToNull;
      }
      var possibleMatches = componentRecognizer.recognize(parsedUrl);
      var matchPromises = possibleMatches.map(function(candidate) {
        return _this._completePrimaryRouteMatch(candidate);
      });
      return async_1.PromiseWrapper.all(matchPromises).then(mostSpecific);
    };
    RouteRegistry.prototype._completePrimaryRouteMatch = function(partialMatch) {
      var _this = this;
      var instruction = partialMatch.instruction;
      return instruction.resolveComponentType().then(function(componentType) {
        _this.configFromComponent(componentType);
        if (instruction.terminal) {
          return new instruction_1.PrimaryInstruction(instruction, null, partialMatch.remainingAux);
        }
        return _this._recognizePrimaryRoute(partialMatch.remaining, componentType).then(function(childInstruction) {
          if (lang_1.isBlank(childInstruction)) {
            return null;
          } else {
            return new instruction_1.PrimaryInstruction(instruction, childInstruction, partialMatch.remainingAux);
          }
        });
      });
    };
    RouteRegistry.prototype._completeAuxiliaryRouteMatches = function(instruction, parentComponent) {
      var _this = this;
      if (lang_1.isBlank(instruction)) {
        return _resolveToNull;
      }
      var componentRecognizer = this._rules.get(parentComponent);
      var auxInstructions = {};
      var promises = instruction.auxUrls.map(function(auxSegment) {
        var match = componentRecognizer.recognizeAuxiliary(auxSegment);
        if (lang_1.isBlank(match)) {
          return _resolveToNull;
        }
        return _this._completePrimaryRouteMatch(match).then(function(auxInstruction) {
          if (lang_1.isPresent(auxInstruction)) {
            return _this._completeAuxiliaryRouteMatches(auxInstruction, parentComponent).then(function(finishedAuxRoute) {
              auxInstructions[auxSegment.path] = finishedAuxRoute;
            });
          }
        });
      });
      return async_1.PromiseWrapper.all(promises).then(function(_) {
        if (lang_1.isBlank(instruction.child)) {
          return new instruction_1.Instruction(instruction.component, null, auxInstructions);
        }
        return _this._completeAuxiliaryRouteMatches(instruction.child, instruction.component.componentType).then(function(completeChild) {
          return new instruction_1.Instruction(instruction.component, completeChild, auxInstructions);
        });
      });
    };
    RouteRegistry.prototype.generate = function(linkParams, parentComponent) {
      var segments = [];
      var componentCursor = parentComponent;
      var lastInstructionIsTerminal = false;
      for (var i = 0; i < linkParams.length; i += 1) {
        var segment = linkParams[i];
        if (lang_1.isBlank(componentCursor)) {
          throw new exceptions_1.BaseException("Could not find route named \"" + segment + "\".");
        }
        if (!lang_1.isString(segment)) {
          throw new exceptions_1.BaseException("Unexpected segment \"" + segment + "\" in link DSL. Expected a string.");
        } else if (segment == '' || segment == '.' || segment == '..') {
          throw new exceptions_1.BaseException("\"" + segment + "/\" is only allowed at the beginning of a link DSL.");
        }
        var params = {};
        if (i + 1 < linkParams.length) {
          var nextSegment = linkParams[i + 1];
          if (lang_1.isStringMap(nextSegment)) {
            params = nextSegment;
            i += 1;
          }
        }
        var componentRecognizer = this._rules.get(componentCursor);
        if (lang_1.isBlank(componentRecognizer)) {
          throw new exceptions_1.BaseException("Component \"" + lang_1.getTypeNameForDebugging(componentCursor) + "\" has no route config.");
        }
        var response = componentRecognizer.generate(segment, params);
        if (lang_1.isBlank(response)) {
          throw new exceptions_1.BaseException("Component \"" + lang_1.getTypeNameForDebugging(componentCursor) + "\" has no route named \"" + segment + "\".");
        }
        segments.push(response);
        componentCursor = response.componentType;
        lastInstructionIsTerminal = response.terminal;
      }
      var instruction = null;
      if (!lastInstructionIsTerminal) {
        instruction = this._generateRedirects(componentCursor);
        if (lang_1.isPresent(instruction)) {
          var lastInstruction = instruction;
          while (lang_1.isPresent(lastInstruction.child)) {
            lastInstruction = lastInstruction.child;
          }
          lastInstructionIsTerminal = lastInstruction.component.terminal;
        }
        if (lang_1.isPresent(componentCursor) && !lastInstructionIsTerminal) {
          throw new exceptions_1.BaseException("Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" does not resolve to a terminal or async instruction.");
        }
      }
      while (segments.length > 0) {
        instruction = new instruction_1.Instruction(segments.pop(), instruction, {});
      }
      return instruction;
    };
    RouteRegistry.prototype.hasRoute = function(name, parentComponent) {
      var componentRecognizer = this._rules.get(parentComponent);
      if (lang_1.isBlank(componentRecognizer)) {
        return false;
      }
      return componentRecognizer.hasRoute(name);
    };
    RouteRegistry.prototype._generateRedirects = function(componentCursor) {
      if (lang_1.isBlank(componentCursor)) {
        return null;
      }
      var componentRecognizer = this._rules.get(componentCursor);
      if (lang_1.isBlank(componentRecognizer)) {
        return null;
      }
      for (var i = 0; i < componentRecognizer.redirects.length; i += 1) {
        var redirect = componentRecognizer.redirects[i];
        if (redirect.segments.length == 1 && redirect.segments[0] == '') {
          var toSegments = url_parser_1.pathSegmentsToUrl(redirect.toSegments);
          var matches = componentRecognizer.recognize(toSegments);
          var primaryInstruction = collection_1.ListWrapper.maximum(matches, function(match) {
            return match.instruction.specificity;
          });
          if (lang_1.isPresent(primaryInstruction)) {
            var child = this._generateRedirects(primaryInstruction.instruction.componentType);
            return new instruction_1.Instruction(primaryInstruction.instruction, child, {});
          }
          return null;
        }
      }
      return null;
    };
    RouteRegistry = __decorate([angular2_1.Injectable(), __metadata('design:paramtypes', [])], RouteRegistry);
    return RouteRegistry;
  })();
  exports.RouteRegistry = RouteRegistry;
  function mostSpecific(instructions) {
    return collection_1.ListWrapper.maximum(instructions, function(instruction) {
      return instruction.component.specificity;
    });
  }
  function assertTerminalComponent(component, path) {
    if (!lang_1.isType(component)) {
      return;
    }
    var annotations = reflection_1.reflector.annotations(component);
    if (lang_1.isPresent(annotations)) {
      for (var i = 0; i < annotations.length; i++) {
        var annotation = annotations[i];
        if (annotation instanceof route_config_impl_1.RouteConfig) {
          throw new exceptions_1.BaseException("Child routes are not allowed for \"" + path + "\". Use \"...\" on the parent's route path.");
        }
      }
    }
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/location_strategy", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var LocationStrategy = (function() {
    function LocationStrategy() {}
    return LocationStrategy;
  })();
  exports.LocationStrategy = LocationStrategy;
  function normalizeQueryParams(params) {
    return (params.length > 0 && params.substring(0, 1) != '?') ? ('?' + params) : params;
  }
  exports.normalizeQueryParams = normalizeQueryParams;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/location", ["npm:angular2@2.0.0-alpha.46/src/router/location_strategy", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var location_strategy_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location_strategy');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var lang_2 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  exports.APP_BASE_HREF = lang_1.CONST_EXPR(new angular2_1.OpaqueToken('appBaseHref'));
  var Location = (function() {
    function Location(platformStrategy, href) {
      var _this = this;
      this.platformStrategy = platformStrategy;
      this._subject = new async_1.EventEmitter();
      var browserBaseHref = lang_1.isPresent(href) ? href : this.platformStrategy.getBaseHref();
      if (lang_2.isBlank(browserBaseHref)) {
        throw new exceptions_1.BaseException("No base href set. Either provide a provider for the APP_BASE_HREF token or add a base element to the document.");
      }
      this._baseHref = stripTrailingSlash(stripIndexHtml(browserBaseHref));
      this.platformStrategy.onPopState(function(_) {
        async_1.ObservableWrapper.callNext(_this._subject, {
          'url': _this.path(),
          'pop': true
        });
      });
    }
    Location.prototype.path = function() {
      return this.normalize(this.platformStrategy.path());
    };
    Location.prototype.normalize = function(url) {
      return stripTrailingSlash(_stripBaseHref(this._baseHref, stripIndexHtml(url)));
    };
    Location.prototype.prepareExternalUrl = function(url) {
      if (!url.startsWith('/')) {
        url = '/' + url;
      }
      return this.platformStrategy.prepareExternalUrl(stripTrailingSlash(_addBaseHref(this._baseHref, url)));
    };
    Location.prototype.go = function(path, query) {
      if (query === void 0) {
        query = '';
      }
      this.platformStrategy.pushState(null, '', path, query);
    };
    Location.prototype.forward = function() {
      this.platformStrategy.forward();
    };
    Location.prototype.back = function() {
      this.platformStrategy.back();
    };
    Location.prototype.subscribe = function(onNext, onThrow, onReturn) {
      if (onThrow === void 0) {
        onThrow = null;
      }
      if (onReturn === void 0) {
        onReturn = null;
      }
      return async_1.ObservableWrapper.subscribe(this._subject, onNext, onThrow, onReturn);
    };
    Location = __decorate([angular2_1.Injectable(), __param(1, angular2_1.Optional()), __param(1, angular2_1.Inject(exports.APP_BASE_HREF)), __metadata('design:paramtypes', [location_strategy_1.LocationStrategy, String])], Location);
    return Location;
  })();
  exports.Location = Location;
  function _stripBaseHref(baseHref, url) {
    if (baseHref.length > 0 && url.startsWith(baseHref)) {
      return url.substring(baseHref.length);
    }
    return url;
  }
  function _addBaseHref(baseHref, url) {
    if (!url.startsWith(baseHref)) {
      return baseHref + url;
    }
    return url;
  }
  function stripIndexHtml(url) {
    if (/\/index.html$/g.test(url)) {
      return url.substring(0, url.length - 11);
    }
    return url;
  }
  function stripTrailingSlash(url) {
    if (/\/$/g.test(url)) {
      url = url.substring(0, url.length - 1);
    }
    return url;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/router_link", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/router/router", "npm:angular2@2.0.0-alpha.46/src/router/location", "npm:angular2@2.0.0-alpha.46/src/router/instruction"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var router_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router');
  var location_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location');
  var instruction_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  var RouterLink = (function() {
    function RouterLink(_router, _location) {
      this._router = _router;
      this._location = _location;
    }
    Object.defineProperty(RouterLink.prototype, "isRouteActive", {
      get: function() {
        return this._router.isRouteActive(this._navigationInstruction);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(RouterLink.prototype, "routeParams", {
      set: function(changes) {
        this._routeParams = changes;
        this._navigationInstruction = this._router.generate(this._routeParams);
        var navigationHref = instruction_1.stringifyInstruction(this._navigationInstruction);
        this.visibleHref = this._location.prepareExternalUrl(navigationHref);
      },
      enumerable: true,
      configurable: true
    });
    RouterLink.prototype.onClick = function() {
      if (!lang_1.isString(this.target) || this.target == '_self') {
        this._router.navigateByInstruction(this._navigationInstruction);
        return false;
      }
      return true;
    };
    RouterLink = __decorate([angular2_1.Directive({
      selector: '[router-link]',
      inputs: ['routeParams: routerLink', 'target: target'],
      host: {
        '(click)': 'onClick()',
        '[attr.href]': 'visibleHref',
        '[class.router-link-active]': 'isRouteActive'
      }
    }), __metadata('design:paramtypes', [router_1.Router, location_1.Location])], RouterLink);
    return RouterLink;
  })();
  exports.RouterLink = RouterLink;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations", ["npm:angular2@2.0.0-alpha.46/src/core/util/decorators", "npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations_impl"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/util/decorators');
  var lifecycle_annotations_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations_impl');
  var lifecycle_annotations_impl_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations_impl');
  exports.canReuse = lifecycle_annotations_impl_2.canReuse;
  exports.canDeactivate = lifecycle_annotations_impl_2.canDeactivate;
  exports.onActivate = lifecycle_annotations_impl_2.onActivate;
  exports.onReuse = lifecycle_annotations_impl_2.onReuse;
  exports.onDeactivate = lifecycle_annotations_impl_2.onDeactivate;
  exports.CanActivate = decorators_1.makeDecorator(lifecycle_annotations_impl_1.CanActivate);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/router_outlet", ["npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/router/router", "npm:angular2@2.0.0-alpha.46/src/router/instruction", "npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations", "npm:angular2@2.0.0-alpha.46/src/router/route_lifecycle_reflector"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var routerMod = $__require('npm:angular2@2.0.0-alpha.46/src/router/router');
  var instruction_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  var hookMod = $__require('npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations');
  var route_lifecycle_reflector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_lifecycle_reflector');
  var _resolveToTrue = async_1.PromiseWrapper.resolve(true);
  var RouterOutlet = (function() {
    function RouterOutlet(_elementRef, _loader, _parentRouter, nameAttr) {
      this._elementRef = _elementRef;
      this._loader = _loader;
      this._parentRouter = _parentRouter;
      this.name = null;
      this._componentRef = null;
      this._currentInstruction = null;
      if (lang_1.isPresent(nameAttr)) {
        this.name = nameAttr;
        this._parentRouter.registerAuxOutlet(this);
      } else {
        this._parentRouter.registerPrimaryOutlet(this);
      }
    }
    RouterOutlet.prototype.activate = function(nextInstruction) {
      var _this = this;
      var previousInstruction = this._currentInstruction;
      this._currentInstruction = nextInstruction;
      var componentType = nextInstruction.componentType;
      var childRouter = this._parentRouter.childRouter(componentType);
      var providers = angular2_1.Injector.resolve([angular2_1.provide(instruction_1.RouteData, {useValue: nextInstruction.routeData}), angular2_1.provide(instruction_1.RouteParams, {useValue: new instruction_1.RouteParams(nextInstruction.params)}), angular2_1.provide(routerMod.Router, {useValue: childRouter})]);
      return this._loader.loadNextToLocation(componentType, this._elementRef, providers).then(function(componentRef) {
        _this._componentRef = componentRef;
        if (route_lifecycle_reflector_1.hasLifecycleHook(hookMod.onActivate, componentType)) {
          return _this._componentRef.instance.onActivate(nextInstruction, previousInstruction);
        }
      });
    };
    RouterOutlet.prototype.reuse = function(nextInstruction) {
      var previousInstruction = this._currentInstruction;
      this._currentInstruction = nextInstruction;
      if (lang_1.isBlank(this._componentRef)) {
        throw new exceptions_1.BaseException("Cannot reuse an outlet that does not contain a component.");
      }
      return async_1.PromiseWrapper.resolve(route_lifecycle_reflector_1.hasLifecycleHook(hookMod.onReuse, this._currentInstruction.componentType) ? this._componentRef.instance.onReuse(nextInstruction, previousInstruction) : true);
    };
    RouterOutlet.prototype.deactivate = function(nextInstruction) {
      var _this = this;
      var next = _resolveToTrue;
      if (lang_1.isPresent(this._componentRef) && lang_1.isPresent(this._currentInstruction) && route_lifecycle_reflector_1.hasLifecycleHook(hookMod.onDeactivate, this._currentInstruction.componentType)) {
        next = async_1.PromiseWrapper.resolve(this._componentRef.instance.onDeactivate(nextInstruction, this._currentInstruction));
      }
      return next.then(function(_) {
        if (lang_1.isPresent(_this._componentRef)) {
          _this._componentRef.dispose();
          _this._componentRef = null;
        }
      });
    };
    RouterOutlet.prototype.canDeactivate = function(nextInstruction) {
      if (lang_1.isBlank(this._currentInstruction)) {
        return _resolveToTrue;
      }
      if (route_lifecycle_reflector_1.hasLifecycleHook(hookMod.canDeactivate, this._currentInstruction.componentType)) {
        return async_1.PromiseWrapper.resolve(this._componentRef.instance.canDeactivate(nextInstruction, this._currentInstruction));
      }
      return _resolveToTrue;
    };
    RouterOutlet.prototype.canReuse = function(nextInstruction) {
      var result;
      if (lang_1.isBlank(this._currentInstruction) || this._currentInstruction.componentType != nextInstruction.componentType) {
        result = false;
      } else if (route_lifecycle_reflector_1.hasLifecycleHook(hookMod.canReuse, this._currentInstruction.componentType)) {
        result = this._componentRef.instance.canReuse(nextInstruction, this._currentInstruction);
      } else {
        result = nextInstruction == this._currentInstruction || (lang_1.isPresent(nextInstruction.params) && lang_1.isPresent(this._currentInstruction.params) && collection_1.StringMapWrapper.equals(nextInstruction.params, this._currentInstruction.params));
      }
      return async_1.PromiseWrapper.resolve(result);
    };
    RouterOutlet = __decorate([angular2_1.Directive({selector: 'router-outlet'}), __param(3, angular2_1.Attribute('name')), __metadata('design:paramtypes', [angular2_1.ElementRef, angular2_1.DynamicComponentLoader, routerMod.Router, String])], RouterOutlet);
    return RouterOutlet;
  })();
  exports.RouterOutlet = RouterOutlet;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations_impl", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var RouteLifecycleHook = (function() {
    function RouteLifecycleHook(name) {
      this.name = name;
    }
    RouteLifecycleHook = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String])], RouteLifecycleHook);
    return RouteLifecycleHook;
  })();
  exports.RouteLifecycleHook = RouteLifecycleHook;
  var CanActivate = (function() {
    function CanActivate(fn) {
      this.fn = fn;
    }
    CanActivate = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Function])], CanActivate);
    return CanActivate;
  })();
  exports.CanActivate = CanActivate;
  exports.canReuse = lang_1.CONST_EXPR(new RouteLifecycleHook("canReuse"));
  exports.canDeactivate = lang_1.CONST_EXPR(new RouteLifecycleHook("canDeactivate"));
  exports.onActivate = lang_1.CONST_EXPR(new RouteLifecycleHook("onActivate"));
  exports.onReuse = lang_1.CONST_EXPR(new RouteLifecycleHook("onReuse"));
  exports.onDeactivate = lang_1.CONST_EXPR(new RouteLifecycleHook("onDeactivate"));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/route_lifecycle_reflector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations_impl", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var lifecycle_annotations_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations_impl');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  function hasLifecycleHook(e, type) {
    if (!(type instanceof lang_1.Type))
      return false;
    return e.name in type.prototype;
  }
  exports.hasLifecycleHook = hasLifecycleHook;
  function getCanActivateHook(type) {
    var annotations = reflection_1.reflector.annotations(type);
    for (var i = 0; i < annotations.length; i += 1) {
      var annotation = annotations[i];
      if (annotation instanceof lifecycle_annotations_impl_1.CanActivate) {
        return annotation.fn;
      }
    }
    return null;
  }
  exports.getCanActivateHook = getCanActivateHook;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/instruction", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var RouteParams = (function() {
    function RouteParams(params) {
      this.params = params;
    }
    RouteParams.prototype.get = function(param) {
      return lang_1.normalizeBlank(collection_1.StringMapWrapper.get(this.params, param));
    };
    return RouteParams;
  })();
  exports.RouteParams = RouteParams;
  var RouteData = (function() {
    function RouteData(data) {
      if (data === void 0) {
        data = lang_1.CONST_EXPR({});
      }
      this.data = data;
    }
    RouteData.prototype.get = function(key) {
      return lang_1.normalizeBlank(collection_1.StringMapWrapper.get(this.data, key));
    };
    return RouteData;
  })();
  exports.RouteData = RouteData;
  var BLANK_ROUTE_DATA = new RouteData();
  var Instruction = (function() {
    function Instruction(component, child, auxInstruction) {
      this.component = component;
      this.child = child;
      this.auxInstruction = auxInstruction;
    }
    Instruction.prototype.replaceChild = function(child) {
      return new Instruction(this.component, child, this.auxInstruction);
    };
    return Instruction;
  })();
  exports.Instruction = Instruction;
  var PrimaryInstruction = (function() {
    function PrimaryInstruction(component, child, auxUrls) {
      this.component = component;
      this.child = child;
      this.auxUrls = auxUrls;
    }
    return PrimaryInstruction;
  })();
  exports.PrimaryInstruction = PrimaryInstruction;
  function stringifyInstruction(instruction) {
    return stringifyInstructionPath(instruction) + stringifyInstructionQuery(instruction);
  }
  exports.stringifyInstruction = stringifyInstruction;
  function stringifyInstructionPath(instruction) {
    return instruction.component.urlPath + stringifyAux(instruction) + stringifyPrimaryPrefixed(instruction.child);
  }
  exports.stringifyInstructionPath = stringifyInstructionPath;
  function stringifyInstructionQuery(instruction) {
    return instruction.component.urlParams.length > 0 ? ('?' + instruction.component.urlParams.join('&')) : '';
  }
  exports.stringifyInstructionQuery = stringifyInstructionQuery;
  function stringifyPrimaryPrefixed(instruction) {
    var primary = stringifyPrimary(instruction);
    if (primary.length > 0) {
      primary = '/' + primary;
    }
    return primary;
  }
  function stringifyPrimary(instruction) {
    if (lang_1.isBlank(instruction)) {
      return '';
    }
    var params = instruction.component.urlParams.length > 0 ? (';' + instruction.component.urlParams.join(';')) : '';
    return instruction.component.urlPath + params + stringifyAux(instruction) + stringifyPrimaryPrefixed(instruction.child);
  }
  function stringifyAux(instruction) {
    var routes = [];
    collection_1.StringMapWrapper.forEach(instruction.auxInstruction, function(auxInstruction, _) {
      routes.push(stringifyPrimary(auxInstruction));
    });
    if (routes.length > 0) {
      return '(' + routes.join('//') + ')';
    }
    return '';
  }
  var ComponentInstruction = (function() {
    function ComponentInstruction() {
      this.reuse = false;
    }
    Object.defineProperty(ComponentInstruction.prototype, "componentType", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentInstruction.prototype, "specificity", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentInstruction.prototype, "terminal", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ComponentInstruction.prototype, "routeData", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return ComponentInstruction;
  })();
  exports.ComponentInstruction = ComponentInstruction;
  var ComponentInstruction_ = (function(_super) {
    __extends(ComponentInstruction_, _super);
    function ComponentInstruction_(urlPath, urlParams, _recognizer, params) {
      if (params === void 0) {
        params = null;
      }
      _super.call(this);
      this._recognizer = _recognizer;
      this.urlPath = urlPath;
      this.urlParams = urlParams;
      this.params = params;
      if (lang_1.isPresent(this._recognizer.handler.data)) {
        this._routeData = new RouteData(this._recognizer.handler.data);
      } else {
        this._routeData = BLANK_ROUTE_DATA;
      }
    }
    Object.defineProperty(ComponentInstruction_.prototype, "componentType", {
      get: function() {
        return this._recognizer.handler.componentType;
      },
      enumerable: true,
      configurable: true
    });
    ComponentInstruction_.prototype.resolveComponentType = function() {
      return this._recognizer.handler.resolveComponentType();
    };
    Object.defineProperty(ComponentInstruction_.prototype, "specificity", {
      get: function() {
        return this._recognizer.specificity;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentInstruction_.prototype, "terminal", {
      get: function() {
        return this._recognizer.terminal;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentInstruction_.prototype, "routeData", {
      get: function() {
        return this._routeData;
      },
      enumerable: true,
      configurable: true
    });
    return ComponentInstruction_;
  })(ComponentInstruction);
  exports.ComponentInstruction_ = ComponentInstruction_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/router/router", ["npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/router/instruction", "npm:angular2@2.0.0-alpha.46/src/router/route_lifecycle_reflector"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var instruction_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  var route_lifecycle_reflector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_lifecycle_reflector');
  var _resolveToTrue = async_1.PromiseWrapper.resolve(true);
  var _resolveToFalse = async_1.PromiseWrapper.resolve(false);
  var Router = (function() {
    function Router(registry, parent, hostComponent) {
      this.registry = registry;
      this.parent = parent;
      this.hostComponent = hostComponent;
      this.navigating = false;
      this._currentInstruction = null;
      this._currentNavigation = _resolveToTrue;
      this._outlet = null;
      this._auxRouters = new collection_1.Map();
      this._subject = new async_1.EventEmitter();
    }
    Router.prototype.childRouter = function(hostComponent) {
      return this._childRouter = new ChildRouter(this, hostComponent);
    };
    Router.prototype.auxRouter = function(hostComponent) {
      return new ChildRouter(this, hostComponent);
    };
    Router.prototype.registerPrimaryOutlet = function(outlet) {
      if (lang_1.isPresent(outlet.name)) {
        throw new exceptions_1.BaseException("registerPrimaryOutlet expects to be called with an unnamed outlet.");
      }
      this._outlet = outlet;
      if (lang_1.isPresent(this._currentInstruction)) {
        return this.commit(this._currentInstruction, false);
      }
      return _resolveToTrue;
    };
    Router.prototype.registerAuxOutlet = function(outlet) {
      var outletName = outlet.name;
      if (lang_1.isBlank(outletName)) {
        throw new exceptions_1.BaseException("registerAuxOutlet expects to be called with an outlet with a name.");
      }
      var router = this.auxRouter(this.hostComponent);
      this._auxRouters.set(outletName, router);
      router._outlet = outlet;
      var auxInstruction;
      if (lang_1.isPresent(this._currentInstruction) && lang_1.isPresent(auxInstruction = this._currentInstruction.auxInstruction[outletName])) {
        return router.commit(auxInstruction);
      }
      return _resolveToTrue;
    };
    Router.prototype.isRouteActive = function(instruction) {
      var router = this;
      while (lang_1.isPresent(router.parent) && lang_1.isPresent(instruction.child)) {
        router = router.parent;
        instruction = instruction.child;
      }
      return lang_1.isPresent(this._currentInstruction) && this._currentInstruction.component == instruction.component;
    };
    Router.prototype.config = function(definitions) {
      var _this = this;
      definitions.forEach(function(routeDefinition) {
        _this.registry.config(_this.hostComponent, routeDefinition);
      });
      return this.renavigate();
    };
    Router.prototype.navigate = function(linkParams) {
      var instruction = this.generate(linkParams);
      return this.navigateByInstruction(instruction, false);
    };
    Router.prototype.navigateByUrl = function(url, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      return this._currentNavigation = this._currentNavigation.then(function(_) {
        _this.lastNavigationAttempt = url;
        _this._startNavigating();
        return _this._afterPromiseFinishNavigating(_this.recognize(url).then(function(instruction) {
          if (lang_1.isBlank(instruction)) {
            return false;
          }
          return _this._navigate(instruction, _skipLocationChange);
        }));
      });
    };
    Router.prototype.navigateByInstruction = function(instruction, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      if (lang_1.isBlank(instruction)) {
        return _resolveToFalse;
      }
      return this._currentNavigation = this._currentNavigation.then(function(_) {
        _this._startNavigating();
        return _this._afterPromiseFinishNavigating(_this._navigate(instruction, _skipLocationChange));
      });
    };
    Router.prototype._navigate = function(instruction, _skipLocationChange) {
      var _this = this;
      return this._settleInstruction(instruction).then(function(_) {
        return _this._canReuse(instruction);
      }).then(function(_) {
        return _this._canActivate(instruction);
      }).then(function(result) {
        if (!result) {
          return false;
        }
        return _this._canDeactivate(instruction).then(function(result) {
          if (result) {
            return _this.commit(instruction, _skipLocationChange).then(function(_) {
              _this._emitNavigationFinish(instruction_1.stringifyInstruction(instruction));
              return true;
            });
          }
        });
      });
    };
    Router.prototype._settleInstruction = function(instruction) {
      var _this = this;
      var unsettledInstructions = [];
      if (lang_1.isBlank(instruction.component.componentType)) {
        unsettledInstructions.push(instruction.component.resolveComponentType().then(function(type) {
          _this.registry.configFromComponent(type);
        }));
      }
      if (lang_1.isPresent(instruction.child)) {
        unsettledInstructions.push(this._settleInstruction(instruction.child));
      }
      collection_1.StringMapWrapper.forEach(instruction.auxInstruction, function(instruction, _) {
        unsettledInstructions.push(_this._settleInstruction(instruction));
      });
      return async_1.PromiseWrapper.all(unsettledInstructions);
    };
    Router.prototype._emitNavigationFinish = function(url) {
      async_1.ObservableWrapper.callNext(this._subject, url);
    };
    Router.prototype._afterPromiseFinishNavigating = function(promise) {
      var _this = this;
      return async_1.PromiseWrapper.catchError(promise.then(function(_) {
        return _this._finishNavigating();
      }), function(err) {
        _this._finishNavigating();
        throw err;
      });
    };
    Router.prototype._canReuse = function(instruction) {
      var _this = this;
      if (lang_1.isBlank(this._outlet)) {
        return _resolveToFalse;
      }
      return this._outlet.canReuse(instruction.component).then(function(result) {
        instruction.component.reuse = result;
        if (result && lang_1.isPresent(_this._childRouter) && lang_1.isPresent(instruction.child)) {
          return _this._childRouter._canReuse(instruction.child);
        }
      });
    };
    Router.prototype._canActivate = function(nextInstruction) {
      return canActivateOne(nextInstruction, this._currentInstruction);
    };
    Router.prototype._canDeactivate = function(instruction) {
      var _this = this;
      if (lang_1.isBlank(this._outlet)) {
        return _resolveToTrue;
      }
      var next;
      var childInstruction = null;
      var reuse = false;
      var componentInstruction = null;
      if (lang_1.isPresent(instruction)) {
        childInstruction = instruction.child;
        componentInstruction = instruction.component;
        reuse = instruction.component.reuse;
      }
      if (reuse) {
        next = _resolveToTrue;
      } else {
        next = this._outlet.canDeactivate(componentInstruction);
      }
      return next.then(function(result) {
        if (result == false) {
          return false;
        }
        if (lang_1.isPresent(_this._childRouter)) {
          return _this._childRouter._canDeactivate(childInstruction);
        }
        return true;
      });
    };
    Router.prototype.commit = function(instruction, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      this._currentInstruction = instruction;
      var next = _resolveToTrue;
      if (lang_1.isPresent(this._outlet)) {
        var componentInstruction = instruction.component;
        if (componentInstruction.reuse) {
          next = this._outlet.reuse(componentInstruction);
        } else {
          next = this.deactivate(instruction).then(function(_) {
            return _this._outlet.activate(componentInstruction);
          });
        }
        if (lang_1.isPresent(instruction.child)) {
          next = next.then(function(_) {
            if (lang_1.isPresent(_this._childRouter)) {
              return _this._childRouter.commit(instruction.child);
            }
          });
        }
      }
      var promises = [];
      this._auxRouters.forEach(function(router, name) {
        if (lang_1.isPresent(instruction.auxInstruction[name])) {
          promises.push(router.commit(instruction.auxInstruction[name]));
        }
      });
      return next.then(function(_) {
        return async_1.PromiseWrapper.all(promises);
      });
    };
    Router.prototype._startNavigating = function() {
      this.navigating = true;
    };
    Router.prototype._finishNavigating = function() {
      this.navigating = false;
    };
    Router.prototype.subscribe = function(onNext) {
      return async_1.ObservableWrapper.subscribe(this._subject, onNext);
    };
    Router.prototype.deactivate = function(instruction) {
      var _this = this;
      var childInstruction = null;
      var componentInstruction = null;
      if (lang_1.isPresent(instruction)) {
        childInstruction = instruction.child;
        componentInstruction = instruction.component;
      }
      var next = _resolveToTrue;
      if (lang_1.isPresent(this._childRouter)) {
        next = this._childRouter.deactivate(childInstruction);
      }
      if (lang_1.isPresent(this._outlet)) {
        next = next.then(function(_) {
          return _this._outlet.deactivate(componentInstruction);
        });
      }
      return next;
    };
    Router.prototype.recognize = function(url) {
      return this.registry.recognize(url, this.hostComponent);
    };
    Router.prototype.renavigate = function() {
      if (lang_1.isBlank(this.lastNavigationAttempt)) {
        return this._currentNavigation;
      }
      return this.navigateByUrl(this.lastNavigationAttempt);
    };
    Router.prototype.generate = function(linkParams) {
      var normalizedLinkParams = splitAndFlattenLinkParams(linkParams);
      var first = collection_1.ListWrapper.first(normalizedLinkParams);
      var rest = collection_1.ListWrapper.slice(normalizedLinkParams, 1);
      var router = this;
      if (first == '') {
        while (lang_1.isPresent(router.parent)) {
          router = router.parent;
        }
      } else if (first == '..') {
        router = router.parent;
        while (collection_1.ListWrapper.first(rest) == '..') {
          rest = collection_1.ListWrapper.slice(rest, 1);
          router = router.parent;
          if (lang_1.isBlank(router)) {
            throw new exceptions_1.BaseException("Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" has too many \"../\" segments.");
          }
        }
      } else if (first != '.') {
        var childRouteExists = this.registry.hasRoute(first, this.hostComponent);
        var parentRouteExists = lang_1.isPresent(this.parent) && this.registry.hasRoute(first, this.parent.hostComponent);
        if (parentRouteExists && childRouteExists) {
          var msg = "Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" is ambiguous, use \"./\" or \"../\" to disambiguate.";
          throw new exceptions_1.BaseException(msg);
        }
        if (parentRouteExists) {
          router = this.parent;
        }
        rest = linkParams;
      }
      if (rest[rest.length - 1] == '') {
        rest.pop();
      }
      if (rest.length < 1) {
        var msg = "Link \"" + collection_1.ListWrapper.toJSON(linkParams) + "\" must include a route name.";
        throw new exceptions_1.BaseException(msg);
      }
      var nextInstruction = this.registry.generate(rest, router.hostComponent);
      var url = [];
      var parent = router.parent;
      while (lang_1.isPresent(parent)) {
        url.unshift(parent._currentInstruction);
        parent = parent.parent;
      }
      while (url.length > 0) {
        nextInstruction = url.pop().replaceChild(nextInstruction);
      }
      return nextInstruction;
    };
    return Router;
  })();
  exports.Router = Router;
  var RootRouter = (function(_super) {
    __extends(RootRouter, _super);
    function RootRouter(registry, location, primaryComponent) {
      var _this = this;
      _super.call(this, registry, null, primaryComponent);
      this._location = location;
      this._locationSub = this._location.subscribe(function(change) {
        return _this.navigateByUrl(change['url'], lang_1.isPresent(change['pop']));
      });
      this.registry.configFromComponent(primaryComponent);
      this.navigateByUrl(location.path());
    }
    RootRouter.prototype.commit = function(instruction, _skipLocationChange) {
      var _this = this;
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      var emitPath = instruction_1.stringifyInstructionPath(instruction);
      var emitQuery = instruction_1.stringifyInstructionQuery(instruction);
      if (emitPath.length > 0) {
        emitPath = '/' + emitPath;
      }
      var promise = _super.prototype.commit.call(this, instruction);
      if (!_skipLocationChange) {
        promise = promise.then(function(_) {
          _this._location.go(emitPath, emitQuery);
        });
      }
      return promise;
    };
    RootRouter.prototype.dispose = function() {
      if (lang_1.isPresent(this._locationSub)) {
        async_1.ObservableWrapper.dispose(this._locationSub);
        this._locationSub = null;
      }
    };
    return RootRouter;
  })(Router);
  exports.RootRouter = RootRouter;
  var ChildRouter = (function(_super) {
    __extends(ChildRouter, _super);
    function ChildRouter(parent, hostComponent) {
      _super.call(this, parent.registry, parent, hostComponent);
      this.parent = parent;
    }
    ChildRouter.prototype.navigateByUrl = function(url, _skipLocationChange) {
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      return this.parent.navigateByUrl(url, _skipLocationChange);
    };
    ChildRouter.prototype.navigateByInstruction = function(instruction, _skipLocationChange) {
      if (_skipLocationChange === void 0) {
        _skipLocationChange = false;
      }
      return this.parent.navigateByInstruction(instruction, _skipLocationChange);
    };
    return ChildRouter;
  })(Router);
  function splitAndFlattenLinkParams(linkParams) {
    return linkParams.reduce(function(accumulation, item) {
      if (lang_1.isString(item)) {
        var strItem = item;
        return accumulation.concat(strItem.split('/'));
      }
      accumulation.push(item);
      return accumulation;
    }, []);
  }
  function canActivateOne(nextInstruction, prevInstruction) {
    var next = _resolveToTrue;
    if (lang_1.isPresent(nextInstruction.child)) {
      next = canActivateOne(nextInstruction.child, lang_1.isPresent(prevInstruction) ? prevInstruction.child : null);
    }
    return next.then(function(result) {
      if (result == false) {
        return false;
      }
      if (nextInstruction.component.reuse) {
        return true;
      }
      var hook = route_lifecycle_reflector_1.getCanActivateHook(nextInstruction.component.componentType);
      if (lang_1.isPresent(hook)) {
        return hook(nextInstruction.component, lang_1.isPresent(prevInstruction) ? prevInstruction.component : null);
      }
      return true;
    });
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/router", ["npm:angular2@2.0.0-alpha.46/src/router/router", "npm:angular2@2.0.0-alpha.46/src/router/router_outlet", "npm:angular2@2.0.0-alpha.46/src/router/router_link", "npm:angular2@2.0.0-alpha.46/src/router/instruction", "npm:angular2@2.0.0-alpha.46/src/router/route_registry", "npm:angular2@2.0.0-alpha.46/src/router/location_strategy", "npm:angular2@2.0.0-alpha.46/src/router/hash_location_strategy", "npm:angular2@2.0.0-alpha.46/src/router/path_location_strategy", "npm:angular2@2.0.0-alpha.46/src/router/location", "npm:angular2@2.0.0-alpha.46/src/router/route_config_decorator", "npm:angular2@2.0.0-alpha.46/src/router/route_definition", "npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations", "npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  var router_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router');
  exports.Router = router_1.Router;
  var router_outlet_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router_outlet');
  exports.RouterOutlet = router_outlet_1.RouterOutlet;
  var router_link_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router_link');
  exports.RouterLink = router_link_1.RouterLink;
  var instruction_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  exports.RouteParams = instruction_1.RouteParams;
  exports.RouteData = instruction_1.RouteData;
  var route_registry_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_registry');
  exports.RouteRegistry = route_registry_1.RouteRegistry;
  var location_strategy_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location_strategy');
  exports.LocationStrategy = location_strategy_1.LocationStrategy;
  var hash_location_strategy_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/hash_location_strategy');
  exports.HashLocationStrategy = hash_location_strategy_1.HashLocationStrategy;
  var path_location_strategy_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/path_location_strategy');
  exports.PathLocationStrategy = path_location_strategy_1.PathLocationStrategy;
  var location_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location');
  exports.Location = location_1.Location;
  exports.APP_BASE_HREF = location_1.APP_BASE_HREF;
  __export($__require('npm:angular2@2.0.0-alpha.46/src/router/route_config_decorator'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/router/route_definition'));
  var lifecycle_annotations_1 = $__require('npm:angular2@2.0.0-alpha.46/src/router/lifecycle_annotations');
  exports.CanActivate = lifecycle_annotations_1.CanActivate;
  var instruction_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/instruction');
  exports.Instruction = instruction_2.Instruction;
  exports.ComponentInstruction = instruction_2.ComponentInstruction;
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  exports.OpaqueToken = angular2_1.OpaqueToken;
  var location_strategy_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location_strategy');
  var path_location_strategy_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/path_location_strategy');
  var router_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router');
  var router_outlet_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router_outlet');
  var router_link_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/router_link');
  var route_registry_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/route_registry');
  var location_2 = $__require('npm:angular2@2.0.0-alpha.46/src/router/location');
  var angular2_2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  exports.ROUTER_PRIMARY_COMPONENT = lang_1.CONST_EXPR(new angular2_2.OpaqueToken('RouterPrimaryComponent'));
  exports.ROUTER_DIRECTIVES = lang_1.CONST_EXPR([router_outlet_2.RouterOutlet, router_link_2.RouterLink]);
  exports.ROUTER_PROVIDERS = lang_1.CONST_EXPR([route_registry_2.RouteRegistry, lang_1.CONST_EXPR(new angular2_2.Provider(location_strategy_2.LocationStrategy, {useClass: path_location_strategy_2.PathLocationStrategy})), location_2.Location, lang_1.CONST_EXPR(new angular2_2.Provider(router_2.Router, {
    useFactory: routerFactory,
    deps: lang_1.CONST_EXPR([route_registry_2.RouteRegistry, location_2.Location, exports.ROUTER_PRIMARY_COMPONENT, angular2_2.ApplicationRef])
  })), lang_1.CONST_EXPR(new angular2_2.Provider(exports.ROUTER_PRIMARY_COMPONENT, {
    useFactory: routerPrimaryComponentFactory,
    deps: lang_1.CONST_EXPR([angular2_2.ApplicationRef])
  }))]);
  exports.ROUTER_BINDINGS = exports.ROUTER_PROVIDERS;
  function routerFactory(registry, location, primaryComponent, appRef) {
    var rootRouter = new router_2.RootRouter(registry, location, primaryComponent);
    appRef.registerDisposeListener(function() {
      return rootRouter.dispose();
    });
    return rootRouter;
  }
  function routerPrimaryComponentFactory(app) {
    if (app.componentTypes.length == 0) {
      throw new exceptions_1.BaseException("Bootstrap at least one component before injecting Router.");
    }
    return app.componentTypes[0];
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/angular_js", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function noNg() {
    throw new Error('AngularJS v1.x is not loaded!');
  }
  var angular = {
    bootstrap: noNg,
    module: noNg,
    element: noNg,
    version: noNg
  };
  try {
    if (window.hasOwnProperty('angular')) {
      angular = window.angular;
    }
  } catch (e) {}
  exports.bootstrap = angular.bootstrap;
  exports.module = angular.module;
  exports.element = angular.element;
  exports.version = angular.version;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/upgrade_ng1_adapter", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/upgrade/constants", "npm:angular2@2.0.0-alpha.46/src/upgrade/util", "npm:angular2@2.0.0-alpha.46/src/upgrade/angular_js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/constants');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/util');
  var angular = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/angular_js');
  var CAMEL_CASE = /([A-Z])/g;
  var INITIAL_VALUE = {__UNINITIALIZED__: true};
  var NOT_SUPPORTED = 'NOT_SUPPORTED';
  var UpgradeNg1ComponentAdapterBuilder = (function() {
    function UpgradeNg1ComponentAdapterBuilder(name) {
      this.name = name;
      this.inputs = [];
      this.inputsRename = [];
      this.outputs = [];
      this.outputsRename = [];
      this.propertyOutputs = [];
      this.checkProperties = [];
      this.propertyMap = {};
      this.linkFn = null;
      this.directive = null;
      this.$controller = null;
      var selector = name.replace(CAMEL_CASE, function(all, next) {
        return '-' + next.toLowerCase();
      });
      var self = this;
      this.type = angular2_1.Directive({
        selector: selector,
        inputs: this.inputsRename,
        outputs: this.outputsRename
      }).Class({
        constructor: [new angular2_1.Inject(constants_1.NG1_SCOPE), angular2_1.ElementRef, function(scope, elementRef) {
          return new UpgradeNg1ComponentAdapter(self.linkFn, scope, self.directive, elementRef, self.$controller, self.inputs, self.outputs, self.propertyOutputs, self.checkProperties, self.propertyMap);
        }],
        onChanges: function() {},
        doCheck: function() {}
      });
    }
    UpgradeNg1ComponentAdapterBuilder.prototype.extractDirective = function(injector) {
      var directives = injector.get(this.name + 'Directive');
      if (directives.length > 1) {
        throw new Error('Only support single directive definition for: ' + this.name);
      }
      var directive = directives[0];
      if (directive.replace)
        this.notSupported('replace');
      if (directive.terminal)
        this.notSupported('terminal');
      var link = directive.link;
      if (typeof link == 'object') {
        if (link.post)
          this.notSupported('link.post');
      }
      return directive;
    };
    UpgradeNg1ComponentAdapterBuilder.prototype.notSupported = function(feature) {
      throw new Error("Upgraded directive '" + this.name + "' does not support '" + feature + "'.");
    };
    UpgradeNg1ComponentAdapterBuilder.prototype.extractBindings = function() {
      var scope = this.directive.scope;
      if (typeof scope == 'object') {
        for (var name in scope) {
          if (scope.hasOwnProperty(name)) {
            var localName = scope[name];
            var type = localName.charAt(0);
            localName = localName.substr(1) || name;
            var outputName = 'output_' + name;
            var outputNameRename = outputName + ': ' + name;
            var outputNameRenameChange = outputName + ': ' + name + 'Change';
            var inputName = 'input_' + name;
            var inputNameRename = inputName + ': ' + name;
            switch (type) {
              case '=':
                this.propertyOutputs.push(outputName);
                this.checkProperties.push(localName);
                this.outputs.push(outputName);
                this.outputsRename.push(outputNameRenameChange);
                this.propertyMap[outputName] = localName;
              case '@':
                this.inputs.push(inputName);
                this.inputsRename.push(inputNameRename);
                this.propertyMap[inputName] = localName;
                break;
              case '&':
                this.outputs.push(outputName);
                this.outputsRename.push(outputNameRename);
                this.propertyMap[outputName] = localName;
                break;
              default:
                var json = JSON.stringify(scope);
                throw new Error("Unexpected mapping '" + type + "' in '" + json + "' in '" + this.name + "' directive.");
            }
          }
        }
      }
    };
    UpgradeNg1ComponentAdapterBuilder.prototype.compileTemplate = function(compile, templateCache, httpBackend) {
      var _this = this;
      if (this.directive.template) {
        this.linkFn = compileHtml(this.directive.template);
      } else if (this.directive.templateUrl) {
        var url = this.directive.templateUrl;
        var html = templateCache.get(url);
        if (html !== undefined) {
          this.linkFn = compileHtml(html);
        } else {
          return new Promise(function(resolve, err) {
            httpBackend('GET', url, null, function(status, response) {
              if (status == 200) {
                resolve(_this.linkFn = compileHtml(templateCache.put(url, response)));
              } else {
                err("GET " + url + " returned " + status + ": " + response);
              }
            });
          });
        }
      } else {
        throw new Error("Directive '" + this.name + "' is not a component, it is missing template.");
      }
      return null;
      function compileHtml(html) {
        var div = document.createElement('div');
        div.innerHTML = html;
        return compile(div.childNodes);
      }
    };
    UpgradeNg1ComponentAdapterBuilder.resolve = function(exportedComponents, injector) {
      var promises = [];
      var compile = injector.get(constants_1.NG1_COMPILE);
      var templateCache = injector.get(constants_1.NG1_TEMPLATE_CACHE);
      var httpBackend = injector.get(constants_1.NG1_HTTP_BACKEND);
      var $controller = injector.get(constants_1.NG1_CONTROLLER);
      for (var name in exportedComponents) {
        if (exportedComponents.hasOwnProperty(name)) {
          var exportedComponent = exportedComponents[name];
          exportedComponent.directive = exportedComponent.extractDirective(injector);
          exportedComponent.$controller = $controller;
          exportedComponent.extractBindings();
          var promise = exportedComponent.compileTemplate(compile, templateCache, httpBackend);
          if (promise)
            promises.push(promise);
        }
      }
      return Promise.all(promises);
    };
    return UpgradeNg1ComponentAdapterBuilder;
  })();
  exports.UpgradeNg1ComponentAdapterBuilder = UpgradeNg1ComponentAdapterBuilder;
  var UpgradeNg1ComponentAdapter = (function() {
    function UpgradeNg1ComponentAdapter(linkFn, scope, directive, elementRef, $controller, inputs, outputs, propOuts, checkProperties, propertyMap) {
      this.directive = directive;
      this.inputs = inputs;
      this.outputs = outputs;
      this.propOuts = propOuts;
      this.checkProperties = checkProperties;
      this.propertyMap = propertyMap;
      this.destinationObj = null;
      this.checkLastValues = [];
      var element = elementRef.nativeElement;
      var childNodes = [];
      var childNode;
      while (childNode = element.firstChild) {
        element.removeChild(childNode);
        childNodes.push(childNode);
      }
      var componentScope = scope.$new(!!directive.scope);
      var $element = angular.element(element);
      var controllerType = directive.controller;
      var controller = null;
      if (controllerType) {
        var locals = {
          $scope: componentScope,
          $element: $element
        };
        controller = $controller(controllerType, locals, null, directive.controllerAs);
        $element.data(util_1.controllerKey(directive.name), controller);
      }
      var link = directive.link;
      if (typeof link == 'object')
        link = link.pre;
      if (link) {
        var attrs = NOT_SUPPORTED;
        var transcludeFn = NOT_SUPPORTED;
        var linkController = this.resolveRequired($element, directive.require);
        directive.link(componentScope, $element, attrs, linkController, transcludeFn);
      }
      this.destinationObj = directive.bindToController && controller ? controller : componentScope;
      linkFn(componentScope, function(clonedElement, scope) {
        for (var i = 0,
            ii = clonedElement.length; i < ii; i++) {
          element.appendChild(clonedElement[i]);
        }
      }, {parentBoundTranscludeFn: function(scope, cloneAttach) {
          cloneAttach(childNodes);
        }});
      for (var i = 0; i < inputs.length; i++) {
        this[inputs[i]] = null;
      }
      for (var j = 0; j < outputs.length; j++) {
        var emitter = this[outputs[j]] = new angular2_1.EventEmitter();
        this.setComponentProperty(outputs[j], (function(emitter) {
          return function(value) {
            return emitter.next(value);
          };
        })(emitter));
      }
      for (var k = 0; k < propOuts.length; k++) {
        this[propOuts[k]] = new angular2_1.EventEmitter();
        this.checkLastValues.push(INITIAL_VALUE);
      }
    }
    UpgradeNg1ComponentAdapter.prototype.onChanges = function(changes) {
      for (var name in changes) {
        if (changes.hasOwnProperty(name)) {
          var change = changes[name];
          this.setComponentProperty(name, change.currentValue);
        }
      }
    };
    UpgradeNg1ComponentAdapter.prototype.doCheck = function() {
      var count = 0;
      var destinationObj = this.destinationObj;
      var lastValues = this.checkLastValues;
      var checkProperties = this.checkProperties;
      for (var i = 0; i < checkProperties.length; i++) {
        var value = destinationObj[checkProperties[i]];
        var last = lastValues[i];
        if (value !== last) {
          if (typeof value == 'number' && isNaN(value) && typeof last == 'number' && isNaN(last)) {} else {
            var eventEmitter = this[this.propOuts[i]];
            eventEmitter.next(lastValues[i] = value);
          }
        }
      }
      return count;
    };
    UpgradeNg1ComponentAdapter.prototype.setComponentProperty = function(name, value) {
      this.destinationObj[this.propertyMap[name]] = value;
    };
    UpgradeNg1ComponentAdapter.prototype.resolveRequired = function($element, $__require) {
      if (!$__require) {
        return undefined;
      } else if (typeof $__require == 'string') {
        var name = $__require;
        var isOptional = false;
        var startParent = false;
        var searchParents = false;
        var ch;
        if (name.charAt(0) == '?') {
          isOptional = true;
          name = name.substr(1);
        }
        if (name.charAt(0) == '^') {
          searchParents = true;
          name = name.substr(1);
        }
        if (name.charAt(0) == '^') {
          startParent = true;
          name = name.substr(1);
        }
        var key = util_1.controllerKey(name);
        if (startParent)
          $element = $element.parent();
        var dep = searchParents ? $element.inheritedData(key) : $element.data(key);
        if (!dep && !isOptional) {
          throw new Error("Can not locate '" + $__require + "' in '" + this.directive.name + "'.");
        }
        return dep;
      } else if ($__require instanceof Array) {
        var deps = [];
        for (var i = 0; i < $__require.length; i++) {
          deps.push(this.resolveRequired($element, $__require[i]));
        }
        return deps;
      }
      throw new Error("Directive '" + this.directive.name + "' require syntax unrecognized: " + this.directive.require);
    };
    return UpgradeNg1ComponentAdapter;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/downgrade_ng2_adapter", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/upgrade/constants"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/constants');
  var INITIAL_VALUE = {__UNINITIALIZED__: true};
  var DowngradeNg2ComponentAdapter = (function() {
    function DowngradeNg2ComponentAdapter(id, info, element, attrs, scope, parentInjector, parse, viewManager, protoView) {
      this.id = id;
      this.info = info;
      this.element = element;
      this.attrs = attrs;
      this.scope = scope;
      this.parentInjector = parentInjector;
      this.parse = parse;
      this.viewManager = viewManager;
      this.protoView = protoView;
      this.component = null;
      this.inputChangeCount = 0;
      this.inputChanges = null;
      this.hostViewRef = null;
      this.changeDetector = null;
      this.contentInserctionPoint = null;
      this.element[0].id = id;
      this.componentScope = scope.$new();
      this.childNodes = element.contents();
    }
    DowngradeNg2ComponentAdapter.prototype.bootstrapNg2 = function() {
      var childInjector = this.parentInjector.resolveAndCreateChild([angular2_1.provide(constants_1.NG1_SCOPE, {useValue: this.componentScope})]);
      this.hostViewRef = this.viewManager.createRootHostView(this.protoView, '#' + this.id, childInjector);
      var renderer = this.hostViewRef.render;
      var hostElement = this.viewManager.getHostElement(this.hostViewRef);
      this.changeDetector = this.hostViewRef.changeDetectorRef;
      this.component = this.viewManager.getComponent(hostElement);
      this.contentInserctionPoint = renderer.rootContentInsertionPoints[0];
    };
    DowngradeNg2ComponentAdapter.prototype.setupInputs = function() {
      var _this = this;
      var attrs = this.attrs;
      var inputs = this.info.inputs;
      for (var i = 0; i < inputs.length; i++) {
        var input = inputs[i];
        var expr = null;
        if (attrs.hasOwnProperty(input.attr)) {
          var observeFn = (function(prop) {
            var prevValue = INITIAL_VALUE;
            return function(value) {
              if (_this.inputChanges !== null) {
                _this.inputChangeCount++;
                _this.inputChanges[prop] = new Ng1Change(value, prevValue === INITIAL_VALUE ? value : prevValue);
                prevValue = value;
              }
              _this.component[prop] = value;
            };
          })(input.prop);
          attrs.$observe(input.attr, observeFn);
        } else if (attrs.hasOwnProperty(input.bindAttr)) {
          expr = attrs[input.bindAttr];
        } else if (attrs.hasOwnProperty(input.bracketAttr)) {
          expr = attrs[input.bracketAttr];
        } else if (attrs.hasOwnProperty(input.bindonAttr)) {
          expr = attrs[input.bindonAttr];
        } else if (attrs.hasOwnProperty(input.bracketParenAttr)) {
          expr = attrs[input.bracketParenAttr];
        }
        if (expr != null) {
          var watchFn = (function(prop) {
            return function(value, prevValue) {
              if (_this.inputChanges != null) {
                _this.inputChangeCount++;
                _this.inputChanges[prop] = new Ng1Change(prevValue, value);
              }
              _this.component[prop] = value;
            };
          })(input.prop);
          this.componentScope.$watch(expr, watchFn);
        }
      }
      var prototype = this.info.type.prototype;
      if (prototype && prototype.onChanges) {
        this.inputChanges = {};
        this.componentScope.$watch(function() {
          return _this.inputChangeCount;
        }, function() {
          var inputChanges = _this.inputChanges;
          _this.inputChanges = {};
          _this.component.onChanges(inputChanges);
        });
      }
      this.componentScope.$watch(function() {
        return _this.changeDetector && _this.changeDetector.detectChanges();
      });
    };
    DowngradeNg2ComponentAdapter.prototype.projectContent = function() {
      var childNodes = this.childNodes;
      if (this.contentInserctionPoint) {
        var parent = this.contentInserctionPoint.parentNode;
        for (var i = 0,
            ii = childNodes.length; i < ii; i++) {
          parent.insertBefore(childNodes[i], this.contentInserctionPoint);
        }
      }
    };
    DowngradeNg2ComponentAdapter.prototype.setupOutputs = function() {
      var _this = this;
      var attrs = this.attrs;
      var outputs = this.info.outputs;
      for (var j = 0; j < outputs.length; j++) {
        var output = outputs[j];
        var expr = null;
        var assignExpr = false;
        var bindonAttr = output.bindonAttr ? output.bindonAttr.substring(0, output.bindonAttr.length - 6) : null;
        var bracketParenAttr = output.bracketParenAttr ? "[(" + output.bracketParenAttr.substring(2, output.bracketParenAttr.length - 8) + ")]" : null;
        if (attrs.hasOwnProperty(output.onAttr)) {
          expr = attrs[output.onAttr];
        } else if (attrs.hasOwnProperty(output.parenAttr)) {
          expr = attrs[output.parenAttr];
        } else if (attrs.hasOwnProperty(bindonAttr)) {
          expr = attrs[bindonAttr];
          assignExpr = true;
        } else if (attrs.hasOwnProperty(bracketParenAttr)) {
          expr = attrs[bracketParenAttr];
          assignExpr = true;
        }
        if (expr != null && assignExpr != null) {
          var getter = this.parse(expr);
          var setter = getter.assign;
          if (assignExpr && !setter) {
            throw new Error("Expression '" + expr + "' is not assignable!");
          }
          var emitter = this.component[output.prop];
          if (emitter) {
            emitter.subscribe({next: assignExpr ? (function(setter) {
                return function(value) {
                  return setter(_this.scope, value);
                };
              })(setter) : (function(getter) {
                return function(value) {
                  return getter(_this.scope, {$event: value});
                };
              })(getter)});
          } else {
            throw new Error("Missing emitter '" + output.prop + "' on component '" + this.info.selector + "'!");
          }
        }
      }
    };
    DowngradeNg2ComponentAdapter.prototype.registerCleanup = function() {
      var _this = this;
      this.element.bind('$remove', function() {
        return _this.viewManager.destroyRootHostView(_this.hostViewRef);
      });
    };
    return DowngradeNg2ComponentAdapter;
  })();
  exports.DowngradeNg2ComponentAdapter = DowngradeNg2ComponentAdapter;
  var Ng1Change = (function() {
    function Ng1Change(previousValue, currentValue) {
      this.previousValue = previousValue;
      this.currentValue = currentValue;
    }
    Ng1Change.prototype.isFirstChange = function() {
      return this.previousValue === this.currentValue;
    };
    return Ng1Change;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/constants", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.NG2_APP_VIEW_MANAGER = 'ng2.AppViewManager';
  exports.NG2_COMPILER = 'ng2.Compiler';
  exports.NG2_INJECTOR = 'ng2.Injector';
  exports.NG2_PROTO_VIEW_REF_MAP = 'ng2.ProtoViewRefMap';
  exports.NG2_ZONE = 'ng2.NgZone';
  exports.NG1_CONTROLLER = '$controller';
  exports.NG1_SCOPE = '$scope';
  exports.NG1_ROOT_SCOPE = '$rootScope';
  exports.NG1_COMPILE = '$compile';
  exports.NG1_HTTP_BACKEND = '$httpBackend';
  exports.NG1_INJECTOR = '$injector';
  exports.NG1_PARSE = '$parse';
  exports.NG1_TEMPLATE_CACHE = '$templateCache';
  exports.REQUIRE_INJECTOR = '^' + exports.NG2_INJECTOR;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/util", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function stringify(obj) {
    if (typeof obj == 'function')
      return obj.name || obj.toString();
    return '' + obj;
  }
  exports.stringify = stringify;
  function onError(e) {
    console.log(e, e.stack);
    throw e;
  }
  exports.onError = onError;
  function controllerKey(name) {
    return '$' + name + 'Controller';
  }
  exports.controllerKey = controllerKey;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/metadata", ["npm:angular2@2.0.0-alpha.46/angular2"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var COMPONENT_SELECTOR = /^[\w|-]*$/;
  var SKEWER_CASE = /-(\w)/g;
  var directiveResolver = new angular2_1.DirectiveResolver();
  function getComponentInfo(type) {
    var resolvedMetadata = directiveResolver.resolve(type);
    var selector = resolvedMetadata.selector;
    if (!selector.match(COMPONENT_SELECTOR)) {
      throw new Error('Only selectors matching element names are supported, got: ' + selector);
    }
    var selector = selector.replace(SKEWER_CASE, function(all, letter) {
      return letter.toUpperCase();
    });
    return {
      type: type,
      selector: selector,
      inputs: parseFields(resolvedMetadata.inputs),
      outputs: parseFields(resolvedMetadata.outputs)
    };
  }
  exports.getComponentInfo = getComponentInfo;
  function parseFields(names) {
    var attrProps = [];
    if (names) {
      for (var i = 0; i < names.length; i++) {
        var parts = names[i].split(':');
        var prop = parts[0].trim();
        var attr = (parts[1] || parts[0]).trim();
        var capitalAttr = attr.charAt(0).toUpperCase() + attr.substr(1);
        attrProps.push({
          prop: prop,
          attr: attr,
          bracketAttr: "[" + attr + "]",
          parenAttr: "(" + attr + ")",
          bracketParenAttr: "[(" + attr + ")]",
          onAttr: "on" + capitalAttr,
          bindAttr: "bind" + capitalAttr,
          bindonAttr: "bindon" + capitalAttr
        });
      }
    }
    return attrProps;
  }
  exports.parseFields = parseFields;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/upgrade/upgrade_adapter", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/src/core/application_common", "npm:angular2@2.0.0-alpha.46/src/core/application_ref", "npm:angular2@2.0.0-alpha.46/src/compiler/compiler", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/upgrade/metadata", "npm:angular2@2.0.0-alpha.46/src/upgrade/util", "npm:angular2@2.0.0-alpha.46/src/upgrade/constants", "npm:angular2@2.0.0-alpha.46/src/upgrade/downgrade_ng2_adapter", "npm:angular2@2.0.0-alpha.46/src/upgrade/upgrade_ng1_adapter", "npm:angular2@2.0.0-alpha.46/src/upgrade/angular_js"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var angular2_1 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var application_common_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_common');
  var application_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_ref');
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/compiler');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/metadata');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/util');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/constants');
  var downgrade_ng2_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/downgrade_ng2_adapter');
  var upgrade_ng1_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/upgrade_ng1_adapter');
  var angular = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/angular_js');
  var upgradeCount = 0;
  var UpgradeAdapter = (function() {
    function UpgradeAdapter() {
      this.idPrefix = "NG2_UPGRADE_" + upgradeCount++ + "_";
      this.upgradedComponents = [];
      this.downgradedComponents = {};
      this.providers = [];
    }
    UpgradeAdapter.prototype.downgradeNg2Component = function(type) {
      this.upgradedComponents.push(type);
      var info = metadata_1.getComponentInfo(type);
      return ng1ComponentDirective(info, "" + this.idPrefix + info.selector + "_c");
    };
    UpgradeAdapter.prototype.upgradeNg1Component = function(name) {
      if (this.downgradedComponents.hasOwnProperty(name)) {
        return this.downgradedComponents[name].type;
      } else {
        return (this.downgradedComponents[name] = new upgrade_ng1_adapter_1.UpgradeNg1ComponentAdapterBuilder(name)).type;
      }
    };
    UpgradeAdapter.prototype.bootstrap = function(element, modules, config) {
      var _this = this;
      var upgrade = new UpgradeAdapterRef();
      var ng1Injector = null;
      var platformRef = angular2_1.platform();
      var applicationRef = platformRef.application([application_ref_1.applicationCommonProviders(), application_common_1.applicationDomProviders(), compiler_1.compilerProviders(), angular2_1.provide(constants_1.NG1_INJECTOR, {useFactory: function() {
          return ng1Injector;
        }}), angular2_1.provide(constants_1.NG1_COMPILE, {useFactory: function() {
          return ng1Injector.get(constants_1.NG1_COMPILE);
        }}), this.providers]);
      var injector = applicationRef.injector;
      var ngZone = injector.get(angular2_1.NgZone);
      var compiler = injector.get(angular2_1.Compiler);
      var delayApplyExps = [];
      var original$applyFn;
      var rootScopePrototype;
      var rootScope;
      var protoViewRefMap = {};
      var ng1Module = angular.module(this.idPrefix, modules);
      var ng1compilePromise = null;
      ng1Module.value(constants_1.NG2_INJECTOR, injector).value(constants_1.NG2_ZONE, ngZone).value(constants_1.NG2_COMPILER, compiler).value(constants_1.NG2_PROTO_VIEW_REF_MAP, protoViewRefMap).value(constants_1.NG2_APP_VIEW_MANAGER, injector.get(angular2_1.AppViewManager)).config(['$provide', function(provide) {
        provide.decorator(constants_1.NG1_ROOT_SCOPE, ['$delegate', function(rootScopeDelegate) {
          rootScopePrototype = rootScopeDelegate.constructor.prototype;
          if (rootScopePrototype.hasOwnProperty('$apply')) {
            original$applyFn = rootScopePrototype.$apply;
            rootScopePrototype.$apply = function(exp) {
              return delayApplyExps.push(exp);
            };
          } else {
            throw new Error("Failed to find '$apply' on '$rootScope'!");
          }
          return rootScope = rootScopeDelegate;
        }]);
      }]).run(['$injector', '$rootScope', function(injector, rootScope) {
        ng1Injector = injector;
        async_1.ObservableWrapper.subscribe(ngZone.onTurnDone, function(_) {
          ngZone.run(function() {
            return rootScope.$apply();
          });
        });
        ng1compilePromise = upgrade_ng1_adapter_1.UpgradeNg1ComponentAdapterBuilder.resolve(_this.downgradedComponents, injector);
      }]);
      angular.element(element).data(util_1.controllerKey(constants_1.NG2_INJECTOR), injector);
      ngZone.run(function() {
        angular.bootstrap(element, [_this.idPrefix], config);
      });
      Promise.all([this.compileNg2Components(compiler, protoViewRefMap), ng1compilePromise]).then(function() {
        ngZone.run(function() {
          if (rootScopePrototype) {
            rootScopePrototype.$apply = original$applyFn;
            while (delayApplyExps.length) {
              rootScope.$apply(delayApplyExps.shift());
            }
            upgrade._bootstrapDone(applicationRef, ng1Injector);
            rootScopePrototype = null;
          }
        });
      }, util_1.onError);
      return upgrade;
    };
    UpgradeAdapter.prototype.addProvider = function(provider) {
      this.providers.push(provider);
    };
    UpgradeAdapter.prototype.upgradeNg1Provider = function(name, options) {
      var token = options && options.asToken || name;
      this.providers.push(angular2_1.provide(token, {
        useFactory: function(ng1Injector) {
          return ng1Injector.get(name);
        },
        deps: [constants_1.NG1_INJECTOR]
      }));
    };
    UpgradeAdapter.prototype.downgradeNg2Provider = function(token) {
      var factory = function(injector) {
        return injector.get(token);
      };
      factory.$inject = [constants_1.NG2_INJECTOR];
      return factory;
    };
    UpgradeAdapter.prototype.compileNg2Components = function(compiler, protoViewRefMap) {
      var _this = this;
      var promises = [];
      var types = this.upgradedComponents;
      for (var i = 0; i < types.length; i++) {
        promises.push(compiler.compileInHost(types[i]));
      }
      return Promise.all(promises).then(function(protoViews) {
        var types = _this.upgradedComponents;
        for (var i = 0; i < protoViews.length; i++) {
          protoViewRefMap[metadata_1.getComponentInfo(types[i]).selector] = protoViews[i];
        }
        return protoViewRefMap;
      }, util_1.onError);
    };
    return UpgradeAdapter;
  })();
  exports.UpgradeAdapter = UpgradeAdapter;
  function ng1ComponentDirective(info, idPrefix) {
    directiveFactory.$inject = [constants_1.NG2_PROTO_VIEW_REF_MAP, constants_1.NG2_APP_VIEW_MANAGER, constants_1.NG1_PARSE];
    function directiveFactory(protoViewRefMap, viewManager, parse) {
      var protoView = protoViewRefMap[info.selector];
      if (!protoView)
        throw new Error('Expecting ProtoViewRef for: ' + info.selector);
      var idCount = 0;
      return {
        restrict: 'E',
        require: constants_1.REQUIRE_INJECTOR,
        link: {post: function(scope, element, attrs, parentInjector, transclude) {
            var domElement = element[0];
            var facade = new downgrade_ng2_adapter_1.DowngradeNg2ComponentAdapter(idPrefix + (idCount++), info, element, attrs, scope, parentInjector, parse, viewManager, protoView);
            facade.setupInputs();
            facade.bootstrapNg2();
            facade.projectContent();
            facade.setupOutputs();
            facade.registerCleanup();
          }}
      };
    }
    return directiveFactory;
  }
  var UpgradeAdapterRef = (function() {
    function UpgradeAdapterRef() {
      this._readyFn = null;
      this.ng1RootScope = null;
      this.ng1Injector = null;
      this.ng2ApplicationRef = null;
      this.ng2Injector = null;
    }
    UpgradeAdapterRef.prototype._bootstrapDone = function(applicationRef, ng1Injector) {
      this.ng2ApplicationRef = applicationRef;
      this.ng2Injector = applicationRef.injector;
      this.ng1Injector = ng1Injector;
      this.ng1RootScope = ng1Injector.get(constants_1.NG1_ROOT_SCOPE);
      this._readyFn && this._readyFn(this);
    };
    UpgradeAdapterRef.prototype.ready = function(fn) {
      this._readyFn = fn;
    };
    UpgradeAdapterRef.prototype.dispose = function() {
      this.ng1Injector.get(constants_1.NG1_ROOT_SCOPE).$destroy();
      this.ng2ApplicationRef.dispose();
    };
    return UpgradeAdapterRef;
  })();
  exports.UpgradeAdapterRef = UpgradeAdapterRef;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/upgrade", ["npm:angular2@2.0.0-alpha.46/src/upgrade/upgrade_adapter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var upgrade_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/upgrade/upgrade_adapter');
  exports.UpgradeAdapter = upgrade_adapter_1.UpgradeAdapter;
  exports.UpgradeAdapterRef = upgrade_adapter_1.UpgradeAdapterRef;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/bootstrap", ["npm:angular2@2.0.0-alpha.46/src/core/bootstrap"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var bootstrap_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/bootstrap');
  exports.bootstrap = bootstrap_1.bootstrap;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/lifecycle_hooks", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/profile", ["npm:angular2@2.0.0-alpha.46/src/core/profile/profile"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var profile_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/profile');
  exports.wtfCreateScope = profile_1.wtfCreateScope;
  exports.wtfLeave = profile_1.wtfLeave;
  exports.wtfStartTimeRange = profile_1.wtfStartTimeRange;
  exports.wtfEndTimeRange = profile_1.wtfEndTimeRange;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/dev_mode", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.enableDevMode = lang_1.enableDevMode;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element_view_listener", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/render/api", "npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var view_listener_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var api_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/api');
  var debug_element_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element');
  var NG_ID_PROPERTY = 'ngid';
  var INSPECT_GLOBAL_NAME = 'ng.probe';
  var NG_ID_SEPARATOR = '#';
  var _allIdsByView = new collection_1.Map();
  var _allViewsById = new collection_1.Map();
  var _nextId = 0;
  function _setElementId(element, indices) {
    if (lang_1.isPresent(element)) {
      dom_adapter_1.DOM.setData(element, NG_ID_PROPERTY, indices.join(NG_ID_SEPARATOR));
    }
  }
  function _getElementId(element) {
    var elId = dom_adapter_1.DOM.getData(element, NG_ID_PROPERTY);
    if (lang_1.isPresent(elId)) {
      return elId.split(NG_ID_SEPARATOR).map(function(partStr) {
        return lang_1.NumberWrapper.parseInt(partStr, 10);
      });
    } else {
      return null;
    }
  }
  function inspectNativeElement(element) {
    var elId = _getElementId(element);
    if (lang_1.isPresent(elId)) {
      var view = _allViewsById.get(elId[0]);
      if (lang_1.isPresent(view)) {
        return new debug_element_1.DebugElement_(view, elId[1]);
      }
    }
    return null;
  }
  exports.inspectNativeElement = inspectNativeElement;
  var DebugElementViewListener = (function() {
    function DebugElementViewListener(_renderer) {
      this._renderer = _renderer;
      dom_adapter_1.DOM.setGlobalVar(INSPECT_GLOBAL_NAME, inspectNativeElement);
    }
    DebugElementViewListener.prototype.onViewCreated = function(view) {
      var viewId = _nextId++;
      _allViewsById.set(viewId, view);
      _allIdsByView.set(view, viewId);
      for (var i = 0; i < view.elementRefs.length; i++) {
        var el = view.elementRefs[i];
        _setElementId(this._renderer.getNativeElementSync(el), [viewId, i]);
      }
    };
    DebugElementViewListener.prototype.onViewDestroyed = function(view) {
      var viewId = _allIdsByView.get(view);
      _allIdsByView.delete(view);
      _allViewsById.delete(viewId);
    };
    DebugElementViewListener = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [api_1.Renderer])], DebugElementViewListener);
    return DebugElementViewListener;
  })();
  exports.DebugElementViewListener = DebugElementViewListener;
  exports.ELEMENT_PROBE_PROVIDERS = lang_1.CONST_EXPR([DebugElementViewListener, lang_1.CONST_EXPR(new di_1.Provider(view_listener_1.AppViewListener, {useExisting: DebugElementViewListener}))]);
  exports.ELEMENT_PROBE_BINDINGS = exports.ELEMENT_PROBE_PROVIDERS;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/linker/view", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view');
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var DebugElement = (function() {
    function DebugElement() {}
    Object.defineProperty(DebugElement.prototype, "componentInstance", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(DebugElement.prototype, "nativeElement", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(DebugElement.prototype, "elementRef", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(DebugElement.prototype, "children", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(DebugElement.prototype, "componentViewChildren", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    DebugElement.prototype.query = function(predicate, scope) {
      if (scope === void 0) {
        scope = Scope.all;
      }
      var results = this.queryAll(predicate, scope);
      return results.length > 0 ? results[0] : null;
    };
    DebugElement.prototype.queryAll = function(predicate, scope) {
      if (scope === void 0) {
        scope = Scope.all;
      }
      var elementsInScope = scope(this);
      return elementsInScope.filter(predicate);
    };
    return DebugElement;
  })();
  exports.DebugElement = DebugElement;
  var DebugElement_ = (function(_super) {
    __extends(DebugElement_, _super);
    function DebugElement_(_parentView, _boundElementIndex) {
      _super.call(this);
      this._parentView = _parentView;
      this._boundElementIndex = _boundElementIndex;
      this._elementInjector = this._parentView.elementInjectors[this._boundElementIndex];
    }
    Object.defineProperty(DebugElement_.prototype, "componentInstance", {
      get: function() {
        if (!lang_1.isPresent(this._elementInjector)) {
          return null;
        }
        return this._elementInjector.getComponent();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugElement_.prototype, "nativeElement", {
      get: function() {
        return this.elementRef.nativeElement;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugElement_.prototype, "elementRef", {
      get: function() {
        return this._parentView.elementRefs[this._boundElementIndex];
      },
      enumerable: true,
      configurable: true
    });
    DebugElement_.prototype.getDirectiveInstance = function(directiveIndex) {
      return this._elementInjector.getDirectiveAtIndex(directiveIndex);
    };
    Object.defineProperty(DebugElement_.prototype, "children", {
      get: function() {
        return this._getChildElements(this._parentView, this._boundElementIndex);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DebugElement_.prototype, "componentViewChildren", {
      get: function() {
        var shadowView = this._parentView.getNestedView(this._boundElementIndex);
        if (!lang_1.isPresent(shadowView) || shadowView.proto.type !== view_1.ViewType.COMPONENT) {
          return [];
        }
        return this._getChildElements(shadowView, null);
      },
      enumerable: true,
      configurable: true
    });
    DebugElement_.prototype.triggerEventHandler = function(eventName, eventObj) {
      this._parentView.triggerEventHandlers(eventName, eventObj, this._boundElementIndex);
    };
    DebugElement_.prototype.hasDirective = function(type) {
      if (!lang_1.isPresent(this._elementInjector)) {
        return false;
      }
      return this._elementInjector.hasDirective(type);
    };
    DebugElement_.prototype.inject = function(type) {
      if (!lang_1.isPresent(this._elementInjector)) {
        return null;
      }
      return this._elementInjector.get(type);
    };
    DebugElement_.prototype.getLocal = function(name) {
      return this._parentView.locals.get(name);
    };
    DebugElement_.prototype._getChildElements = function(view, parentBoundElementIndex) {
      var _this = this;
      var els = [];
      var parentElementBinder = null;
      if (lang_1.isPresent(parentBoundElementIndex)) {
        parentElementBinder = view.proto.elementBinders[parentBoundElementIndex - view.elementOffset];
      }
      for (var i = 0; i < view.proto.elementBinders.length; ++i) {
        var binder = view.proto.elementBinders[i];
        if (binder.parent == parentElementBinder) {
          els.push(new DebugElement_(view, view.elementOffset + i));
          var views = view.viewContainers[view.elementOffset + i];
          if (lang_1.isPresent(views)) {
            views.views.forEach(function(nextView) {
              els = els.concat(_this._getChildElements(nextView, null));
            });
          }
        }
      }
      return els;
    };
    return DebugElement_;
  })(DebugElement);
  exports.DebugElement_ = DebugElement_;
  function inspectElement(elementRef) {
    return new DebugElement_(view_ref_1.internalView(elementRef.parentView), elementRef.boundElementIndex);
  }
  exports.inspectElement = inspectElement;
  function asNativeElements(arr) {
    return arr.map(function(debugEl) {
      return debugEl.nativeElement;
    });
  }
  exports.asNativeElements = asNativeElements;
  var Scope = (function() {
    function Scope() {}
    Scope.all = function(debugElement) {
      var scope = [];
      scope.push(debugElement);
      debugElement.children.forEach(function(child) {
        return scope = scope.concat(Scope.all(child));
      });
      debugElement.componentViewChildren.forEach(function(child) {
        return scope = scope.concat(Scope.all(child));
      });
      return scope;
    };
    Scope.light = function(debugElement) {
      var scope = [];
      debugElement.children.forEach(function(child) {
        scope.push(child);
        scope = scope.concat(Scope.light(child));
      });
      return scope;
    };
    Scope.view = function(debugElement) {
      var scope = [];
      debugElement.componentViewChildren.forEach(function(child) {
        scope.push(child);
        scope = scope.concat(Scope.light(child));
      });
      return scope;
    };
    return Scope;
  })();
  exports.Scope = Scope;
  var By = (function() {
    function By() {}
    By.all = function() {
      return function(debugElement) {
        return true;
      };
    };
    By.css = function(selector) {
      return function(debugElement) {
        return lang_1.isPresent(debugElement.nativeElement) ? dom_adapter_1.DOM.elementMatches(debugElement.nativeElement, selector) : false;
      };
    };
    By.directive = function(type) {
      return function(debugElement) {
        return debugElement.hasDirective(type);
      };
    };
    return By;
  })();
  exports.By = By;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/debug", ["npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element", "npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element_view_listener"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var debug_element_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element');
  exports.DebugElement = debug_element_1.DebugElement;
  exports.asNativeElements = debug_element_1.asNativeElements;
  exports.By = debug_element_1.By;
  exports.Scope = debug_element_1.Scope;
  exports.inspectElement = debug_element_1.inspectElement;
  var debug_element_view_listener_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/debug/debug_element_view_listener');
  exports.inspectNativeElement = debug_element_view_listener_1.inspectNativeElement;
  exports.ELEMENT_PROBE_PROVIDERS = debug_element_view_listener_1.ELEMENT_PROBE_PROVIDERS;
  exports.ELEMENT_PROBE_BINDINGS = debug_element_view_listener_1.ELEMENT_PROBE_BINDINGS;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/zone", ["npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var ng_zone_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone');
  exports.NgZone = ng_zone_1.NgZone;
  exports.NgZoneError = ng_zone_1.NgZoneError;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/services/title", ["npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var Title = (function() {
    function Title() {}
    Title.prototype.getTitle = function() {
      return dom_adapter_1.DOM.getTitle();
    };
    Title.prototype.setTitle = function(newTitle) {
      dom_adapter_1.DOM.setTitle(newTitle);
    };
    return Title;
  })();
  exports.Title = Title;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/services", ["npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url", "npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver", "npm:angular2@2.0.0-alpha.46/src/core/services/title"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var app_root_url_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url');
  exports.AppRootUrl = app_root_url_1.AppRootUrl;
  var url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver');
  exports.UrlResolver = url_resolver_1.UrlResolver;
  var title_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/services/title');
  exports.Title = title_1.Title;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/bootstrap", ["npm:angular2@2.0.0-alpha.46/src/core/application"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var application_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application');
  exports.bootstrap = application_1.bootstrap;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/application_ref", ["npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/application_tokens", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/testability/testability", "npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_pool", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager_utils", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener", "npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/pipe_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/compiler", "npm:angular2@2.0.0-alpha.46/src/core/profile/profile", "npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes", "npm:angular2@2.0.0-alpha.46/common"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var ng_zone_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var application_tokens_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_tokens');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var testability_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/testability/testability');
  var dynamic_component_loader_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var view_pool_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_pool');
  var view_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager');
  var view_manager_utils_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager_utils');
  var view_listener_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener');
  var proto_view_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory');
  var view_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver');
  var directive_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver');
  var pipe_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/pipe_resolver');
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/compiler');
  var dynamic_component_loader_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader');
  var view_manager_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager');
  var compiler_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/compiler');
  var profile_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/profile');
  var platform_directives_and_pipes_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes');
  var lang_2 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var common_1 = $__require('npm:angular2@2.0.0-alpha.46/common');
  function platformProviders() {
    return [di_1.provide(reflection_1.Reflector, {useValue: reflection_1.reflector}), testability_1.TestabilityRegistry];
  }
  exports.platformProviders = platformProviders;
  function _componentProviders(appComponentType) {
    return [di_1.provide(application_tokens_1.APP_COMPONENT, {useValue: appComponentType}), di_1.provide(application_tokens_1.APP_COMPONENT_REF_PROMISE, {
      useFactory: function(dynamicComponentLoader, appRef, injector) {
        var ref;
        return dynamicComponentLoader.loadAsRoot(appComponentType, null, injector, function() {
          appRef._unloadComponent(ref);
        }).then(function(componentRef) {
          ref = componentRef;
          if (lang_1.isPresent(componentRef.location.nativeElement)) {
            injector.get(testability_1.TestabilityRegistry).registerApplication(componentRef.location.nativeElement, injector.get(testability_1.Testability));
          }
          return componentRef;
        });
      },
      deps: [dynamic_component_loader_1.DynamicComponentLoader, ApplicationRef, di_1.Injector]
    }), di_1.provide(appComponentType, {
      useFactory: function(p) {
        return p.then(function(ref) {
          return ref.instance;
        });
      },
      deps: [application_tokens_1.APP_COMPONENT_REF_PROMISE]
    })];
  }
  function applicationCommonProviders() {
    return [di_1.provide(compiler_1.Compiler, {useClass: compiler_2.Compiler_}), application_tokens_1.APP_ID_RANDOM_PROVIDER, view_pool_1.AppViewPool, di_1.provide(view_pool_1.APP_VIEW_POOL_CAPACITY, {useValue: 10000}), di_1.provide(view_manager_1.AppViewManager, {useClass: view_manager_2.AppViewManager_}), view_manager_utils_1.AppViewManagerUtils, view_listener_1.AppViewListener, proto_view_factory_1.ProtoViewFactory, view_resolver_1.ViewResolver, di_1.provide(change_detection_1.IterableDiffers, {useValue: change_detection_1.defaultIterableDiffers}), di_1.provide(change_detection_1.KeyValueDiffers, {useValue: change_detection_1.defaultKeyValueDiffers}), directive_resolver_1.DirectiveResolver, pipe_resolver_1.PipeResolver, di_1.provide(platform_directives_and_pipes_1.PLATFORM_PIPES, {
      useValue: common_1.COMMON_PIPES,
      multi: true
    }), di_1.provide(platform_directives_and_pipes_1.PLATFORM_DIRECTIVES, {
      useValue: common_1.COMMON_DIRECTIVES,
      multi: true
    }), di_1.provide(dynamic_component_loader_1.DynamicComponentLoader, {useClass: dynamic_component_loader_2.DynamicComponentLoader_})];
  }
  exports.applicationCommonProviders = applicationCommonProviders;
  function createNgZone() {
    return new ng_zone_1.NgZone({enableLongStackTrace: lang_1.assertionsEnabled()});
  }
  exports.createNgZone = createNgZone;
  var _platform;
  function platformCommon(providers, initializer) {
    lang_2.lockDevMode();
    if (lang_1.isPresent(_platform)) {
      if (lang_1.isBlank(providers)) {
        return _platform;
      }
      throw "platform() can only be called once per page";
    }
    if (lang_1.isPresent(initializer)) {
      initializer();
    }
    if (lang_1.isBlank(providers)) {
      providers = platformProviders();
    }
    _platform = new PlatformRef_(di_1.Injector.resolveAndCreate(providers), function() {
      _platform = null;
    });
    return _platform;
  }
  exports.platformCommon = platformCommon;
  var PlatformRef = (function() {
    function PlatformRef() {}
    Object.defineProperty(PlatformRef.prototype, "injector", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return PlatformRef;
  })();
  exports.PlatformRef = PlatformRef;
  var PlatformRef_ = (function(_super) {
    __extends(PlatformRef_, _super);
    function PlatformRef_(_injector, _dispose) {
      _super.call(this);
      this._injector = _injector;
      this._dispose = _dispose;
      this._applications = [];
      this._disposeListeners = [];
    }
    PlatformRef_.prototype.registerDisposeListener = function(dispose) {
      this._disposeListeners.push(dispose);
    };
    Object.defineProperty(PlatformRef_.prototype, "injector", {
      get: function() {
        return this._injector;
      },
      enumerable: true,
      configurable: true
    });
    PlatformRef_.prototype.application = function(providers) {
      var app = this._initApp(createNgZone(), providers);
      return app;
    };
    PlatformRef_.prototype.asyncApplication = function(bindingFn) {
      var _this = this;
      var zone = createNgZone();
      var completer = async_1.PromiseWrapper.completer();
      zone.run(function() {
        async_1.PromiseWrapper.then(bindingFn(zone), function(providers) {
          completer.resolve(_this._initApp(zone, providers));
        });
      });
      return completer.promise;
    };
    PlatformRef_.prototype._initApp = function(zone, providers) {
      var _this = this;
      var injector;
      var app;
      zone.run(function() {
        providers.push(di_1.provide(ng_zone_1.NgZone, {useValue: zone}));
        providers.push(di_1.provide(ApplicationRef, {
          useFactory: function() {
            return app;
          },
          deps: []
        }));
        var exceptionHandler;
        try {
          injector = _this.injector.resolveAndCreateChild(providers);
          exceptionHandler = injector.get(exceptions_1.ExceptionHandler);
          zone.overrideOnErrorHandler(function(e, s) {
            return exceptionHandler.call(e, s);
          });
        } catch (e) {
          if (lang_1.isPresent(exceptionHandler)) {
            exceptionHandler.call(e, e.stack);
          } else {
            dom_adapter_1.DOM.logError(e);
          }
        }
      });
      app = new ApplicationRef_(this, zone, injector);
      this._applications.push(app);
      return app;
    };
    PlatformRef_.prototype.dispose = function() {
      this._applications.forEach(function(app) {
        return app.dispose();
      });
      this._disposeListeners.forEach(function(dispose) {
        return dispose();
      });
      this._dispose();
    };
    PlatformRef_.prototype._applicationDisposed = function(app) {
      collection_1.ListWrapper.remove(this._applications, app);
    };
    return PlatformRef_;
  })(PlatformRef);
  exports.PlatformRef_ = PlatformRef_;
  var ApplicationRef = (function() {
    function ApplicationRef() {}
    Object.defineProperty(ApplicationRef.prototype, "injector", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ApplicationRef.prototype, "zone", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ApplicationRef.prototype, "componentTypes", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return ApplicationRef;
  })();
  exports.ApplicationRef = ApplicationRef;
  var ApplicationRef_ = (function(_super) {
    __extends(ApplicationRef_, _super);
    function ApplicationRef_(_platform, _zone, _injector) {
      var _this = this;
      _super.call(this);
      this._platform = _platform;
      this._zone = _zone;
      this._injector = _injector;
      this._bootstrapListeners = [];
      this._disposeListeners = [];
      this._rootComponents = [];
      this._rootComponentTypes = [];
      this._changeDetectorRefs = [];
      this._runningTick = false;
      this._enforceNoNewChanges = false;
      if (lang_1.isPresent(this._zone)) {
        async_1.ObservableWrapper.subscribe(this._zone.onTurnDone, function(_) {
          _this._zone.run(function() {
            _this.tick();
          });
        });
      }
      this._enforceNoNewChanges = lang_1.assertionsEnabled();
    }
    ApplicationRef_.prototype.registerBootstrapListener = function(listener) {
      this._bootstrapListeners.push(listener);
    };
    ApplicationRef_.prototype.registerDisposeListener = function(dispose) {
      this._disposeListeners.push(dispose);
    };
    ApplicationRef_.prototype.registerChangeDetector = function(changeDetector) {
      this._changeDetectorRefs.push(changeDetector);
    };
    ApplicationRef_.prototype.unregisterChangeDetector = function(changeDetector) {
      collection_1.ListWrapper.remove(this._changeDetectorRefs, changeDetector);
    };
    ApplicationRef_.prototype.bootstrap = function(componentType, providers) {
      var _this = this;
      var completer = async_1.PromiseWrapper.completer();
      this._zone.run(function() {
        var componentProviders = _componentProviders(componentType);
        if (lang_1.isPresent(providers)) {
          componentProviders.push(providers);
        }
        var exceptionHandler = _this._injector.get(exceptions_1.ExceptionHandler);
        _this._rootComponentTypes.push(componentType);
        try {
          var injector = _this._injector.resolveAndCreateChild(componentProviders);
          var compRefToken = injector.get(application_tokens_1.APP_COMPONENT_REF_PROMISE);
          var tick = function(componentRef) {
            _this._loadComponent(componentRef);
            completer.resolve(componentRef);
          };
          var tickResult = async_1.PromiseWrapper.then(compRefToken, tick);
          async_1.PromiseWrapper.then(tickResult, function(_) {});
          async_1.PromiseWrapper.then(tickResult, null, function(err, stackTrace) {
            return completer.reject(err, stackTrace);
          });
        } catch (e) {
          exceptionHandler.call(e, e.stack);
          completer.reject(e, e.stack);
        }
      });
      return completer.promise;
    };
    ApplicationRef_.prototype._loadComponent = function(ref) {
      var appChangeDetector = view_ref_1.internalView(ref.hostView).changeDetector;
      this._changeDetectorRefs.push(appChangeDetector.ref);
      this.tick();
      this._rootComponents.push(ref);
      this._bootstrapListeners.forEach(function(listener) {
        return listener(ref);
      });
    };
    ApplicationRef_.prototype._unloadComponent = function(ref) {
      if (!collection_1.ListWrapper.contains(this._rootComponents, ref)) {
        return;
      }
      this.unregisterChangeDetector(view_ref_1.internalView(ref.hostView).changeDetector.ref);
      collection_1.ListWrapper.remove(this._rootComponents, ref);
    };
    Object.defineProperty(ApplicationRef_.prototype, "injector", {
      get: function() {
        return this._injector;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ApplicationRef_.prototype, "zone", {
      get: function() {
        return this._zone;
      },
      enumerable: true,
      configurable: true
    });
    ApplicationRef_.prototype.tick = function() {
      if (this._runningTick) {
        throw new exceptions_1.BaseException("ApplicationRef.tick is called recursively");
      }
      var s = ApplicationRef_._tickScope();
      try {
        this._runningTick = true;
        this._changeDetectorRefs.forEach(function(detector) {
          return detector.detectChanges();
        });
        if (this._enforceNoNewChanges) {
          this._changeDetectorRefs.forEach(function(detector) {
            return detector.checkNoChanges();
          });
        }
      } finally {
        this._runningTick = false;
        profile_1.wtfLeave(s);
      }
    };
    ApplicationRef_.prototype.dispose = function() {
      this._rootComponents.forEach(function(ref) {
        return ref.dispose();
      });
      this._disposeListeners.forEach(function(dispose) {
        return dispose();
      });
      this._platform._applicationDisposed(this);
    };
    Object.defineProperty(ApplicationRef_.prototype, "componentTypes", {
      get: function() {
        return this._rootComponentTypes;
      },
      enumerable: true,
      configurable: true
    });
    ApplicationRef_._tickScope = profile_1.wtfCreateScope('ApplicationRef#tick()');
    return ApplicationRef_;
  })(ApplicationRef);
  exports.ApplicationRef_ = ApplicationRef_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/profile/wtf_init", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function wtfInit() {}
  exports.wtfInit = wtfInit;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/platform_bindings", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  exports.EXCEPTION_PROVIDER = di_1.provide(exceptions_1.ExceptionHandler, {
    useFactory: function() {
      return new exceptions_1.ExceptionHandler(dom_adapter_1.DOM, false);
    },
    deps: []
  });
  exports.EXCEPTION_BINDING = exports.EXCEPTION_PROVIDER;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/hammer_common", ["npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var event_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var _eventNames = {
    'pan': true,
    'panstart': true,
    'panmove': true,
    'panend': true,
    'pancancel': true,
    'panleft': true,
    'panright': true,
    'panup': true,
    'pandown': true,
    'pinch': true,
    'pinchstart': true,
    'pinchmove': true,
    'pinchend': true,
    'pinchcancel': true,
    'pinchin': true,
    'pinchout': true,
    'press': true,
    'pressup': true,
    'rotate': true,
    'rotatestart': true,
    'rotatemove': true,
    'rotateend': true,
    'rotatecancel': true,
    'swipe': true,
    'swipeleft': true,
    'swiperight': true,
    'swipeup': true,
    'swipedown': true,
    'tap': true
  };
  var HammerGesturesPluginCommon = (function(_super) {
    __extends(HammerGesturesPluginCommon, _super);
    function HammerGesturesPluginCommon() {
      _super.call(this);
    }
    HammerGesturesPluginCommon.prototype.supports = function(eventName) {
      eventName = eventName.toLowerCase();
      return collection_1.StringMapWrapper.contains(_eventNames, eventName);
    };
    return HammerGesturesPluginCommon;
  })(event_manager_1.EventManagerPlugin);
  exports.HammerGesturesPluginCommon = HammerGesturesPluginCommon;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/hammer_gestures", ["npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/hammer_common", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var hammer_common_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/hammer_common');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var HammerGesturesPlugin = (function(_super) {
    __extends(HammerGesturesPlugin, _super);
    function HammerGesturesPlugin() {
      _super.apply(this, arguments);
    }
    HammerGesturesPlugin.prototype.supports = function(eventName) {
      if (!_super.prototype.supports.call(this, eventName))
        return false;
      if (!lang_1.isPresent(window['Hammer'])) {
        throw new exceptions_1.BaseException("Hammer.js is not loaded, can not bind " + eventName + " event");
      }
      return true;
    };
    HammerGesturesPlugin.prototype.addEventListener = function(element, eventName, handler) {
      var zone = this.manager.getZone();
      eventName = eventName.toLowerCase();
      zone.runOutsideAngular(function() {
        var mc = new Hammer(element);
        mc.get('pinch').set({enable: true});
        mc.get('rotate').set({enable: true});
        mc.on(eventName, function(eventObj) {
          zone.run(function() {
            handler(eventObj);
          });
        });
      });
    };
    HammerGesturesPlugin = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], HammerGesturesPlugin);
    return HammerGesturesPlugin;
  })(hammer_common_1.HammerGesturesPluginCommon);
  exports.HammerGesturesPlugin = HammerGesturesPlugin;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/key_events", ["npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.46/src/core/di", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var __extends = (this && this.__extends) || function(d, b) {
      for (var p in b)
        if (b.hasOwnProperty(p))
          d[p] = b[p];
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
    var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        return Reflect.decorate(decorators, target, key, desc);
      switch (arguments.length) {
        case 2:
          return decorators.reduceRight(function(o, d) {
            return (d && d(o)) || o;
          }, target);
        case 3:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key)), void 0;
          }, void 0);
        case 4:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key, o)) || o;
          }, desc);
      }
    };
    var __metadata = (this && this.__metadata) || function(k, v) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
    };
    var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var event_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager');
    var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
    var modifierKeys = ['alt', 'control', 'meta', 'shift'];
    var modifierKeyGetters = {
      'alt': function(event) {
        return event.altKey;
      },
      'control': function(event) {
        return event.ctrlKey;
      },
      'meta': function(event) {
        return event.metaKey;
      },
      'shift': function(event) {
        return event.shiftKey;
      }
    };
    var KeyEventsPlugin = (function(_super) {
      __extends(KeyEventsPlugin, _super);
      function KeyEventsPlugin() {
        _super.call(this);
      }
      KeyEventsPlugin.prototype.supports = function(eventName) {
        return lang_1.isPresent(KeyEventsPlugin.parseEventName(eventName));
      };
      KeyEventsPlugin.prototype.addEventListener = function(element, eventName, handler) {
        var parsedEvent = KeyEventsPlugin.parseEventName(eventName);
        var outsideHandler = KeyEventsPlugin.eventCallback(element, collection_1.StringMapWrapper.get(parsedEvent, 'fullKey'), handler, this.manager.getZone());
        this.manager.getZone().runOutsideAngular(function() {
          dom_adapter_1.DOM.on(element, collection_1.StringMapWrapper.get(parsedEvent, 'domEventName'), outsideHandler);
        });
      };
      KeyEventsPlugin.parseEventName = function(eventName) {
        var parts = eventName.toLowerCase().split('.');
        var domEventName = parts.shift();
        if ((parts.length === 0) || !(lang_1.StringWrapper.equals(domEventName, 'keydown') || lang_1.StringWrapper.equals(domEventName, 'keyup'))) {
          return null;
        }
        var key = KeyEventsPlugin._normalizeKey(parts.pop());
        var fullKey = '';
        modifierKeys.forEach(function(modifierName) {
          if (collection_1.ListWrapper.contains(parts, modifierName)) {
            collection_1.ListWrapper.remove(parts, modifierName);
            fullKey += modifierName + '.';
          }
        });
        fullKey += key;
        if (parts.length != 0 || key.length === 0) {
          return null;
        }
        var result = collection_1.StringMapWrapper.create();
        collection_1.StringMapWrapper.set(result, 'domEventName', domEventName);
        collection_1.StringMapWrapper.set(result, 'fullKey', fullKey);
        return result;
      };
      KeyEventsPlugin.getEventFullKey = function(event) {
        var fullKey = '';
        var key = dom_adapter_1.DOM.getEventKey(event);
        key = key.toLowerCase();
        if (lang_1.StringWrapper.equals(key, ' ')) {
          key = 'space';
        } else if (lang_1.StringWrapper.equals(key, '.')) {
          key = 'dot';
        }
        modifierKeys.forEach(function(modifierName) {
          if (modifierName != key) {
            var modifierGetter = collection_1.StringMapWrapper.get(modifierKeyGetters, modifierName);
            if (modifierGetter(event)) {
              fullKey += modifierName + '.';
            }
          }
        });
        fullKey += key;
        return fullKey;
      };
      KeyEventsPlugin.eventCallback = function(element, fullKey, handler, zone) {
        return function(event) {
          if (lang_1.StringWrapper.equals(KeyEventsPlugin.getEventFullKey(event), fullKey)) {
            zone.run(function() {
              return handler(event);
            });
          }
        };
      };
      KeyEventsPlugin._normalizeKey = function(keyName) {
        switch (keyName) {
          case 'esc':
            return 'escape';
          default:
            return keyName;
        }
      };
      KeyEventsPlugin = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], KeyEventsPlugin);
      return KeyEventsPlugin;
    })(event_manager_1.EventManagerPlugin);
    exports.KeyEventsPlugin = KeyEventsPlugin;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/testability/testability", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone", "npm:angular2@2.0.0-alpha.46/src/facade/async"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var ng_zone_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var Testability = (function() {
    function Testability(_ngZone) {
      this._pendingCount = 0;
      this._callbacks = [];
      this._isAngularEventPending = false;
      this._watchAngularEvents(_ngZone);
    }
    Testability.prototype._watchAngularEvents = function(_ngZone) {
      var _this = this;
      async_1.ObservableWrapper.subscribe(_ngZone.onTurnStart, function(_) {
        _this._isAngularEventPending = true;
      });
      _ngZone.runOutsideAngular(function() {
        async_1.ObservableWrapper.subscribe(_ngZone.onEventDone, function(_) {
          if (!_ngZone.hasPendingTimers) {
            _this._isAngularEventPending = false;
            _this._runCallbacksIfReady();
          }
        });
      });
    };
    Testability.prototype.increasePendingRequestCount = function() {
      this._pendingCount += 1;
      return this._pendingCount;
    };
    Testability.prototype.decreasePendingRequestCount = function() {
      this._pendingCount -= 1;
      if (this._pendingCount < 0) {
        throw new exceptions_1.BaseException('pending async requests below zero');
      }
      this._runCallbacksIfReady();
      return this._pendingCount;
    };
    Testability.prototype.isStable = function() {
      return this._pendingCount == 0 && !this._isAngularEventPending;
    };
    Testability.prototype._runCallbacksIfReady = function() {
      var _this = this;
      if (!this.isStable()) {
        return;
      }
      async_1.PromiseWrapper.resolve(null).then(function(_) {
        while (_this._callbacks.length !== 0) {
          (_this._callbacks.pop())();
        }
      });
    };
    Testability.prototype.whenStable = function(callback) {
      this._callbacks.push(callback);
      this._runCallbacksIfReady();
    };
    Testability.prototype.getPendingRequestCount = function() {
      return this._pendingCount;
    };
    Testability.prototype.isAngularEventPending = function() {
      return this._isAngularEventPending;
    };
    Testability.prototype.findBindings = function(using, provider, exactMatch) {
      return [];
    };
    Testability.prototype.findProviders = function(using, provider, exactMatch) {
      return [];
    };
    Testability = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [ng_zone_1.NgZone])], Testability);
    return Testability;
  })();
  exports.Testability = Testability;
  var TestabilityRegistry = (function() {
    function TestabilityRegistry() {
      this._applications = new collection_1.Map();
      testabilityGetter.addToWindow(this);
    }
    TestabilityRegistry.prototype.registerApplication = function(token, testability) {
      this._applications.set(token, testability);
    };
    TestabilityRegistry.prototype.getAllTestabilities = function() {
      return collection_1.MapWrapper.values(this._applications);
    };
    TestabilityRegistry.prototype.findTestabilityInTree = function(elem, findInAncestors) {
      if (findInAncestors === void 0) {
        findInAncestors = true;
      }
      if (elem == null) {
        return null;
      }
      if (this._applications.has(elem)) {
        return this._applications.get(elem);
      } else if (!findInAncestors) {
        return null;
      }
      if (dom_adapter_1.DOM.isShadowRoot(elem)) {
        return this.findTestabilityInTree(dom_adapter_1.DOM.getHost(elem));
      }
      return this.findTestabilityInTree(dom_adapter_1.DOM.parentElement(elem));
    };
    TestabilityRegistry = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], TestabilityRegistry);
    return TestabilityRegistry;
  })();
  exports.TestabilityRegistry = TestabilityRegistry;
  var NoopGetTestability = (function() {
    function NoopGetTestability() {}
    NoopGetTestability.prototype.addToWindow = function(registry) {};
    NoopGetTestability = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], NoopGetTestability);
    return NoopGetTestability;
  })();
  function setTestabilityGetter(getter) {
    testabilityGetter = getter;
  }
  exports.setTestabilityGetter = setTestabilityGetter;
  var testabilityGetter = lang_1.CONST_EXPR(new NoopGetTestability());
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/testability/browser_testability", ["npm:angular2@2.0.0-alpha.46/src/core/testability/testability", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var testability_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/testability/testability');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var PublicTestability = (function() {
    function PublicTestability(testability) {
      this._testability = testability;
    }
    PublicTestability.prototype.isStable = function() {
      return this._testability.isStable();
    };
    PublicTestability.prototype.whenStable = function(callback) {
      this._testability.whenStable(callback);
    };
    PublicTestability.prototype.findBindings = function(using, provider, exactMatch) {
      return this.findProviders(using, provider, exactMatch);
    };
    PublicTestability.prototype.findProviders = function(using, provider, exactMatch) {
      return this._testability.findBindings(using, provider, exactMatch);
    };
    return PublicTestability;
  })();
  var BrowserGetTestability = (function() {
    function BrowserGetTestability() {}
    BrowserGetTestability.init = function() {
      testability_1.setTestabilityGetter(new BrowserGetTestability());
    };
    BrowserGetTestability.prototype.addToWindow = function(registry) {
      lang_1.global.getAngularTestability = function(elem, findInAncestors) {
        if (findInAncestors === void 0) {
          findInAncestors = true;
        }
        var testability = registry.findTestabilityInTree(elem, findInAncestors);
        if (testability == null) {
          throw new Error('Could not find testability for element.');
        }
        return new PublicTestability(testability);
      };
      lang_1.global.getAllAngularTestabilities = function() {
        var testabilities = registry.getAllTestabilities();
        return testabilities.map(function(testability) {
          return new PublicTestability(testability);
        });
      };
    };
    return BrowserGetTestability;
  })();
  exports.BrowserGetTestability = BrowserGetTestability;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/xhr_impl", ["npm:angular2@2.0.0-alpha.46/src/facade/promise", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/compiler/xhr"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var promise_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/promise');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var xhr_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/xhr');
  var XHRImpl = (function(_super) {
    __extends(XHRImpl, _super);
    function XHRImpl() {
      _super.apply(this, arguments);
    }
    XHRImpl.prototype.get = function(url) {
      var completer = promise_1.PromiseWrapper.completer();
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, true);
      xhr.responseType = 'text';
      xhr.onload = function() {
        var response = lang_1.isPresent(xhr.response) ? xhr.response : xhr.responseText;
        var status = xhr.status === 1223 ? 204 : xhr.status;
        if (status === 0) {
          status = response ? 200 : 0;
        }
        if (200 <= status && status <= 300) {
          completer.resolve(response);
        } else {
          completer.reject("Failed to load " + url, null);
        }
      };
      xhr.onerror = function() {
        completer.reject("Failed to load " + url, null);
      };
      xhr.send();
      return completer.promise;
    };
    return XHRImpl;
  })(xhr_1.XHR);
  exports.XHRImpl = XHRImpl;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/dom/generic_browser_adapter", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/compiler/xhr_impl"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var xhr_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/xhr_impl');
  var GenericBrowserDomAdapter = (function(_super) {
    __extends(GenericBrowserDomAdapter, _super);
    function GenericBrowserDomAdapter() {
      var _this = this;
      _super.call(this);
      this._animationPrefix = null;
      this._transitionEnd = null;
      try {
        var element = this.createElement('div', this.defaultDoc());
        if (lang_1.isPresent(this.getStyle(element, 'animationName'))) {
          this._animationPrefix = '';
        } else {
          var domPrefixes = ['Webkit', 'Moz', 'O', 'ms'];
          for (var i = 0; i < domPrefixes.length; i++) {
            if (lang_1.isPresent(this.getStyle(element, domPrefixes[i] + 'AnimationName'))) {
              this._animationPrefix = '-' + domPrefixes[i].toLowerCase() + '-';
              break;
            }
          }
        }
        var transEndEventNames = {
          WebkitTransition: 'webkitTransitionEnd',
          MozTransition: 'transitionend',
          OTransition: 'oTransitionEnd otransitionend',
          transition: 'transitionend'
        };
        collection_1.StringMapWrapper.forEach(transEndEventNames, function(value, key) {
          if (lang_1.isPresent(_this.getStyle(element, key))) {
            _this._transitionEnd = value;
          }
        });
      } catch (e) {
        this._animationPrefix = null;
        this._transitionEnd = null;
      }
    }
    GenericBrowserDomAdapter.prototype.getXHR = function() {
      return xhr_impl_1.XHRImpl;
    };
    GenericBrowserDomAdapter.prototype.getDistributedNodes = function(el) {
      return el.getDistributedNodes();
    };
    GenericBrowserDomAdapter.prototype.resolveAndSetHref = function(el, baseUrl, href) {
      el.href = href == null ? baseUrl : baseUrl + '/../' + href;
    };
    GenericBrowserDomAdapter.prototype.supportsDOMEvents = function() {
      return true;
    };
    GenericBrowserDomAdapter.prototype.supportsNativeShadowDOM = function() {
      return lang_1.isFunction(this.defaultDoc().body.createShadowRoot);
    };
    GenericBrowserDomAdapter.prototype.getAnimationPrefix = function() {
      return lang_1.isPresent(this._animationPrefix) ? this._animationPrefix : "";
    };
    GenericBrowserDomAdapter.prototype.getTransitionEnd = function() {
      return lang_1.isPresent(this._transitionEnd) ? this._transitionEnd : "";
    };
    GenericBrowserDomAdapter.prototype.supportsAnimation = function() {
      return lang_1.isPresent(this._animationPrefix) && lang_1.isPresent(this._transitionEnd);
    };
    return GenericBrowserDomAdapter;
  })(dom_adapter_1.DomAdapter);
  exports.GenericBrowserDomAdapter = GenericBrowserDomAdapter;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/dom/browser_adapter", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/dom/generic_browser_adapter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var generic_browser_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/generic_browser_adapter');
  var _attrToPropMap = {
    'class': 'className',
    'innerHtml': 'innerHTML',
    'readonly': 'readOnly',
    'tabindex': 'tabIndex'
  };
  var DOM_KEY_LOCATION_NUMPAD = 3;
  var _keyMap = {
    '\b': 'Backspace',
    '\t': 'Tab',
    '\x7F': 'Delete',
    '\x1B': 'Escape',
    'Del': 'Delete',
    'Esc': 'Escape',
    'Left': 'ArrowLeft',
    'Right': 'ArrowRight',
    'Up': 'ArrowUp',
    'Down': 'ArrowDown',
    'Menu': 'ContextMenu',
    'Scroll': 'ScrollLock',
    'Win': 'OS'
  };
  var _chromeNumKeyPadMap = {
    'A': '1',
    'B': '2',
    'C': '3',
    'D': '4',
    'E': '5',
    'F': '6',
    'G': '7',
    'H': '8',
    'I': '9',
    'J': '*',
    'K': '+',
    'M': '-',
    'N': '.',
    'O': '/',
    '\x60': '0',
    '\x90': 'NumLock'
  };
  var BrowserDomAdapter = (function(_super) {
    __extends(BrowserDomAdapter, _super);
    function BrowserDomAdapter() {
      _super.apply(this, arguments);
    }
    BrowserDomAdapter.prototype.parse = function(templateHtml) {
      throw new Error("parse not implemented");
    };
    BrowserDomAdapter.makeCurrent = function() {
      dom_adapter_1.setRootDomAdapter(new BrowserDomAdapter());
    };
    BrowserDomAdapter.prototype.hasProperty = function(element, name) {
      return name in element;
    };
    BrowserDomAdapter.prototype.setProperty = function(el, name, value) {
      el[name] = value;
    };
    BrowserDomAdapter.prototype.getProperty = function(el, name) {
      return el[name];
    };
    BrowserDomAdapter.prototype.invoke = function(el, methodName, args) {
      el[methodName].apply(el, args);
    };
    BrowserDomAdapter.prototype.logError = function(error) {
      if (window.console.error) {
        window.console.error(error);
      } else {
        window.console.log(error);
      }
    };
    BrowserDomAdapter.prototype.log = function(error) {
      window.console.log(error);
    };
    BrowserDomAdapter.prototype.logGroup = function(error) {
      if (window.console.group) {
        window.console.group(error);
        this.logError(error);
      } else {
        window.console.log(error);
      }
    };
    BrowserDomAdapter.prototype.logGroupEnd = function() {
      if (window.console.groupEnd) {
        window.console.groupEnd();
      }
    };
    Object.defineProperty(BrowserDomAdapter.prototype, "attrToPropMap", {
      get: function() {
        return _attrToPropMap;
      },
      enumerable: true,
      configurable: true
    });
    BrowserDomAdapter.prototype.query = function(selector) {
      return document.querySelector(selector);
    };
    BrowserDomAdapter.prototype.querySelector = function(el, selector) {
      return el.querySelector(selector);
    };
    BrowserDomAdapter.prototype.querySelectorAll = function(el, selector) {
      return el.querySelectorAll(selector);
    };
    BrowserDomAdapter.prototype.on = function(el, evt, listener) {
      el.addEventListener(evt, listener, false);
    };
    BrowserDomAdapter.prototype.onAndCancel = function(el, evt, listener) {
      el.addEventListener(evt, listener, false);
      return function() {
        el.removeEventListener(evt, listener, false);
      };
    };
    BrowserDomAdapter.prototype.dispatchEvent = function(el, evt) {
      el.dispatchEvent(evt);
    };
    BrowserDomAdapter.prototype.createMouseEvent = function(eventType) {
      var evt = document.createEvent('MouseEvent');
      evt.initEvent(eventType, true, true);
      return evt;
    };
    BrowserDomAdapter.prototype.createEvent = function(eventType) {
      var evt = document.createEvent('Event');
      evt.initEvent(eventType, true, true);
      return evt;
    };
    BrowserDomAdapter.prototype.preventDefault = function(evt) {
      evt.preventDefault();
      evt.returnValue = false;
    };
    BrowserDomAdapter.prototype.isPrevented = function(evt) {
      return evt.defaultPrevented || lang_1.isPresent(evt.returnValue) && !evt.returnValue;
    };
    BrowserDomAdapter.prototype.getInnerHTML = function(el) {
      return el.innerHTML;
    };
    BrowserDomAdapter.prototype.getOuterHTML = function(el) {
      return el.outerHTML;
    };
    BrowserDomAdapter.prototype.nodeName = function(node) {
      return node.nodeName;
    };
    BrowserDomAdapter.prototype.nodeValue = function(node) {
      return node.nodeValue;
    };
    BrowserDomAdapter.prototype.type = function(node) {
      return node.type;
    };
    BrowserDomAdapter.prototype.content = function(node) {
      if (this.hasProperty(node, "content")) {
        return node.content;
      } else {
        return node;
      }
    };
    BrowserDomAdapter.prototype.firstChild = function(el) {
      return el.firstChild;
    };
    BrowserDomAdapter.prototype.nextSibling = function(el) {
      return el.nextSibling;
    };
    BrowserDomAdapter.prototype.parentElement = function(el) {
      return el.parentNode;
    };
    BrowserDomAdapter.prototype.childNodes = function(el) {
      return el.childNodes;
    };
    BrowserDomAdapter.prototype.childNodesAsList = function(el) {
      var childNodes = el.childNodes;
      var res = collection_1.ListWrapper.createFixedSize(childNodes.length);
      for (var i = 0; i < childNodes.length; i++) {
        res[i] = childNodes[i];
      }
      return res;
    };
    BrowserDomAdapter.prototype.clearNodes = function(el) {
      while (el.firstChild) {
        el.removeChild(el.firstChild);
      }
    };
    BrowserDomAdapter.prototype.appendChild = function(el, node) {
      el.appendChild(node);
    };
    BrowserDomAdapter.prototype.removeChild = function(el, node) {
      el.removeChild(node);
    };
    BrowserDomAdapter.prototype.replaceChild = function(el, newChild, oldChild) {
      el.replaceChild(newChild, oldChild);
    };
    BrowserDomAdapter.prototype.remove = function(node) {
      if (node.parentNode) {
        node.parentNode.removeChild(node);
      }
      return node;
    };
    BrowserDomAdapter.prototype.insertBefore = function(el, node) {
      el.parentNode.insertBefore(node, el);
    };
    BrowserDomAdapter.prototype.insertAllBefore = function(el, nodes) {
      nodes.forEach(function(n) {
        return el.parentNode.insertBefore(n, el);
      });
    };
    BrowserDomAdapter.prototype.insertAfter = function(el, node) {
      el.parentNode.insertBefore(node, el.nextSibling);
    };
    BrowserDomAdapter.prototype.setInnerHTML = function(el, value) {
      el.innerHTML = value;
    };
    BrowserDomAdapter.prototype.getText = function(el) {
      return el.textContent;
    };
    BrowserDomAdapter.prototype.setText = function(el, value) {
      el.textContent = value;
    };
    BrowserDomAdapter.prototype.getValue = function(el) {
      return el.value;
    };
    BrowserDomAdapter.prototype.setValue = function(el, value) {
      el.value = value;
    };
    BrowserDomAdapter.prototype.getChecked = function(el) {
      return el.checked;
    };
    BrowserDomAdapter.prototype.setChecked = function(el, value) {
      el.checked = value;
    };
    BrowserDomAdapter.prototype.createComment = function(text) {
      return document.createComment(text);
    };
    BrowserDomAdapter.prototype.createTemplate = function(html) {
      var t = document.createElement('template');
      t.innerHTML = html;
      return t;
    };
    BrowserDomAdapter.prototype.createElement = function(tagName, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createElement(tagName);
    };
    BrowserDomAdapter.prototype.createElementNS = function(ns, tagName, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createElementNS(ns, tagName);
    };
    BrowserDomAdapter.prototype.createTextNode = function(text, doc) {
      if (doc === void 0) {
        doc = document;
      }
      return doc.createTextNode(text);
    };
    BrowserDomAdapter.prototype.createScriptTag = function(attrName, attrValue, doc) {
      if (doc === void 0) {
        doc = document;
      }
      var el = doc.createElement('SCRIPT');
      el.setAttribute(attrName, attrValue);
      return el;
    };
    BrowserDomAdapter.prototype.createStyleElement = function(css, doc) {
      if (doc === void 0) {
        doc = document;
      }
      var style = doc.createElement('style');
      this.appendChild(style, this.createTextNode(css));
      return style;
    };
    BrowserDomAdapter.prototype.createShadowRoot = function(el) {
      return el.createShadowRoot();
    };
    BrowserDomAdapter.prototype.getShadowRoot = function(el) {
      return el.shadowRoot;
    };
    BrowserDomAdapter.prototype.getHost = function(el) {
      return el.host;
    };
    BrowserDomAdapter.prototype.clone = function(node) {
      return node.cloneNode(true);
    };
    BrowserDomAdapter.prototype.getElementsByClassName = function(element, name) {
      return element.getElementsByClassName(name);
    };
    BrowserDomAdapter.prototype.getElementsByTagName = function(element, name) {
      return element.getElementsByTagName(name);
    };
    BrowserDomAdapter.prototype.classList = function(element) {
      return Array.prototype.slice.call(element.classList, 0);
    };
    BrowserDomAdapter.prototype.addClass = function(element, classname) {
      element.classList.add(classname);
    };
    BrowserDomAdapter.prototype.removeClass = function(element, classname) {
      element.classList.remove(classname);
    };
    BrowserDomAdapter.prototype.hasClass = function(element, classname) {
      return element.classList.contains(classname);
    };
    BrowserDomAdapter.prototype.setStyle = function(element, stylename, stylevalue) {
      element.style[stylename] = stylevalue;
    };
    BrowserDomAdapter.prototype.removeStyle = function(element, stylename) {
      element.style[stylename] = null;
    };
    BrowserDomAdapter.prototype.getStyle = function(element, stylename) {
      return element.style[stylename];
    };
    BrowserDomAdapter.prototype.tagName = function(element) {
      return element.tagName;
    };
    BrowserDomAdapter.prototype.attributeMap = function(element) {
      var res = new Map();
      var elAttrs = element.attributes;
      for (var i = 0; i < elAttrs.length; i++) {
        var attrib = elAttrs[i];
        res.set(attrib.name, attrib.value);
      }
      return res;
    };
    BrowserDomAdapter.prototype.hasAttribute = function(element, attribute) {
      return element.hasAttribute(attribute);
    };
    BrowserDomAdapter.prototype.getAttribute = function(element, attribute) {
      return element.getAttribute(attribute);
    };
    BrowserDomAdapter.prototype.setAttribute = function(element, name, value) {
      element.setAttribute(name, value);
    };
    BrowserDomAdapter.prototype.setAttributeNS = function(element, ns, name, value) {
      element.setAttributeNS(ns, name, value);
    };
    BrowserDomAdapter.prototype.removeAttribute = function(element, attribute) {
      element.removeAttribute(attribute);
    };
    BrowserDomAdapter.prototype.templateAwareRoot = function(el) {
      return this.isTemplateElement(el) ? this.content(el) : el;
    };
    BrowserDomAdapter.prototype.createHtmlDocument = function() {
      return document.implementation.createHTMLDocument('fakeTitle');
    };
    BrowserDomAdapter.prototype.defaultDoc = function() {
      return document;
    };
    BrowserDomAdapter.prototype.getBoundingClientRect = function(el) {
      try {
        return el.getBoundingClientRect();
      } catch (e) {
        return {
          top: 0,
          bottom: 0,
          left: 0,
          right: 0,
          width: 0,
          height: 0
        };
      }
    };
    BrowserDomAdapter.prototype.getTitle = function() {
      return document.title;
    };
    BrowserDomAdapter.prototype.setTitle = function(newTitle) {
      document.title = newTitle || '';
    };
    BrowserDomAdapter.prototype.elementMatches = function(n, selector) {
      var matches = false;
      if (n instanceof HTMLElement) {
        if (n.matches) {
          matches = n.matches(selector);
        } else if (n.msMatchesSelector) {
          matches = n.msMatchesSelector(selector);
        } else if (n.webkitMatchesSelector) {
          matches = n.webkitMatchesSelector(selector);
        }
      }
      return matches;
    };
    BrowserDomAdapter.prototype.isTemplateElement = function(el) {
      return el instanceof HTMLElement && el.nodeName == "TEMPLATE";
    };
    BrowserDomAdapter.prototype.isTextNode = function(node) {
      return node.nodeType === Node.TEXT_NODE;
    };
    BrowserDomAdapter.prototype.isCommentNode = function(node) {
      return node.nodeType === Node.COMMENT_NODE;
    };
    BrowserDomAdapter.prototype.isElementNode = function(node) {
      return node.nodeType === Node.ELEMENT_NODE;
    };
    BrowserDomAdapter.prototype.hasShadowRoot = function(node) {
      return node instanceof HTMLElement && lang_1.isPresent(node.shadowRoot);
    };
    BrowserDomAdapter.prototype.isShadowRoot = function(node) {
      return node instanceof DocumentFragment;
    };
    BrowserDomAdapter.prototype.importIntoDoc = function(node) {
      var toImport = node;
      if (this.isTemplateElement(node)) {
        toImport = this.content(node);
      }
      return document.importNode(toImport, true);
    };
    BrowserDomAdapter.prototype.adoptNode = function(node) {
      return document.adoptNode(node);
    };
    BrowserDomAdapter.prototype.getHref = function(el) {
      return el.href;
    };
    BrowserDomAdapter.prototype.getEventKey = function(event) {
      var key = event.key;
      if (lang_1.isBlank(key)) {
        key = event.keyIdentifier;
        if (lang_1.isBlank(key)) {
          return 'Unidentified';
        }
        if (key.startsWith('U+')) {
          key = String.fromCharCode(parseInt(key.substring(2), 16));
          if (event.location === DOM_KEY_LOCATION_NUMPAD && _chromeNumKeyPadMap.hasOwnProperty(key)) {
            key = _chromeNumKeyPadMap[key];
          }
        }
      }
      if (_keyMap.hasOwnProperty(key)) {
        key = _keyMap[key];
      }
      return key;
    };
    BrowserDomAdapter.prototype.getGlobalEventTarget = function(target) {
      if (target == "window") {
        return window;
      } else if (target == "document") {
        return document;
      } else if (target == "body") {
        return document.body;
      }
    };
    BrowserDomAdapter.prototype.getHistory = function() {
      return window.history;
    };
    BrowserDomAdapter.prototype.getLocation = function() {
      return window.location;
    };
    BrowserDomAdapter.prototype.getBaseHref = function() {
      var href = getBaseElementHref();
      if (lang_1.isBlank(href)) {
        return null;
      }
      return relativePath(href);
    };
    BrowserDomAdapter.prototype.resetBaseElement = function() {
      baseElement = null;
    };
    BrowserDomAdapter.prototype.getUserAgent = function() {
      return window.navigator.userAgent;
    };
    BrowserDomAdapter.prototype.setData = function(element, name, value) {
      this.setAttribute(element, 'data-' + name, value);
    };
    BrowserDomAdapter.prototype.getData = function(element, name) {
      return this.getAttribute(element, 'data-' + name);
    };
    BrowserDomAdapter.prototype.getComputedStyle = function(element) {
      return getComputedStyle(element);
    };
    BrowserDomAdapter.prototype.setGlobalVar = function(path, value) {
      lang_1.setValueOnPath(lang_1.global, path, value);
    };
    BrowserDomAdapter.prototype.requestAnimationFrame = function(callback) {
      return window.requestAnimationFrame(callback);
    };
    BrowserDomAdapter.prototype.cancelAnimationFrame = function(id) {
      window.cancelAnimationFrame(id);
    };
    BrowserDomAdapter.prototype.performanceNow = function() {
      if (lang_1.isPresent(window.performance) && lang_1.isPresent(window.performance.now)) {
        return window.performance.now();
      } else {
        return lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());
      }
    };
    return BrowserDomAdapter;
  })(generic_browser_adapter_1.GenericBrowserDomAdapter);
  exports.BrowserDomAdapter = BrowserDomAdapter;
  var baseElement = null;
  function getBaseElementHref() {
    if (lang_1.isBlank(baseElement)) {
      baseElement = document.querySelector('base');
      if (lang_1.isBlank(baseElement)) {
        return null;
      }
    }
    return baseElement.getAttribute('href');
  }
  var urlParsingNode = null;
  function relativePath(url) {
    if (lang_1.isBlank(urlParsingNode)) {
      urlParsingNode = document.createElement("a");
    }
    urlParsingNode.setAttribute('href', url);
    return (urlParsingNode.pathname.charAt(0) === '/') ? urlParsingNode.pathname : '/' + urlParsingNode.pathname;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/application_common", ["npm:angular2@2.0.0-alpha.46/src/common/forms", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/dom/browser_adapter", "npm:angular2@2.0.0-alpha.46/src/core/testability/browser_testability", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/compiler/xhr", "npm:angular2@2.0.0-alpha.46/src/compiler/xhr_impl", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/key_events", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/hammer_gestures", "npm:angular2@2.0.0-alpha.46/src/core/testability/testability", "npm:angular2@2.0.0-alpha.46/src/core/render/api", "npm:angular2@2.0.0-alpha.46/src/core/render/render", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host", "npm:angular2@2.0.0-alpha.46/src/core/platform_bindings", "npm:angular2@2.0.0-alpha.46/src/animate/animation_builder", "npm:angular2@2.0.0-alpha.46/src/animate/browser_details", "npm:angular2@2.0.0-alpha.46/src/core/profile/wtf_init", "npm:angular2@2.0.0-alpha.46/src/core/application_ref", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var forms_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms');
    var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var browser_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/browser_adapter');
    var browser_testability_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/testability/browser_testability');
    var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
    var xhr_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/xhr');
    var xhr_impl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/xhr_impl');
    var event_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager');
    var key_events_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/key_events');
    var hammer_gestures_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/hammer_gestures');
    var testability_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/testability/testability');
    var api_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/api');
    var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/render');
    var shared_styles_host_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host');
    var platform_bindings_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/platform_bindings');
    var animation_builder_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/animation_builder');
    var browser_details_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/browser_details');
    var wtf_init_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/wtf_init');
    var application_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_ref');
    function applicationDomProviders() {
      if (lang_1.isBlank(dom_adapter_1.DOM)) {
        throw "Must set a root DOM adapter first.";
      }
      return [di_1.provide(render_1.DOCUMENT, {useValue: dom_adapter_1.DOM.defaultDoc()}), event_manager_1.EventManager, new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, {
        useClass: event_manager_1.DomEventsPlugin,
        multi: true
      }), new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, {
        useClass: key_events_1.KeyEventsPlugin,
        multi: true
      }), new di_1.Provider(event_manager_1.EVENT_MANAGER_PLUGINS, {
        useClass: hammer_gestures_1.HammerGesturesPlugin,
        multi: true
      }), di_1.provide(render_1.DomRenderer, {useClass: render_1.DomRenderer_}), di_1.provide(api_1.Renderer, {useExisting: render_1.DomRenderer}), shared_styles_host_1.DomSharedStylesHost, di_1.provide(shared_styles_host_1.SharedStylesHost, {useExisting: shared_styles_host_1.DomSharedStylesHost}), platform_bindings_1.EXCEPTION_PROVIDER, di_1.provide(xhr_1.XHR, {useValue: new xhr_impl_1.XHRImpl()}), testability_1.Testability, browser_details_1.BrowserDetails, animation_builder_1.AnimationBuilder, forms_1.FORM_PROVIDERS];
    }
    exports.applicationDomProviders = applicationDomProviders;
    function platform(providers) {
      return application_ref_1.platformCommon(providers, function() {
        browser_adapter_1.BrowserDomAdapter.makeCurrent();
        wtf_init_1.wtfInit();
        browser_testability_1.BrowserGetTestability.init();
      });
    }
    exports.platform = platform;
    function commonBootstrap(appComponentType, appProviders) {
      if (appProviders === void 0) {
        appProviders = null;
      }
      var p = platform();
      var bindings = [application_ref_1.applicationCommonProviders(), applicationDomProviders()];
      if (lang_1.isPresent(appProviders)) {
        bindings.push(appProviders);
      }
      return p.application(bindings).bootstrap(appComponentType);
    }
    exports.commonBootstrap = commonBootstrap;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/anchor_based_app_root_url", ["npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var app_root_url_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var AnchorBasedAppRootUrl = (function(_super) {
    __extends(AnchorBasedAppRootUrl, _super);
    function AnchorBasedAppRootUrl() {
      _super.call(this, "");
      var a = dom_adapter_1.DOM.createElement('a');
      dom_adapter_1.DOM.resolveAndSetHref(a, './', null);
      this.value = dom_adapter_1.DOM.getHref(a);
    }
    AnchorBasedAppRootUrl = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], AnchorBasedAppRootUrl);
    return AnchorBasedAppRootUrl;
  })(app_root_url_1.AppRootUrl);
  exports.AnchorBasedAppRootUrl = AnchorBasedAppRootUrl;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url", ["npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var AppRootUrl = (function() {
    function AppRootUrl(value) {
      this.value = value;
    }
    AppRootUrl = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [String])], AppRootUrl);
    return AppRootUrl;
  })();
  exports.AppRootUrl = AppRootUrl;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/schema/dom_element_schema_registry", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var element_schema_registry_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry');
  var DomElementSchemaRegistry = (function(_super) {
    __extends(DomElementSchemaRegistry, _super);
    function DomElementSchemaRegistry() {
      _super.apply(this, arguments);
      this._protoElements = new Map();
    }
    DomElementSchemaRegistry.prototype._getProtoElement = function(tagName) {
      var element = this._protoElements.get(tagName);
      if (lang_1.isBlank(element)) {
        element = dom_adapter_1.DOM.createElement(tagName);
        this._protoElements.set(tagName, element);
      }
      return element;
    };
    DomElementSchemaRegistry.prototype.hasProperty = function(tagName, propName) {
      if (tagName.indexOf('-') !== -1) {
        return true;
      } else {
        var elm = this._getProtoElement(tagName);
        return dom_adapter_1.DOM.hasProperty(elm, propName);
      }
    };
    DomElementSchemaRegistry.prototype.getMappedPropName = function(propName) {
      var mappedPropName = collection_1.StringMapWrapper.get(dom_adapter_1.DOM.attrToPropMap, propName);
      return lang_1.isPresent(mappedPropName) ? mappedPropName : propName;
    };
    DomElementSchemaRegistry = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], DomElementSchemaRegistry);
    return DomElementSchemaRegistry;
  })(element_schema_registry_1.ElementSchemaRegistry);
  exports.DomElementSchemaRegistry = DomElementSchemaRegistry;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/runtime_metadata", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata", "npm:angular2@2.0.0-alpha.46/src/core/metadata/directives", "npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/directive_lifecycle_reflector", "npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes", "npm:angular2@2.0.0-alpha.46/src/compiler/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var cpl = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata');
  var md = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/directives');
  var directive_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver');
  var view_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver');
  var directive_lifecycle_reflector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/directive_lifecycle_reflector');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var di_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var platform_directives_and_pipes_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var RuntimeMetadataResolver = (function() {
    function RuntimeMetadataResolver(_directiveResolver, _viewResolver, _platformDirectives) {
      this._directiveResolver = _directiveResolver;
      this._viewResolver = _viewResolver;
      this._platformDirectives = _platformDirectives;
      this._cache = new Map();
    }
    RuntimeMetadataResolver.prototype.getMetadata = function(directiveType) {
      var meta = this._cache.get(directiveType);
      if (lang_1.isBlank(meta)) {
        var dirMeta = this._directiveResolver.resolve(directiveType);
        var moduleUrl = calcModuleUrl(directiveType, dirMeta);
        var templateMeta = null;
        var changeDetectionStrategy = null;
        if (dirMeta instanceof md.ComponentMetadata) {
          var cmpMeta = dirMeta;
          var viewMeta = this._viewResolver.resolve(directiveType);
          templateMeta = new cpl.CompileTemplateMetadata({
            encapsulation: viewMeta.encapsulation,
            template: viewMeta.template,
            templateUrl: viewMeta.templateUrl,
            styles: viewMeta.styles,
            styleUrls: viewMeta.styleUrls
          });
          changeDetectionStrategy = cmpMeta.changeDetection;
        }
        meta = cpl.CompileDirectiveMetadata.create({
          selector: dirMeta.selector,
          exportAs: dirMeta.exportAs,
          isComponent: lang_1.isPresent(templateMeta),
          dynamicLoadable: true,
          type: new cpl.CompileTypeMetadata({
            name: lang_1.stringify(directiveType),
            moduleUrl: moduleUrl,
            runtime: directiveType
          }),
          template: templateMeta,
          changeDetection: changeDetectionStrategy,
          inputs: dirMeta.inputs,
          outputs: dirMeta.outputs,
          host: dirMeta.host,
          lifecycleHooks: interfaces_1.LIFECYCLE_HOOKS_VALUES.filter(function(hook) {
            return directive_lifecycle_reflector_1.hasLifecycleHook(hook, directiveType);
          })
        });
        this._cache.set(directiveType, meta);
      }
      return meta;
    };
    RuntimeMetadataResolver.prototype.getViewDirectivesMetadata = function(component) {
      var _this = this;
      var view = this._viewResolver.resolve(component);
      var directives = flattenDirectives(view, this._platformDirectives);
      for (var i = 0; i < directives.length; i++) {
        if (!isValidDirective(directives[i])) {
          throw new exceptions_1.BaseException("Unexpected directive value '" + lang_1.stringify(directives[i]) + "' on the View of component '" + lang_1.stringify(component) + "'");
        }
      }
      return removeDuplicates(directives).map(function(type) {
        return _this.getMetadata(type);
      });
    };
    RuntimeMetadataResolver = __decorate([di_2.Injectable(), __param(2, di_2.Optional()), __param(2, di_2.Inject(platform_directives_and_pipes_1.PLATFORM_DIRECTIVES)), __metadata('design:paramtypes', [directive_resolver_1.DirectiveResolver, view_resolver_1.ViewResolver, Array])], RuntimeMetadataResolver);
    return RuntimeMetadataResolver;
  })();
  exports.RuntimeMetadataResolver = RuntimeMetadataResolver;
  function removeDuplicates(items) {
    var m = new Map();
    items.forEach(function(i) {
      return m.set(i, null);
    });
    return collection_1.MapWrapper.keys(m);
  }
  function flattenDirectives(view, platformDirectives) {
    var directives = [];
    if (lang_1.isPresent(platformDirectives)) {
      flattenArray(platformDirectives, directives);
    }
    if (lang_1.isPresent(view.directives)) {
      flattenArray(view.directives, directives);
    }
    return directives;
  }
  function flattenArray(tree, out) {
    for (var i = 0; i < tree.length; i++) {
      var item = di_1.resolveForwardRef(tree[i]);
      if (lang_1.isArray(item)) {
        flattenArray(item, out);
      } else {
        out.push(item);
      }
    }
  }
  function isValidDirective(value) {
    return lang_1.isPresent(value) && (value instanceof lang_1.Type);
  }
  function calcModuleUrl(type, dirMeta) {
    if (lang_1.isPresent(dirMeta.moduleId)) {
      return "package:" + dirMeta.moduleId + util_1.MODULE_SUFFIX;
    } else {
      return reflection_1.reflector.importUri(type);
    }
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/template_normalizer", ["npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/compiler/xhr", "npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver", "npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata/view", "npm:angular2@2.0.0-alpha.46/src/compiler/html_ast", "npm:angular2@2.0.0-alpha.46/src/compiler/html_parser", "npm:angular2@2.0.0-alpha.46/src/compiler/template_preparser"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var directive_metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var xhr_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/xhr');
  var url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver');
  var style_url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  var html_ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/html_ast');
  var html_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/html_parser');
  var template_preparser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_preparser');
  var TemplateNormalizer = (function() {
    function TemplateNormalizer(_xhr, _urlResolver, _domParser) {
      this._xhr = _xhr;
      this._urlResolver = _urlResolver;
      this._domParser = _domParser;
    }
    TemplateNormalizer.prototype.normalizeTemplate = function(directiveType, template) {
      var _this = this;
      if (lang_1.isPresent(template.template)) {
        return async_1.PromiseWrapper.resolve(this.normalizeLoadedTemplate(directiveType, template, template.template, directiveType.moduleUrl));
      } else if (lang_1.isPresent(template.templateUrl)) {
        var sourceAbsUrl = this._urlResolver.resolve(directiveType.moduleUrl, template.templateUrl);
        return this._xhr.get(sourceAbsUrl).then(function(templateContent) {
          return _this.normalizeLoadedTemplate(directiveType, template, templateContent, sourceAbsUrl);
        });
      } else {
        throw new exceptions_1.BaseException("No template specified for component " + directiveType.name);
      }
    };
    TemplateNormalizer.prototype.normalizeLoadedTemplate = function(directiveType, templateMeta, template, templateAbsUrl) {
      var _this = this;
      var domNodes = this._domParser.parse(template, directiveType.name);
      var visitor = new TemplatePreparseVisitor();
      html_ast_1.htmlVisitAll(visitor, domNodes);
      var allStyles = templateMeta.styles.concat(visitor.styles);
      var allStyleAbsUrls = visitor.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable).map(function(url) {
        return _this._urlResolver.resolve(templateAbsUrl, url);
      }).concat(templateMeta.styleUrls.filter(style_url_resolver_1.isStyleUrlResolvable).map(function(url) {
        return _this._urlResolver.resolve(directiveType.moduleUrl, url);
      }));
      var allResolvedStyles = allStyles.map(function(style) {
        var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, templateAbsUrl, style);
        styleWithImports.styleUrls.forEach(function(styleUrl) {
          return allStyleAbsUrls.push(styleUrl);
        });
        return styleWithImports.style;
      });
      var encapsulation = templateMeta.encapsulation;
      if (encapsulation === view_1.ViewEncapsulation.Emulated && allResolvedStyles.length === 0 && allStyleAbsUrls.length === 0) {
        encapsulation = view_1.ViewEncapsulation.None;
      }
      return new directive_metadata_1.CompileTemplateMetadata({
        encapsulation: encapsulation,
        template: template,
        templateUrl: templateAbsUrl,
        styles: allResolvedStyles,
        styleUrls: allStyleAbsUrls,
        ngContentSelectors: visitor.ngContentSelectors
      });
    };
    TemplateNormalizer = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [xhr_1.XHR, url_resolver_1.UrlResolver, html_parser_1.HtmlParser])], TemplateNormalizer);
    return TemplateNormalizer;
  })();
  exports.TemplateNormalizer = TemplateNormalizer;
  var TemplatePreparseVisitor = (function() {
    function TemplatePreparseVisitor() {
      this.ngContentSelectors = [];
      this.styles = [];
      this.styleUrls = [];
      this.ngNonBindableStackCount = 0;
    }
    TemplatePreparseVisitor.prototype.visitElement = function(ast, context) {
      var preparsedElement = template_preparser_1.preparseElement(ast);
      switch (preparsedElement.type) {
        case template_preparser_1.PreparsedElementType.NG_CONTENT:
          if (this.ngNonBindableStackCount === 0) {
            this.ngContentSelectors.push(preparsedElement.selectAttr);
          }
          break;
        case template_preparser_1.PreparsedElementType.STYLE:
          var textContent = '';
          ast.children.forEach(function(child) {
            if (child instanceof html_ast_1.HtmlTextAst) {
              textContent += child.value;
            }
          });
          this.styles.push(textContent);
          break;
        case template_preparser_1.PreparsedElementType.STYLESHEET:
          this.styleUrls.push(preparsedElement.hrefAttr);
          break;
      }
      if (preparsedElement.nonBindable) {
        this.ngNonBindableStackCount++;
      }
      html_ast_1.htmlVisitAll(this, ast.children);
      if (preparsedElement.nonBindable) {
        this.ngNonBindableStackCount--;
      }
      return null;
    };
    TemplatePreparseVisitor.prototype.visitAttr = function(ast, context) {
      return null;
    };
    TemplatePreparseVisitor.prototype.visitText = function(ast, context) {
      return null;
    };
    return TemplatePreparseVisitor;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/template_preparser", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var NG_CONTENT_SELECT_ATTR = 'select';
  var NG_CONTENT_ELEMENT = 'ng-content';
  var LINK_ELEMENT = 'link';
  var LINK_STYLE_REL_ATTR = 'rel';
  var LINK_STYLE_HREF_ATTR = 'href';
  var LINK_STYLE_REL_VALUE = 'stylesheet';
  var STYLE_ELEMENT = 'style';
  var SCRIPT_ELEMENT = 'script';
  var NG_NON_BINDABLE_ATTR = 'ng-non-bindable';
  function preparseElement(ast) {
    var selectAttr = null;
    var hrefAttr = null;
    var relAttr = null;
    var nonBindable = false;
    ast.attrs.forEach(function(attr) {
      if (attr.name == NG_CONTENT_SELECT_ATTR) {
        selectAttr = attr.value;
      } else if (attr.name == LINK_STYLE_HREF_ATTR) {
        hrefAttr = attr.value;
      } else if (attr.name == LINK_STYLE_REL_ATTR) {
        relAttr = attr.value;
      } else if (attr.name == NG_NON_BINDABLE_ATTR) {
        nonBindable = true;
      }
    });
    selectAttr = normalizeNgContentSelect(selectAttr);
    var nodeName = ast.name;
    var type = PreparsedElementType.OTHER;
    if (nodeName == NG_CONTENT_ELEMENT) {
      type = PreparsedElementType.NG_CONTENT;
    } else if (nodeName == STYLE_ELEMENT) {
      type = PreparsedElementType.STYLE;
    } else if (nodeName == SCRIPT_ELEMENT) {
      type = PreparsedElementType.SCRIPT;
    } else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {
      type = PreparsedElementType.STYLESHEET;
    }
    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable);
  }
  exports.preparseElement = preparseElement;
  (function(PreparsedElementType) {
    PreparsedElementType[PreparsedElementType["NG_CONTENT"] = 0] = "NG_CONTENT";
    PreparsedElementType[PreparsedElementType["STYLE"] = 1] = "STYLE";
    PreparsedElementType[PreparsedElementType["STYLESHEET"] = 2] = "STYLESHEET";
    PreparsedElementType[PreparsedElementType["SCRIPT"] = 3] = "SCRIPT";
    PreparsedElementType[PreparsedElementType["OTHER"] = 4] = "OTHER";
  })(exports.PreparsedElementType || (exports.PreparsedElementType = {}));
  var PreparsedElementType = exports.PreparsedElementType;
  var PreparsedElement = (function() {
    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable) {
      this.type = type;
      this.selectAttr = selectAttr;
      this.hrefAttr = hrefAttr;
      this.nonBindable = nonBindable;
    }
    return PreparsedElement;
  })();
  exports.PreparsedElement = PreparsedElement;
  function normalizeNgContentSelect(selectAttr) {
    if (lang_1.isBlank(selectAttr) || selectAttr.length === 0) {
      return '*';
    }
    return selectAttr;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var ElementSchemaRegistry = (function() {
    function ElementSchemaRegistry() {}
    ElementSchemaRegistry.prototype.hasProperty = function(tagName, propName) {
      return true;
    };
    ElementSchemaRegistry.prototype.getMappedPropName = function(propName) {
      return propName;
    };
    return ElementSchemaRegistry;
  })();
  exports.ElementSchemaRegistry = ElementSchemaRegistry;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/html_ast", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var HtmlTextAst = (function() {
    function HtmlTextAst(value, sourceInfo) {
      this.value = value;
      this.sourceInfo = sourceInfo;
    }
    HtmlTextAst.prototype.visit = function(visitor, context) {
      return visitor.visitText(this, context);
    };
    return HtmlTextAst;
  })();
  exports.HtmlTextAst = HtmlTextAst;
  var HtmlAttrAst = (function() {
    function HtmlAttrAst(name, value, sourceInfo) {
      this.name = name;
      this.value = value;
      this.sourceInfo = sourceInfo;
    }
    HtmlAttrAst.prototype.visit = function(visitor, context) {
      return visitor.visitAttr(this, context);
    };
    return HtmlAttrAst;
  })();
  exports.HtmlAttrAst = HtmlAttrAst;
  var HtmlElementAst = (function() {
    function HtmlElementAst(name, attrs, children, sourceInfo) {
      this.name = name;
      this.attrs = attrs;
      this.children = children;
      this.sourceInfo = sourceInfo;
    }
    HtmlElementAst.prototype.visit = function(visitor, context) {
      return visitor.visitElement(this, context);
    };
    return HtmlElementAst;
  })();
  exports.HtmlElementAst = HtmlElementAst;
  function htmlVisitAll(visitor, asts, context) {
    if (context === void 0) {
      context = null;
    }
    var result = [];
    asts.forEach(function(ast) {
      var astResult = ast.visit(visitor, context);
      if (lang_1.isPresent(astResult)) {
        result.push(astResult);
      }
    });
    return result;
  }
  exports.htmlVisitAll = htmlVisitAll;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/html_parser", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/compiler/html_ast", "npm:angular2@2.0.0-alpha.46/src/compiler/util", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var html_ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/html_ast');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var HtmlParser = (function() {
    function HtmlParser() {}
    HtmlParser.prototype.parse = function(template, sourceInfo) {
      var root = dom_adapter_1.DOM.createTemplate(template);
      return parseChildNodes(root, sourceInfo);
    };
    HtmlParser.prototype.unparse = function(nodes) {
      var visitor = new UnparseVisitor();
      var parts = [];
      html_ast_1.htmlVisitAll(visitor, nodes, parts);
      return parts.join('');
    };
    HtmlParser = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], HtmlParser);
    return HtmlParser;
  })();
  exports.HtmlParser = HtmlParser;
  function parseText(text, indexInParent, parentSourceInfo) {
    var value = dom_adapter_1.DOM.getText(text);
    return new html_ast_1.HtmlTextAst(value, parentSourceInfo + " > #text(" + value + "):nth-child(" + indexInParent + ")");
  }
  function parseAttr(element, parentSourceInfo, attrName, attrValue) {
    return new html_ast_1.HtmlAttrAst(attrName, attrValue, parentSourceInfo + "[" + attrName + "=" + attrValue + "]");
  }
  function parseElement(element, indexInParent, parentSourceInfo) {
    var nodeName = dom_adapter_1.DOM.nodeName(element).toLowerCase();
    var sourceInfo = parentSourceInfo + " > " + nodeName + ":nth-child(" + indexInParent + ")";
    var attrs = parseAttrs(element, sourceInfo);
    var childNodes = parseChildNodes(element, sourceInfo);
    return new html_ast_1.HtmlElementAst(nodeName, attrs, childNodes, sourceInfo);
  }
  function parseAttrs(element, elementSourceInfo) {
    var attrMap = dom_adapter_1.DOM.attributeMap(element);
    var attrList = [];
    attrMap.forEach(function(value, name) {
      return attrList.push([name, value]);
    });
    attrList.sort(function(entry1, entry2) {
      return lang_1.StringWrapper.compare(entry1[0], entry2[0]);
    });
    return attrList.map(function(entry) {
      return parseAttr(element, elementSourceInfo, entry[0], entry[1]);
    });
  }
  function parseChildNodes(element, parentSourceInfo) {
    var root = dom_adapter_1.DOM.templateAwareRoot(element);
    var childNodes = dom_adapter_1.DOM.childNodesAsList(root);
    var result = [];
    var index = 0;
    childNodes.forEach(function(childNode) {
      var childResult = null;
      if (dom_adapter_1.DOM.isTextNode(childNode)) {
        var text = childNode;
        childResult = parseText(text, index, parentSourceInfo);
      } else if (dom_adapter_1.DOM.isElementNode(childNode)) {
        var el = childNode;
        childResult = parseElement(el, index, parentSourceInfo);
      }
      if (lang_1.isPresent(childResult)) {
        result.push(childResult);
      }
      index++;
    });
    return result;
  }
  var UnparseVisitor = (function() {
    function UnparseVisitor() {}
    UnparseVisitor.prototype.visitElement = function(ast, parts) {
      parts.push("<" + ast.name);
      var attrs = [];
      html_ast_1.htmlVisitAll(this, ast.attrs, attrs);
      if (ast.attrs.length > 0) {
        parts.push(' ');
        parts.push(attrs.join(' '));
      }
      parts.push(">");
      html_ast_1.htmlVisitAll(this, ast.children, parts);
      parts.push("</" + ast.name + ">");
      return null;
    };
    UnparseVisitor.prototype.visitAttr = function(ast, parts) {
      parts.push(ast.name + "=" + util_1.escapeDoubleQuoteString(ast.value));
      return null;
    };
    UnparseVisitor.prototype.visitText = function(ast, parts) {
      parts.push(ast.value);
      return null;
    };
    return UnparseVisitor;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/template_parser", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/compiler/html_parser", "npm:angular2@2.0.0-alpha.46/src/compiler/template_ast", "npm:angular2@2.0.0-alpha.46/src/compiler/selector", "npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry", "npm:angular2@2.0.0-alpha.46/src/compiler/template_preparser", "npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver", "npm:angular2@2.0.0-alpha.46/src/compiler/html_ast", "npm:angular2@2.0.0-alpha.46/src/compiler/util", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        return Reflect.decorate(decorators, target, key, desc);
      switch (arguments.length) {
        case 2:
          return decorators.reduceRight(function(o, d) {
            return (d && d(o)) || o;
          }, target);
        case 3:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key)), void 0;
          }, void 0);
        case 4:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key, o)) || o;
          }, desc);
      }
    };
    var __metadata = (this && this.__metadata) || function(k, v) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
    };
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
    var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
    var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
    var html_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/html_parser');
    var template_ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_ast');
    var selector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/selector');
    var element_schema_registry_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry');
    var template_preparser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_preparser');
    var style_url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver');
    var html_ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/html_ast');
    var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
    var BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(var-|#)|(on-)|(bindon-))(.+))|\[\(([^\)]+)\)\]|\[([^\]]+)\]|\(([^\)]+)\))$/g;
    var TEMPLATE_ELEMENT = 'template';
    var TEMPLATE_ATTR = 'template';
    var TEMPLATE_ATTR_PREFIX = '*';
    var CLASS_ATTR = 'class';
    var PROPERTY_PARTS_SEPARATOR = new RegExp('\\.');
    var ATTRIBUTE_PREFIX = 'attr';
    var CLASS_PREFIX = 'class';
    var STYLE_PREFIX = 'style';
    var TEXT_CSS_SELECTOR = selector_1.CssSelector.parse('*')[0];
    var TemplateParser = (function() {
      function TemplateParser(_exprParser, _schemaRegistry, _htmlParser) {
        this._exprParser = _exprParser;
        this._schemaRegistry = _schemaRegistry;
        this._htmlParser = _htmlParser;
      }
      TemplateParser.prototype.parse = function(template, directives, sourceInfo) {
        var parseVisitor = new TemplateParseVisitor(directives, this._exprParser, this._schemaRegistry);
        var result = html_ast_1.htmlVisitAll(parseVisitor, this._htmlParser.parse(template, sourceInfo), EMPTY_COMPONENT);
        if (parseVisitor.errors.length > 0) {
          var errorString = parseVisitor.errors.join('\n');
          throw new exceptions_1.BaseException("Template parse errors:\n" + errorString);
        }
        return result;
      };
      TemplateParser = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [change_detection_1.Parser, element_schema_registry_1.ElementSchemaRegistry, html_parser_1.HtmlParser])], TemplateParser);
      return TemplateParser;
    })();
    exports.TemplateParser = TemplateParser;
    var TemplateParseVisitor = (function() {
      function TemplateParseVisitor(directives, _exprParser, _schemaRegistry) {
        var _this = this;
        this._exprParser = _exprParser;
        this._schemaRegistry = _schemaRegistry;
        this.errors = [];
        this.directivesIndex = new Map();
        this.ngContentCount = 0;
        this.selectorMatcher = new selector_1.SelectorMatcher();
        collection_1.ListWrapper.forEachWithIndex(directives, function(directive, index) {
          var selector = selector_1.CssSelector.parse(directive.selector);
          _this.selectorMatcher.addSelectables(selector, directive);
          _this.directivesIndex.set(directive, index);
        });
      }
      TemplateParseVisitor.prototype._reportError = function(message) {
        this.errors.push(message);
      };
      TemplateParseVisitor.prototype._parseInterpolation = function(value, sourceInfo) {
        try {
          return this._exprParser.parseInterpolation(value, sourceInfo);
        } catch (e) {
          this._reportError("" + e);
          return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._parseAction = function(value, sourceInfo) {
        try {
          return this._exprParser.parseAction(value, sourceInfo);
        } catch (e) {
          this._reportError("" + e);
          return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._parseBinding = function(value, sourceInfo) {
        try {
          return this._exprParser.parseBinding(value, sourceInfo);
        } catch (e) {
          this._reportError("" + e);
          return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._parseTemplateBindings = function(value, sourceInfo) {
        try {
          return this._exprParser.parseTemplateBindings(value, sourceInfo);
        } catch (e) {
          this._reportError("" + e);
          return [];
        }
      };
      TemplateParseVisitor.prototype.visitText = function(ast, component) {
        var ngContentIndex = component.findNgContentIndex(TEXT_CSS_SELECTOR);
        var expr = this._parseInterpolation(ast.value, ast.sourceInfo);
        if (lang_1.isPresent(expr)) {
          return new template_ast_1.BoundTextAst(expr, ngContentIndex, ast.sourceInfo);
        } else {
          return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceInfo);
        }
      };
      TemplateParseVisitor.prototype.visitAttr = function(ast, contex) {
        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceInfo);
      };
      TemplateParseVisitor.prototype.visitElement = function(element, component) {
        var _this = this;
        var nodeName = element.name;
        var preparsedElement = template_preparser_1.preparseElement(element);
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT || preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE) {
          return null;
        }
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET && style_url_resolver_1.isStyleUrlResolvable(preparsedElement.hrefAttr)) {
          return null;
        }
        var matchableAttrs = [];
        var elementOrDirectiveProps = [];
        var vars = [];
        var events = [];
        var templateElementOrDirectiveProps = [];
        var templateVars = [];
        var templateMatchableAttrs = [];
        var hasInlineTemplates = false;
        var attrs = [];
        element.attrs.forEach(function(attr) {
          matchableAttrs.push([attr.name, attr.value]);
          var hasBinding = _this._parseAttr(attr, matchableAttrs, elementOrDirectiveProps, events, vars);
          var hasTemplateBinding = _this._parseInlineTemplateBinding(attr, templateMatchableAttrs, templateElementOrDirectiveProps, templateVars);
          if (!hasBinding && !hasTemplateBinding) {
            attrs.push(_this.visitAttr(attr, null));
          }
          if (hasTemplateBinding) {
            hasInlineTemplates = true;
          }
        });
        var isTemplateElement = nodeName == TEMPLATE_ELEMENT;
        var elementCssSelector = createElementCssSelector(nodeName, matchableAttrs);
        var directives = this._createDirectiveAsts(element.name, this._parseDirectives(this.selectorMatcher, elementCssSelector), elementOrDirectiveProps, isTemplateElement ? [] : vars, element.sourceInfo);
        var elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, directives);
        var children = html_ast_1.htmlVisitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, Component.create(directives));
        var elementNgContentIndex = hasInlineTemplates ? null : component.findNgContentIndex(elementCssSelector);
        var parsedElement;
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.NG_CONTENT) {
          parsedElement = new template_ast_1.NgContentAst(this.ngContentCount++, elementNgContentIndex, element.sourceInfo);
        } else if (isTemplateElement) {
          this._assertAllEventsPublishedByDirectives(directives, events, element.sourceInfo);
          this._assertNoComponentsNorElementBindingsOnTemplate(directives, elementProps, element.sourceInfo);
          parsedElement = new template_ast_1.EmbeddedTemplateAst(attrs, events, vars, directives, children, elementNgContentIndex, element.sourceInfo);
        } else {
          this._assertOnlyOneComponent(directives, element.sourceInfo);
          var elementExportAsVars = vars.filter(function(varAst) {
            return varAst.value.length === 0;
          });
          parsedElement = new template_ast_1.ElementAst(nodeName, attrs, elementProps, events, elementExportAsVars, directives, children, elementNgContentIndex, element.sourceInfo);
        }
        if (hasInlineTemplates) {
          var templateCssSelector = createElementCssSelector(TEMPLATE_ELEMENT, templateMatchableAttrs);
          var templateDirectives = this._createDirectiveAsts(element.name, this._parseDirectives(this.selectorMatcher, templateCssSelector), templateElementOrDirectiveProps, [], element.sourceInfo);
          var templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateDirectives);
          this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectives, templateElementProps, element.sourceInfo);
          parsedElement = new template_ast_1.EmbeddedTemplateAst([], [], templateVars, templateDirectives, [parsedElement], component.findNgContentIndex(templateCssSelector), element.sourceInfo);
        }
        return parsedElement;
      };
      TemplateParseVisitor.prototype._parseInlineTemplateBinding = function(attr, targetMatchableAttrs, targetProps, targetVars) {
        var templateBindingsSource = null;
        if (attr.name == TEMPLATE_ATTR) {
          templateBindingsSource = attr.value;
        } else if (attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {
          var key = attr.name.substring(TEMPLATE_ATTR_PREFIX.length);
          templateBindingsSource = (attr.value.length == 0) ? key : key + ' ' + attr.value;
        }
        if (lang_1.isPresent(templateBindingsSource)) {
          var bindings = this._parseTemplateBindings(templateBindingsSource, attr.sourceInfo);
          for (var i = 0; i < bindings.length; i++) {
            var binding = bindings[i];
            var dashCaseKey = util_1.camelCaseToDashCase(binding.key);
            if (binding.keyIsVar) {
              targetVars.push(new template_ast_1.VariableAst(util_1.dashCaseToCamelCase(binding.key), binding.name, attr.sourceInfo));
              targetMatchableAttrs.push([dashCaseKey, binding.name]);
            } else if (lang_1.isPresent(binding.expression)) {
              this._parsePropertyAst(dashCaseKey, binding.expression, attr.sourceInfo, targetMatchableAttrs, targetProps);
            } else {
              targetMatchableAttrs.push([dashCaseKey, '']);
              this._parseLiteralAttr(dashCaseKey, null, attr.sourceInfo, targetProps);
            }
          }
          return true;
        }
        return false;
      };
      TemplateParseVisitor.prototype._parseAttr = function(attr, targetMatchableAttrs, targetProps, targetEvents, targetVars) {
        var attrName = this._normalizeAttributeName(attr.name);
        var attrValue = attr.value;
        var bindParts = lang_1.RegExpWrapper.firstMatch(BIND_NAME_REGEXP, attrName);
        var hasBinding = false;
        if (lang_1.isPresent(bindParts)) {
          hasBinding = true;
          if (lang_1.isPresent(bindParts[1])) {
            this._parseProperty(bindParts[5], attrValue, attr.sourceInfo, targetMatchableAttrs, targetProps);
          } else if (lang_1.isPresent(bindParts[2])) {
            var identifier = bindParts[5];
            this._parseVariable(identifier, attrValue, attr.sourceInfo, targetVars);
          } else if (lang_1.isPresent(bindParts[3])) {
            this._parseEvent(bindParts[5], attrValue, attr.sourceInfo, targetMatchableAttrs, targetEvents);
          } else if (lang_1.isPresent(bindParts[4])) {
            this._parseProperty(bindParts[5], attrValue, attr.sourceInfo, targetMatchableAttrs, targetProps);
            this._parseAssignmentEvent(bindParts[5], attrValue, attr.sourceInfo, targetMatchableAttrs, targetEvents);
          } else if (lang_1.isPresent(bindParts[6])) {
            this._parseProperty(bindParts[6], attrValue, attr.sourceInfo, targetMatchableAttrs, targetProps);
            this._parseAssignmentEvent(bindParts[6], attrValue, attr.sourceInfo, targetMatchableAttrs, targetEvents);
          } else if (lang_1.isPresent(bindParts[7])) {
            this._parseProperty(bindParts[7], attrValue, attr.sourceInfo, targetMatchableAttrs, targetProps);
          } else if (lang_1.isPresent(bindParts[8])) {
            this._parseEvent(bindParts[8], attrValue, attr.sourceInfo, targetMatchableAttrs, targetEvents);
          }
        } else {
          hasBinding = this._parsePropertyInterpolation(attrName, attrValue, attr.sourceInfo, targetMatchableAttrs, targetProps);
        }
        if (!hasBinding) {
          this._parseLiteralAttr(attrName, attrValue, attr.sourceInfo, targetProps);
        }
        return hasBinding;
      };
      TemplateParseVisitor.prototype._normalizeAttributeName = function(attrName) {
        return attrName.startsWith('data-') ? attrName.substring(5) : attrName;
      };
      TemplateParseVisitor.prototype._parseVariable = function(identifier, value, sourceInfo, targetVars) {
        targetVars.push(new template_ast_1.VariableAst(util_1.dashCaseToCamelCase(identifier), value, sourceInfo));
      };
      TemplateParseVisitor.prototype._parseProperty = function(name, expression, sourceInfo, targetMatchableAttrs, targetProps) {
        this._parsePropertyAst(name, this._parseBinding(expression, sourceInfo), sourceInfo, targetMatchableAttrs, targetProps);
      };
      TemplateParseVisitor.prototype._parsePropertyInterpolation = function(name, value, sourceInfo, targetMatchableAttrs, targetProps) {
        var expr = this._parseInterpolation(value, sourceInfo);
        if (lang_1.isPresent(expr)) {
          this._parsePropertyAst(name, expr, sourceInfo, targetMatchableAttrs, targetProps);
          return true;
        }
        return false;
      };
      TemplateParseVisitor.prototype._parsePropertyAst = function(name, ast, sourceInfo, targetMatchableAttrs, targetProps) {
        targetMatchableAttrs.push([name, ast.source]);
        targetProps.push(new BoundElementOrDirectiveProperty(name, ast, false, sourceInfo));
      };
      TemplateParseVisitor.prototype._parseAssignmentEvent = function(name, expression, sourceInfo, targetMatchableAttrs, targetEvents) {
        this._parseEvent(name + "-change", expression + "=$event", sourceInfo, targetMatchableAttrs, targetEvents);
      };
      TemplateParseVisitor.prototype._parseEvent = function(name, expression, sourceInfo, targetMatchableAttrs, targetEvents) {
        var parts = util_1.splitAtColon(name, [null, name]);
        var target = parts[0];
        var eventName = parts[1];
        targetEvents.push(new template_ast_1.BoundEventAst(util_1.dashCaseToCamelCase(eventName), target, this._parseAction(expression, sourceInfo), sourceInfo));
      };
      TemplateParseVisitor.prototype._parseLiteralAttr = function(name, value, sourceInfo, targetProps) {
        targetProps.push(new BoundElementOrDirectiveProperty(util_1.dashCaseToCamelCase(name), this._exprParser.wrapLiteralPrimitive(value, sourceInfo), true, sourceInfo));
      };
      TemplateParseVisitor.prototype._parseDirectives = function(selectorMatcher, elementCssSelector) {
        var _this = this;
        var directives = [];
        selectorMatcher.match(elementCssSelector, function(selector, directive) {
          directives.push(directive);
        });
        collection_1.ListWrapper.sort(directives, function(dir1, dir2) {
          var dir1Comp = dir1.isComponent;
          var dir2Comp = dir2.isComponent;
          if (dir1Comp && !dir2Comp) {
            return -1;
          } else if (!dir1Comp && dir2Comp) {
            return 1;
          } else {
            return _this.directivesIndex.get(dir1) - _this.directivesIndex.get(dir2);
          }
        });
        return directives;
      };
      TemplateParseVisitor.prototype._createDirectiveAsts = function(elementName, directives, props, possibleExportAsVars, sourceInfo) {
        var _this = this;
        var matchedVariables = new Set();
        var directiveAsts = directives.map(function(directive) {
          var hostProperties = [];
          var hostEvents = [];
          var directiveProperties = [];
          _this._createDirectiveHostPropertyAsts(elementName, directive.hostProperties, sourceInfo, hostProperties);
          _this._createDirectiveHostEventAsts(directive.hostListeners, sourceInfo, hostEvents);
          _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties);
          var exportAsVars = [];
          possibleExportAsVars.forEach(function(varAst) {
            if ((varAst.value.length === 0 && directive.isComponent) || (directive.exportAs == varAst.value)) {
              exportAsVars.push(varAst);
              matchedVariables.add(varAst.name);
            }
          });
          return new template_ast_1.DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, exportAsVars, sourceInfo);
        });
        possibleExportAsVars.forEach(function(varAst) {
          if (varAst.value.length > 0 && !collection_1.SetWrapper.has(matchedVariables, varAst.name)) {
            _this._reportError("There is no directive with \"exportAs\" set to \"" + varAst.value + "\" at " + varAst.sourceInfo);
          }
        });
        return directiveAsts;
      };
      TemplateParseVisitor.prototype._createDirectiveHostPropertyAsts = function(elementName, hostProps, sourceInfo, targetPropertyAsts) {
        var _this = this;
        if (lang_1.isPresent(hostProps)) {
          collection_1.StringMapWrapper.forEach(hostProps, function(expression, propName) {
            var exprAst = _this._parseBinding(expression, sourceInfo);
            targetPropertyAsts.push(_this._createElementPropertyAst(elementName, propName, exprAst, sourceInfo));
          });
        }
      };
      TemplateParseVisitor.prototype._createDirectiveHostEventAsts = function(hostListeners, sourceInfo, targetEventAsts) {
        var _this = this;
        if (lang_1.isPresent(hostListeners)) {
          collection_1.StringMapWrapper.forEach(hostListeners, function(expression, propName) {
            _this._parseEvent(propName, expression, sourceInfo, [], targetEventAsts);
          });
        }
      };
      TemplateParseVisitor.prototype._createDirectivePropertyAsts = function(directiveProperties, boundProps, targetBoundDirectiveProps) {
        if (lang_1.isPresent(directiveProperties)) {
          var boundPropsByName = new Map();
          boundProps.forEach(function(boundProp) {
            var key = util_1.dashCaseToCamelCase(boundProp.name);
            var prevValue = boundPropsByName.get(boundProp.name);
            if (lang_1.isBlank(prevValue) || prevValue.isLiteral) {
              boundPropsByName.set(key, boundProp);
            }
          });
          collection_1.StringMapWrapper.forEach(directiveProperties, function(elProp, dirProp) {
            elProp = util_1.dashCaseToCamelCase(elProp);
            var boundProp = boundPropsByName.get(elProp);
            if (lang_1.isPresent(boundProp)) {
              targetBoundDirectiveProps.push(new template_ast_1.BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceInfo));
            }
          });
        }
      };
      TemplateParseVisitor.prototype._createElementPropertyAsts = function(elementName, props, directives) {
        var _this = this;
        var boundElementProps = [];
        var boundDirectivePropsIndex = new Map();
        directives.forEach(function(directive) {
          directive.inputs.forEach(function(prop) {
            boundDirectivePropsIndex.set(prop.templateName, prop);
          });
        });
        props.forEach(function(prop) {
          if (!prop.isLiteral && lang_1.isBlank(boundDirectivePropsIndex.get(prop.name))) {
            boundElementProps.push(_this._createElementPropertyAst(elementName, prop.name, prop.expression, prop.sourceInfo));
          }
        });
        return boundElementProps;
      };
      TemplateParseVisitor.prototype._createElementPropertyAst = function(elementName, name, ast, sourceInfo) {
        var unit = null;
        var bindingType;
        var boundPropertyName;
        var parts = lang_1.StringWrapper.split(name, PROPERTY_PARTS_SEPARATOR);
        if (parts.length === 1) {
          boundPropertyName = this._schemaRegistry.getMappedPropName(util_1.dashCaseToCamelCase(parts[0]));
          bindingType = template_ast_1.PropertyBindingType.Property;
          if (!this._schemaRegistry.hasProperty(elementName, boundPropertyName)) {
            this._reportError("Can't bind to '" + boundPropertyName + "' since it isn't a known native property in " + sourceInfo);
          }
        } else if (parts[0] == ATTRIBUTE_PREFIX) {
          boundPropertyName = util_1.dashCaseToCamelCase(parts[1]);
          bindingType = template_ast_1.PropertyBindingType.Attribute;
        } else if (parts[0] == CLASS_PREFIX) {
          boundPropertyName = parts[1];
          bindingType = template_ast_1.PropertyBindingType.Class;
        } else if (parts[0] == STYLE_PREFIX) {
          unit = parts.length > 2 ? parts[2] : null;
          boundPropertyName = util_1.dashCaseToCamelCase(parts[1]);
          bindingType = template_ast_1.PropertyBindingType.Style;
        } else {
          this._reportError("Invalid property name " + name + " in " + sourceInfo);
          bindingType = null;
        }
        return new template_ast_1.BoundElementPropertyAst(boundPropertyName, bindingType, ast, unit, sourceInfo);
      };
      TemplateParseVisitor.prototype._findComponentDirectiveNames = function(directives) {
        var componentTypeNames = [];
        directives.forEach(function(directive) {
          var typeName = directive.directive.type.name;
          if (directive.directive.isComponent) {
            componentTypeNames.push(typeName);
          }
        });
        return componentTypeNames;
      };
      TemplateParseVisitor.prototype._assertOnlyOneComponent = function(directives, sourceInfo) {
        var componentTypeNames = this._findComponentDirectiveNames(directives);
        if (componentTypeNames.length > 1) {
          this._reportError("More than one component: " + componentTypeNames.join(',') + " in " + sourceInfo);
        }
      };
      TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = function(directives, elementProps, sourceInfo) {
        var _this = this;
        var componentTypeNames = this._findComponentDirectiveNames(directives);
        if (componentTypeNames.length > 0) {
          this._reportError("Components on an embedded template: " + componentTypeNames.join(',') + " in " + sourceInfo);
        }
        elementProps.forEach(function(prop) {
          _this._reportError("Property binding " + prop.name + " not used by any directive on an embedded template in " + prop.sourceInfo);
        });
      };
      TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = function(directives, events, sourceInfo) {
        var _this = this;
        var allDirectiveEvents = new Set();
        directives.forEach(function(directive) {
          collection_1.StringMapWrapper.forEach(directive.directive.outputs, function(eventName, _) {
            allDirectiveEvents.add(eventName);
          });
        });
        events.forEach(function(event) {
          if (lang_1.isPresent(event.target) || !collection_1.SetWrapper.has(allDirectiveEvents, event.name)) {
            _this._reportError("Event binding " + event.fullName + " not emitted by any directive on an embedded template in " + sourceInfo);
          }
        });
      };
      return TemplateParseVisitor;
    })();
    var NonBindableVisitor = (function() {
      function NonBindableVisitor() {}
      NonBindableVisitor.prototype.visitElement = function(ast, component) {
        var preparsedElement = template_preparser_1.preparseElement(ast);
        if (preparsedElement.type === template_preparser_1.PreparsedElementType.SCRIPT || preparsedElement.type === template_preparser_1.PreparsedElementType.STYLE || preparsedElement.type === template_preparser_1.PreparsedElementType.STYLESHEET) {
          return null;
        }
        var attrNameAndValues = ast.attrs.map(function(attrAst) {
          return [attrAst.name, attrAst.value];
        });
        var selector = createElementCssSelector(ast.name, attrNameAndValues);
        var ngContentIndex = component.findNgContentIndex(selector);
        var children = html_ast_1.htmlVisitAll(this, ast.children, EMPTY_COMPONENT);
        return new template_ast_1.ElementAst(ast.name, html_ast_1.htmlVisitAll(this, ast.attrs), [], [], [], [], children, ngContentIndex, ast.sourceInfo);
      };
      NonBindableVisitor.prototype.visitAttr = function(ast, context) {
        return new template_ast_1.AttrAst(ast.name, ast.value, ast.sourceInfo);
      };
      NonBindableVisitor.prototype.visitText = function(ast, component) {
        var ngContentIndex = component.findNgContentIndex(TEXT_CSS_SELECTOR);
        return new template_ast_1.TextAst(ast.value, ngContentIndex, ast.sourceInfo);
      };
      return NonBindableVisitor;
    })();
    var BoundElementOrDirectiveProperty = (function() {
      function BoundElementOrDirectiveProperty(name, expression, isLiteral, sourceInfo) {
        this.name = name;
        this.expression = expression;
        this.isLiteral = isLiteral;
        this.sourceInfo = sourceInfo;
      }
      return BoundElementOrDirectiveProperty;
    })();
    function splitClasses(classAttrValue) {
      return lang_1.StringWrapper.split(classAttrValue.trim(), /\s+/g);
    }
    exports.splitClasses = splitClasses;
    var Component = (function() {
      function Component(ngContentIndexMatcher, wildcardNgContentIndex) {
        this.ngContentIndexMatcher = ngContentIndexMatcher;
        this.wildcardNgContentIndex = wildcardNgContentIndex;
      }
      Component.create = function(directives) {
        if (directives.length === 0 || !directives[0].directive.isComponent) {
          return EMPTY_COMPONENT;
        }
        var matcher = new selector_1.SelectorMatcher();
        var ngContentSelectors = directives[0].directive.template.ngContentSelectors;
        var wildcardNgContentIndex = null;
        for (var i = 0; i < ngContentSelectors.length; i++) {
          var selector = ngContentSelectors[i];
          if (lang_1.StringWrapper.equals(selector, '*')) {
            wildcardNgContentIndex = i;
          } else {
            matcher.addSelectables(selector_1.CssSelector.parse(ngContentSelectors[i]), i);
          }
        }
        return new Component(matcher, wildcardNgContentIndex);
      };
      Component.prototype.findNgContentIndex = function(selector) {
        var ngContentIndices = [];
        this.ngContentIndexMatcher.match(selector, function(selector, ngContentIndex) {
          ngContentIndices.push(ngContentIndex);
        });
        collection_1.ListWrapper.sort(ngContentIndices);
        if (lang_1.isPresent(this.wildcardNgContentIndex)) {
          ngContentIndices.push(this.wildcardNgContentIndex);
        }
        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;
      };
      return Component;
    })();
    function createElementCssSelector(elementName, matchableAttrs) {
      var cssSelector = new selector_1.CssSelector();
      cssSelector.setElement(elementName);
      for (var i = 0; i < matchableAttrs.length; i++) {
        var attrName = matchableAttrs[i][0].toLowerCase();
        var attrValue = matchableAttrs[i][1];
        cssSelector.addAttribute(attrName, attrValue);
        if (attrName == CLASS_ATTR) {
          var classes = splitClasses(attrValue);
          classes.forEach(function(className) {
            return cssSelector.addClassName(className);
          });
        }
      }
      return cssSelector;
    }
    var EMPTY_COMPONENT = new Component(new selector_1.SelectorMatcher(), null);
    var NON_BINDABLE_VISITOR = new NonBindableVisitor();
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/command_compiler", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands", "npm:angular2@2.0.0-alpha.46/src/compiler/template_ast", "npm:angular2@2.0.0-alpha.46/src/compiler/source_module", "npm:angular2@2.0.0-alpha.46/src/compiler/util", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var template_commands_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands');
  var template_ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_ast');
  var source_module_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/source_module');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  exports.TEMPLATE_COMMANDS_MODULE_REF = source_module_1.moduleRef("package:angular2/src/core/linker/template_commands" + util_1.MODULE_SUFFIX);
  var IMPLICIT_TEMPLATE_VAR = '\$implicit';
  var CLASS_ATTR = 'class';
  var STYLE_ATTR = 'style';
  var CommandCompiler = (function() {
    function CommandCompiler() {}
    CommandCompiler.prototype.compileComponentRuntime = function(component, template, changeDetectorFactories, componentTemplateFactory) {
      var visitor = new CommandBuilderVisitor(new RuntimeCommandFactory(component, componentTemplateFactory, changeDetectorFactories), 0);
      template_ast_1.templateVisitAll(visitor, template);
      return visitor.result;
    };
    CommandCompiler.prototype.compileComponentCodeGen = function(component, template, changeDetectorFactoryExpressions, componentTemplateFactory) {
      var visitor = new CommandBuilderVisitor(new CodegenCommandFactory(component, componentTemplateFactory, changeDetectorFactoryExpressions), 0);
      template_ast_1.templateVisitAll(visitor, template);
      return new source_module_1.SourceExpression([], codeGenArray(visitor.result));
    };
    CommandCompiler = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], CommandCompiler);
    return CommandCompiler;
  })();
  exports.CommandCompiler = CommandCompiler;
  var RuntimeCommandFactory = (function() {
    function RuntimeCommandFactory(component, componentTemplateFactory, changeDetectorFactories) {
      this.component = component;
      this.componentTemplateFactory = componentTemplateFactory;
      this.changeDetectorFactories = changeDetectorFactories;
    }
    RuntimeCommandFactory.prototype._mapDirectives = function(directives) {
      return directives.map(function(directive) {
        return directive.type.runtime;
      });
    };
    RuntimeCommandFactory.prototype.createText = function(value, isBound, ngContentIndex) {
      return new template_commands_1.TextCmd(value, isBound, ngContentIndex);
    };
    RuntimeCommandFactory.prototype.createNgContent = function(index, ngContentIndex) {
      return new template_commands_1.NgContentCmd(index, ngContentIndex);
    };
    RuntimeCommandFactory.prototype.createBeginElement = function(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, isBound, ngContentIndex) {
      return new template_commands_1.BeginElementCmd(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, this._mapDirectives(directives), isBound, ngContentIndex);
    };
    RuntimeCommandFactory.prototype.createEndElement = function() {
      return new template_commands_1.EndElementCmd();
    };
    RuntimeCommandFactory.prototype.createBeginComponent = function(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, encapsulation, ngContentIndex) {
      var nestedTemplateAccessor = this.componentTemplateFactory(directives[0]);
      return new template_commands_1.BeginComponentCmd(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, this._mapDirectives(directives), encapsulation, ngContentIndex, nestedTemplateAccessor);
    };
    RuntimeCommandFactory.prototype.createEndComponent = function() {
      return new template_commands_1.EndComponentCmd();
    };
    RuntimeCommandFactory.prototype.createEmbeddedTemplate = function(embeddedTemplateIndex, attrNameAndValues, variableNameAndValues, directives, isMerged, ngContentIndex, children) {
      return new template_commands_1.EmbeddedTemplateCmd(attrNameAndValues, variableNameAndValues, this._mapDirectives(directives), isMerged, ngContentIndex, this.changeDetectorFactories[embeddedTemplateIndex], children);
    };
    return RuntimeCommandFactory;
  })();
  var CodegenCommandFactory = (function() {
    function CodegenCommandFactory(component, componentTemplateFactory, changeDetectorFactoryExpressions) {
      this.component = component;
      this.componentTemplateFactory = componentTemplateFactory;
      this.changeDetectorFactoryExpressions = changeDetectorFactoryExpressions;
    }
    CodegenCommandFactory.prototype.createText = function(value, isBound, ngContentIndex) {
      return new Expression(util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'TextCmd') + "(" + util_1.escapeSingleQuoteString(value) + ", " + isBound + ", " + ngContentIndex + ")");
    };
    CodegenCommandFactory.prototype.createNgContent = function(index, ngContentIndex) {
      return new Expression(util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'NgContentCmd') + "(" + index + ", " + ngContentIndex + ")");
    };
    CodegenCommandFactory.prototype.createBeginElement = function(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, isBound, ngContentIndex) {
      var attrsExpression = codeGenArray(attrNameAndValues);
      return new Expression((util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'BeginElementCmd') + "(" + util_1.escapeSingleQuoteString(name) + ", " + attrsExpression + ", ") + (codeGenArray(eventTargetAndNames) + ", " + codeGenArray(variableNameAndValues) + ", " + codeGenDirectivesArray(directives) + ", " + isBound + ", " + ngContentIndex + ")"));
    };
    CodegenCommandFactory.prototype.createEndElement = function() {
      return new Expression(util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'EndElementCmd') + "()");
    };
    CodegenCommandFactory.prototype.createBeginComponent = function(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, encapsulation, ngContentIndex) {
      var attrsExpression = codeGenArray(attrNameAndValues);
      return new Expression((util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'BeginComponentCmd') + "(" + util_1.escapeSingleQuoteString(name) + ", " + attrsExpression + ", ") + (codeGenArray(eventTargetAndNames) + ", " + codeGenArray(variableNameAndValues) + ", " + codeGenDirectivesArray(directives) + ", " + codeGenViewEncapsulation(encapsulation) + ", " + ngContentIndex + ", " + this.componentTemplateFactory(directives[0]) + ")"));
    };
    CodegenCommandFactory.prototype.createEndComponent = function() {
      return new Expression(util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'EndComponentCmd') + "()");
    };
    CodegenCommandFactory.prototype.createEmbeddedTemplate = function(embeddedTemplateIndex, attrNameAndValues, variableNameAndValues, directives, isMerged, ngContentIndex, children) {
      return new Expression((util_1.codeGenConstConstructorCall(exports.TEMPLATE_COMMANDS_MODULE_REF + 'EmbeddedTemplateCmd') + "(" + codeGenArray(attrNameAndValues) + ", " + codeGenArray(variableNameAndValues) + ", ") + (codeGenDirectivesArray(directives) + ", " + isMerged + ", " + ngContentIndex + ", " + this.changeDetectorFactoryExpressions[embeddedTemplateIndex] + ", " + codeGenArray(children) + ")"));
    };
    return CodegenCommandFactory;
  })();
  function visitAndReturnContext(visitor, asts, context) {
    template_ast_1.templateVisitAll(visitor, asts, context);
    return context;
  }
  var CommandBuilderVisitor = (function() {
    function CommandBuilderVisitor(commandFactory, embeddedTemplateIndex) {
      this.commandFactory = commandFactory;
      this.embeddedTemplateIndex = embeddedTemplateIndex;
      this.result = [];
      this.transitiveNgContentCount = 0;
    }
    CommandBuilderVisitor.prototype._readAttrNameAndValues = function(directives, attrAsts) {
      var attrs = keyValueArrayToMap(visitAndReturnContext(this, attrAsts, []));
      directives.forEach(function(directiveMeta) {
        collection_1.StringMapWrapper.forEach(directiveMeta.hostAttributes, function(value, name) {
          var prevValue = attrs[name];
          attrs[name] = lang_1.isPresent(prevValue) ? mergeAttributeValue(name, prevValue, value) : value;
        });
      });
      return mapToKeyValueArray(attrs);
    };
    CommandBuilderVisitor.prototype.visitNgContent = function(ast, context) {
      this.transitiveNgContentCount++;
      this.result.push(this.commandFactory.createNgContent(ast.index, ast.ngContentIndex));
      return null;
    };
    CommandBuilderVisitor.prototype.visitEmbeddedTemplate = function(ast, context) {
      var _this = this;
      this.embeddedTemplateIndex++;
      var childVisitor = new CommandBuilderVisitor(this.commandFactory, this.embeddedTemplateIndex);
      template_ast_1.templateVisitAll(childVisitor, ast.children);
      var isMerged = childVisitor.transitiveNgContentCount > 0;
      var variableNameAndValues = [];
      ast.vars.forEach(function(varAst) {
        variableNameAndValues.push(varAst.name);
        variableNameAndValues.push(varAst.value.length > 0 ? varAst.value : IMPLICIT_TEMPLATE_VAR);
      });
      var directives = [];
      collection_1.ListWrapper.forEachWithIndex(ast.directives, function(directiveAst, index) {
        directiveAst.visit(_this, new DirectiveContext(index, [], [], directives));
      });
      this.result.push(this.commandFactory.createEmbeddedTemplate(this.embeddedTemplateIndex, this._readAttrNameAndValues(directives, ast.attrs), variableNameAndValues, directives, isMerged, ast.ngContentIndex, childVisitor.result));
      this.transitiveNgContentCount += childVisitor.transitiveNgContentCount;
      this.embeddedTemplateIndex = childVisitor.embeddedTemplateIndex;
      return null;
    };
    CommandBuilderVisitor.prototype.visitElement = function(ast, context) {
      var _this = this;
      var component = ast.getComponent();
      var eventTargetAndNames = visitAndReturnContext(this, ast.outputs, []);
      var variableNameAndValues = [];
      if (lang_1.isBlank(component)) {
        ast.exportAsVars.forEach(function(varAst) {
          variableNameAndValues.push(varAst.name);
          variableNameAndValues.push(null);
        });
      }
      var directives = [];
      collection_1.ListWrapper.forEachWithIndex(ast.directives, function(directiveAst, index) {
        directiveAst.visit(_this, new DirectiveContext(index, eventTargetAndNames, variableNameAndValues, directives));
      });
      eventTargetAndNames = removeKeyValueArrayDuplicates(eventTargetAndNames);
      var attrNameAndValues = this._readAttrNameAndValues(directives, ast.attrs);
      if (lang_1.isPresent(component)) {
        this.result.push(this.commandFactory.createBeginComponent(ast.name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, component.template.encapsulation, ast.ngContentIndex));
        template_ast_1.templateVisitAll(this, ast.children);
        this.result.push(this.commandFactory.createEndComponent());
      } else {
        this.result.push(this.commandFactory.createBeginElement(ast.name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, ast.isBound(), ast.ngContentIndex));
        template_ast_1.templateVisitAll(this, ast.children);
        this.result.push(this.commandFactory.createEndElement());
      }
      return null;
    };
    CommandBuilderVisitor.prototype.visitVariable = function(ast, ctx) {
      return null;
    };
    CommandBuilderVisitor.prototype.visitAttr = function(ast, attrNameAndValues) {
      attrNameAndValues.push(ast.name);
      attrNameAndValues.push(ast.value);
      return null;
    };
    CommandBuilderVisitor.prototype.visitBoundText = function(ast, context) {
      this.result.push(this.commandFactory.createText(null, true, ast.ngContentIndex));
      return null;
    };
    CommandBuilderVisitor.prototype.visitText = function(ast, context) {
      this.result.push(this.commandFactory.createText(ast.value, false, ast.ngContentIndex));
      return null;
    };
    CommandBuilderVisitor.prototype.visitDirective = function(ast, ctx) {
      ctx.targetDirectives.push(ast.directive);
      template_ast_1.templateVisitAll(this, ast.hostEvents, ctx.eventTargetAndNames);
      ast.exportAsVars.forEach(function(varAst) {
        ctx.targetVariableNameAndValues.push(varAst.name);
        ctx.targetVariableNameAndValues.push(ctx.index);
      });
      return null;
    };
    CommandBuilderVisitor.prototype.visitEvent = function(ast, eventTargetAndNames) {
      eventTargetAndNames.push(ast.target);
      eventTargetAndNames.push(ast.name);
      return null;
    };
    CommandBuilderVisitor.prototype.visitDirectiveProperty = function(ast, context) {
      return null;
    };
    CommandBuilderVisitor.prototype.visitElementProperty = function(ast, context) {
      return null;
    };
    return CommandBuilderVisitor;
  })();
  function removeKeyValueArrayDuplicates(keyValueArray) {
    var knownPairs = new Set();
    var resultKeyValueArray = [];
    for (var i = 0; i < keyValueArray.length; i += 2) {
      var key = keyValueArray[i];
      var value = keyValueArray[i + 1];
      var pairId = key + ":" + value;
      if (!collection_1.SetWrapper.has(knownPairs, pairId)) {
        resultKeyValueArray.push(key);
        resultKeyValueArray.push(value);
        knownPairs.add(pairId);
      }
    }
    return resultKeyValueArray;
  }
  function keyValueArrayToMap(keyValueArr) {
    var data = {};
    for (var i = 0; i < keyValueArr.length; i += 2) {
      data[keyValueArr[i]] = keyValueArr[i + 1];
    }
    return data;
  }
  function mapToKeyValueArray(data) {
    var entryArray = [];
    collection_1.StringMapWrapper.forEach(data, function(value, name) {
      entryArray.push([name, value]);
    });
    collection_1.ListWrapper.sort(entryArray, function(entry1, entry2) {
      return lang_1.StringWrapper.compare(entry1[0], entry2[0]);
    });
    var keyValueArray = [];
    entryArray.forEach(function(entry) {
      keyValueArray.push(entry[0]);
      keyValueArray.push(entry[1]);
    });
    return keyValueArray;
  }
  function mergeAttributeValue(attrName, attrValue1, attrValue2) {
    if (attrName == CLASS_ATTR || attrName == STYLE_ATTR) {
      return attrValue1 + " " + attrValue2;
    } else {
      return attrValue2;
    }
  }
  var DirectiveContext = (function() {
    function DirectiveContext(index, eventTargetAndNames, targetVariableNameAndValues, targetDirectives) {
      this.index = index;
      this.eventTargetAndNames = eventTargetAndNames;
      this.targetVariableNameAndValues = targetVariableNameAndValues;
      this.targetDirectives = targetDirectives;
    }
    return DirectiveContext;
  })();
  var Expression = (function() {
    function Expression(value) {
      this.value = value;
    }
    return Expression;
  })();
  function escapeValue(value) {
    if (value instanceof Expression) {
      return value.value;
    } else if (lang_1.isString(value)) {
      return util_1.escapeSingleQuoteString(value);
    } else if (lang_1.isBlank(value)) {
      return 'null';
    } else {
      return "" + value;
    }
  }
  function codeGenArray(data) {
    var base = "[" + data.map(escapeValue).join(',') + "]";
    return lang_1.IS_DART ? "const " + base : base;
  }
  function codeGenDirectivesArray(directives) {
    var expressions = directives.map(function(directiveType) {
      return ("" + source_module_1.moduleRef(directiveType.type.moduleUrl) + directiveType.type.name);
    });
    var base = "[" + expressions.join(',') + "]";
    return lang_1.IS_DART ? "const " + base : base;
  }
  function codeGenViewEncapsulation(value) {
    if (lang_1.IS_DART) {
      return "" + exports.TEMPLATE_COMMANDS_MODULE_REF + value;
    } else {
      return "" + value;
    }
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var StyleWithImports = (function() {
    function StyleWithImports(style, styleUrls) {
      this.style = style;
      this.styleUrls = styleUrls;
    }
    return StyleWithImports;
  })();
  exports.StyleWithImports = StyleWithImports;
  function isStyleUrlResolvable(url) {
    if (lang_1.isBlank(url) || url.length === 0 || url[0] == '/')
      return false;
    var schemeMatch = lang_1.RegExpWrapper.firstMatch(_urlWithSchemaRe, url);
    return lang_1.isBlank(schemeMatch) || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';
  }
  exports.isStyleUrlResolvable = isStyleUrlResolvable;
  function extractStyleUrls(resolver, baseUrl, cssText) {
    var foundUrls = [];
    var modifiedCssText = lang_1.StringWrapper.replaceAllMapped(cssText, _cssImportRe, function(m) {
      var url = lang_1.isPresent(m[1]) ? m[1] : m[2];
      if (!isStyleUrlResolvable(url)) {
        return m[0];
      }
      foundUrls.push(resolver.resolve(baseUrl, url));
      return '';
    });
    return new StyleWithImports(modifiedCssText, foundUrls);
  }
  exports.extractStyleUrls = extractStyleUrls;
  var _cssImportRe = /@import\s+(?:url\()?\s*(?:(?:['"]([^'"]*))|([^;\)\s]*))[^;]*;?/g;
  var _urlWithSchemaRe = /^([a-zA-Z\-\+\.]+):/g;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  function createWithoutPackagePrefix() {
    return new UrlResolver();
  }
  exports.createWithoutPackagePrefix = createWithoutPackagePrefix;
  var UrlResolver = (function() {
    function UrlResolver() {}
    UrlResolver.prototype.resolve = function(baseUrl, url) {
      return _resolveUrl(baseUrl, url);
    };
    UrlResolver = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], UrlResolver);
    return UrlResolver;
  })();
  exports.UrlResolver = UrlResolver;
  function _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
    var out = [];
    if (lang_1.isPresent(opt_scheme)) {
      out.push(opt_scheme + ':');
    }
    if (lang_1.isPresent(opt_domain)) {
      out.push('//');
      if (lang_1.isPresent(opt_userInfo)) {
        out.push(opt_userInfo + '@');
      }
      out.push(opt_domain);
      if (lang_1.isPresent(opt_port)) {
        out.push(':' + opt_port);
      }
    }
    if (lang_1.isPresent(opt_path)) {
      out.push(opt_path);
    }
    if (lang_1.isPresent(opt_queryData)) {
      out.push('?' + opt_queryData);
    }
    if (lang_1.isPresent(opt_fragment)) {
      out.push('#' + opt_fragment);
    }
    return out.join('');
  }
  var _splitRe = lang_1.RegExpWrapper.create('^' + '(?:' + '([^:/?#.]+)' + ':)?' + '(?://' + '(?:([^/?#]*)@)?' + '([\\w\\d\\-\\u0100-\\uffff.%]*)' + '(?::([0-9]+))?' + ')?' + '([^?#]+)?' + '(?:\\?([^#]*))?' + '(?:#(.*))?' + '$');
  var _ComponentIndex;
  (function(_ComponentIndex) {
    _ComponentIndex[_ComponentIndex["Scheme"] = 1] = "Scheme";
    _ComponentIndex[_ComponentIndex["UserInfo"] = 2] = "UserInfo";
    _ComponentIndex[_ComponentIndex["Domain"] = 3] = "Domain";
    _ComponentIndex[_ComponentIndex["Port"] = 4] = "Port";
    _ComponentIndex[_ComponentIndex["Path"] = 5] = "Path";
    _ComponentIndex[_ComponentIndex["QueryData"] = 6] = "QueryData";
    _ComponentIndex[_ComponentIndex["Fragment"] = 7] = "Fragment";
  })(_ComponentIndex || (_ComponentIndex = {}));
  function _split(uri) {
    return lang_1.RegExpWrapper.firstMatch(_splitRe, uri);
  }
  function _removeDotSegments(path) {
    if (path == '/')
      return '/';
    var leadingSlash = path[0] == '/' ? '/' : '';
    var trailingSlash = path[path.length - 1] === '/' ? '/' : '';
    var segments = path.split('/');
    var out = [];
    var up = 0;
    for (var pos = 0; pos < segments.length; pos++) {
      var segment = segments[pos];
      switch (segment) {
        case '':
        case '.':
          break;
        case '..':
          if (out.length > 0) {
            out.pop();
          } else {
            up++;
          }
          break;
        default:
          out.push(segment);
      }
    }
    if (leadingSlash == '') {
      while (up-- > 0) {
        out.unshift('..');
      }
      if (out.length === 0)
        out.push('.');
    }
    return leadingSlash + out.join('/') + trailingSlash;
  }
  function _joinAndCanonicalizePath(parts) {
    var path = parts[_ComponentIndex.Path];
    path = lang_1.isBlank(path) ? '' : _removeDotSegments(path);
    parts[_ComponentIndex.Path] = path;
    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);
  }
  function _resolveUrl(base, url) {
    var parts = _split(encodeURI(url));
    var baseParts = _split(base);
    if (lang_1.isPresent(parts[_ComponentIndex.Scheme])) {
      return _joinAndCanonicalizePath(parts);
    } else {
      parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];
    }
    for (var i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {
      if (lang_1.isBlank(parts[i])) {
        parts[i] = baseParts[i];
      }
    }
    if (parts[_ComponentIndex.Path][0] == '/') {
      return _joinAndCanonicalizePath(parts);
    }
    var path = baseParts[_ComponentIndex.Path];
    if (lang_1.isBlank(path))
      path = '/';
    var index = path.lastIndexOf('/');
    path = path.substring(0, index + 1) + parts[_ComponentIndex.Path];
    parts[_ComponentIndex.Path] = path;
    return _joinAndCanonicalizePath(parts);
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/shadow_css", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var ShadowCss = (function() {
      function ShadowCss() {
        this.strictStyling = true;
      }
      ShadowCss.prototype.shimCssText = function(cssText, selector, hostSelector) {
        if (hostSelector === void 0) {
          hostSelector = '';
        }
        cssText = stripComments(cssText);
        cssText = this._insertDirectives(cssText);
        return this._scopeCssText(cssText, selector, hostSelector);
      };
      ShadowCss.prototype._insertDirectives = function(cssText) {
        cssText = this._insertPolyfillDirectivesInCssText(cssText);
        return this._insertPolyfillRulesInCssText(cssText);
      };
      ShadowCss.prototype._insertPolyfillDirectivesInCssText = function(cssText) {
        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentNextSelectorRe, function(m) {
          return m[1] + '{';
        });
      };
      ShadowCss.prototype._insertPolyfillRulesInCssText = function(cssText) {
        return lang_1.StringWrapper.replaceAllMapped(cssText, _cssContentRuleRe, function(m) {
          var rule = m[0];
          rule = lang_1.StringWrapper.replace(rule, m[1], '');
          rule = lang_1.StringWrapper.replace(rule, m[2], '');
          return m[3] + rule;
        });
      };
      ShadowCss.prototype._scopeCssText = function(cssText, scopeSelector, hostSelector) {
        var unscoped = this._extractUnscopedRulesFromCssText(cssText);
        cssText = this._insertPolyfillHostInCssText(cssText);
        cssText = this._convertColonHost(cssText);
        cssText = this._convertColonHostContext(cssText);
        cssText = this._convertShadowDOMSelectors(cssText);
        if (lang_1.isPresent(scopeSelector)) {
          cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);
        }
        cssText = cssText + '\n' + unscoped;
        return cssText.trim();
      };
      ShadowCss.prototype._extractUnscopedRulesFromCssText = function(cssText) {
        var r = '',
            m;
        var matcher = lang_1.RegExpWrapper.matcher(_cssContentUnscopedRuleRe, cssText);
        while (lang_1.isPresent(m = lang_1.RegExpMatcherWrapper.next(matcher))) {
          var rule = m[0];
          rule = lang_1.StringWrapper.replace(rule, m[2], '');
          rule = lang_1.StringWrapper.replace(rule, m[1], m[3]);
          r += rule + '\n\n';
        }
        return r;
      };
      ShadowCss.prototype._convertColonHost = function(cssText) {
        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);
      };
      ShadowCss.prototype._convertColonHostContext = function(cssText) {
        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);
      };
      ShadowCss.prototype._convertColonRule = function(cssText, regExp, partReplacer) {
        return lang_1.StringWrapper.replaceAllMapped(cssText, regExp, function(m) {
          if (lang_1.isPresent(m[2])) {
            var parts = m[2].split(','),
                r = [];
            for (var i = 0; i < parts.length; i++) {
              var p = parts[i];
              if (lang_1.isBlank(p))
                break;
              p = p.trim();
              r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));
            }
            return r.join(',');
          } else {
            return _polyfillHostNoCombinator + m[3];
          }
        });
      };
      ShadowCss.prototype._colonHostContextPartReplacer = function(host, part, suffix) {
        if (lang_1.StringWrapper.contains(part, _polyfillHost)) {
          return this._colonHostPartReplacer(host, part, suffix);
        } else {
          return host + part + suffix + ', ' + part + ' ' + host + suffix;
        }
      };
      ShadowCss.prototype._colonHostPartReplacer = function(host, part, suffix) {
        return host + lang_1.StringWrapper.replace(part, _polyfillHost, '') + suffix;
      };
      ShadowCss.prototype._convertShadowDOMSelectors = function(cssText) {
        for (var i = 0; i < _shadowDOMSelectorsRe.length; i++) {
          cssText = lang_1.StringWrapper.replaceAll(cssText, _shadowDOMSelectorsRe[i], ' ');
        }
        return cssText;
      };
      ShadowCss.prototype._scopeSelectors = function(cssText, scopeSelector, hostSelector) {
        var _this = this;
        return processRules(cssText, function(rule) {
          var selector = rule.selector;
          var content = rule.content;
          if (rule.selector[0] != '@' || rule.selector.startsWith('@page')) {
            selector = _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);
          } else if (rule.selector.startsWith('@media')) {
            content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);
          }
          return new CssRule(selector, content);
        });
      };
      ShadowCss.prototype._scopeSelector = function(selector, scopeSelector, hostSelector, strict) {
        var r = [],
            parts = selector.split(',');
        for (var i = 0; i < parts.length; i++) {
          var p = parts[i];
          p = p.trim();
          if (this._selectorNeedsScoping(p, scopeSelector)) {
            p = strict && !lang_1.StringWrapper.contains(p, _polyfillHostNoCombinator) ? this._applyStrictSelectorScope(p, scopeSelector) : this._applySelectorScope(p, scopeSelector, hostSelector);
          }
          r.push(p);
        }
        return r.join(', ');
      };
      ShadowCss.prototype._selectorNeedsScoping = function(selector, scopeSelector) {
        var re = this._makeScopeMatcher(scopeSelector);
        return !lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(re, selector));
      };
      ShadowCss.prototype._makeScopeMatcher = function(scopeSelector) {
        var lre = /\[/g;
        var rre = /\]/g;
        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, lre, '\\[');
        scopeSelector = lang_1.StringWrapper.replaceAll(scopeSelector, rre, '\\]');
        return lang_1.RegExpWrapper.create('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');
      };
      ShadowCss.prototype._applySelectorScope = function(selector, scopeSelector, hostSelector) {
        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);
      };
      ShadowCss.prototype._applySimpleSelectorScope = function(selector, scopeSelector, hostSelector) {
        if (lang_1.isPresent(lang_1.RegExpWrapper.firstMatch(_polyfillHostRe, selector))) {
          var replaceBy = this.strictStyling ? "[" + hostSelector + "]" : scopeSelector;
          selector = lang_1.StringWrapper.replace(selector, _polyfillHostNoCombinator, replaceBy);
          return lang_1.StringWrapper.replaceAll(selector, _polyfillHostRe, replaceBy + ' ');
        } else {
          return scopeSelector + ' ' + selector;
        }
      };
      ShadowCss.prototype._applyStrictSelectorScope = function(selector, scopeSelector) {
        var isRe = /\[is=([^\]]*)\]/g;
        scopeSelector = lang_1.StringWrapper.replaceAllMapped(scopeSelector, isRe, function(m) {
          return m[1];
        });
        var splits = [' ', '>', '+', '~'],
            scoped = selector,
            attrName = '[' + scopeSelector + ']';
        for (var i = 0; i < splits.length; i++) {
          var sep = splits[i];
          var parts = scoped.split(sep);
          scoped = parts.map(function(p) {
            var t = lang_1.StringWrapper.replaceAll(p.trim(), _polyfillHostRe, '');
            if (t.length > 0 && !collection_1.ListWrapper.contains(splits, t) && !lang_1.StringWrapper.contains(t, attrName)) {
              var re = /([^:]*)(:*)(.*)/g;
              var m = lang_1.RegExpWrapper.firstMatch(re, t);
              if (lang_1.isPresent(m)) {
                p = m[1] + attrName + m[2] + m[3];
              }
            }
            return p;
          }).join(sep);
        }
        return scoped;
      };
      ShadowCss.prototype._insertPolyfillHostInCssText = function(selector) {
        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostContextRe, _polyfillHostContext);
        selector = lang_1.StringWrapper.replaceAll(selector, _colonHostRe, _polyfillHost);
        return selector;
      };
      return ShadowCss;
    })();
    exports.ShadowCss = ShadowCss;
    var _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\s]*?['"](.*?)['"][;\s]*}([^{]*?){/gim;
    var _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\s]*['"](.*?)['"])[;\s]*[^}]*}/gim;
    var _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\s]*['"](.*?)['"])[;\s]*[^}]*}/gim;
    var _polyfillHost = '-shadowcsshost';
    var _polyfillHostContext = '-shadowcsscontext';
    var _parenSuffix = ')(?:\\((' + '(?:\\([^)(]*\\)|[^)(]*)+?' + ')\\))?([^,{]*)';
    var _cssColonHostRe = lang_1.RegExpWrapper.create('(' + _polyfillHost + _parenSuffix, 'im');
    var _cssColonHostContextRe = lang_1.RegExpWrapper.create('(' + _polyfillHostContext + _parenSuffix, 'im');
    var _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';
    var _shadowDOMSelectorsRe = [/>>>/g, /::shadow/g, /::content/g, /\/deep\//g, /\/shadow-deep\//g, /\/shadow\//g];
    var _selectorReSuffix = '([>\\s~+\[.,{:][\\s\\S]*)?$';
    var _polyfillHostRe = lang_1.RegExpWrapper.create(_polyfillHost, 'im');
    var _colonHostRe = /:host/gim;
    var _colonHostContextRe = /:host-context/gim;
    var _commentRe = /\/\*[\s\S]*?\*\//g;
    function stripComments(input) {
      return lang_1.StringWrapper.replaceAllMapped(input, _commentRe, function(_) {
        return '';
      });
    }
    var _ruleRe = /(\s*)([^;\{\}]+?)(\s*)((?:{%BLOCK%}?\s*;?)|(?:\s*;))/g;
    var _curlyRe = /([{}])/g;
    var OPEN_CURLY = '{';
    var CLOSE_CURLY = '}';
    var BLOCK_PLACEHOLDER = '%BLOCK%';
    var CssRule = (function() {
      function CssRule(selector, content) {
        this.selector = selector;
        this.content = content;
      }
      return CssRule;
    })();
    exports.CssRule = CssRule;
    function processRules(input, ruleCallback) {
      var inputWithEscapedBlocks = escapeBlocks(input);
      var nextBlockIndex = 0;
      return lang_1.StringWrapper.replaceAllMapped(inputWithEscapedBlocks.escapedString, _ruleRe, function(m) {
        var selector = m[2];
        var content = '';
        var suffix = m[4];
        var contentPrefix = '';
        if (lang_1.isPresent(m[4]) && m[4].startsWith('{' + BLOCK_PLACEHOLDER)) {
          content = inputWithEscapedBlocks.blocks[nextBlockIndex++];
          suffix = m[4].substring(BLOCK_PLACEHOLDER.length + 1);
          contentPrefix = '{';
        }
        var rule = ruleCallback(new CssRule(selector, content));
        return "" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;
      });
    }
    exports.processRules = processRules;
    var StringWithEscapedBlocks = (function() {
      function StringWithEscapedBlocks(escapedString, blocks) {
        this.escapedString = escapedString;
        this.blocks = blocks;
      }
      return StringWithEscapedBlocks;
    })();
    function escapeBlocks(input) {
      var inputParts = lang_1.StringWrapper.split(input, _curlyRe);
      var resultParts = [];
      var escapedBlocks = [];
      var bracketCount = 0;
      var currentBlockParts = [];
      for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {
        var part = inputParts[partIndex];
        if (part == CLOSE_CURLY) {
          bracketCount--;
        }
        if (bracketCount > 0) {
          currentBlockParts.push(part);
        } else {
          if (currentBlockParts.length > 0) {
            escapedBlocks.push(currentBlockParts.join(''));
            resultParts.push(BLOCK_PLACEHOLDER);
            currentBlockParts = [];
          }
          resultParts.push(part);
        }
        if (part == OPEN_CURLY) {
          bracketCount++;
        }
      }
      if (currentBlockParts.length > 0) {
        escapedBlocks.push(currentBlockParts.join(''));
        resultParts.push(BLOCK_PLACEHOLDER);
      }
      return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);
    }
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/xhr", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var XHR = (function() {
    function XHR() {}
    XHR.prototype.get = function(url) {
      return null;
    };
    return XHR;
  })();
  exports.XHR = XHR;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/style_compiler", ["npm:angular2@2.0.0-alpha.46/src/compiler/source_module", "npm:angular2@2.0.0-alpha.46/src/core/metadata/view", "npm:angular2@2.0.0-alpha.46/src/compiler/xhr", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/compiler/shadow_css", "npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver", "npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver", "npm:angular2@2.0.0-alpha.46/src/compiler/util", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/render/view_factory"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var source_module_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/source_module');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  var xhr_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/xhr');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var shadow_css_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/shadow_css');
  var url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver');
  var style_url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/style_url_resolver');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var view_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/view_factory');
  var StyleCompiler = (function() {
    function StyleCompiler(_xhr, _urlResolver) {
      this._xhr = _xhr;
      this._urlResolver = _urlResolver;
      this._styleCache = new Map();
      this._shadowCss = new shadow_css_1.ShadowCss();
    }
    StyleCompiler.prototype.compileComponentRuntime = function(template) {
      var styles = template.styles;
      var styleAbsUrls = template.styleUrls;
      return this._loadStyles(styles, styleAbsUrls, template.encapsulation === view_1.ViewEncapsulation.Emulated);
    };
    StyleCompiler.prototype.compileComponentCodeGen = function(template) {
      var shim = template.encapsulation === view_1.ViewEncapsulation.Emulated;
      return this._styleCodeGen(template.styles, template.styleUrls, shim);
    };
    StyleCompiler.prototype.compileStylesheetCodeGen = function(stylesheetUrl, cssText) {
      var styleWithImports = style_url_resolver_1.extractStyleUrls(this._urlResolver, stylesheetUrl, cssText);
      return [this._styleModule(stylesheetUrl, false, this._styleCodeGen([styleWithImports.style], styleWithImports.styleUrls, false)), this._styleModule(stylesheetUrl, true, this._styleCodeGen([styleWithImports.style], styleWithImports.styleUrls, true))];
    };
    StyleCompiler.prototype.clearCache = function() {
      this._styleCache.clear();
    };
    StyleCompiler.prototype._loadStyles = function(plainStyles, absUrls, encapsulate) {
      var _this = this;
      var promises = absUrls.map(function(absUrl) {
        var cacheKey = "" + absUrl + (encapsulate ? '.shim' : '');
        var result = _this._styleCache.get(cacheKey);
        if (lang_1.isBlank(result)) {
          result = _this._xhr.get(absUrl).then(function(style) {
            var styleWithImports = style_url_resolver_1.extractStyleUrls(_this._urlResolver, absUrl, style);
            return _this._loadStyles([styleWithImports.style], styleWithImports.styleUrls, encapsulate);
          });
          _this._styleCache.set(cacheKey, result);
        }
        return result;
      });
      return async_1.PromiseWrapper.all(promises).then(function(nestedStyles) {
        var result = plainStyles.map(function(plainStyle) {
          return _this._shimIfNeeded(plainStyle, encapsulate);
        });
        nestedStyles.forEach(function(styles) {
          return result.push(styles);
        });
        return result;
      });
    };
    StyleCompiler.prototype._styleCodeGen = function(plainStyles, absUrls, shim) {
      var _this = this;
      var arrayPrefix = lang_1.IS_DART ? "const" : '';
      var styleExpressions = plainStyles.map(function(plainStyle) {
        return util_1.escapeSingleQuoteString(_this._shimIfNeeded(plainStyle, shim));
      });
      for (var i = 0; i < absUrls.length; i++) {
        var moduleUrl = this._createModuleUrl(absUrls[i], shim);
        styleExpressions.push(source_module_1.moduleRef(moduleUrl) + "STYLES");
      }
      var expressionSource = arrayPrefix + " [" + styleExpressions.join(',') + "]";
      return new source_module_1.SourceExpression([], expressionSource);
    };
    StyleCompiler.prototype._styleModule = function(stylesheetUrl, shim, expression) {
      var moduleSource = "\n      " + expression.declarations.join('\n') + "\n      " + util_1.codeGenExportVariable('STYLES') + expression.expression + ";\n    ";
      return new source_module_1.SourceModule(this._createModuleUrl(stylesheetUrl, shim), moduleSource);
    };
    StyleCompiler.prototype._shimIfNeeded = function(style, shim) {
      return shim ? this._shadowCss.shimCssText(style, view_factory_1.CONTENT_ATTR, view_factory_1.HOST_ATTR) : style;
    };
    StyleCompiler.prototype._createModuleUrl = function(stylesheetUrl, shim) {
      return shim ? stylesheetUrl + ".shim" + util_1.MODULE_SUFFIX : "" + stylesheetUrl + util_1.MODULE_SUFFIX;
    };
    StyleCompiler = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [xhr_1.XHR, url_resolver_1.UrlResolver])], StyleCompiler);
    return StyleCompiler;
  })();
  exports.StyleCompiler = StyleCompiler;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/transform/template_compiler/change_detector_codegen", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var Codegen = (function() {
    function Codegen(moduleAlias) {}
    Codegen.prototype.generate = function(typeName, changeDetectorTypeName, def) {
      throw "Not implemented in JS";
    };
    Codegen.prototype.toString = function() {
      throw "Not implemented in JS";
    };
    return Codegen;
  })();
  exports.Codegen = Codegen;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/template_ast", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var TextAst = (function() {
    function TextAst(value, ngContentIndex, sourceInfo) {
      this.value = value;
      this.ngContentIndex = ngContentIndex;
      this.sourceInfo = sourceInfo;
    }
    TextAst.prototype.visit = function(visitor, context) {
      return visitor.visitText(this, context);
    };
    return TextAst;
  })();
  exports.TextAst = TextAst;
  var BoundTextAst = (function() {
    function BoundTextAst(value, ngContentIndex, sourceInfo) {
      this.value = value;
      this.ngContentIndex = ngContentIndex;
      this.sourceInfo = sourceInfo;
    }
    BoundTextAst.prototype.visit = function(visitor, context) {
      return visitor.visitBoundText(this, context);
    };
    return BoundTextAst;
  })();
  exports.BoundTextAst = BoundTextAst;
  var AttrAst = (function() {
    function AttrAst(name, value, sourceInfo) {
      this.name = name;
      this.value = value;
      this.sourceInfo = sourceInfo;
    }
    AttrAst.prototype.visit = function(visitor, context) {
      return visitor.visitAttr(this, context);
    };
    return AttrAst;
  })();
  exports.AttrAst = AttrAst;
  var BoundElementPropertyAst = (function() {
    function BoundElementPropertyAst(name, type, value, unit, sourceInfo) {
      this.name = name;
      this.type = type;
      this.value = value;
      this.unit = unit;
      this.sourceInfo = sourceInfo;
    }
    BoundElementPropertyAst.prototype.visit = function(visitor, context) {
      return visitor.visitElementProperty(this, context);
    };
    return BoundElementPropertyAst;
  })();
  exports.BoundElementPropertyAst = BoundElementPropertyAst;
  var BoundEventAst = (function() {
    function BoundEventAst(name, target, handler, sourceInfo) {
      this.name = name;
      this.target = target;
      this.handler = handler;
      this.sourceInfo = sourceInfo;
    }
    BoundEventAst.prototype.visit = function(visitor, context) {
      return visitor.visitEvent(this, context);
    };
    Object.defineProperty(BoundEventAst.prototype, "fullName", {
      get: function() {
        if (lang_1.isPresent(this.target)) {
          return this.target + ":" + this.name;
        } else {
          return this.name;
        }
      },
      enumerable: true,
      configurable: true
    });
    return BoundEventAst;
  })();
  exports.BoundEventAst = BoundEventAst;
  var VariableAst = (function() {
    function VariableAst(name, value, sourceInfo) {
      this.name = name;
      this.value = value;
      this.sourceInfo = sourceInfo;
    }
    VariableAst.prototype.visit = function(visitor, context) {
      return visitor.visitVariable(this, context);
    };
    return VariableAst;
  })();
  exports.VariableAst = VariableAst;
  var ElementAst = (function() {
    function ElementAst(name, attrs, inputs, outputs, exportAsVars, directives, children, ngContentIndex, sourceInfo) {
      this.name = name;
      this.attrs = attrs;
      this.inputs = inputs;
      this.outputs = outputs;
      this.exportAsVars = exportAsVars;
      this.directives = directives;
      this.children = children;
      this.ngContentIndex = ngContentIndex;
      this.sourceInfo = sourceInfo;
    }
    ElementAst.prototype.visit = function(visitor, context) {
      return visitor.visitElement(this, context);
    };
    ElementAst.prototype.isBound = function() {
      return (this.inputs.length > 0 || this.outputs.length > 0 || this.exportAsVars.length > 0 || this.directives.length > 0);
    };
    ElementAst.prototype.getComponent = function() {
      return this.directives.length > 0 && this.directives[0].directive.isComponent ? this.directives[0].directive : null;
    };
    return ElementAst;
  })();
  exports.ElementAst = ElementAst;
  var EmbeddedTemplateAst = (function() {
    function EmbeddedTemplateAst(attrs, outputs, vars, directives, children, ngContentIndex, sourceInfo) {
      this.attrs = attrs;
      this.outputs = outputs;
      this.vars = vars;
      this.directives = directives;
      this.children = children;
      this.ngContentIndex = ngContentIndex;
      this.sourceInfo = sourceInfo;
    }
    EmbeddedTemplateAst.prototype.visit = function(visitor, context) {
      return visitor.visitEmbeddedTemplate(this, context);
    };
    return EmbeddedTemplateAst;
  })();
  exports.EmbeddedTemplateAst = EmbeddedTemplateAst;
  var BoundDirectivePropertyAst = (function() {
    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceInfo) {
      this.directiveName = directiveName;
      this.templateName = templateName;
      this.value = value;
      this.sourceInfo = sourceInfo;
    }
    BoundDirectivePropertyAst.prototype.visit = function(visitor, context) {
      return visitor.visitDirectiveProperty(this, context);
    };
    return BoundDirectivePropertyAst;
  })();
  exports.BoundDirectivePropertyAst = BoundDirectivePropertyAst;
  var DirectiveAst = (function() {
    function DirectiveAst(directive, inputs, hostProperties, hostEvents, exportAsVars, sourceInfo) {
      this.directive = directive;
      this.inputs = inputs;
      this.hostProperties = hostProperties;
      this.hostEvents = hostEvents;
      this.exportAsVars = exportAsVars;
      this.sourceInfo = sourceInfo;
    }
    DirectiveAst.prototype.visit = function(visitor, context) {
      return visitor.visitDirective(this, context);
    };
    return DirectiveAst;
  })();
  exports.DirectiveAst = DirectiveAst;
  var NgContentAst = (function() {
    function NgContentAst(index, ngContentIndex, sourceInfo) {
      this.index = index;
      this.ngContentIndex = ngContentIndex;
      this.sourceInfo = sourceInfo;
    }
    NgContentAst.prototype.visit = function(visitor, context) {
      return visitor.visitNgContent(this, context);
    };
    return NgContentAst;
  })();
  exports.NgContentAst = NgContentAst;
  (function(PropertyBindingType) {
    PropertyBindingType[PropertyBindingType["Property"] = 0] = "Property";
    PropertyBindingType[PropertyBindingType["Attribute"] = 1] = "Attribute";
    PropertyBindingType[PropertyBindingType["Class"] = 2] = "Class";
    PropertyBindingType[PropertyBindingType["Style"] = 3] = "Style";
  })(exports.PropertyBindingType || (exports.PropertyBindingType = {}));
  var PropertyBindingType = exports.PropertyBindingType;
  function templateVisitAll(visitor, asts, context) {
    if (context === void 0) {
      context = null;
    }
    var result = [];
    asts.forEach(function(ast) {
      var astResult = ast.visit(visitor, context);
      if (lang_1.isPresent(astResult)) {
        result.push(astResult);
      }
    });
    return result;
  }
  exports.templateVisitAll = templateVisitAll;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/change_definition_factory", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/compiler/template_ast", "npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var template_ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_ast');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces');
  function createChangeDetectorDefinitions(componentType, componentStrategy, genConfig, parsedTemplate) {
    var pvVisitors = [];
    var visitor = new ProtoViewVisitor(null, pvVisitors, componentStrategy);
    template_ast_1.templateVisitAll(visitor, parsedTemplate);
    return createChangeDefinitions(pvVisitors, componentType, genConfig);
  }
  exports.createChangeDetectorDefinitions = createChangeDetectorDefinitions;
  var ProtoViewVisitor = (function() {
    function ProtoViewVisitor(parent, allVisitors, strategy) {
      this.parent = parent;
      this.allVisitors = allVisitors;
      this.strategy = strategy;
      this.boundTextCount = 0;
      this.boundElementCount = 0;
      this.variableNames = [];
      this.bindingRecords = [];
      this.eventRecords = [];
      this.directiveRecords = [];
      this.viewIndex = allVisitors.length;
      allVisitors.push(this);
    }
    ProtoViewVisitor.prototype.visitEmbeddedTemplate = function(ast, context) {
      this.boundElementCount++;
      template_ast_1.templateVisitAll(this, ast.outputs);
      for (var i = 0; i < ast.directives.length; i++) {
        ast.directives[i].visit(this, i);
      }
      var childVisitor = new ProtoViewVisitor(this, this.allVisitors, change_detection_1.ChangeDetectionStrategy.Default);
      template_ast_1.templateVisitAll(childVisitor, ast.vars);
      template_ast_1.templateVisitAll(childVisitor, ast.children);
      return null;
    };
    ProtoViewVisitor.prototype.visitElement = function(ast, context) {
      if (ast.isBound()) {
        this.boundElementCount++;
      }
      template_ast_1.templateVisitAll(this, ast.inputs, null);
      template_ast_1.templateVisitAll(this, ast.outputs);
      template_ast_1.templateVisitAll(this, ast.exportAsVars);
      for (var i = 0; i < ast.directives.length; i++) {
        ast.directives[i].visit(this, i);
      }
      template_ast_1.templateVisitAll(this, ast.children);
      return null;
    };
    ProtoViewVisitor.prototype.visitNgContent = function(ast, context) {
      return null;
    };
    ProtoViewVisitor.prototype.visitVariable = function(ast, context) {
      this.variableNames.push(ast.name);
      return null;
    };
    ProtoViewVisitor.prototype.visitEvent = function(ast, directiveRecord) {
      var bindingRecord = lang_1.isPresent(directiveRecord) ? change_detection_1.BindingRecord.createForHostEvent(ast.handler, ast.fullName, directiveRecord) : change_detection_1.BindingRecord.createForEvent(ast.handler, ast.fullName, this.boundElementCount - 1);
      this.eventRecords.push(bindingRecord);
      return null;
    };
    ProtoViewVisitor.prototype.visitElementProperty = function(ast, directiveRecord) {
      var boundElementIndex = this.boundElementCount - 1;
      var dirIndex = lang_1.isPresent(directiveRecord) ? directiveRecord.directiveIndex : null;
      var bindingRecord;
      if (ast.type === template_ast_1.PropertyBindingType.Property) {
        bindingRecord = lang_1.isPresent(dirIndex) ? change_detection_1.BindingRecord.createForHostProperty(dirIndex, ast.value, ast.name) : change_detection_1.BindingRecord.createForElementProperty(ast.value, boundElementIndex, ast.name);
      } else if (ast.type === template_ast_1.PropertyBindingType.Attribute) {
        bindingRecord = lang_1.isPresent(dirIndex) ? change_detection_1.BindingRecord.createForHostAttribute(dirIndex, ast.value, ast.name) : change_detection_1.BindingRecord.createForElementAttribute(ast.value, boundElementIndex, ast.name);
      } else if (ast.type === template_ast_1.PropertyBindingType.Class) {
        bindingRecord = lang_1.isPresent(dirIndex) ? change_detection_1.BindingRecord.createForHostClass(dirIndex, ast.value, ast.name) : change_detection_1.BindingRecord.createForElementClass(ast.value, boundElementIndex, ast.name);
      } else if (ast.type === template_ast_1.PropertyBindingType.Style) {
        bindingRecord = lang_1.isPresent(dirIndex) ? change_detection_1.BindingRecord.createForHostStyle(dirIndex, ast.value, ast.name, ast.unit) : change_detection_1.BindingRecord.createForElementStyle(ast.value, boundElementIndex, ast.name, ast.unit);
      }
      this.bindingRecords.push(bindingRecord);
      return null;
    };
    ProtoViewVisitor.prototype.visitAttr = function(ast, context) {
      return null;
    };
    ProtoViewVisitor.prototype.visitBoundText = function(ast, context) {
      var boundTextIndex = this.boundTextCount++;
      this.bindingRecords.push(change_detection_1.BindingRecord.createForTextNode(ast.value, boundTextIndex));
      return null;
    };
    ProtoViewVisitor.prototype.visitText = function(ast, context) {
      return null;
    };
    ProtoViewVisitor.prototype.visitDirective = function(ast, directiveIndexAsNumber) {
      var directiveIndex = new change_detection_1.DirectiveIndex(this.boundElementCount - 1, directiveIndexAsNumber);
      var directiveMetadata = ast.directive;
      var directiveRecord = new change_detection_1.DirectiveRecord({
        directiveIndex: directiveIndex,
        callAfterContentInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterContentInit) !== -1,
        callAfterContentChecked: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterContentChecked) !== -1,
        callAfterViewInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterViewInit) !== -1,
        callAfterViewChecked: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.AfterViewChecked) !== -1,
        callOnChanges: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnChanges) !== -1,
        callDoCheck: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.DoCheck) !== -1,
        callOnInit: directiveMetadata.lifecycleHooks.indexOf(interfaces_1.LifecycleHooks.OnInit) !== -1,
        changeDetection: directiveMetadata.changeDetection
      });
      this.directiveRecords.push(directiveRecord);
      template_ast_1.templateVisitAll(this, ast.inputs, directiveRecord);
      var bindingRecords = this.bindingRecords;
      if (directiveRecord.callOnChanges) {
        bindingRecords.push(change_detection_1.BindingRecord.createDirectiveOnChanges(directiveRecord));
      }
      if (directiveRecord.callOnInit) {
        bindingRecords.push(change_detection_1.BindingRecord.createDirectiveOnInit(directiveRecord));
      }
      if (directiveRecord.callDoCheck) {
        bindingRecords.push(change_detection_1.BindingRecord.createDirectiveDoCheck(directiveRecord));
      }
      template_ast_1.templateVisitAll(this, ast.hostProperties, directiveRecord);
      template_ast_1.templateVisitAll(this, ast.hostEvents, directiveRecord);
      template_ast_1.templateVisitAll(this, ast.exportAsVars);
      return null;
    };
    ProtoViewVisitor.prototype.visitDirectiveProperty = function(ast, directiveRecord) {
      var setter = reflection_1.reflector.setter(ast.directiveName);
      this.bindingRecords.push(change_detection_1.BindingRecord.createForDirective(ast.value, ast.directiveName, setter, directiveRecord));
      return null;
    };
    return ProtoViewVisitor;
  })();
  function createChangeDefinitions(pvVisitors, componentType, genConfig) {
    var pvVariableNames = _collectNestedProtoViewsVariableNames(pvVisitors);
    return pvVisitors.map(function(pvVisitor) {
      var id = componentType.name + "_" + pvVisitor.viewIndex;
      return new change_detection_1.ChangeDetectorDefinition(id, pvVisitor.strategy, pvVariableNames[pvVisitor.viewIndex], pvVisitor.bindingRecords, pvVisitor.eventRecords, pvVisitor.directiveRecords, genConfig);
    });
  }
  function _collectNestedProtoViewsVariableNames(pvVisitors) {
    var nestedPvVariableNames = collection_1.ListWrapper.createFixedSize(pvVisitors.length);
    pvVisitors.forEach(function(pv) {
      var parentVariableNames = lang_1.isPresent(pv.parent) ? nestedPvVariableNames[pv.parent.viewIndex] : [];
      nestedPvVariableNames[pv.viewIndex] = parentVariableNames.concat(pv.variableNames);
    });
    return nestedPvVariableNames;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/change_detector_compiler", ["npm:angular2@2.0.0-alpha.46/src/compiler/source_module", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_jit_generator", "npm:angular2@2.0.0-alpha.46/src/compiler/change_definition_factory", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/transform/template_compiler/change_detector_codegen", "npm:angular2@2.0.0-alpha.46/src/compiler/util", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var source_module_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/source_module');
  var change_detection_jit_generator_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_jit_generator');
  var change_definition_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/change_definition_factory');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var change_detector_codegen_1 = $__require('npm:angular2@2.0.0-alpha.46/src/transform/template_compiler/change_detector_codegen');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var ABSTRACT_CHANGE_DETECTOR = "AbstractChangeDetector";
  var UTIL = "ChangeDetectionUtil";
  var CHANGE_DETECTOR_STATE = "ChangeDetectorState";
  var ABSTRACT_CHANGE_DETECTOR_MODULE = source_module_1.moduleRef("package:angular2/src/core/change_detection/abstract_change_detector" + util_1.MODULE_SUFFIX);
  var UTIL_MODULE = source_module_1.moduleRef("package:angular2/src/core/change_detection/change_detection_util" + util_1.MODULE_SUFFIX);
  var PREGEN_PROTO_CHANGE_DETECTOR_MODULE = source_module_1.moduleRef("package:angular2/src/core/change_detection/pregen_proto_change_detector" + util_1.MODULE_SUFFIX);
  var CONSTANTS_MODULE = source_module_1.moduleRef("package:angular2/src/core/change_detection/constants" + util_1.MODULE_SUFFIX);
  var ChangeDetectionCompiler = (function() {
    function ChangeDetectionCompiler(_genConfig) {
      this._genConfig = _genConfig;
    }
    ChangeDetectionCompiler.prototype.compileComponentRuntime = function(componentType, strategy, parsedTemplate) {
      var _this = this;
      var changeDetectorDefinitions = change_definition_factory_1.createChangeDetectorDefinitions(componentType, strategy, this._genConfig, parsedTemplate);
      return changeDetectorDefinitions.map(function(definition) {
        return _this._createChangeDetectorFactory(definition);
      });
    };
    ChangeDetectionCompiler.prototype._createChangeDetectorFactory = function(definition) {
      if (lang_1.IS_DART || !this._genConfig.useJit) {
        var proto = new change_detection_1.DynamicProtoChangeDetector(definition);
        return function(dispatcher) {
          return proto.instantiate(dispatcher);
        };
      } else {
        return new change_detection_jit_generator_1.ChangeDetectorJITGenerator(definition, UTIL, ABSTRACT_CHANGE_DETECTOR, CHANGE_DETECTOR_STATE).generate();
      }
    };
    ChangeDetectionCompiler.prototype.compileComponentCodeGen = function(componentType, strategy, parsedTemplate) {
      var changeDetectorDefinitions = change_definition_factory_1.createChangeDetectorDefinitions(componentType, strategy, this._genConfig, parsedTemplate);
      var factories = [];
      var index = 0;
      var sourceParts = changeDetectorDefinitions.map(function(definition) {
        var codegen;
        var sourcePart;
        if (lang_1.IS_DART) {
          codegen = new change_detector_codegen_1.Codegen(PREGEN_PROTO_CHANGE_DETECTOR_MODULE);
          var className = "_" + definition.id;
          var typeRef = (index === 0 && componentType.isHost) ? 'dynamic' : "" + source_module_1.moduleRef(componentType.moduleUrl) + componentType.name;
          codegen.generate(typeRef, className, definition);
          factories.push(className + ".newChangeDetector");
          sourcePart = codegen.toString();
        } else {
          codegen = new change_detection_jit_generator_1.ChangeDetectorJITGenerator(definition, "" + UTIL_MODULE + UTIL, "" + ABSTRACT_CHANGE_DETECTOR_MODULE + ABSTRACT_CHANGE_DETECTOR, "" + CONSTANTS_MODULE + CHANGE_DETECTOR_STATE);
          factories.push("function(dispatcher) { return new " + codegen.typeName + "(dispatcher); }");
          sourcePart = codegen.generateSource();
        }
        index++;
        return sourcePart;
      });
      return new source_module_1.SourceExpressions(sourceParts, factories);
    };
    ChangeDetectionCompiler = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [change_detection_1.ChangeDetectorGenConfig])], ChangeDetectionCompiler);
    return ChangeDetectionCompiler;
  })();
  exports.ChangeDetectionCompiler = ChangeDetectionCompiler;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/source_module", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var MODULE_REGEXP = /#MODULE\[([^\]]*)\]/g;
  function moduleRef(moduleUrl) {
    return "#MODULE[" + moduleUrl + "]";
  }
  exports.moduleRef = moduleRef;
  var SourceModule = (function() {
    function SourceModule(moduleUrl, sourceWithModuleRefs) {
      this.moduleUrl = moduleUrl;
      this.sourceWithModuleRefs = sourceWithModuleRefs;
    }
    SourceModule.prototype.getSourceWithImports = function() {
      var _this = this;
      var moduleAliases = {};
      var imports = [];
      var newSource = lang_1.StringWrapper.replaceAllMapped(this.sourceWithModuleRefs, MODULE_REGEXP, function(match) {
        var moduleUrl = match[1];
        var alias = moduleAliases[moduleUrl];
        if (lang_1.isBlank(alias)) {
          if (moduleUrl == _this.moduleUrl) {
            alias = '';
          } else {
            alias = "import" + imports.length;
            imports.push([moduleUrl, alias]);
          }
          moduleAliases[moduleUrl] = alias;
        }
        return alias.length > 0 ? alias + "." : '';
      });
      return new SourceWithImports(newSource, imports);
    };
    return SourceModule;
  })();
  exports.SourceModule = SourceModule;
  var SourceExpression = (function() {
    function SourceExpression(declarations, expression) {
      this.declarations = declarations;
      this.expression = expression;
    }
    return SourceExpression;
  })();
  exports.SourceExpression = SourceExpression;
  var SourceExpressions = (function() {
    function SourceExpressions(declarations, expressions) {
      this.declarations = declarations;
      this.expressions = expressions;
    }
    return SourceExpressions;
  })();
  exports.SourceExpressions = SourceExpressions;
  var SourceWithImports = (function() {
    function SourceWithImports(source, imports) {
      this.source = source;
      this.imports = imports;
    }
    return SourceWithImports;
  })();
  exports.SourceWithImports = SourceWithImports;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/util", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var CAMEL_CASE_REGEXP = /([A-Z])/g;
  var DASH_CASE_REGEXP = /-([a-z])/g;
  var SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\|\n|\$/g;
  var DOUBLE_QUOTE_ESCAPE_STRING_RE = /"|\\|\n|\$/g;
  exports.MODULE_SUFFIX = lang_1.IS_DART ? '.dart' : '.js';
  function camelCaseToDashCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function(m) {
      return '-' + m[1].toLowerCase();
    });
  }
  exports.camelCaseToDashCase = camelCaseToDashCase;
  function dashCaseToCamelCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function(m) {
      return m[1].toUpperCase();
    });
  }
  exports.dashCaseToCamelCase = dashCaseToCamelCase;
  function escapeSingleQuoteString(input) {
    if (lang_1.isBlank(input)) {
      return null;
    }
    return "'" + escapeString(input, SINGLE_QUOTE_ESCAPE_STRING_RE) + "'";
  }
  exports.escapeSingleQuoteString = escapeSingleQuoteString;
  function escapeDoubleQuoteString(input) {
    if (lang_1.isBlank(input)) {
      return null;
    }
    return "\"" + escapeString(input, DOUBLE_QUOTE_ESCAPE_STRING_RE) + "\"";
  }
  exports.escapeDoubleQuoteString = escapeDoubleQuoteString;
  function escapeString(input, re) {
    return lang_1.StringWrapper.replaceAllMapped(input, re, function(match) {
      if (match[0] == '$') {
        return lang_1.IS_DART ? '\\$' : '$';
      } else if (match[0] == '\n') {
        return '\\n';
      } else {
        return "\\" + match[0];
      }
    });
  }
  function codeGenExportVariable(name) {
    if (lang_1.IS_DART) {
      return "const " + name + " = ";
    } else {
      return "var " + name + " = exports['" + name + "'] = ";
    }
  }
  exports.codeGenExportVariable = codeGenExportVariable;
  function codeGenConstConstructorCall(name) {
    if (lang_1.IS_DART) {
      return "const " + name;
    } else {
      return "new " + name;
    }
  }
  exports.codeGenConstConstructorCall = codeGenConstConstructorCall;
  function codeGenValueFn(params, value, fnName) {
    if (fnName === void 0) {
      fnName = '';
    }
    if (lang_1.IS_DART) {
      return fnName + "(" + params.join(',') + ") => " + value;
    } else {
      return "function " + fnName + "(" + params.join(',') + ") { return " + value + "; }";
    }
  }
  exports.codeGenValueFn = codeGenValueFn;
  function codeGenToString(expr) {
    if (lang_1.IS_DART) {
      return "'${" + expr + "}'";
    } else {
      return expr;
    }
  }
  exports.codeGenToString = codeGenToString;
  function splitAtColon(input, defaultValues) {
    var parts = lang_1.StringWrapper.split(input.trim(), /\s*:\s*/g);
    if (parts.length > 1) {
      return parts;
    } else {
      return defaultValues;
    }
  }
  exports.splitAtColon = splitAtColon;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/selector", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
    var _EMPTY_ATTR_VALUE = '';
    var _SELECTOR_REGEXP = lang_1.RegExpWrapper.create('(\\:not\\()|' + '([-\\w]+)|' + '(?:\\.([-\\w]+))|' + '(?:\\[([-\\w*]+)(?:=([^\\]]*))?\\])|' + '(\\))|' + '(\\s*,\\s*)');
    var CssSelector = (function() {
      function CssSelector() {
        this.element = null;
        this.classNames = [];
        this.attrs = [];
        this.notSelectors = [];
      }
      CssSelector.parse = function(selector) {
        var results = [];
        var _addResult = function(res, cssSel) {
          if (cssSel.notSelectors.length > 0 && lang_1.isBlank(cssSel.element) && collection_1.ListWrapper.isEmpty(cssSel.classNames) && collection_1.ListWrapper.isEmpty(cssSel.attrs)) {
            cssSel.element = "*";
          }
          res.push(cssSel);
        };
        var cssSelector = new CssSelector();
        var matcher = lang_1.RegExpWrapper.matcher(_SELECTOR_REGEXP, selector);
        var match;
        var current = cssSelector;
        var inNot = false;
        while (lang_1.isPresent(match = lang_1.RegExpMatcherWrapper.next(matcher))) {
          if (lang_1.isPresent(match[1])) {
            if (inNot) {
              throw new exceptions_1.BaseException('Nesting :not is not allowed in a selector');
            }
            inNot = true;
            current = new CssSelector();
            cssSelector.notSelectors.push(current);
          }
          if (lang_1.isPresent(match[2])) {
            current.setElement(match[2]);
          }
          if (lang_1.isPresent(match[3])) {
            current.addClassName(match[3]);
          }
          if (lang_1.isPresent(match[4])) {
            current.addAttribute(match[4], match[5]);
          }
          if (lang_1.isPresent(match[6])) {
            inNot = false;
            current = cssSelector;
          }
          if (lang_1.isPresent(match[7])) {
            if (inNot) {
              throw new exceptions_1.BaseException('Multiple selectors in :not are not supported');
            }
            _addResult(results, cssSelector);
            cssSelector = current = new CssSelector();
          }
        }
        _addResult(results, cssSelector);
        return results;
      };
      CssSelector.prototype.isElementSelector = function() {
        return lang_1.isPresent(this.element) && collection_1.ListWrapper.isEmpty(this.classNames) && collection_1.ListWrapper.isEmpty(this.attrs) && this.notSelectors.length === 0;
      };
      CssSelector.prototype.setElement = function(element) {
        if (element === void 0) {
          element = null;
        }
        if (lang_1.isPresent(element)) {
          element = element.toLowerCase();
        }
        this.element = element;
      };
      CssSelector.prototype.getMatchingElementTemplate = function() {
        var tagName = lang_1.isPresent(this.element) ? this.element : 'div';
        var classAttr = this.classNames.length > 0 ? " class=\"" + this.classNames.join(' ') + "\"" : '';
        var attrs = '';
        for (var i = 0; i < this.attrs.length; i += 2) {
          var attrName = this.attrs[i];
          var attrValue = this.attrs[i + 1] !== '' ? "=\"" + this.attrs[i + 1] + "\"" : '';
          attrs += " " + attrName + attrValue;
        }
        return "<" + tagName + classAttr + attrs + "></" + tagName + ">";
      };
      CssSelector.prototype.addAttribute = function(name, value) {
        if (value === void 0) {
          value = _EMPTY_ATTR_VALUE;
        }
        this.attrs.push(name.toLowerCase());
        if (lang_1.isPresent(value)) {
          value = value.toLowerCase();
        } else {
          value = _EMPTY_ATTR_VALUE;
        }
        this.attrs.push(value);
      };
      CssSelector.prototype.addClassName = function(name) {
        this.classNames.push(name.toLowerCase());
      };
      CssSelector.prototype.toString = function() {
        var res = '';
        if (lang_1.isPresent(this.element)) {
          res += this.element;
        }
        if (lang_1.isPresent(this.classNames)) {
          for (var i = 0; i < this.classNames.length; i++) {
            res += '.' + this.classNames[i];
          }
        }
        if (lang_1.isPresent(this.attrs)) {
          for (var i = 0; i < this.attrs.length; ) {
            var attrName = this.attrs[i++];
            var attrValue = this.attrs[i++];
            res += '[' + attrName;
            if (attrValue.length > 0) {
              res += '=' + attrValue;
            }
            res += ']';
          }
        }
        this.notSelectors.forEach(function(notSelector) {
          return res += ":not(" + notSelector + ")";
        });
        return res;
      };
      return CssSelector;
    })();
    exports.CssSelector = CssSelector;
    var SelectorMatcher = (function() {
      function SelectorMatcher() {
        this._elementMap = new collection_1.Map();
        this._elementPartialMap = new collection_1.Map();
        this._classMap = new collection_1.Map();
        this._classPartialMap = new collection_1.Map();
        this._attrValueMap = new collection_1.Map();
        this._attrValuePartialMap = new collection_1.Map();
        this._listContexts = [];
      }
      SelectorMatcher.createNotMatcher = function(notSelectors) {
        var notMatcher = new SelectorMatcher();
        notMatcher.addSelectables(notSelectors, null);
        return notMatcher;
      };
      SelectorMatcher.prototype.addSelectables = function(cssSelectors, callbackCtxt) {
        var listContext = null;
        if (cssSelectors.length > 1) {
          listContext = new SelectorListContext(cssSelectors);
          this._listContexts.push(listContext);
        }
        for (var i = 0; i < cssSelectors.length; i++) {
          this._addSelectable(cssSelectors[i], callbackCtxt, listContext);
        }
      };
      SelectorMatcher.prototype._addSelectable = function(cssSelector, callbackCtxt, listContext) {
        var matcher = this;
        var element = cssSelector.element;
        var classNames = cssSelector.classNames;
        var attrs = cssSelector.attrs;
        var selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);
        if (lang_1.isPresent(element)) {
          var isTerminal = attrs.length === 0 && classNames.length === 0;
          if (isTerminal) {
            this._addTerminal(matcher._elementMap, element, selectable);
          } else {
            matcher = this._addPartial(matcher._elementPartialMap, element);
          }
        }
        if (lang_1.isPresent(classNames)) {
          for (var index = 0; index < classNames.length; index++) {
            var isTerminal = attrs.length === 0 && index === classNames.length - 1;
            var className = classNames[index];
            if (isTerminal) {
              this._addTerminal(matcher._classMap, className, selectable);
            } else {
              matcher = this._addPartial(matcher._classPartialMap, className);
            }
          }
        }
        if (lang_1.isPresent(attrs)) {
          for (var index = 0; index < attrs.length; ) {
            var isTerminal = index === attrs.length - 2;
            var attrName = attrs[index++];
            var attrValue = attrs[index++];
            if (isTerminal) {
              var terminalMap = matcher._attrValueMap;
              var terminalValuesMap = terminalMap.get(attrName);
              if (lang_1.isBlank(terminalValuesMap)) {
                terminalValuesMap = new collection_1.Map();
                terminalMap.set(attrName, terminalValuesMap);
              }
              this._addTerminal(terminalValuesMap, attrValue, selectable);
            } else {
              var parttialMap = matcher._attrValuePartialMap;
              var partialValuesMap = parttialMap.get(attrName);
              if (lang_1.isBlank(partialValuesMap)) {
                partialValuesMap = new collection_1.Map();
                parttialMap.set(attrName, partialValuesMap);
              }
              matcher = this._addPartial(partialValuesMap, attrValue);
            }
          }
        }
      };
      SelectorMatcher.prototype._addTerminal = function(map, name, selectable) {
        var terminalList = map.get(name);
        if (lang_1.isBlank(terminalList)) {
          terminalList = [];
          map.set(name, terminalList);
        }
        terminalList.push(selectable);
      };
      SelectorMatcher.prototype._addPartial = function(map, name) {
        var matcher = map.get(name);
        if (lang_1.isBlank(matcher)) {
          matcher = new SelectorMatcher();
          map.set(name, matcher);
        }
        return matcher;
      };
      SelectorMatcher.prototype.match = function(cssSelector, matchedCallback) {
        var result = false;
        var element = cssSelector.element;
        var classNames = cssSelector.classNames;
        var attrs = cssSelector.attrs;
        for (var i = 0; i < this._listContexts.length; i++) {
          this._listContexts[i].alreadyMatched = false;
        }
        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;
        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) || result;
        if (lang_1.isPresent(classNames)) {
          for (var index = 0; index < classNames.length; index++) {
            var className = classNames[index];
            result = this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;
            result = this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) || result;
          }
        }
        if (lang_1.isPresent(attrs)) {
          for (var index = 0; index < attrs.length; ) {
            var attrName = attrs[index++];
            var attrValue = attrs[index++];
            var terminalValuesMap = this._attrValueMap.get(attrName);
            if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {
              result = this._matchTerminal(terminalValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) || result;
            }
            result = this._matchTerminal(terminalValuesMap, attrValue, cssSelector, matchedCallback) || result;
            var partialValuesMap = this._attrValuePartialMap.get(attrName);
            if (!lang_1.StringWrapper.equals(attrValue, _EMPTY_ATTR_VALUE)) {
              result = this._matchPartial(partialValuesMap, _EMPTY_ATTR_VALUE, cssSelector, matchedCallback) || result;
            }
            result = this._matchPartial(partialValuesMap, attrValue, cssSelector, matchedCallback) || result;
          }
        }
        return result;
      };
      SelectorMatcher.prototype._matchTerminal = function(map, name, cssSelector, matchedCallback) {
        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {
          return false;
        }
        var selectables = map.get(name);
        var starSelectables = map.get("*");
        if (lang_1.isPresent(starSelectables)) {
          selectables = selectables.concat(starSelectables);
        }
        if (lang_1.isBlank(selectables)) {
          return false;
        }
        var selectable;
        var result = false;
        for (var index = 0; index < selectables.length; index++) {
          selectable = selectables[index];
          result = selectable.finalize(cssSelector, matchedCallback) || result;
        }
        return result;
      };
      SelectorMatcher.prototype._matchPartial = function(map, name, cssSelector, matchedCallback) {
        if (lang_1.isBlank(map) || lang_1.isBlank(name)) {
          return false;
        }
        var nestedSelector = map.get(name);
        if (lang_1.isBlank(nestedSelector)) {
          return false;
        }
        return nestedSelector.match(cssSelector, matchedCallback);
      };
      return SelectorMatcher;
    })();
    exports.SelectorMatcher = SelectorMatcher;
    var SelectorListContext = (function() {
      function SelectorListContext(selectors) {
        this.selectors = selectors;
        this.alreadyMatched = false;
      }
      return SelectorListContext;
    })();
    exports.SelectorListContext = SelectorListContext;
    var SelectorContext = (function() {
      function SelectorContext(selector, cbContext, listContext) {
        this.selector = selector;
        this.cbContext = cbContext;
        this.listContext = listContext;
        this.notSelectors = selector.notSelectors;
      }
      SelectorContext.prototype.finalize = function(cssSelector, callback) {
        var result = true;
        if (this.notSelectors.length > 0 && (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {
          var notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);
          result = !notMatcher.match(cssSelector, null);
        }
        if (result && lang_1.isPresent(callback) && (lang_1.isBlank(this.listContext) || !this.listContext.alreadyMatched)) {
          if (lang_1.isPresent(this.listContext)) {
            this.listContext.alreadyMatched = true;
          }
          callback(this.selector, this.cbContext);
        }
        return result;
      };
      return SelectorContext;
    })();
    exports.SelectorContext = SelectorContext;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/metadata/view", "npm:angular2@2.0.0-alpha.46/src/compiler/selector", "npm:angular2@2.0.0-alpha.46/src/compiler/util", "npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  var selector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/selector');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces');
  var HOST_REG_EXP = /^(?:(?:\[([^\]]+)\])|(?:\(([^\)]+)\)))$/g;
  var CompileTypeMetadata = (function() {
    function CompileTypeMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          runtime = _b.runtime,
          name = _b.name,
          moduleUrl = _b.moduleUrl,
          isHost = _b.isHost;
      this.runtime = runtime;
      this.name = name;
      this.moduleUrl = moduleUrl;
      this.isHost = lang_1.normalizeBool(isHost);
    }
    CompileTypeMetadata.fromJson = function(data) {
      return new CompileTypeMetadata({
        name: data['name'],
        moduleUrl: data['moduleUrl'],
        isHost: data['isHost']
      });
    };
    CompileTypeMetadata.prototype.toJson = function() {
      return {
        'name': this.name,
        'moduleUrl': this.moduleUrl,
        'isHost': this.isHost
      };
    };
    return CompileTypeMetadata;
  })();
  exports.CompileTypeMetadata = CompileTypeMetadata;
  var CompileTemplateMetadata = (function() {
    function CompileTemplateMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          encapsulation = _b.encapsulation,
          template = _b.template,
          templateUrl = _b.templateUrl,
          styles = _b.styles,
          styleUrls = _b.styleUrls,
          ngContentSelectors = _b.ngContentSelectors;
      this.encapsulation = lang_1.isPresent(encapsulation) ? encapsulation : view_1.ViewEncapsulation.Emulated;
      this.template = template;
      this.templateUrl = templateUrl;
      this.styles = lang_1.isPresent(styles) ? styles : [];
      this.styleUrls = lang_1.isPresent(styleUrls) ? styleUrls : [];
      this.ngContentSelectors = lang_1.isPresent(ngContentSelectors) ? ngContentSelectors : [];
    }
    CompileTemplateMetadata.fromJson = function(data) {
      return new CompileTemplateMetadata({
        encapsulation: lang_1.isPresent(data['encapsulation']) ? view_1.VIEW_ENCAPSULATION_VALUES[data['encapsulation']] : data['encapsulation'],
        template: data['template'],
        templateUrl: data['templateUrl'],
        styles: data['styles'],
        styleUrls: data['styleUrls'],
        ngContentSelectors: data['ngContentSelectors']
      });
    };
    CompileTemplateMetadata.prototype.toJson = function() {
      return {
        'encapsulation': lang_1.isPresent(this.encapsulation) ? lang_1.serializeEnum(this.encapsulation) : this.encapsulation,
        'template': this.template,
        'templateUrl': this.templateUrl,
        'styles': this.styles,
        'styleUrls': this.styleUrls,
        'ngContentSelectors': this.ngContentSelectors
      };
    };
    return CompileTemplateMetadata;
  })();
  exports.CompileTemplateMetadata = CompileTemplateMetadata;
  var CompileDirectiveMetadata = (function() {
    function CompileDirectiveMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          type = _b.type,
          isComponent = _b.isComponent,
          dynamicLoadable = _b.dynamicLoadable,
          selector = _b.selector,
          exportAs = _b.exportAs,
          changeDetection = _b.changeDetection,
          inputs = _b.inputs,
          outputs = _b.outputs,
          hostListeners = _b.hostListeners,
          hostProperties = _b.hostProperties,
          hostAttributes = _b.hostAttributes,
          lifecycleHooks = _b.lifecycleHooks,
          template = _b.template;
      this.type = type;
      this.isComponent = isComponent;
      this.dynamicLoadable = dynamicLoadable;
      this.selector = selector;
      this.exportAs = exportAs;
      this.changeDetection = changeDetection;
      this.inputs = inputs;
      this.outputs = outputs;
      this.hostListeners = hostListeners;
      this.hostProperties = hostProperties;
      this.hostAttributes = hostAttributes;
      this.lifecycleHooks = lifecycleHooks;
      this.template = template;
    }
    CompileDirectiveMetadata.create = function(_a) {
      var _b = _a === void 0 ? {} : _a,
          type = _b.type,
          isComponent = _b.isComponent,
          dynamicLoadable = _b.dynamicLoadable,
          selector = _b.selector,
          exportAs = _b.exportAs,
          changeDetection = _b.changeDetection,
          inputs = _b.inputs,
          outputs = _b.outputs,
          host = _b.host,
          lifecycleHooks = _b.lifecycleHooks,
          template = _b.template;
      var hostListeners = {};
      var hostProperties = {};
      var hostAttributes = {};
      if (lang_1.isPresent(host)) {
        collection_1.StringMapWrapper.forEach(host, function(value, key) {
          var matches = lang_1.RegExpWrapper.firstMatch(HOST_REG_EXP, key);
          if (lang_1.isBlank(matches)) {
            hostAttributes[key] = value;
          } else if (lang_1.isPresent(matches[1])) {
            hostProperties[matches[1]] = value;
          } else if (lang_1.isPresent(matches[2])) {
            hostListeners[matches[2]] = value;
          }
        });
      }
      var inputsMap = {};
      if (lang_1.isPresent(inputs)) {
        inputs.forEach(function(bindConfig) {
          var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);
          inputsMap[parts[0]] = parts[1];
        });
      }
      var outputsMap = {};
      if (lang_1.isPresent(outputs)) {
        outputs.forEach(function(bindConfig) {
          var parts = util_1.splitAtColon(bindConfig, [bindConfig, bindConfig]);
          outputsMap[parts[0]] = parts[1];
        });
      }
      return new CompileDirectiveMetadata({
        type: type,
        isComponent: lang_1.normalizeBool(isComponent),
        dynamicLoadable: lang_1.normalizeBool(dynamicLoadable),
        selector: selector,
        exportAs: exportAs,
        changeDetection: changeDetection,
        inputs: inputsMap,
        outputs: outputsMap,
        hostListeners: hostListeners,
        hostProperties: hostProperties,
        hostAttributes: hostAttributes,
        lifecycleHooks: lang_1.isPresent(lifecycleHooks) ? lifecycleHooks : [],
        template: template
      });
    };
    CompileDirectiveMetadata.fromJson = function(data) {
      return new CompileDirectiveMetadata({
        isComponent: data['isComponent'],
        dynamicLoadable: data['dynamicLoadable'],
        selector: data['selector'],
        exportAs: data['exportAs'],
        type: lang_1.isPresent(data['type']) ? CompileTypeMetadata.fromJson(data['type']) : data['type'],
        changeDetection: lang_1.isPresent(data['changeDetection']) ? change_detection_1.CHANGE_DETECTION_STRATEGY_VALUES[data['changeDetection']] : data['changeDetection'],
        inputs: data['inputs'],
        outputs: data['outputs'],
        hostListeners: data['hostListeners'],
        hostProperties: data['hostProperties'],
        hostAttributes: data['hostAttributes'],
        lifecycleHooks: data['lifecycleHooks'].map(function(hookValue) {
          return interfaces_1.LIFECYCLE_HOOKS_VALUES[hookValue];
        }),
        template: lang_1.isPresent(data['template']) ? CompileTemplateMetadata.fromJson(data['template']) : data['template']
      });
    };
    CompileDirectiveMetadata.prototype.toJson = function() {
      return {
        'isComponent': this.isComponent,
        'dynamicLoadable': this.dynamicLoadable,
        'selector': this.selector,
        'exportAs': this.exportAs,
        'type': lang_1.isPresent(this.type) ? this.type.toJson() : this.type,
        'changeDetection': lang_1.isPresent(this.changeDetection) ? lang_1.serializeEnum(this.changeDetection) : this.changeDetection,
        'inputs': this.inputs,
        'outputs': this.outputs,
        'hostListeners': this.hostListeners,
        'hostProperties': this.hostProperties,
        'hostAttributes': this.hostAttributes,
        'lifecycleHooks': this.lifecycleHooks.map(function(hook) {
          return lang_1.serializeEnum(hook);
        }),
        'template': lang_1.isPresent(this.template) ? this.template.toJson() : this.template
      };
    };
    return CompileDirectiveMetadata;
  })();
  exports.CompileDirectiveMetadata = CompileDirectiveMetadata;
  function createHostComponentMeta(componentType, componentSelector) {
    var template = selector_1.CssSelector.parse(componentSelector)[0].getMatchingElementTemplate();
    return CompileDirectiveMetadata.create({
      type: new CompileTypeMetadata({
        runtime: Object,
        name: "Host" + componentType.name,
        moduleUrl: componentType.moduleUrl,
        isHost: true
      }),
      template: new CompileTemplateMetadata({
        template: template,
        templateUrl: '',
        styles: [],
        styleUrls: [],
        ngContentSelectors: []
      }),
      changeDetection: change_detection_1.ChangeDetectionStrategy.Default,
      inputs: [],
      outputs: [],
      host: {},
      lifecycleHooks: [],
      isComponent: true,
      dynamicLoadable: false,
      selector: '*'
    });
  }
  exports.createHostComponentMeta = createHostComponentMeta;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/template_compiler", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands", "npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/compiler/source_module", "npm:angular2@2.0.0-alpha.46/src/compiler/change_detector_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/style_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/command_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/template_parser", "npm:angular2@2.0.0-alpha.46/src/compiler/template_normalizer", "npm:angular2@2.0.0-alpha.46/src/compiler/runtime_metadata", "npm:angular2@2.0.0-alpha.46/src/compiler/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var template_commands_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands');
  var directive_metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var source_module_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/source_module');
  var change_detector_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/change_detector_compiler');
  var style_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/style_compiler');
  var command_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/command_compiler');
  var template_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_parser');
  var template_normalizer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_normalizer');
  var runtime_metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/runtime_metadata');
  var command_compiler_2 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/command_compiler');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/util');
  var TemplateCompiler = (function() {
    function TemplateCompiler(_runtimeMetadataResolver, _templateNormalizer, _templateParser, _styleCompiler, _commandCompiler, _cdCompiler) {
      this._runtimeMetadataResolver = _runtimeMetadataResolver;
      this._templateNormalizer = _templateNormalizer;
      this._templateParser = _templateParser;
      this._styleCompiler = _styleCompiler;
      this._commandCompiler = _commandCompiler;
      this._cdCompiler = _cdCompiler;
      this._hostCacheKeys = new Map();
      this._compiledTemplateCache = new Map();
      this._compiledTemplateDone = new Map();
      this._nextTemplateId = 0;
    }
    TemplateCompiler.prototype.normalizeDirectiveMetadata = function(directive) {
      if (!directive.isComponent) {
        return async_1.PromiseWrapper.resolve(directive);
      }
      return this._templateNormalizer.normalizeTemplate(directive.type, directive.template).then(function(normalizedTemplate) {
        return new directive_metadata_1.CompileDirectiveMetadata({
          type: directive.type,
          isComponent: directive.isComponent,
          dynamicLoadable: directive.dynamicLoadable,
          selector: directive.selector,
          exportAs: directive.exportAs,
          changeDetection: directive.changeDetection,
          inputs: directive.inputs,
          outputs: directive.outputs,
          hostListeners: directive.hostListeners,
          hostProperties: directive.hostProperties,
          hostAttributes: directive.hostAttributes,
          lifecycleHooks: directive.lifecycleHooks,
          template: normalizedTemplate
        });
      });
    };
    TemplateCompiler.prototype.compileHostComponentRuntime = function(type) {
      var hostCacheKey = this._hostCacheKeys.get(type);
      if (lang_1.isBlank(hostCacheKey)) {
        hostCacheKey = new Object();
        this._hostCacheKeys.set(type, hostCacheKey);
        var compMeta = this._runtimeMetadataResolver.getMetadata(type);
        assertComponent(compMeta);
        var hostMeta = directive_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);
        this._compileComponentRuntime(hostCacheKey, hostMeta, [compMeta], new Set());
      }
      return this._compiledTemplateDone.get(hostCacheKey).then(function(compiledTemplate) {
        return new template_commands_1.CompiledHostTemplate(compiledTemplate);
      });
    };
    TemplateCompiler.prototype.clearCache = function() {
      this._hostCacheKeys.clear();
      this._styleCompiler.clearCache();
      this._compiledTemplateCache.clear();
      this._compiledTemplateDone.clear();
    };
    TemplateCompiler.prototype._compileComponentRuntime = function(cacheKey, compMeta, viewDirectives, compilingComponentCacheKeys) {
      var _this = this;
      var compiledTemplate = this._compiledTemplateCache.get(cacheKey);
      var done = this._compiledTemplateDone.get(cacheKey);
      if (lang_1.isBlank(compiledTemplate)) {
        var styles = [];
        var changeDetectorFactory;
        var commands = [];
        var templateId = lang_1.stringify(compMeta.type.runtime) + "Template" + this._nextTemplateId++;
        compiledTemplate = new template_commands_1.CompiledComponentTemplate(templateId, function(dispatcher) {
          return changeDetectorFactory(dispatcher);
        }, commands, styles);
        this._compiledTemplateCache.set(cacheKey, compiledTemplate);
        compilingComponentCacheKeys.add(cacheKey);
        done = async_1.PromiseWrapper.all([this._styleCompiler.compileComponentRuntime(compMeta.template)].concat(viewDirectives.map(function(dirMeta) {
          return _this.normalizeDirectiveMetadata(dirMeta);
        }))).then(function(stylesAndNormalizedViewDirMetas) {
          var childPromises = [];
          var normalizedViewDirMetas = stylesAndNormalizedViewDirMetas.slice(1);
          var parsedTemplate = _this._templateParser.parse(compMeta.template.template, normalizedViewDirMetas, compMeta.type.name);
          var changeDetectorFactories = _this._cdCompiler.compileComponentRuntime(compMeta.type, compMeta.changeDetection, parsedTemplate);
          changeDetectorFactory = changeDetectorFactories[0];
          var tmpStyles = stylesAndNormalizedViewDirMetas[0];
          tmpStyles.forEach(function(style) {
            return styles.push(style);
          });
          var tmpCommands = _this._compileCommandsRuntime(compMeta, parsedTemplate, changeDetectorFactories, compilingComponentCacheKeys, childPromises);
          tmpCommands.forEach(function(cmd) {
            return commands.push(cmd);
          });
          return async_1.PromiseWrapper.all(childPromises);
        }).then(function(_) {
          collection_1.SetWrapper.delete(compilingComponentCacheKeys, cacheKey);
          return compiledTemplate;
        });
        this._compiledTemplateDone.set(cacheKey, done);
      }
      return compiledTemplate;
    };
    TemplateCompiler.prototype._compileCommandsRuntime = function(compMeta, parsedTemplate, changeDetectorFactories, compilingComponentCacheKeys, childPromises) {
      var _this = this;
      var cmds = this._commandCompiler.compileComponentRuntime(compMeta, parsedTemplate, changeDetectorFactories, function(childComponentDir) {
        var childCacheKey = childComponentDir.type.runtime;
        var childViewDirectives = _this._runtimeMetadataResolver.getViewDirectivesMetadata(childComponentDir.type.runtime);
        var childIsRecursive = collection_1.SetWrapper.has(compilingComponentCacheKeys, childCacheKey);
        var childTemplate = _this._compileComponentRuntime(childCacheKey, childComponentDir, childViewDirectives, compilingComponentCacheKeys);
        if (!childIsRecursive) {
          childPromises.push(_this._compiledTemplateDone.get(childCacheKey));
        }
        return function() {
          return childTemplate;
        };
      });
      cmds.forEach(function(cmd) {
        if (cmd instanceof template_commands_1.BeginComponentCmd) {
          cmd.templateGetter();
        }
      });
      return cmds;
    };
    TemplateCompiler.prototype.compileTemplatesCodeGen = function(components) {
      var _this = this;
      if (components.length === 0) {
        throw new exceptions_1.BaseException('No components given');
      }
      var declarations = [];
      var templateArguments = [];
      var componentMetas = [];
      components.forEach(function(componentWithDirs) {
        var compMeta = componentWithDirs.component;
        assertComponent(compMeta);
        componentMetas.push(compMeta);
        _this._processTemplateCodeGen(compMeta, componentWithDirs.directives, declarations, templateArguments);
        if (compMeta.dynamicLoadable) {
          var hostMeta = directive_metadata_1.createHostComponentMeta(compMeta.type, compMeta.selector);
          componentMetas.push(hostMeta);
          _this._processTemplateCodeGen(hostMeta, [compMeta], declarations, templateArguments);
        }
      });
      collection_1.ListWrapper.forEachWithIndex(componentMetas, function(compMeta, index) {
        var templateId = compMeta.type.moduleUrl + "|" + compMeta.type.name;
        var constructionKeyword = lang_1.IS_DART ? 'const' : 'new';
        var compiledTemplateExpr = constructionKeyword + " " + command_compiler_2.TEMPLATE_COMMANDS_MODULE_REF + "CompiledComponentTemplate('" + templateId + "'," + templateArguments[index].join(',') + ")";
        var variableValueExpr;
        if (compMeta.type.isHost) {
          variableValueExpr = constructionKeyword + " " + command_compiler_2.TEMPLATE_COMMANDS_MODULE_REF + "CompiledHostTemplate(" + compiledTemplateExpr + ")";
        } else {
          variableValueExpr = compiledTemplateExpr;
        }
        var varName = templateVariableName(compMeta.type);
        declarations.push("" + util_1.codeGenExportVariable(varName) + variableValueExpr + ";");
        declarations.push(util_1.codeGenValueFn([], varName, templateGetterName(compMeta.type)) + ";");
      });
      var moduleUrl = components[0].component.type.moduleUrl;
      return new source_module_1.SourceModule("" + templateModuleUrl(moduleUrl), declarations.join('\n'));
    };
    TemplateCompiler.prototype.compileStylesheetCodeGen = function(stylesheetUrl, cssText) {
      return this._styleCompiler.compileStylesheetCodeGen(stylesheetUrl, cssText);
    };
    TemplateCompiler.prototype._processTemplateCodeGen = function(compMeta, directives, targetDeclarations, targetTemplateArguments) {
      var styleExpr = this._styleCompiler.compileComponentCodeGen(compMeta.template);
      var parsedTemplate = this._templateParser.parse(compMeta.template.template, directives, compMeta.type.name);
      var changeDetectorsExprs = this._cdCompiler.compileComponentCodeGen(compMeta.type, compMeta.changeDetection, parsedTemplate);
      var commandsExpr = this._commandCompiler.compileComponentCodeGen(compMeta, parsedTemplate, changeDetectorsExprs.expressions, codeGenComponentTemplateFactory);
      addAll(styleExpr.declarations, targetDeclarations);
      addAll(changeDetectorsExprs.declarations, targetDeclarations);
      addAll(commandsExpr.declarations, targetDeclarations);
      targetTemplateArguments.push([changeDetectorsExprs.expressions[0], commandsExpr.expression, styleExpr.expression]);
    };
    TemplateCompiler = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [runtime_metadata_1.RuntimeMetadataResolver, template_normalizer_1.TemplateNormalizer, template_parser_1.TemplateParser, style_compiler_1.StyleCompiler, command_compiler_1.CommandCompiler, change_detector_compiler_1.ChangeDetectionCompiler])], TemplateCompiler);
    return TemplateCompiler;
  })();
  exports.TemplateCompiler = TemplateCompiler;
  var NormalizedComponentWithViewDirectives = (function() {
    function NormalizedComponentWithViewDirectives(component, directives) {
      this.component = component;
      this.directives = directives;
    }
    return NormalizedComponentWithViewDirectives;
  })();
  exports.NormalizedComponentWithViewDirectives = NormalizedComponentWithViewDirectives;
  function assertComponent(meta) {
    if (!meta.isComponent) {
      throw new exceptions_1.BaseException("Could not compile '" + meta.type.name + "' because it is not a component.");
    }
  }
  function templateVariableName(type) {
    return type.name + "Template";
  }
  function templateGetterName(type) {
    return templateVariableName(type) + "Getter";
  }
  function templateModuleUrl(moduleUrl) {
    var urlWithoutSuffix = moduleUrl.substring(0, moduleUrl.length - util_1.MODULE_SUFFIX.length);
    return urlWithoutSuffix + ".template" + util_1.MODULE_SUFFIX;
  }
  function addAll(source, target) {
    for (var i = 0; i < source.length; i++) {
      target.push(source[i]);
    }
  }
  function codeGenComponentTemplateFactory(nestedCompType) {
    return "" + source_module_1.moduleRef(templateModuleUrl(nestedCompType.type.moduleUrl)) + templateGetterName(nestedCompType.type);
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/runtime_compiler", ["npm:angular2@2.0.0-alpha.46/src/core/linker/compiler", "npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory", "npm:angular2@2.0.0-alpha.46/src/compiler/template_compiler", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/compiler');
  var proto_view_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory');
  var template_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_compiler');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var RuntimeCompiler = (function(_super) {
    __extends(RuntimeCompiler, _super);
    function RuntimeCompiler() {
      _super.apply(this, arguments);
    }
    return RuntimeCompiler;
  })(compiler_1.Compiler);
  exports.RuntimeCompiler = RuntimeCompiler;
  var RuntimeCompiler_ = (function(_super) {
    __extends(RuntimeCompiler_, _super);
    function RuntimeCompiler_(_protoViewFactory, _templateCompiler) {
      _super.call(this, _protoViewFactory);
      this._templateCompiler = _templateCompiler;
    }
    RuntimeCompiler_.prototype.compileInHost = function(componentType) {
      var _this = this;
      return this._templateCompiler.compileHostComponentRuntime(componentType).then(function(compiledHostTemplate) {
        return compiler_1.internalCreateProtoView(_this, compiledHostTemplate);
      });
    };
    RuntimeCompiler_.prototype.clearCache = function() {
      _super.prototype.clearCache.call(this);
      this._templateCompiler.clearCache();
    };
    RuntimeCompiler_ = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [proto_view_factory_1.ProtoViewFactory, template_compiler_1.TemplateCompiler])], RuntimeCompiler_);
    return RuntimeCompiler_;
  })(compiler_1.Compiler_);
  exports.RuntimeCompiler_ = RuntimeCompiler_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/compiler/compiler", ["npm:angular2@2.0.0-alpha.46/src/compiler/runtime_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/template_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata", "npm:angular2@2.0.0-alpha.46/src/compiler/source_module", "npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/compiler/template_parser", "npm:angular2@2.0.0-alpha.46/src/compiler/html_parser", "npm:angular2@2.0.0-alpha.46/src/compiler/template_normalizer", "npm:angular2@2.0.0-alpha.46/src/compiler/runtime_metadata", "npm:angular2@2.0.0-alpha.46/src/compiler/change_detector_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/style_compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/command_compiler", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/linker/compiler", "npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry", "npm:angular2@2.0.0-alpha.46/src/compiler/schema/dom_element_schema_registry", "npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver", "npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url", "npm:angular2@2.0.0-alpha.46/src/compiler/anchor_based_app_root_url"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var runtime_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/runtime_compiler');
  var template_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_compiler');
  exports.TemplateCompiler = template_compiler_1.TemplateCompiler;
  var directive_metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/directive_metadata');
  exports.CompileDirectiveMetadata = directive_metadata_1.CompileDirectiveMetadata;
  exports.CompileTypeMetadata = directive_metadata_1.CompileTypeMetadata;
  exports.CompileTemplateMetadata = directive_metadata_1.CompileTemplateMetadata;
  var source_module_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/source_module');
  exports.SourceModule = source_module_1.SourceModule;
  exports.SourceWithImports = source_module_1.SourceWithImports;
  var platform_directives_and_pipes_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes');
  exports.PLATFORM_DIRECTIVES = platform_directives_and_pipes_1.PLATFORM_DIRECTIVES;
  exports.PLATFORM_PIPES = platform_directives_and_pipes_1.PLATFORM_PIPES;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var template_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_parser');
  var html_parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/html_parser');
  var template_normalizer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_normalizer');
  var runtime_metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/runtime_metadata');
  var change_detector_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/change_detector_compiler');
  var style_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/style_compiler');
  var command_compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/command_compiler');
  var template_compiler_2 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/template_compiler');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/compiler');
  var runtime_compiler_2 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/runtime_compiler');
  var element_schema_registry_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/schema/element_schema_registry');
  var dom_element_schema_registry_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/schema/dom_element_schema_registry');
  var url_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/url_resolver');
  var app_root_url_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/app_root_url');
  var anchor_based_app_root_url_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/anchor_based_app_root_url');
  var change_detection_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  function compilerProviders() {
    return [change_detection_2.Lexer, change_detection_2.Parser, html_parser_1.HtmlParser, template_parser_1.TemplateParser, template_normalizer_1.TemplateNormalizer, runtime_metadata_1.RuntimeMetadataResolver, style_compiler_1.StyleCompiler, command_compiler_1.CommandCompiler, change_detector_compiler_1.ChangeDetectionCompiler, di_1.provide(change_detection_1.ChangeDetectorGenConfig, {useValue: new change_detection_1.ChangeDetectorGenConfig(lang_1.assertionsEnabled(), false, true)}), template_compiler_2.TemplateCompiler, di_1.provide(runtime_compiler_2.RuntimeCompiler, {useClass: runtime_compiler_1.RuntimeCompiler_}), di_1.provide(compiler_1.Compiler, {useExisting: runtime_compiler_2.RuntimeCompiler}), dom_element_schema_registry_1.DomElementSchemaRegistry, di_1.provide(element_schema_registry_1.ElementSchemaRegistry, {useExisting: dom_element_schema_registry_1.DomElementSchemaRegistry}), anchor_based_app_root_url_1.AnchorBasedAppRootUrl, di_1.provide(app_root_url_1.AppRootUrl, {useExisting: anchor_based_app_root_url_1.AnchorBasedAppRootUrl}), url_resolver_1.UrlResolver];
  }
  exports.compilerProviders = compilerProviders;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/application", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/compiler/compiler", "npm:angular2@2.0.0-alpha.46/src/core/application_common", "npm:angular2@2.0.0-alpha.46/src/core/application_tokens", "npm:angular2@2.0.0-alpha.46/src/core/application_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/compiler/compiler');
  var application_common_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_common');
  var application_tokens_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_tokens');
  exports.APP_COMPONENT = application_tokens_1.APP_COMPONENT;
  exports.APP_ID = application_tokens_1.APP_ID;
  var application_common_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_common');
  exports.platform = application_common_2.platform;
  var application_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_ref');
  exports.PlatformRef = application_ref_1.PlatformRef;
  exports.ApplicationRef = application_ref_1.ApplicationRef;
  exports.applicationCommonProviders = application_ref_1.applicationCommonProviders;
  exports.createNgZone = application_ref_1.createNgZone;
  exports.platformCommon = application_ref_1.platformCommon;
  exports.platformProviders = application_ref_1.platformProviders;
  function bootstrap(appComponentType, appProviders) {
    if (appProviders === void 0) {
      appProviders = null;
    }
    var providers = [compiler_1.compilerProviders()];
    if (lang_1.isPresent(appProviders)) {
      providers.push(appProviders);
    }
    return application_common_1.commonBootstrap(appComponentType, providers);
  }
  exports.bootstrap = bootstrap;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/facade", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/exception_handler"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.Type = lang_1.Type;
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  exports.Observable = async_1.Observable;
  exports.EventEmitter = async_1.EventEmitter;
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  exports.WrappedException = exceptions_1.WrappedException;
  var exception_handler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exception_handler');
  exports.ExceptionHandler = exception_handler_1.ExceptionHandler;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/util", ["npm:angular2@2.0.0-alpha.46/src/core/util/decorators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/util/decorators');
  exports.Class = decorators_1.Class;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/core", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/util", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/pipes", "npm:angular2@2.0.0-alpha.46/src/facade/facade", "npm:angular2@2.0.0-alpha.46/src/core/application", "npm:angular2@2.0.0-alpha.46/src/core/bootstrap", "npm:angular2@2.0.0-alpha.46/src/core/services", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/application_ref", "npm:angular2@2.0.0-alpha.46/src/core/zone", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/common/directives", "npm:angular2@2.0.0-alpha.46/src/common/forms", "npm:angular2@2.0.0-alpha.46/src/core/debug", "npm:angular2@2.0.0-alpha.46/src/core/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes", "npm:angular2@2.0.0-alpha.46/src/core/dev_mode"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/metadata'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/util'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/di'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/pipes'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/facade/facade'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/application'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/bootstrap'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/services'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/linker'));
  var application_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_ref');
  exports.ApplicationRef = application_ref_1.ApplicationRef;
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/zone'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/render'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/directives'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/forms'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/debug'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/dev_mode'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/common_directives", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms", "npm:angular2@2.0.0-alpha.46/src/common/directives"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var forms_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms');
  var directives_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives');
  exports.COMMON_DIRECTIVES = lang_1.CONST_EXPR([directives_1.CORE_DIRECTIVES, forms_1.FORM_DIRECTIVES]);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/form_builder", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/model"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var modelModule = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/model');
  var FormBuilder = (function() {
    function FormBuilder() {}
    FormBuilder.prototype.group = function(controlsConfig, extra) {
      if (extra === void 0) {
        extra = null;
      }
      var controls = this._reduceControls(controlsConfig);
      var optionals = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, "optionals") : null;
      var validator = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, "validator") : null;
      var asyncValidator = lang_1.isPresent(extra) ? collection_1.StringMapWrapper.get(extra, "asyncValidator") : null;
      return new modelModule.ControlGroup(controls, optionals, validator, asyncValidator);
    };
    FormBuilder.prototype.control = function(value, validator, asyncValidator) {
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      return new modelModule.Control(value, validator, asyncValidator);
    };
    FormBuilder.prototype.array = function(controlsConfig, validator, asyncValidator) {
      var _this = this;
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      var controls = controlsConfig.map(function(c) {
        return _this._createControl(c);
      });
      return new modelModule.ControlArray(controls, validator, asyncValidator);
    };
    FormBuilder.prototype._reduceControls = function(controlsConfig) {
      var _this = this;
      var controls = {};
      collection_1.StringMapWrapper.forEach(controlsConfig, function(controlConfig, controlName) {
        controls[controlName] = _this._createControl(controlConfig);
      });
      return controls;
    };
    FormBuilder.prototype._createControl = function(controlConfig) {
      if (controlConfig instanceof modelModule.Control || controlConfig instanceof modelModule.ControlGroup || controlConfig instanceof modelModule.ControlArray) {
        return controlConfig;
      } else if (lang_1.isArray(controlConfig)) {
        var value = controlConfig[0];
        var validator = controlConfig.length > 1 ? controlConfig[1] : null;
        var asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;
        return this.control(value, validator, asyncValidator);
      } else {
        return this.control(controlConfig);
      }
    };
    FormBuilder = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], FormBuilder);
    return FormBuilder;
  })();
  exports.FormBuilder = FormBuilder;
  exports.FORM_PROVIDERS = lang_1.CONST_EXPR([FormBuilder]);
  exports.FORM_BINDINGS = exports.FORM_PROVIDERS;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/validators", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var lang_2 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var REQUIRED_VALIDATOR = lang_1.CONST_EXPR(new di_1.Provider(validators_1.NG_VALIDATORS, {
    useValue: validators_1.Validators.required,
    multi: true
  }));
  var RequiredValidator = (function() {
    function RequiredValidator() {}
    RequiredValidator = __decorate([metadata_1.Directive({
      selector: '[required][ng-control],[required][ng-form-control],[required][ng-model]',
      providers: [REQUIRED_VALIDATOR]
    }), __metadata('design:paramtypes', [])], RequiredValidator);
    return RequiredValidator;
  })();
  exports.RequiredValidator = RequiredValidator;
  var MIN_LENGTH_VALIDATOR = lang_1.CONST_EXPR(new di_1.Provider(validators_1.NG_VALIDATORS, {
    useExisting: di_1.forwardRef(function() {
      return MinLengthValidator;
    }),
    multi: true
  }));
  var MinLengthValidator = (function() {
    function MinLengthValidator(minLength) {
      this._validator = validators_1.Validators.minLength(lang_2.NumberWrapper.parseInt(minLength, 10));
    }
    MinLengthValidator.prototype.validate = function(c) {
      return this._validator(c);
    };
    MinLengthValidator = __decorate([metadata_1.Directive({
      selector: '[minlength][ng-control],[minlength][ng-form-control],[minlength][ng-model]',
      providers: [MIN_LENGTH_VALIDATOR]
    }), __param(0, metadata_1.Attribute("minlength")), __metadata('design:paramtypes', [String])], MinLengthValidator);
    return MinLengthValidator;
  })();
  exports.MinLengthValidator = MinLengthValidator;
  var MAX_LENGTH_VALIDATOR = lang_1.CONST_EXPR(new di_1.Provider(validators_1.NG_VALIDATORS, {
    useExisting: di_1.forwardRef(function() {
      return MaxLengthValidator;
    }),
    multi: true
  }));
  var MaxLengthValidator = (function() {
    function MaxLengthValidator(minLength) {
      this._validator = validators_1.Validators.maxLength(lang_2.NumberWrapper.parseInt(minLength, 10));
    }
    MaxLengthValidator.prototype.validate = function(c) {
      return this._validator(c);
    };
    MaxLengthValidator = __decorate([metadata_1.Directive({
      selector: '[maxlength][ng-control],[maxlength][ng-form-control],[maxlength][ng-model]',
      providers: [MAX_LENGTH_VALIDATOR]
    }), __param(0, metadata_1.Attribute("maxlength")), __metadata('design:paramtypes', [String])], MaxLengthValidator);
    return MaxLengthValidator;
  })();
  exports.MaxLengthValidator = MaxLengthValidator;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_name", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_control", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_model", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_group", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_model", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/number_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_status", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/validators", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var ng_control_name_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_name');
  var ng_form_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_control');
  var ng_model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_model');
  var ng_control_group_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_group');
  var ng_form_model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_model');
  var ng_form_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form');
  var default_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor');
  var checkbox_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor');
  var number_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/number_value_accessor');
  var ng_control_status_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_status');
  var select_control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/validators');
  var ng_control_name_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_name');
  exports.NgControlName = ng_control_name_2.NgControlName;
  var ng_form_control_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_control');
  exports.NgFormControl = ng_form_control_2.NgFormControl;
  var ng_model_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_model');
  exports.NgModel = ng_model_2.NgModel;
  var ng_control_group_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_group');
  exports.NgControlGroup = ng_control_group_2.NgControlGroup;
  var ng_form_model_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_model');
  exports.NgFormModel = ng_form_model_2.NgFormModel;
  var ng_form_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form');
  exports.NgForm = ng_form_2.NgForm;
  var default_value_accessor_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor');
  exports.DefaultValueAccessor = default_value_accessor_2.DefaultValueAccessor;
  var checkbox_value_accessor_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor');
  exports.CheckboxControlValueAccessor = checkbox_value_accessor_2.CheckboxControlValueAccessor;
  var number_value_accessor_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/number_value_accessor');
  exports.NumberValueAccessor = number_value_accessor_2.NumberValueAccessor;
  var ng_control_status_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_status');
  exports.NgControlStatus = ng_control_status_2.NgControlStatus;
  var select_control_value_accessor_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor');
  exports.SelectControlValueAccessor = select_control_value_accessor_2.SelectControlValueAccessor;
  exports.NgSelectOption = select_control_value_accessor_2.NgSelectOption;
  var validators_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/validators');
  exports.RequiredValidator = validators_2.RequiredValidator;
  exports.MinLengthValidator = validators_2.MinLengthValidator;
  exports.MaxLengthValidator = validators_2.MaxLengthValidator;
  var ng_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control');
  exports.NgControl = ng_control_1.NgControl;
  exports.FORM_DIRECTIVES = lang_1.CONST_EXPR([ng_control_name_1.NgControlName, ng_control_group_1.NgControlGroup, ng_form_control_1.NgFormControl, ng_model_1.NgModel, ng_form_model_1.NgFormModel, ng_form_1.NgForm, select_control_value_accessor_1.NgSelectOption, default_value_accessor_1.DefaultValueAccessor, number_value_accessor_1.NumberValueAccessor, checkbox_value_accessor_1.CheckboxControlValueAccessor, select_control_value_accessor_1.SelectControlValueAccessor, ng_control_status_1.NgControlStatus, validators_1.RequiredValidator, validators_1.MinLengthValidator, validators_1.MaxLengthValidator]);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_status", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var ng_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var NgControlStatus = (function() {
    function NgControlStatus(cd) {
      this._cd = cd;
    }
    Object.defineProperty(NgControlStatus.prototype, "ngClassUntouched", {
      get: function() {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.untouched : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassTouched", {
      get: function() {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.touched : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassPristine", {
      get: function() {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.pristine : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassDirty", {
      get: function() {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.dirty : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassValid", {
      get: function() {
        return lang_1.isPresent(this._cd.control) ? this._cd.control.valid : false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlStatus.prototype, "ngClassInvalid", {
      get: function() {
        return lang_1.isPresent(this._cd.control) ? !this._cd.control.valid : false;
      },
      enumerable: true,
      configurable: true
    });
    NgControlStatus = __decorate([metadata_1.Directive({
      selector: '[ng-control],[ng-model],[ng-form-control]',
      host: {
        '[class.ng-untouched]': 'ngClassUntouched',
        '[class.ng-touched]': 'ngClassTouched',
        '[class.ng-pristine]': 'ngClassPristine',
        '[class.ng-dirty]': 'ngClassDirty',
        '[class.ng-valid]': 'ngClassValid',
        '[class.ng-invalid]': 'ngClassInvalid'
      }
    }), __param(0, di_1.Self()), __metadata('design:paramtypes', [ng_control_1.NgControl])], NgControlStatus);
    return NgControlStatus;
  })();
  exports.NgControlStatus = NgControlStatus;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form", ["npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container", "npm:angular2@2.0.0-alpha.46/src/common/forms/model", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_container_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container');
  var model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/model');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var formDirectiveProvider = lang_1.CONST_EXPR(new di_1.Provider(control_container_1.ControlContainer, {useExisting: di_1.forwardRef(function() {
      return NgForm;
    })}));
  var NgForm = (function(_super) {
    __extends(NgForm, _super);
    function NgForm(validators, asyncValidators) {
      _super.call(this);
      this.ngSubmit = new async_1.EventEmitter();
      this.form = new model_1.ControlGroup({}, null, shared_1.composeValidators(validators), shared_1.composeAsyncValidators(asyncValidators));
    }
    Object.defineProperty(NgForm.prototype, "formDirective", {
      get: function() {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForm.prototype, "control", {
      get: function() {
        return this.form;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForm.prototype, "path", {
      get: function() {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgForm.prototype, "controls", {
      get: function() {
        return this.form.controls;
      },
      enumerable: true,
      configurable: true
    });
    NgForm.prototype.addControl = function(dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function() {
        var container = _this._findContainer(dir.path);
        var ctrl = new model_1.Control();
        shared_1.setUpControl(ctrl, dir);
        container.addControl(dir.name, ctrl);
        ctrl.updateValueAndValidity({emitEvent: false});
      });
    };
    NgForm.prototype.getControl = function(dir) {
      return this.form.find(dir.path);
    };
    NgForm.prototype.removeControl = function(dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function() {
        var container = _this._findContainer(dir.path);
        if (lang_1.isPresent(container)) {
          container.removeControl(dir.name);
          container.updateValueAndValidity({emitEvent: false});
        }
      });
    };
    NgForm.prototype.addControlGroup = function(dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function() {
        var container = _this._findContainer(dir.path);
        var group = new model_1.ControlGroup({});
        shared_1.setUpControlGroup(group, dir);
        container.addControl(dir.name, group);
        group.updateValueAndValidity({emitEvent: false});
      });
    };
    NgForm.prototype.removeControlGroup = function(dir) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function() {
        var container = _this._findContainer(dir.path);
        if (lang_1.isPresent(container)) {
          container.removeControl(dir.name);
          container.updateValueAndValidity({emitEvent: false});
        }
      });
    };
    NgForm.prototype.getControlGroup = function(dir) {
      return this.form.find(dir.path);
    };
    NgForm.prototype.updateModel = function(dir, value) {
      var _this = this;
      async_1.PromiseWrapper.scheduleMicrotask(function() {
        var ctrl = _this.form.find(dir.path);
        ctrl.updateValue(value);
      });
    };
    NgForm.prototype.onSubmit = function() {
      async_1.ObservableWrapper.callNext(this.ngSubmit, null);
      return false;
    };
    NgForm.prototype._findContainer = function(path) {
      path.pop();
      return collection_1.ListWrapper.isEmpty(path) ? this.form : this.form.find(path);
    };
    NgForm = __decorate([metadata_1.Directive({
      selector: 'form:not([ng-no-form]):not([ng-form-model]),ng-form,[ng-form]',
      bindings: [formDirectiveProvider],
      host: {'(submit)': 'onSubmit()'},
      outputs: ['ngSubmit'],
      exportAs: 'form'
    }), __param(0, di_1.Optional()), __param(0, di_1.Inject(validators_1.NG_VALIDATORS)), __param(1, di_1.Optional()), __param(1, di_1.Inject(validators_1.NG_ASYNC_VALIDATORS)), __metadata('design:paramtypes', [Array, Array])], NgForm);
    return NgForm;
  })(control_container_1.ControlContainer);
  exports.NgForm = NgForm;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_model", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_container_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var formDirectiveProvider = lang_1.CONST_EXPR(new di_1.Provider(control_container_1.ControlContainer, {useExisting: di_1.forwardRef(function() {
      return NgFormModel;
    })}));
  var NgFormModel = (function(_super) {
    __extends(NgFormModel, _super);
    function NgFormModel(_validators, _asyncValidators) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this.form = null;
      this.directives = [];
      this.ngSubmit = new async_1.EventEmitter();
    }
    NgFormModel.prototype.onChanges = function(changes) {
      if (collection_1.StringMapWrapper.contains(changes, "form")) {
        var sync = shared_1.composeValidators(this._validators);
        this.form.validator = validators_1.Validators.compose([this.form.validator, sync]);
        var async = shared_1.composeAsyncValidators(this._asyncValidators);
        this.form.asyncValidator = validators_1.Validators.composeAsync([this.form.asyncValidator, async]);
        this.form.updateValueAndValidity({
          onlySelf: true,
          emitEvent: false
        });
      }
      this._updateDomValue();
    };
    Object.defineProperty(NgFormModel.prototype, "formDirective", {
      get: function() {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormModel.prototype, "control", {
      get: function() {
        return this.form;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormModel.prototype, "path", {
      get: function() {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    NgFormModel.prototype.addControl = function(dir) {
      var ctrl = this.form.find(dir.path);
      shared_1.setUpControl(ctrl, dir);
      ctrl.updateValueAndValidity({emitEvent: false});
      this.directives.push(dir);
    };
    NgFormModel.prototype.getControl = function(dir) {
      return this.form.find(dir.path);
    };
    NgFormModel.prototype.removeControl = function(dir) {
      collection_1.ListWrapper.remove(this.directives, dir);
    };
    NgFormModel.prototype.addControlGroup = function(dir) {
      var ctrl = this.form.find(dir.path);
      shared_1.setUpControlGroup(ctrl, dir);
      ctrl.updateValueAndValidity({emitEvent: false});
    };
    NgFormModel.prototype.removeControlGroup = function(dir) {};
    NgFormModel.prototype.getControlGroup = function(dir) {
      return this.form.find(dir.path);
    };
    NgFormModel.prototype.updateModel = function(dir, value) {
      var ctrl = this.form.find(dir.path);
      ctrl.updateValue(value);
    };
    NgFormModel.prototype.onSubmit = function() {
      async_1.ObservableWrapper.callNext(this.ngSubmit, null);
      return false;
    };
    NgFormModel.prototype._updateDomValue = function() {
      var _this = this;
      this.directives.forEach(function(dir) {
        var ctrl = _this.form.find(dir.path);
        dir.valueAccessor.writeValue(ctrl.value);
      });
    };
    NgFormModel = __decorate([metadata_1.Directive({
      selector: '[ng-form-model]',
      bindings: [formDirectiveProvider],
      inputs: ['form: ng-form-model'],
      host: {'(submit)': 'onSubmit()'},
      outputs: ['ngSubmit'],
      exportAs: 'form'
    }), __param(0, di_1.Optional()), __param(0, di_1.Inject(validators_1.NG_VALIDATORS)), __param(1, di_1.Optional()), __param(1, di_1.Inject(validators_1.NG_ASYNC_VALIDATORS)), __metadata('design:paramtypes', [Array, Array])], NgFormModel);
    return NgFormModel;
  })(control_container_1.ControlContainer);
  exports.NgFormModel = NgFormModel;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_group", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var control_container_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var controlGroupProvider = lang_1.CONST_EXPR(new di_1.Provider(control_container_1.ControlContainer, {useExisting: di_1.forwardRef(function() {
      return NgControlGroup;
    })}));
  var NgControlGroup = (function(_super) {
    __extends(NgControlGroup, _super);
    function NgControlGroup(parent, _validators, _asyncValidators) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this._parent = parent;
    }
    NgControlGroup.prototype.onInit = function() {
      this.formDirective.addControlGroup(this);
    };
    NgControlGroup.prototype.onDestroy = function() {
      this.formDirective.removeControlGroup(this);
    };
    Object.defineProperty(NgControlGroup.prototype, "control", {
      get: function() {
        return this.formDirective.getControlGroup(this);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "path", {
      get: function() {
        return shared_1.controlPath(this.name, this._parent);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "formDirective", {
      get: function() {
        return this._parent.formDirective;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "validator", {
      get: function() {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlGroup.prototype, "asyncValidator", {
      get: function() {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    NgControlGroup = __decorate([metadata_1.Directive({
      selector: '[ng-control-group]',
      providers: [controlGroupProvider],
      inputs: ['name: ng-control-group'],
      exportAs: 'form'
    }), __param(0, di_1.Host()), __param(0, di_1.SkipSelf()), __param(1, di_1.Optional()), __param(1, di_1.Inject(validators_1.NG_VALIDATORS)), __param(2, di_1.Optional()), __param(2, di_1.Inject(validators_1.NG_ASYNC_VALIDATORS)), __metadata('design:paramtypes', [control_container_1.ControlContainer, Array, Array])], NgControlGroup);
    return NgControlGroup;
  })(control_container_1.ControlContainer);
  exports.NgControlGroup = NgControlGroup;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_model", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control", "npm:angular2@2.0.0-alpha.46/src/common/forms/model", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var ng_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control');
  var model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/model');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var formControlBinding = lang_1.CONST_EXPR(new di_1.Provider(ng_control_1.NgControl, {useExisting: di_1.forwardRef(function() {
      return NgModel;
    })}));
  var NgModel = (function(_super) {
    __extends(NgModel, _super);
    function NgModel(_validators, _asyncValidators, valueAccessors) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this._control = new model_1.Control();
      this._added = false;
      this.update = new async_1.EventEmitter();
      this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);
    }
    NgModel.prototype.onChanges = function(changes) {
      if (!this._added) {
        shared_1.setUpControl(this._control, this);
        this._control.updateValueAndValidity({emitEvent: false});
        this._added = true;
      }
      if (shared_1.isPropertyUpdated(changes, this.viewModel)) {
        this._control.updateValue(this.model);
        this.viewModel = this.model;
      }
    };
    Object.defineProperty(NgModel.prototype, "control", {
      get: function() {
        return this._control;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgModel.prototype, "path", {
      get: function() {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgModel.prototype, "validator", {
      get: function() {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgModel.prototype, "asyncValidator", {
      get: function() {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    NgModel.prototype.viewToModelUpdate = function(newValue) {
      this.viewModel = newValue;
      async_1.ObservableWrapper.callNext(this.update, newValue);
    };
    NgModel = __decorate([metadata_1.Directive({
      selector: '[ng-model]:not([ng-control]):not([ng-form-control])',
      bindings: [formControlBinding],
      inputs: ['model: ngModel'],
      outputs: ['update: ngModelChange'],
      exportAs: 'form'
    }), __param(0, di_1.Optional()), __param(0, di_1.Inject(validators_1.NG_VALIDATORS)), __param(1, di_1.Optional()), __param(1, di_1.Inject(validators_1.NG_ASYNC_VALIDATORS)), __param(2, di_1.Optional()), __param(2, di_1.Inject(control_value_accessor_1.NG_VALUE_ACCESSOR)), __metadata('design:paramtypes', [Array, Array, Array])], NgModel);
    return NgModel;
  })(ng_control_1.NgControl);
  exports.NgModel = NgModel;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_control", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var ng_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var formControlBinding = lang_1.CONST_EXPR(new di_1.Provider(ng_control_1.NgControl, {useExisting: di_1.forwardRef(function() {
      return NgFormControl;
    })}));
  var NgFormControl = (function(_super) {
    __extends(NgFormControl, _super);
    function NgFormControl(_validators, _asyncValidators, valueAccessors) {
      _super.call(this);
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this.update = new async_1.EventEmitter();
      this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);
    }
    NgFormControl.prototype.onChanges = function(changes) {
      if (this._isControlChanged(changes)) {
        shared_1.setUpControl(this.form, this);
        this.form.updateValueAndValidity({emitEvent: false});
      }
      if (shared_1.isPropertyUpdated(changes, this.viewModel)) {
        this.form.updateValue(this.model);
        this.viewModel = this.model;
      }
    };
    Object.defineProperty(NgFormControl.prototype, "path", {
      get: function() {
        return [];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormControl.prototype, "validator", {
      get: function() {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormControl.prototype, "asyncValidator", {
      get: function() {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFormControl.prototype, "control", {
      get: function() {
        return this.form;
      },
      enumerable: true,
      configurable: true
    });
    NgFormControl.prototype.viewToModelUpdate = function(newValue) {
      this.viewModel = newValue;
      async_1.ObservableWrapper.callNext(this.update, newValue);
    };
    NgFormControl.prototype._isControlChanged = function(changes) {
      return collection_1.StringMapWrapper.contains(changes, "form");
    };
    NgFormControl = __decorate([metadata_1.Directive({
      selector: '[ng-form-control]',
      bindings: [formControlBinding],
      inputs: ['form: ngFormControl', 'model: ngModel'],
      outputs: ['update: ngModelChange'],
      exportAs: 'form'
    }), __param(0, di_1.Optional()), __param(0, di_1.Inject(validators_1.NG_VALIDATORS)), __param(1, di_1.Optional()), __param(1, di_1.Inject(validators_1.NG_ASYNC_VALIDATORS)), __param(2, di_1.Optional()), __param(2, di_1.Inject(control_value_accessor_1.NG_VALUE_ACCESSOR)), __metadata('design:paramtypes', [Array, Array, Array])], NgFormControl);
    return NgFormControl;
  })(ng_control_1.NgControl);
  exports.NgFormControl = NgFormControl;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/normalize_validator", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function normalizeValidator(validator) {
    if (validator.validate !== undefined) {
      return function(c) {
        return validator.validate(c);
      };
    } else {
      return validator;
    }
  }
  exports.normalizeValidator = normalizeValidator;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var SELECT_VALUE_ACCESSOR = lang_1.CONST_EXPR(new di_1.Provider(control_value_accessor_1.NG_VALUE_ACCESSOR, {
    useExisting: di_1.forwardRef(function() {
      return SelectControlValueAccessor;
    }),
    multi: true
  }));
  var NgSelectOption = (function() {
    function NgSelectOption() {}
    NgSelectOption = __decorate([metadata_1.Directive({selector: 'option'}), __metadata('design:paramtypes', [])], NgSelectOption);
    return NgSelectOption;
  })();
  exports.NgSelectOption = NgSelectOption;
  var SelectControlValueAccessor = (function() {
    function SelectControlValueAccessor(_renderer, _elementRef, query) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function(_) {};
      this.onTouched = function() {};
      this._updateValueWhenListOfOptionsChanges(query);
    }
    SelectControlValueAccessor.prototype.writeValue = function(value) {
      this.value = value;
      shared_1.setProperty(this._renderer, this._elementRef, "value", value);
    };
    SelectControlValueAccessor.prototype.registerOnChange = function(fn) {
      this.onChange = fn;
    };
    SelectControlValueAccessor.prototype.registerOnTouched = function(fn) {
      this.onTouched = fn;
    };
    SelectControlValueAccessor.prototype._updateValueWhenListOfOptionsChanges = function(query) {
      var _this = this;
      async_1.ObservableWrapper.subscribe(query.changes, function(_) {
        return _this.writeValue(_this.value);
      });
    };
    SelectControlValueAccessor = __decorate([metadata_1.Directive({
      selector: 'select[ng-control],select[ng-form-control],select[ng-model]',
      host: {
        '(change)': 'onChange($event.target.value)',
        '(input)': 'onChange($event.target.value)',
        '(blur)': 'onTouched()'
      },
      bindings: [SELECT_VALUE_ACCESSOR]
    }), __param(2, metadata_1.Query(NgSelectOption, {descendants: true})), __metadata('design:paramtypes', [render_1.Renderer, linker_1.ElementRef, linker_1.QueryList])], SelectControlValueAccessor);
    return SelectControlValueAccessor;
  })();
  exports.SelectControlValueAccessor = SelectControlValueAccessor;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var CHECKBOX_VALUE_ACCESSOR = lang_1.CONST_EXPR(new di_1.Provider(control_value_accessor_1.NG_VALUE_ACCESSOR, {
    useExisting: di_1.forwardRef(function() {
      return CheckboxControlValueAccessor;
    }),
    multi: true
  }));
  var CheckboxControlValueAccessor = (function() {
    function CheckboxControlValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function(_) {};
      this.onTouched = function() {};
    }
    CheckboxControlValueAccessor.prototype.writeValue = function(value) {
      shared_1.setProperty(this._renderer, this._elementRef, "checked", value);
    };
    CheckboxControlValueAccessor.prototype.registerOnChange = function(fn) {
      this.onChange = fn;
    };
    CheckboxControlValueAccessor.prototype.registerOnTouched = function(fn) {
      this.onTouched = fn;
    };
    CheckboxControlValueAccessor = __decorate([metadata_1.Directive({
      selector: 'input[type=checkbox][ng-control],input[type=checkbox][ng-form-control],input[type=checkbox][ng-model]',
      host: {
        '(change)': 'onChange($event.target.checked)',
        '(blur)': 'onTouched()'
      },
      bindings: [CHECKBOX_VALUE_ACCESSOR]
    }), __metadata('design:paramtypes', [render_1.Renderer, linker_1.ElementRef])], CheckboxControlValueAccessor);
    return CheckboxControlValueAccessor;
  })();
  exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/number_value_accessor", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var NUMBER_VALUE_ACCESSOR = lang_1.CONST_EXPR(new di_1.Provider(control_value_accessor_1.NG_VALUE_ACCESSOR, {
    useExisting: di_1.forwardRef(function() {
      return NumberValueAccessor;
    }),
    multi: true
  }));
  var NumberValueAccessor = (function() {
    function NumberValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function(_) {};
      this.onTouched = function() {};
    }
    NumberValueAccessor.prototype.writeValue = function(value) {
      shared_1.setProperty(this._renderer, this._elementRef, 'value', value);
    };
    NumberValueAccessor.prototype.registerOnChange = function(fn) {
      this.onChange = function(value) {
        fn(lang_1.NumberWrapper.parseFloat(value));
      };
    };
    NumberValueAccessor.prototype.registerOnTouched = function(fn) {
      this.onTouched = fn;
    };
    NumberValueAccessor = __decorate([metadata_1.Directive({
      selector: 'input[type=number][ng-control],input[type=number][ng-form-control],input[type=number][ng-model]',
      host: {
        '(change)': 'onChange($event.target.value)',
        '(input)': 'onChange($event.target.value)',
        '(blur)': 'onTouched()'
      },
      bindings: [NUMBER_VALUE_ACCESSOR]
    }), __metadata('design:paramtypes', [render_1.Renderer, linker_1.ElementRef])], NumberValueAccessor);
    return NumberValueAccessor;
  })();
  exports.NumberValueAccessor = NumberValueAccessor;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var DEFAULT_VALUE_ACCESSOR = lang_1.CONST_EXPR(new di_1.Provider(control_value_accessor_1.NG_VALUE_ACCESSOR, {
    useExisting: di_1.forwardRef(function() {
      return DefaultValueAccessor;
    }),
    multi: true
  }));
  var DefaultValueAccessor = (function() {
    function DefaultValueAccessor(_renderer, _elementRef) {
      this._renderer = _renderer;
      this._elementRef = _elementRef;
      this.onChange = function(_) {};
      this.onTouched = function() {};
    }
    DefaultValueAccessor.prototype.writeValue = function(value) {
      var normalizedValue = lang_1.isBlank(value) ? '' : value;
      shared_1.setProperty(this._renderer, this._elementRef, 'value', normalizedValue);
    };
    DefaultValueAccessor.prototype.registerOnChange = function(fn) {
      this.onChange = fn;
    };
    DefaultValueAccessor.prototype.registerOnTouched = function(fn) {
      this.onTouched = fn;
    };
    DefaultValueAccessor = __decorate([metadata_1.Directive({
      selector: 'input:not([type=checkbox])[ng-control],textarea[ng-control],input:not([type=checkbox])[ng-form-control],textarea[ng-form-control],input:not([type=checkbox])[ng-model],textarea[ng-model],[ng-default-control]',
      host: {
        '(change)': 'onChange($event.target.value)',
        '(input)': 'onChange($event.target.value)',
        '(blur)': 'onTouched()'
      },
      bindings: [DEFAULT_VALUE_ACCESSOR]
    }), __metadata('design:paramtypes', [render_1.Renderer, linker_1.ElementRef])], DefaultValueAccessor);
    return DefaultValueAccessor;
  })();
  exports.DefaultValueAccessor = DefaultValueAccessor;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/validators", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/promise", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var promise_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/promise');
    var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
    exports.NG_VALIDATORS = lang_1.CONST_EXPR(new di_1.OpaqueToken("NgValidators"));
    exports.NG_ASYNC_VALIDATORS = lang_1.CONST_EXPR(new di_1.OpaqueToken("NgAsyncValidators"));
    var Validators = (function() {
      function Validators() {}
      Validators.required = function(control) {
        return lang_1.isBlank(control.value) || control.value == "" ? {"required": true} : null;
      };
      Validators.minLength = function(minLength) {
        return function(control) {
          if (lang_1.isPresent(Validators.required(control)))
            return null;
          var v = control.value;
          return v.length < minLength ? {"minlength": {
              "requiredLength": minLength,
              "actualLength": v.length
            }} : null;
        };
      };
      Validators.maxLength = function(maxLength) {
        return function(control) {
          if (lang_1.isPresent(Validators.required(control)))
            return null;
          var v = control.value;
          return v.length > maxLength ? {"maxlength": {
              "requiredLength": maxLength,
              "actualLength": v.length
            }} : null;
        };
      };
      Validators.nullValidator = function(c) {
        return null;
      };
      Validators.compose = function(validators) {
        if (lang_1.isBlank(validators))
          return null;
        var presentValidators = validators.filter(lang_1.isPresent);
        if (presentValidators.length == 0)
          return null;
        return function(control) {
          return _mergeErrors(_executeValidators(control, presentValidators));
        };
      };
      Validators.composeAsync = function(validators) {
        if (lang_1.isBlank(validators))
          return null;
        var presentValidators = validators.filter(lang_1.isPresent);
        if (presentValidators.length == 0)
          return null;
        return function(control) {
          var promises = _executeValidators(control, presentValidators).map(_convertToPromise);
          return promise_1.PromiseWrapper.all(promises).then(_mergeErrors);
        };
      };
      return Validators;
    })();
    exports.Validators = Validators;
    function _convertToPromise(obj) {
      return promise_1.PromiseWrapper.isPromise(obj) ? obj : async_1.ObservableWrapper.toPromise(obj);
    }
    function _executeValidators(control, validators) {
      return validators.map(function(v) {
        return v(control);
      });
    }
    function _mergeErrors(arrayOfErrors) {
      var res = arrayOfErrors.reduce(function(res, errors) {
        return lang_1.isPresent(errors) ? collection_1.StringMapWrapper.merge(res, errors) : res;
      }, {});
      return collection_1.StringMapWrapper.isEmpty(res) ? null : res;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/number_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/normalize_validator"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var default_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor');
  var number_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/number_value_accessor');
  var checkbox_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor');
  var select_control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor');
  var normalize_validator_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/normalize_validator');
  function controlPath(name, parent) {
    var p = collection_1.ListWrapper.clone(parent.path);
    p.push(name);
    return p;
  }
  exports.controlPath = controlPath;
  function setUpControl(control, dir) {
    if (lang_1.isBlank(control))
      _throwError(dir, "Cannot find control");
    if (lang_1.isBlank(dir.valueAccessor))
      _throwError(dir, "No value accessor for");
    control.validator = validators_1.Validators.compose([control.validator, dir.validator]);
    control.asyncValidator = validators_1.Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
    dir.valueAccessor.writeValue(control.value);
    dir.valueAccessor.registerOnChange(function(newValue) {
      dir.viewToModelUpdate(newValue);
      control.updateValue(newValue, {emitModelToViewChange: false});
      control.markAsDirty();
    });
    control.registerOnChange(function(newValue) {
      return dir.valueAccessor.writeValue(newValue);
    });
    dir.valueAccessor.registerOnTouched(function() {
      return control.markAsTouched();
    });
  }
  exports.setUpControl = setUpControl;
  function setUpControlGroup(control, dir) {
    if (lang_1.isBlank(control))
      _throwError(dir, "Cannot find control");
    control.validator = validators_1.Validators.compose([control.validator, dir.validator]);
    control.asyncValidator = validators_1.Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);
  }
  exports.setUpControlGroup = setUpControlGroup;
  function _throwError(dir, message) {
    var path = dir.path.join(" -> ");
    throw new exceptions_1.BaseException(message + " '" + path + "'");
  }
  function setProperty(renderer, elementRef, propName, propValue) {
    renderer.setElementProperty(elementRef, propName, propValue);
  }
  exports.setProperty = setProperty;
  function composeValidators(validators) {
    return lang_1.isPresent(validators) ? validators_1.Validators.compose(validators.map(normalize_validator_1.normalizeValidator)) : null;
  }
  exports.composeValidators = composeValidators;
  function composeAsyncValidators(validators) {
    return lang_1.isPresent(validators) ? validators_1.Validators.composeAsync(validators.map(normalize_validator_1.normalizeValidator)) : null;
  }
  exports.composeAsyncValidators = composeAsyncValidators;
  function isPropertyUpdated(changes, viewModel) {
    if (!collection_1.StringMapWrapper.contains(changes, "model"))
      return false;
    var change = changes["model"];
    if (change.isFirstChange())
      return true;
    return !lang_1.looseIdentical(viewModel, change.currentValue);
  }
  exports.isPropertyUpdated = isPropertyUpdated;
  function selectValueAccessor(dir, valueAccessors) {
    if (lang_1.isBlank(valueAccessors))
      return null;
    var defaultAccessor;
    var builtinAccessor;
    var customAccessor;
    valueAccessors.forEach(function(v) {
      if (v instanceof default_value_accessor_1.DefaultValueAccessor) {
        defaultAccessor = v;
      } else if (v instanceof checkbox_value_accessor_1.CheckboxControlValueAccessor || v instanceof number_value_accessor_1.NumberValueAccessor || v instanceof select_control_value_accessor_1.SelectControlValueAccessor) {
        if (lang_1.isPresent(builtinAccessor))
          _throwError(dir, "More than one built-in value accessor matches");
        builtinAccessor = v;
      } else {
        if (lang_1.isPresent(customAccessor))
          _throwError(dir, "More than one custom value accessor matches");
        customAccessor = v;
      }
    });
    if (lang_1.isPresent(customAccessor))
      return customAccessor;
    if (lang_1.isPresent(builtinAccessor))
      return builtinAccessor;
    if (lang_1.isPresent(defaultAccessor))
      return defaultAccessor;
    _throwError(dir, "No valid value accessor for");
    return null;
  }
  exports.selectValueAccessor = selectValueAccessor;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  exports.NG_VALUE_ACCESSOR = lang_1.CONST_EXPR(new di_1.OpaqueToken("NgValueAccessor"));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control", ["npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var abstract_control_directive_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var NgControl = (function(_super) {
    __extends(NgControl, _super);
    function NgControl() {
      _super.apply(this, arguments);
      this.name = null;
      this.valueAccessor = null;
    }
    Object.defineProperty(NgControl.prototype, "validator", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControl.prototype, "asyncValidator", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return NgControl;
  })(abstract_control_directive_1.AbstractControlDirective);
  exports.NgControl = NgControl;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_name", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var control_container_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container');
  var ng_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control');
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  var shared_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/shared');
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  var controlNameBinding = lang_1.CONST_EXPR(new di_1.Provider(ng_control_1.NgControl, {useExisting: di_1.forwardRef(function() {
      return NgControlName;
    })}));
  var NgControlName = (function(_super) {
    __extends(NgControlName, _super);
    function NgControlName(_parent, _validators, _asyncValidators, valueAccessors) {
      _super.call(this);
      this._parent = _parent;
      this._validators = _validators;
      this._asyncValidators = _asyncValidators;
      this.update = new async_1.EventEmitter();
      this._added = false;
      this.valueAccessor = shared_1.selectValueAccessor(this, valueAccessors);
    }
    NgControlName.prototype.onChanges = function(changes) {
      if (!this._added) {
        this.formDirective.addControl(this);
        this._added = true;
      }
      if (shared_1.isPropertyUpdated(changes, this.viewModel)) {
        this.viewModel = this.model;
        this.formDirective.updateModel(this, this.model);
      }
    };
    NgControlName.prototype.onDestroy = function() {
      this.formDirective.removeControl(this);
    };
    NgControlName.prototype.viewToModelUpdate = function(newValue) {
      this.viewModel = newValue;
      async_1.ObservableWrapper.callNext(this.update, newValue);
    };
    Object.defineProperty(NgControlName.prototype, "path", {
      get: function() {
        return shared_1.controlPath(this.name, this._parent);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "formDirective", {
      get: function() {
        return this._parent.formDirective;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "validator", {
      get: function() {
        return shared_1.composeValidators(this._validators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "asyncValidator", {
      get: function() {
        return shared_1.composeAsyncValidators(this._asyncValidators);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgControlName.prototype, "control", {
      get: function() {
        return this.formDirective.getControl(this);
      },
      enumerable: true,
      configurable: true
    });
    NgControlName = __decorate([metadata_1.Directive({
      selector: '[ng-control]',
      bindings: [controlNameBinding],
      inputs: ['name: ngControl', 'model: ngModel'],
      outputs: ['update: ngModelChange'],
      exportAs: 'form'
    }), __param(0, di_1.Host()), __param(0, di_1.SkipSelf()), __param(1, di_1.Optional()), __param(1, di_1.Inject(validators_1.NG_VALIDATORS)), __param(2, di_1.Optional()), __param(2, di_1.Inject(validators_1.NG_ASYNC_VALIDATORS)), __param(3, di_1.Optional()), __param(3, di_1.Inject(control_value_accessor_1.NG_VALUE_ACCESSOR)), __metadata('design:paramtypes', [control_container_1.ControlContainer, Array, Array, Array])], NgControlName);
    return NgControlName;
  })(ng_control_1.NgControl);
  exports.NgControlName = NgControlName;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container", ["npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var abstract_control_directive_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive');
  var ControlContainer = (function(_super) {
    __extends(ControlContainer, _super);
    function ControlContainer() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(ControlContainer.prototype, "formDirective", {
      get: function() {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ControlContainer.prototype, "path", {
      get: function() {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    return ControlContainer;
  })(abstract_control_directive_1.AbstractControlDirective);
  exports.ControlContainer = ControlContainer;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var AbstractControlDirective = (function() {
    function AbstractControlDirective() {}
    Object.defineProperty(AbstractControlDirective.prototype, "control", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "value", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.value : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "valid", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.valid : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "errors", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.errors : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "pristine", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.pristine : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "dirty", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.dirty : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "touched", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.touched : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "untouched", {
      get: function() {
        return lang_1.isPresent(this.control) ? this.control.untouched : null;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControlDirective.prototype, "path", {
      get: function() {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    return AbstractControlDirective;
  })();
  exports.AbstractControlDirective = AbstractControlDirective;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms/model", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/promise", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var promise_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/promise');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  exports.VALID = "VALID";
  exports.INVALID = "INVALID";
  exports.PENDING = "PENDING";
  function isControl(control) {
    return control instanceof AbstractControl;
  }
  exports.isControl = isControl;
  function _find(control, path) {
    if (lang_1.isBlank(path))
      return null;
    if (!(path instanceof Array)) {
      path = path.split("/");
    }
    if (path instanceof Array && collection_1.ListWrapper.isEmpty(path))
      return null;
    return path.reduce(function(v, name) {
      if (v instanceof ControlGroup) {
        return lang_1.isPresent(v.controls[name]) ? v.controls[name] : null;
      } else if (v instanceof ControlArray) {
        var index = name;
        return lang_1.isPresent(v.at(index)) ? v.at(index) : null;
      } else {
        return null;
      }
    }, control);
  }
  function toObservable(r) {
    return promise_1.PromiseWrapper.isPromise(r) ? async_1.ObservableWrapper.fromPromise(r) : r;
  }
  var AbstractControl = (function() {
    function AbstractControl(validator, asyncValidator) {
      this.validator = validator;
      this.asyncValidator = asyncValidator;
      this._pristine = true;
      this._touched = false;
    }
    Object.defineProperty(AbstractControl.prototype, "value", {
      get: function() {
        return this._value;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "status", {
      get: function() {
        return this._status;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "valid", {
      get: function() {
        return this._status === exports.VALID;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "errors", {
      get: function() {
        return this._errors;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "pristine", {
      get: function() {
        return this._pristine;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "dirty", {
      get: function() {
        return !this.pristine;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "touched", {
      get: function() {
        return this._touched;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "untouched", {
      get: function() {
        return !this._touched;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "valueChanges", {
      get: function() {
        return this._valueChanges;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "statusChanges", {
      get: function() {
        return this._statusChanges;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(AbstractControl.prototype, "pending", {
      get: function() {
        return this._status == exports.PENDING;
      },
      enumerable: true,
      configurable: true
    });
    AbstractControl.prototype.markAsTouched = function() {
      this._touched = true;
    };
    AbstractControl.prototype.markAsDirty = function(_a) {
      var onlySelf = (_a === void 0 ? {} : _a).onlySelf;
      onlySelf = lang_1.normalizeBool(onlySelf);
      this._pristine = false;
      if (lang_1.isPresent(this._parent) && !onlySelf) {
        this._parent.markAsDirty({onlySelf: onlySelf});
      }
    };
    AbstractControl.prototype.markAsPending = function(_a) {
      var onlySelf = (_a === void 0 ? {} : _a).onlySelf;
      onlySelf = lang_1.normalizeBool(onlySelf);
      this._status = exports.PENDING;
      if (lang_1.isPresent(this._parent) && !onlySelf) {
        this._parent.markAsPending({onlySelf: onlySelf});
      }
    };
    AbstractControl.prototype.setParent = function(parent) {
      this._parent = parent;
    };
    AbstractControl.prototype.updateValueAndValidity = function(_a) {
      var _b = _a === void 0 ? {} : _a,
          onlySelf = _b.onlySelf,
          emitEvent = _b.emitEvent;
      onlySelf = lang_1.normalizeBool(onlySelf);
      emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;
      this._updateValue();
      this._errors = this._runValidator();
      this._status = this._calculateStatus();
      if (this._status == exports.VALID || this._status == exports.PENDING) {
        this._runAsyncValidator(emitEvent);
      }
      if (emitEvent) {
        async_1.ObservableWrapper.callNext(this._valueChanges, this._value);
        async_1.ObservableWrapper.callNext(this._statusChanges, this._status);
      }
      if (lang_1.isPresent(this._parent) && !onlySelf) {
        this._parent.updateValueAndValidity({
          onlySelf: onlySelf,
          emitEvent: emitEvent
        });
      }
    };
    AbstractControl.prototype._runValidator = function() {
      return lang_1.isPresent(this.validator) ? this.validator(this) : null;
    };
    AbstractControl.prototype._runAsyncValidator = function(emitEvent) {
      var _this = this;
      if (lang_1.isPresent(this.asyncValidator)) {
        this._status = exports.PENDING;
        this._cancelExistingSubscription();
        var obs = toObservable(this.asyncValidator(this));
        this._asyncValidationSubscription = async_1.ObservableWrapper.subscribe(obs, function(res) {
          return _this.setErrors(res, {emitEvent: emitEvent});
        });
      }
    };
    AbstractControl.prototype._cancelExistingSubscription = function() {
      if (lang_1.isPresent(this._asyncValidationSubscription)) {
        async_1.ObservableWrapper.dispose(this._asyncValidationSubscription);
      }
    };
    AbstractControl.prototype.setErrors = function(errors, _a) {
      var emitEvent = (_a === void 0 ? {} : _a).emitEvent;
      emitEvent = lang_1.isPresent(emitEvent) ? emitEvent : true;
      this._errors = errors;
      this._status = this._calculateStatus();
      if (emitEvent) {
        async_1.ObservableWrapper.callNext(this._statusChanges, this._status);
      }
      if (lang_1.isPresent(this._parent)) {
        this._parent._updateControlsErrors();
      }
    };
    AbstractControl.prototype.find = function(path) {
      return _find(this, path);
    };
    AbstractControl.prototype.getError = function(errorCode, path) {
      if (path === void 0) {
        path = null;
      }
      var control = lang_1.isPresent(path) && !collection_1.ListWrapper.isEmpty(path) ? this.find(path) : this;
      if (lang_1.isPresent(control) && lang_1.isPresent(control._errors)) {
        return collection_1.StringMapWrapper.get(control._errors, errorCode);
      } else {
        return null;
      }
    };
    AbstractControl.prototype.hasError = function(errorCode, path) {
      if (path === void 0) {
        path = null;
      }
      return lang_1.isPresent(this.getError(errorCode, path));
    };
    AbstractControl.prototype._updateControlsErrors = function() {
      this._status = this._calculateStatus();
      if (lang_1.isPresent(this._parent)) {
        this._parent._updateControlsErrors();
      }
    };
    AbstractControl.prototype._initObservables = function() {
      this._valueChanges = new async_1.EventEmitter();
      this._statusChanges = new async_1.EventEmitter();
    };
    AbstractControl.prototype._calculateStatus = function() {
      if (lang_1.isPresent(this._errors))
        return exports.INVALID;
      if (this._anyControlsHaveStatus(exports.PENDING))
        return exports.PENDING;
      if (this._anyControlsHaveStatus(exports.INVALID))
        return exports.INVALID;
      return exports.VALID;
    };
    return AbstractControl;
  })();
  exports.AbstractControl = AbstractControl;
  var Control = (function(_super) {
    __extends(Control, _super);
    function Control(value, validator, asyncValidator) {
      if (value === void 0) {
        value = null;
      }
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      _super.call(this, validator, asyncValidator);
      this._value = value;
      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: false
      });
      this._initObservables();
    }
    Control.prototype.updateValue = function(value, _a) {
      var _b = _a === void 0 ? {} : _a,
          onlySelf = _b.onlySelf,
          emitEvent = _b.emitEvent,
          emitModelToViewChange = _b.emitModelToViewChange;
      emitModelToViewChange = lang_1.isPresent(emitModelToViewChange) ? emitModelToViewChange : true;
      this._value = value;
      if (lang_1.isPresent(this._onChange) && emitModelToViewChange)
        this._onChange(this._value);
      this.updateValueAndValidity({
        onlySelf: onlySelf,
        emitEvent: emitEvent
      });
    };
    Control.prototype._updateValue = function() {};
    Control.prototype._anyControlsHaveStatus = function(status) {
      return false;
    };
    Control.prototype.registerOnChange = function(fn) {
      this._onChange = fn;
    };
    return Control;
  })(AbstractControl);
  exports.Control = Control;
  var ControlGroup = (function(_super) {
    __extends(ControlGroup, _super);
    function ControlGroup(controls, optionals, validator, asyncValidator) {
      if (optionals === void 0) {
        optionals = null;
      }
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      _super.call(this, validator, asyncValidator);
      this.controls = controls;
      this._optionals = lang_1.isPresent(optionals) ? optionals : {};
      this._initObservables();
      this._setParentForControls();
      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: false
      });
    }
    ControlGroup.prototype.addControl = function(name, control) {
      this.controls[name] = control;
      control.setParent(this);
    };
    ControlGroup.prototype.removeControl = function(name) {
      collection_1.StringMapWrapper.delete(this.controls, name);
    };
    ControlGroup.prototype.include = function(controlName) {
      collection_1.StringMapWrapper.set(this._optionals, controlName, true);
      this.updateValueAndValidity();
    };
    ControlGroup.prototype.exclude = function(controlName) {
      collection_1.StringMapWrapper.set(this._optionals, controlName, false);
      this.updateValueAndValidity();
    };
    ControlGroup.prototype.contains = function(controlName) {
      var c = collection_1.StringMapWrapper.contains(this.controls, controlName);
      return c && this._included(controlName);
    };
    ControlGroup.prototype._setParentForControls = function() {
      var _this = this;
      collection_1.StringMapWrapper.forEach(this.controls, function(control, name) {
        control.setParent(_this);
      });
    };
    ControlGroup.prototype._updateValue = function() {
      this._value = this._reduceValue();
    };
    ControlGroup.prototype._anyControlsHaveStatus = function(status) {
      var _this = this;
      var res = false;
      collection_1.StringMapWrapper.forEach(this.controls, function(control, name) {
        res = res || (_this.contains(name) && control.status == status);
      });
      return res;
    };
    ControlGroup.prototype._reduceValue = function() {
      return this._reduceChildren({}, function(acc, control, name) {
        acc[name] = control.value;
        return acc;
      });
    };
    ControlGroup.prototype._reduceChildren = function(initValue, fn) {
      var _this = this;
      var res = initValue;
      collection_1.StringMapWrapper.forEach(this.controls, function(control, name) {
        if (_this._included(name)) {
          res = fn(res, control, name);
        }
      });
      return res;
    };
    ControlGroup.prototype._included = function(controlName) {
      var isOptional = collection_1.StringMapWrapper.contains(this._optionals, controlName);
      return !isOptional || collection_1.StringMapWrapper.get(this._optionals, controlName);
    };
    return ControlGroup;
  })(AbstractControl);
  exports.ControlGroup = ControlGroup;
  var ControlArray = (function(_super) {
    __extends(ControlArray, _super);
    function ControlArray(controls, validator, asyncValidator) {
      if (validator === void 0) {
        validator = null;
      }
      if (asyncValidator === void 0) {
        asyncValidator = null;
      }
      _super.call(this, validator, asyncValidator);
      this.controls = controls;
      this._initObservables();
      this._setParentForControls();
      this.updateValueAndValidity({
        onlySelf: true,
        emitEvent: false
      });
    }
    ControlArray.prototype.at = function(index) {
      return this.controls[index];
    };
    ControlArray.prototype.push = function(control) {
      this.controls.push(control);
      control.setParent(this);
      this.updateValueAndValidity();
    };
    ControlArray.prototype.insert = function(index, control) {
      collection_1.ListWrapper.insert(this.controls, index, control);
      control.setParent(this);
      this.updateValueAndValidity();
    };
    ControlArray.prototype.removeAt = function(index) {
      collection_1.ListWrapper.removeAt(this.controls, index);
      this.updateValueAndValidity();
    };
    Object.defineProperty(ControlArray.prototype, "length", {
      get: function() {
        return this.controls.length;
      },
      enumerable: true,
      configurable: true
    });
    ControlArray.prototype._updateValue = function() {
      this._value = this.controls.map(function(control) {
        return control.value;
      });
    };
    ControlArray.prototype._anyControlsHaveStatus = function(status) {
      return this.controls.some(function(c) {
        return c.status == status;
      });
    };
    ControlArray.prototype._setParentForControls = function() {
      var _this = this;
      this.controls.forEach(function(control) {
        control.setParent(_this);
      });
    };
    return ControlArray;
  })(AbstractControl);
  exports.ControlArray = ControlArray;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/forms", ["npm:angular2@2.0.0-alpha.46/src/common/forms/model", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_name", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_control", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_model", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_group", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_model", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_status", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives", "npm:angular2@2.0.0-alpha.46/src/common/forms/validators", "npm:angular2@2.0.0-alpha.46/src/common/forms/directives/validators", "npm:angular2@2.0.0-alpha.46/src/common/forms/form_builder"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/model');
  exports.AbstractControl = model_1.AbstractControl;
  exports.Control = model_1.Control;
  exports.ControlGroup = model_1.ControlGroup;
  exports.ControlArray = model_1.ControlArray;
  var abstract_control_directive_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/abstract_control_directive');
  exports.AbstractControlDirective = abstract_control_directive_1.AbstractControlDirective;
  var control_container_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_container');
  exports.ControlContainer = control_container_1.ControlContainer;
  var ng_control_name_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_name');
  exports.NgControlName = ng_control_name_1.NgControlName;
  var ng_form_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_control');
  exports.NgFormControl = ng_form_control_1.NgFormControl;
  var ng_model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_model');
  exports.NgModel = ng_model_1.NgModel;
  var ng_control_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control');
  exports.NgControl = ng_control_1.NgControl;
  var ng_control_group_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_group');
  exports.NgControlGroup = ng_control_group_1.NgControlGroup;
  var ng_form_model_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form_model');
  exports.NgFormModel = ng_form_model_1.NgFormModel;
  var ng_form_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_form');
  exports.NgForm = ng_form_1.NgForm;
  var control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/control_value_accessor');
  exports.NG_VALUE_ACCESSOR = control_value_accessor_1.NG_VALUE_ACCESSOR;
  var default_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/default_value_accessor');
  exports.DefaultValueAccessor = default_value_accessor_1.DefaultValueAccessor;
  var ng_control_status_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/ng_control_status');
  exports.NgControlStatus = ng_control_status_1.NgControlStatus;
  var checkbox_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/checkbox_value_accessor');
  exports.CheckboxControlValueAccessor = checkbox_value_accessor_1.CheckboxControlValueAccessor;
  var select_control_value_accessor_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/select_control_value_accessor');
  exports.NgSelectOption = select_control_value_accessor_1.NgSelectOption;
  exports.SelectControlValueAccessor = select_control_value_accessor_1.SelectControlValueAccessor;
  var directives_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives');
  exports.FORM_DIRECTIVES = directives_1.FORM_DIRECTIVES;
  var validators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/validators');
  exports.NG_VALIDATORS = validators_1.NG_VALIDATORS;
  exports.NG_ASYNC_VALIDATORS = validators_1.NG_ASYNC_VALIDATORS;
  exports.Validators = validators_1.Validators;
  var validators_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/directives/validators');
  exports.RequiredValidator = validators_2.RequiredValidator;
  exports.MinLengthValidator = validators_2.MinLengthValidator;
  exports.MaxLengthValidator = validators_2.MaxLengthValidator;
  var form_builder_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/forms/form_builder');
  exports.FormBuilder = form_builder_1.FormBuilder;
  exports.FORM_PROVIDERS = form_builder_1.FORM_PROVIDERS;
  exports.FORM_BINDINGS = form_builder_1.FORM_BINDINGS;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/core_directives", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_class", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_for", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_if", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_style", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_switch"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var ng_class_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_class');
  var ng_for_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_for');
  var ng_if_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_if');
  var ng_style_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_style');
  var ng_switch_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_switch');
  exports.CORE_DIRECTIVES = lang_1.CONST_EXPR([ng_class_1.NgClass, ng_for_1.NgFor, ng_if_1.NgIf, ng_style_1.NgStyle, ng_switch_1.NgSwitch, ng_switch_1.NgSwitchWhen, ng_switch_1.NgSwitchDefault]);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/observable_list_diff", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/ng_switch", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var _WHEN_DEFAULT = lang_1.CONST_EXPR(new Object());
  var SwitchView = (function() {
    function SwitchView(_viewContainerRef, _templateRef) {
      this._viewContainerRef = _viewContainerRef;
      this._templateRef = _templateRef;
    }
    SwitchView.prototype.create = function() {
      this._viewContainerRef.createEmbeddedView(this._templateRef);
    };
    SwitchView.prototype.destroy = function() {
      this._viewContainerRef.clear();
    };
    return SwitchView;
  })();
  exports.SwitchView = SwitchView;
  var NgSwitch = (function() {
    function NgSwitch() {
      this._useDefault = false;
      this._valueViews = new collection_1.Map();
      this._activeViews = [];
    }
    Object.defineProperty(NgSwitch.prototype, "ngSwitch", {
      set: function(value) {
        this._emptyAllActiveViews();
        this._useDefault = false;
        var views = this._valueViews.get(value);
        if (lang_1.isBlank(views)) {
          this._useDefault = true;
          views = lang_1.normalizeBlank(this._valueViews.get(_WHEN_DEFAULT));
        }
        this._activateViews(views);
        this._switchValue = value;
      },
      enumerable: true,
      configurable: true
    });
    NgSwitch.prototype._onWhenValueChanged = function(oldWhen, newWhen, view) {
      this._deregisterView(oldWhen, view);
      this._registerView(newWhen, view);
      if (oldWhen === this._switchValue) {
        view.destroy();
        collection_1.ListWrapper.remove(this._activeViews, view);
      } else if (newWhen === this._switchValue) {
        if (this._useDefault) {
          this._useDefault = false;
          this._emptyAllActiveViews();
        }
        view.create();
        this._activeViews.push(view);
      }
      if (this._activeViews.length === 0 && !this._useDefault) {
        this._useDefault = true;
        this._activateViews(this._valueViews.get(_WHEN_DEFAULT));
      }
    };
    NgSwitch.prototype._emptyAllActiveViews = function() {
      var activeContainers = this._activeViews;
      for (var i = 0; i < activeContainers.length; i++) {
        activeContainers[i].destroy();
      }
      this._activeViews = [];
    };
    NgSwitch.prototype._activateViews = function(views) {
      if (lang_1.isPresent(views)) {
        for (var i = 0; i < views.length; i++) {
          views[i].create();
        }
        this._activeViews = views;
      }
    };
    NgSwitch.prototype._registerView = function(value, view) {
      var views = this._valueViews.get(value);
      if (lang_1.isBlank(views)) {
        views = [];
        this._valueViews.set(value, views);
      }
      views.push(view);
    };
    NgSwitch.prototype._deregisterView = function(value, view) {
      if (value === _WHEN_DEFAULT)
        return;
      var views = this._valueViews.get(value);
      if (views.length == 1) {
        this._valueViews.delete(value);
      } else {
        collection_1.ListWrapper.remove(views, view);
      }
    };
    NgSwitch = __decorate([metadata_1.Directive({
      selector: '[ng-switch]',
      inputs: ['ngSwitch']
    }), __metadata('design:paramtypes', [])], NgSwitch);
    return NgSwitch;
  })();
  exports.NgSwitch = NgSwitch;
  var NgSwitchWhen = (function() {
    function NgSwitchWhen(viewContainer, templateRef, _switch) {
      this._switch = _switch;
      this._value = _WHEN_DEFAULT;
      this._view = new SwitchView(viewContainer, templateRef);
    }
    Object.defineProperty(NgSwitchWhen.prototype, "ngSwitchWhen", {
      set: function(value) {
        this._switch._onWhenValueChanged(this._value, value, this._view);
        this._value = value;
      },
      enumerable: true,
      configurable: true
    });
    NgSwitchWhen = __decorate([metadata_1.Directive({
      selector: '[ng-switch-when]',
      inputs: ['ngSwitchWhen']
    }), __param(2, di_1.Host()), __metadata('design:paramtypes', [linker_1.ViewContainerRef, linker_1.TemplateRef, NgSwitch])], NgSwitchWhen);
    return NgSwitchWhen;
  })();
  exports.NgSwitchWhen = NgSwitchWhen;
  var NgSwitchDefault = (function() {
    function NgSwitchDefault(viewContainer, templateRef, sswitch) {
      sswitch._registerView(_WHEN_DEFAULT, new SwitchView(viewContainer, templateRef));
    }
    NgSwitchDefault = __decorate([metadata_1.Directive({selector: '[ng-switch-default]'}), __param(2, di_1.Host()), __metadata('design:paramtypes', [linker_1.ViewContainerRef, linker_1.TemplateRef, NgSwitch])], NgSwitchDefault);
    return NgSwitchDefault;
  })();
  exports.NgSwitchDefault = NgSwitchDefault;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/ng_style", ["npm:angular2@2.0.0-alpha.46/src/core/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var NgStyle = (function() {
    function NgStyle(_differs, _ngEl, _renderer) {
      this._differs = _differs;
      this._ngEl = _ngEl;
      this._renderer = _renderer;
    }
    Object.defineProperty(NgStyle.prototype, "rawStyle", {
      set: function(v) {
        this._rawStyle = v;
        if (lang_1.isBlank(this._differ) && lang_1.isPresent(v)) {
          this._differ = this._differs.find(this._rawStyle).create(null);
        }
      },
      enumerable: true,
      configurable: true
    });
    NgStyle.prototype.doCheck = function() {
      if (lang_1.isPresent(this._differ)) {
        var changes = this._differ.diff(this._rawStyle);
        if (lang_1.isPresent(changes)) {
          this._applyChanges(changes);
        }
      }
    };
    NgStyle.prototype._applyChanges = function(changes) {
      var _this = this;
      changes.forEachAddedItem(function(record) {
        _this._setStyle(record.key, record.currentValue);
      });
      changes.forEachChangedItem(function(record) {
        _this._setStyle(record.key, record.currentValue);
      });
      changes.forEachRemovedItem(function(record) {
        _this._setStyle(record.key, null);
      });
    };
    NgStyle.prototype._setStyle = function(name, val) {
      this._renderer.setElementStyle(this._ngEl, name, val);
    };
    NgStyle = __decorate([metadata_1.Directive({
      selector: '[ng-style]',
      inputs: ['rawStyle: ng-style']
    }), __metadata('design:paramtypes', [change_detection_1.KeyValueDiffers, linker_1.ElementRef, render_1.Renderer])], NgStyle);
    return NgStyle;
  })();
  exports.NgStyle = NgStyle;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/ng_if", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var NgIf = (function() {
    function NgIf(_viewContainer, _templateRef) {
      this._viewContainer = _viewContainer;
      this._templateRef = _templateRef;
      this._prevCondition = null;
    }
    Object.defineProperty(NgIf.prototype, "ngIf", {
      set: function(newCondition) {
        if (newCondition && (lang_1.isBlank(this._prevCondition) || !this._prevCondition)) {
          this._prevCondition = true;
          this._viewContainer.createEmbeddedView(this._templateRef);
        } else if (!newCondition && (lang_1.isBlank(this._prevCondition) || this._prevCondition)) {
          this._prevCondition = false;
          this._viewContainer.clear();
        }
      },
      enumerable: true,
      configurable: true
    });
    NgIf = __decorate([metadata_1.Directive({
      selector: '[ng-if]',
      inputs: ['ngIf']
    }), __metadata('design:paramtypes', [linker_1.ViewContainerRef, linker_1.TemplateRef])], NgIf);
    return NgIf;
  })();
  exports.NgIf = NgIf;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/ng_for", ["npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var NgFor = (function() {
    function NgFor(_viewContainer, _templateRef, _iterableDiffers, _cdr) {
      this._viewContainer = _viewContainer;
      this._templateRef = _templateRef;
      this._iterableDiffers = _iterableDiffers;
      this._cdr = _cdr;
    }
    Object.defineProperty(NgFor.prototype, "ngForOf", {
      set: function(value) {
        this._ngForOf = value;
        if (lang_1.isBlank(this._differ) && lang_1.isPresent(value)) {
          this._differ = this._iterableDiffers.find(value).create(this._cdr);
        }
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgFor.prototype, "ngForTemplate", {
      set: function(value) {
        if (lang_1.isPresent(value)) {
          this._templateRef = value;
        }
      },
      enumerable: true,
      configurable: true
    });
    NgFor.prototype.doCheck = function() {
      if (lang_1.isPresent(this._differ)) {
        var changes = this._differ.diff(this._ngForOf);
        if (lang_1.isPresent(changes))
          this._applyChanges(changes);
      }
    };
    NgFor.prototype._applyChanges = function(changes) {
      var recordViewTuples = [];
      changes.forEachRemovedItem(function(removedRecord) {
        return recordViewTuples.push(new RecordViewTuple(removedRecord, null));
      });
      changes.forEachMovedItem(function(movedRecord) {
        return recordViewTuples.push(new RecordViewTuple(movedRecord, null));
      });
      var insertTuples = this._bulkRemove(recordViewTuples);
      changes.forEachAddedItem(function(addedRecord) {
        return insertTuples.push(new RecordViewTuple(addedRecord, null));
      });
      this._bulkInsert(insertTuples);
      for (var i = 0; i < insertTuples.length; i++) {
        this._perViewChange(insertTuples[i].view, insertTuples[i].record);
      }
      for (var i = 0,
          ilen = this._viewContainer.length; i < ilen; i++) {
        this._viewContainer.get(i).setLocal('last', i === ilen - 1);
      }
    };
    NgFor.prototype._perViewChange = function(view, record) {
      view.setLocal('\$implicit', record.item);
      view.setLocal('index', record.currentIndex);
      view.setLocal('even', (record.currentIndex % 2 == 0));
      view.setLocal('odd', (record.currentIndex % 2 == 1));
    };
    NgFor.prototype._bulkRemove = function(tuples) {
      tuples.sort(function(a, b) {
        return a.record.previousIndex - b.record.previousIndex;
      });
      var movedTuples = [];
      for (var i = tuples.length - 1; i >= 0; i--) {
        var tuple = tuples[i];
        if (lang_1.isPresent(tuple.record.currentIndex)) {
          tuple.view = this._viewContainer.detach(tuple.record.previousIndex);
          movedTuples.push(tuple);
        } else {
          this._viewContainer.remove(tuple.record.previousIndex);
        }
      }
      return movedTuples;
    };
    NgFor.prototype._bulkInsert = function(tuples) {
      tuples.sort(function(a, b) {
        return a.record.currentIndex - b.record.currentIndex;
      });
      for (var i = 0; i < tuples.length; i++) {
        var tuple = tuples[i];
        if (lang_1.isPresent(tuple.view)) {
          this._viewContainer.insert(tuple.view, tuple.record.currentIndex);
        } else {
          tuple.view = this._viewContainer.createEmbeddedView(this._templateRef, tuple.record.currentIndex);
        }
      }
      return tuples;
    };
    NgFor = __decorate([metadata_1.Directive({
      selector: '[ng-for][ng-for-of]',
      inputs: ['ngForOf', 'ngForTemplate']
    }), __metadata('design:paramtypes', [linker_1.ViewContainerRef, linker_1.TemplateRef, change_detection_1.IterableDiffers, change_detection_1.ChangeDetectorRef])], NgFor);
    return NgFor;
  })();
  exports.NgFor = NgFor;
  var RecordViewTuple = (function() {
    function RecordViewTuple(record, view) {
      this.record = record;
      this.view = view;
    }
    return RecordViewTuple;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/linker/compiler", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/compiler');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var view_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager');
  var ComponentRef = (function() {
    function ComponentRef() {}
    Object.defineProperty(ComponentRef.prototype, "hostView", {
      get: function() {
        return this.location.parentView;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentRef.prototype, "hostComponent", {
      get: function() {
        return this.instance;
      },
      enumerable: true,
      configurable: true
    });
    return ComponentRef;
  })();
  exports.ComponentRef = ComponentRef;
  var ComponentRef_ = (function(_super) {
    __extends(ComponentRef_, _super);
    function ComponentRef_(location, instance, componentType, injector, _dispose) {
      _super.call(this);
      this._dispose = _dispose;
      this.location = location;
      this.instance = instance;
      this.componentType = componentType;
      this.injector = injector;
    }
    Object.defineProperty(ComponentRef_.prototype, "hostComponentType", {
      get: function() {
        return this.componentType;
      },
      enumerable: true,
      configurable: true
    });
    ComponentRef_.prototype.dispose = function() {
      this._dispose();
    };
    return ComponentRef_;
  })(ComponentRef);
  exports.ComponentRef_ = ComponentRef_;
  var DynamicComponentLoader = (function() {
    function DynamicComponentLoader() {}
    return DynamicComponentLoader;
  })();
  exports.DynamicComponentLoader = DynamicComponentLoader;
  var DynamicComponentLoader_ = (function(_super) {
    __extends(DynamicComponentLoader_, _super);
    function DynamicComponentLoader_(_compiler, _viewManager) {
      _super.call(this);
      this._compiler = _compiler;
      this._viewManager = _viewManager;
    }
    DynamicComponentLoader_.prototype.loadAsRoot = function(type, overrideSelector, injector, onDispose) {
      var _this = this;
      return this._compiler.compileInHost(type).then(function(hostProtoViewRef) {
        var hostViewRef = _this._viewManager.createRootHostView(hostProtoViewRef, overrideSelector, injector);
        var newLocation = _this._viewManager.getHostElement(hostViewRef);
        var component = _this._viewManager.getComponent(newLocation);
        var dispose = function() {
          _this._viewManager.destroyRootHostView(hostViewRef);
          if (lang_1.isPresent(onDispose)) {
            onDispose();
          }
        };
        return new ComponentRef_(newLocation, component, type, injector, dispose);
      });
    };
    DynamicComponentLoader_.prototype.loadIntoLocation = function(type, hostLocation, anchorName, providers) {
      if (providers === void 0) {
        providers = null;
      }
      return this.loadNextToLocation(type, this._viewManager.getNamedElementInComponentView(hostLocation, anchorName), providers);
    };
    DynamicComponentLoader_.prototype.loadNextToLocation = function(type, location, providers) {
      var _this = this;
      if (providers === void 0) {
        providers = null;
      }
      return this._compiler.compileInHost(type).then(function(hostProtoViewRef) {
        var viewContainer = _this._viewManager.getViewContainer(location);
        var hostViewRef = viewContainer.createHostView(hostProtoViewRef, viewContainer.length, providers);
        var newLocation = _this._viewManager.getHostElement(hostViewRef);
        var component = _this._viewManager.getComponent(newLocation);
        var dispose = function() {
          var index = viewContainer.indexOf(hostViewRef);
          if (index !== -1) {
            viewContainer.remove(index);
          }
        };
        return new ComponentRef_(newLocation, component, type, null, dispose);
      });
    };
    DynamicComponentLoader_ = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [compiler_1.Compiler, view_manager_1.AppViewManager])], DynamicComponentLoader_);
    return DynamicComponentLoader_;
  })(DynamicComponentLoader);
  exports.DynamicComponentLoader_ = DynamicComponentLoader_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/application_tokens", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.APP_COMPONENT_REF_PROMISE = lang_1.CONST_EXPR(new di_1.OpaqueToken('Promise<ComponentRef>'));
  exports.APP_COMPONENT = lang_1.CONST_EXPR(new di_1.OpaqueToken('AppComponent'));
  exports.APP_ID = lang_1.CONST_EXPR(new di_1.OpaqueToken('AppId'));
  function _appIdRandomProviderFactory() {
    return "" + _randomChar() + _randomChar() + _randomChar();
  }
  exports.APP_ID_RANDOM_PROVIDER = lang_1.CONST_EXPR(new di_1.Provider(exports.APP_ID, {
    useFactory: _appIdRandomProviderFactory,
    deps: []
  }));
  function _randomChar() {
    return lang_1.StringWrapper.fromCharCode(97 + lang_1.Math.floor(lang_1.Math.random() * 25));
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render", ["npm:angular2@2.0.0-alpha.46/src/core/render/render"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/render');
  exports.Renderer = render_1.Renderer;
  exports.RenderViewRef = render_1.RenderViewRef;
  exports.RenderProtoViewRef = render_1.RenderProtoViewRef;
  exports.RenderFragmentRef = render_1.RenderFragmentRef;
  exports.RenderViewWithFragments = render_1.RenderViewWithFragments;
  exports.DOCUMENT = render_1.DOCUMENT;
  exports.RenderTemplateCmd = render_1.RenderTemplateCmd;
  exports.RenderTextCmd = render_1.RenderTextCmd;
  exports.RenderNgContentCmd = render_1.RenderNgContentCmd;
  exports.RenderBeginElementCmd = render_1.RenderBeginElementCmd;
  exports.RenderBeginComponentCmd = render_1.RenderBeginComponentCmd;
  exports.RenderEmbeddedTemplateCmd = render_1.RenderEmbeddedTemplateCmd;
  exports.RenderBeginCmd = render_1.RenderBeginCmd;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/render", ["npm:angular2@2.0.0-alpha.46/src/core/render"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/render'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/view", ["npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/render/api"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var api_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/api');
  var DefaultProtoViewRef = (function(_super) {
    __extends(DefaultProtoViewRef, _super);
    function DefaultProtoViewRef(template, cmds) {
      _super.call(this);
      this.template = template;
      this.cmds = cmds;
    }
    return DefaultProtoViewRef;
  })(api_1.RenderProtoViewRef);
  exports.DefaultProtoViewRef = DefaultProtoViewRef;
  var DefaultRenderFragmentRef = (function(_super) {
    __extends(DefaultRenderFragmentRef, _super);
    function DefaultRenderFragmentRef(nodes) {
      _super.call(this);
      this.nodes = nodes;
    }
    return DefaultRenderFragmentRef;
  })(api_1.RenderFragmentRef);
  exports.DefaultRenderFragmentRef = DefaultRenderFragmentRef;
  var DefaultRenderView = (function(_super) {
    __extends(DefaultRenderView, _super);
    function DefaultRenderView(fragments, boundTextNodes, boundElements, nativeShadowRoots, globalEventAdders, rootContentInsertionPoints) {
      _super.call(this);
      this.fragments = fragments;
      this.boundTextNodes = boundTextNodes;
      this.boundElements = boundElements;
      this.nativeShadowRoots = nativeShadowRoots;
      this.globalEventAdders = globalEventAdders;
      this.rootContentInsertionPoints = rootContentInsertionPoints;
      this.hydrated = false;
      this.eventDispatcher = null;
      this.globalEventRemovers = null;
    }
    DefaultRenderView.prototype.hydrate = function() {
      if (this.hydrated)
        throw new exceptions_1.BaseException('The view is already hydrated.');
      this.hydrated = true;
      this.globalEventRemovers = collection_1.ListWrapper.createFixedSize(this.globalEventAdders.length);
      for (var i = 0; i < this.globalEventAdders.length; i++) {
        this.globalEventRemovers[i] = this.globalEventAdders[i]();
      }
    };
    DefaultRenderView.prototype.dehydrate = function() {
      if (!this.hydrated)
        throw new exceptions_1.BaseException('The view is already dehydrated.');
      for (var i = 0; i < this.globalEventRemovers.length; i++) {
        this.globalEventRemovers[i]();
      }
      this.globalEventRemovers = null;
      this.hydrated = false;
    };
    DefaultRenderView.prototype.setEventDispatcher = function(dispatcher) {
      this.eventDispatcher = dispatcher;
    };
    DefaultRenderView.prototype.dispatchRenderEvent = function(boundElementIndex, eventName, event) {
      var allowDefaultBehavior = true;
      if (lang_1.isPresent(this.eventDispatcher)) {
        var locals = new collection_1.Map();
        locals.set('$event', event);
        allowDefaultBehavior = this.eventDispatcher.dispatchRenderEvent(boundElementIndex, eventName, locals);
      }
      return allowDefaultBehavior;
    };
    return DefaultRenderView;
  })(api_1.RenderViewRef);
  exports.DefaultRenderView = DefaultRenderView;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/view_factory", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/render/view", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/view');
    var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    function encapsulateStyles(componentTemplate) {
      var processedStyles = componentTemplate.styles;
      if (componentTemplate.encapsulation === metadata_1.ViewEncapsulation.Emulated) {
        processedStyles = collection_1.ListWrapper.createFixedSize(componentTemplate.styles.length);
        for (var i = 0; i < componentTemplate.styles.length; i++) {
          processedStyles[i] = lang_1.StringWrapper.replaceAll(componentTemplate.styles[i], COMPONENT_REGEX, componentTemplate.shortId);
        }
      }
      return processedStyles;
    }
    exports.encapsulateStyles = encapsulateStyles;
    function createRenderView(componentTemplate, cmds, inplaceElement, nodeFactory) {
      var view;
      var eventDispatcher = function(boundElementIndex, eventName, event) {
        return view.dispatchRenderEvent(boundElementIndex, eventName, event);
      };
      var context = new BuildContext(eventDispatcher, nodeFactory, inplaceElement);
      context.build(componentTemplate, cmds);
      var fragments = [];
      for (var i = 0; i < context.fragments.length; i++) {
        fragments.push(new view_1.DefaultRenderFragmentRef(context.fragments[i]));
      }
      view = new view_1.DefaultRenderView(fragments, context.boundTextNodes, context.boundElements, context.nativeShadowRoots, context.globalEventAdders, context.rootContentInsertionPoints);
      return view;
    }
    exports.createRenderView = createRenderView;
    var BuildContext = (function() {
      function BuildContext(_eventDispatcher, factory, _inplaceElement) {
        this._eventDispatcher = _eventDispatcher;
        this.factory = factory;
        this._inplaceElement = _inplaceElement;
        this._builders = [];
        this.globalEventAdders = [];
        this.boundElements = [];
        this.boundTextNodes = [];
        this.nativeShadowRoots = [];
        this.fragments = [];
        this.rootContentInsertionPoints = [];
        this.componentCount = 0;
        this.isHost = lang_1.isPresent((_inplaceElement));
      }
      BuildContext.prototype.build = function(template, cmds) {
        this.enqueueRootBuilder(template, cmds);
        this._build(this._builders[0]);
      };
      BuildContext.prototype._build = function(builder) {
        this._builders = [];
        builder.build(this);
        var enqueuedBuilders = this._builders;
        for (var i = 0; i < enqueuedBuilders.length; i++) {
          this._build(enqueuedBuilders[i]);
        }
      };
      BuildContext.prototype.enqueueComponentBuilder = function(component) {
        this.componentCount++;
        this._builders.push(new RenderViewBuilder(component, null, component.template, component.template.commands));
      };
      BuildContext.prototype.enqueueFragmentBuilder = function(parentComponent, parentTemplate, commands) {
        var rootNodes = [];
        this.fragments.push(rootNodes);
        this._builders.push(new RenderViewBuilder(parentComponent, rootNodes, parentTemplate, commands));
      };
      BuildContext.prototype.enqueueRootBuilder = function(template, cmds) {
        var rootNodes = [];
        this.fragments.push(rootNodes);
        this._builders.push(new RenderViewBuilder(null, rootNodes, template, cmds));
      };
      BuildContext.prototype.consumeInplaceElement = function() {
        var result = this._inplaceElement;
        this._inplaceElement = null;
        return result;
      };
      BuildContext.prototype.addEventListener = function(boundElementIndex, target, eventName) {
        if (lang_1.isPresent(target)) {
          var handler = createEventHandler(boundElementIndex, target + ":" + eventName, this._eventDispatcher);
          this.globalEventAdders.push(createGlobalEventAdder(target, eventName, handler, this.factory));
        } else {
          var handler = createEventHandler(boundElementIndex, eventName, this._eventDispatcher);
          this.factory.on(this.boundElements[boundElementIndex], eventName, handler);
        }
      };
      return BuildContext;
    })();
    function createEventHandler(boundElementIndex, eventName, eventDispatcher) {
      return function($event) {
        return eventDispatcher(boundElementIndex, eventName, $event);
      };
    }
    function createGlobalEventAdder(target, eventName, eventHandler, nodeFactory) {
      return function() {
        return nodeFactory.globalOn(target, eventName, eventHandler);
      };
    }
    var RenderViewBuilder = (function() {
      function RenderViewBuilder(parentComponent, fragmentRootNodes, template, cmds) {
        this.parentComponent = parentComponent;
        this.fragmentRootNodes = fragmentRootNodes;
        this.template = template;
        this.cmds = cmds;
        var rootNodesParent = lang_1.isPresent(fragmentRootNodes) ? null : parentComponent.shadowRoot;
        this.parentStack = [rootNodesParent];
      }
      RenderViewBuilder.prototype.build = function(context) {
        var cmds = this.cmds;
        for (var i = 0; i < cmds.length; i++) {
          cmds[i].visit(this, context);
        }
      };
      Object.defineProperty(RenderViewBuilder.prototype, "parent", {
        get: function() {
          return this.parentStack[this.parentStack.length - 1];
        },
        enumerable: true,
        configurable: true
      });
      RenderViewBuilder.prototype.visitText = function(cmd, context) {
        var text = context.factory.createText(cmd.value);
        this._addChild(text, cmd.ngContentIndex, context);
        if (cmd.isBound) {
          context.boundTextNodes.push(text);
        }
        return null;
      };
      RenderViewBuilder.prototype.visitNgContent = function(cmd, context) {
        if (lang_1.isPresent(this.parentComponent)) {
          if (this.parentComponent.isRoot) {
            var insertionPoint = context.factory.createRootContentInsertionPoint();
            if (this.parent instanceof Component) {
              context.factory.appendChild(this.parent.shadowRoot, insertionPoint);
            } else {
              context.factory.appendChild(this.parent, insertionPoint);
            }
            context.rootContentInsertionPoints.push(insertionPoint);
          } else {
            var projectedNodes = this.parentComponent.project(cmd.index);
            for (var i = 0; i < projectedNodes.length; i++) {
              var node = projectedNodes[i];
              this._addChild(node, cmd.ngContentIndex, context);
            }
          }
        }
        return null;
      };
      RenderViewBuilder.prototype.visitBeginElement = function(cmd, context) {
        this.parentStack.push(this._beginElement(cmd, context, null));
        return null;
      };
      RenderViewBuilder.prototype.visitEndElement = function(context) {
        this._endElement();
        return null;
      };
      RenderViewBuilder.prototype.visitBeginComponent = function(cmd, context) {
        var templateId = cmd.templateId;
        var tpl = context.factory.resolveComponentTemplate(templateId);
        var el = this._beginElement(cmd, context, tpl);
        var root = el;
        if (tpl.encapsulation === metadata_1.ViewEncapsulation.Native) {
          root = context.factory.createShadowRoot(el, templateId);
          context.nativeShadowRoots.push(root);
        }
        var isRoot = context.componentCount === 0 && context.isHost;
        var component = new Component(el, root, isRoot, tpl);
        context.enqueueComponentBuilder(component);
        this.parentStack.push(component);
        return null;
      };
      RenderViewBuilder.prototype.visitEndComponent = function(context) {
        this._endElement();
        return null;
      };
      RenderViewBuilder.prototype.visitEmbeddedTemplate = function(cmd, context) {
        var el = context.factory.createTemplateAnchor(cmd.attrNameAndValues);
        this._addChild(el, cmd.ngContentIndex, context);
        context.boundElements.push(el);
        if (cmd.isMerged) {
          context.enqueueFragmentBuilder(this.parentComponent, this.template, cmd.children);
        }
        return null;
      };
      RenderViewBuilder.prototype._beginElement = function(cmd, context, componentTemplate) {
        var el = context.consumeInplaceElement();
        var attrNameAndValues = cmd.attrNameAndValues;
        var templateEmulatedEncapsulation = this.template.encapsulation === metadata_1.ViewEncapsulation.Emulated;
        var componentEmulatedEncapsulation = lang_1.isPresent(componentTemplate) && componentTemplate.encapsulation === metadata_1.ViewEncapsulation.Emulated;
        var newAttrLength = attrNameAndValues.length + (templateEmulatedEncapsulation ? 2 : 0) + (componentEmulatedEncapsulation ? 2 : 0);
        if (newAttrLength > attrNameAndValues.length) {
          var newAttrNameAndValues = collection_1.ListWrapper.createFixedSize(newAttrLength);
          var attrIndex;
          for (attrIndex = 0; attrIndex < attrNameAndValues.length; attrIndex++) {
            newAttrNameAndValues[attrIndex] = attrNameAndValues[attrIndex];
          }
          if (templateEmulatedEncapsulation) {
            newAttrNameAndValues[attrIndex++] = _shimContentAttribute(this.template.shortId);
            newAttrNameAndValues[attrIndex++] = '';
          }
          if (componentEmulatedEncapsulation) {
            newAttrNameAndValues[attrIndex++] = _shimHostAttribute(componentTemplate.shortId);
            newAttrNameAndValues[attrIndex++] = '';
          }
          attrNameAndValues = newAttrNameAndValues;
        }
        if (lang_1.isPresent(el)) {
          context.factory.mergeElement(el, attrNameAndValues);
          this.fragmentRootNodes.push(el);
        } else {
          el = context.factory.createElement(cmd.name, attrNameAndValues);
          this._addChild(el, cmd.ngContentIndex, context);
        }
        if (cmd.isBound) {
          var boundElementIndex = context.boundElements.length;
          context.boundElements.push(el);
          for (var i = 0; i < cmd.eventTargetAndNames.length; i += 2) {
            var target = cmd.eventTargetAndNames[i];
            var eventName = cmd.eventTargetAndNames[i + 1];
            context.addEventListener(boundElementIndex, target, eventName);
          }
        }
        return el;
      };
      RenderViewBuilder.prototype._endElement = function() {
        this.parentStack.pop();
      };
      RenderViewBuilder.prototype._addChild = function(node, ngContentIndex, context) {
        var parent = this.parent;
        if (lang_1.isPresent(parent)) {
          if (parent instanceof Component) {
            parent.addContentNode(ngContentIndex, node, context);
          } else {
            context.factory.appendChild(parent, node);
          }
        } else {
          this.fragmentRootNodes.push(node);
        }
      };
      return RenderViewBuilder;
    })();
    var Component = (function() {
      function Component(hostElement, shadowRoot, isRoot, template) {
        this.hostElement = hostElement;
        this.shadowRoot = shadowRoot;
        this.isRoot = isRoot;
        this.template = template;
        this.contentNodesByNgContentIndex = [];
      }
      Component.prototype.addContentNode = function(ngContentIndex, node, context) {
        if (lang_1.isBlank(ngContentIndex)) {
          if (this.template.encapsulation === metadata_1.ViewEncapsulation.Native) {
            context.factory.appendChild(this.hostElement, node);
          }
        } else {
          while (this.contentNodesByNgContentIndex.length <= ngContentIndex) {
            this.contentNodesByNgContentIndex.push([]);
          }
          this.contentNodesByNgContentIndex[ngContentIndex].push(node);
        }
      };
      Component.prototype.project = function(ngContentIndex) {
        return ngContentIndex < this.contentNodesByNgContentIndex.length ? this.contentNodesByNgContentIndex[ngContentIndex] : [];
      };
      return Component;
    })();
    var COMPONENT_REGEX = /%COMP%/g;
    exports.COMPONENT_VARIABLE = '%COMP%';
    exports.HOST_ATTR = "_nghost-" + exports.COMPONENT_VARIABLE;
    exports.CONTENT_ATTR = "_ngcontent-" + exports.COMPONENT_VARIABLE;
    function _shimContentAttribute(componentShortId) {
      return lang_1.StringWrapper.replaceAll(exports.CONTENT_ATTR, COMPONENT_REGEX, componentShortId);
    }
    function _shimHostAttribute(componentShortId) {
      return lang_1.StringWrapper.replaceAll(exports.HOST_ATTR, COMPONENT_REGEX, componentShortId);
    }
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/profile/profile", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
    var profile_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/profile');
    var NgZoneError = (function() {
      function NgZoneError(error, stackTrace) {
        this.error = error;
        this.stackTrace = stackTrace;
      }
      return NgZoneError;
    })();
    exports.NgZoneError = NgZoneError;
    var NgZone = (function() {
      function NgZone(_a) {
        var enableLongStackTrace = _a.enableLongStackTrace;
        this._runScope = profile_1.wtfCreateScope("NgZone#run()");
        this._microtaskScope = profile_1.wtfCreateScope("NgZone#microtask()");
        this._pendingMicrotasks = 0;
        this._hasExecutedCodeInInnerZone = false;
        this._nestedRun = 0;
        this._inVmTurnDone = false;
        this._pendingTimeouts = [];
        if (lang_1.global.zone) {
          this._disabled = false;
          this._mountZone = lang_1.global.zone;
          this._innerZone = this._createInnerZone(this._mountZone, enableLongStackTrace);
        } else {
          this._disabled = true;
          this._mountZone = null;
        }
        this._onTurnStartEvents = new async_1.EventEmitter(false);
        this._onTurnDoneEvents = new async_1.EventEmitter(false);
        this._onEventDoneEvents = new async_1.EventEmitter(false);
        this._onErrorEvents = new async_1.EventEmitter(false);
      }
      NgZone.prototype.overrideOnTurnStart = function(onTurnStartHook) {
        this._onTurnStart = lang_1.normalizeBlank(onTurnStartHook);
      };
      Object.defineProperty(NgZone.prototype, "onTurnStart", {
        get: function() {
          return this._onTurnStartEvents;
        },
        enumerable: true,
        configurable: true
      });
      NgZone.prototype._notifyOnTurnStart = function(parentRun) {
        var _this = this;
        parentRun.call(this._innerZone, function() {
          _this._onTurnStartEvents.next(null);
        });
      };
      NgZone.prototype.overrideOnTurnDone = function(onTurnDoneHook) {
        this._onTurnDone = lang_1.normalizeBlank(onTurnDoneHook);
      };
      Object.defineProperty(NgZone.prototype, "onTurnDone", {
        get: function() {
          return this._onTurnDoneEvents;
        },
        enumerable: true,
        configurable: true
      });
      NgZone.prototype._notifyOnTurnDone = function(parentRun) {
        var _this = this;
        parentRun.call(this._innerZone, function() {
          _this._onTurnDoneEvents.next(null);
        });
      };
      NgZone.prototype.overrideOnEventDone = function(onEventDoneFn, opt_waitForAsync) {
        var _this = this;
        if (opt_waitForAsync === void 0) {
          opt_waitForAsync = false;
        }
        var normalizedOnEventDone = lang_1.normalizeBlank(onEventDoneFn);
        if (opt_waitForAsync) {
          this._onEventDone = function() {
            if (!_this._pendingTimeouts.length) {
              normalizedOnEventDone();
            }
          };
        } else {
          this._onEventDone = normalizedOnEventDone;
        }
      };
      Object.defineProperty(NgZone.prototype, "onEventDone", {
        get: function() {
          return this._onEventDoneEvents;
        },
        enumerable: true,
        configurable: true
      });
      NgZone.prototype._notifyOnEventDone = function() {
        var _this = this;
        this.runOutsideAngular(function() {
          _this._onEventDoneEvents.next(null);
        });
      };
      Object.defineProperty(NgZone.prototype, "hasPendingMicrotasks", {
        get: function() {
          return this._pendingMicrotasks > 0;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "hasPendingTimers", {
        get: function() {
          return this._pendingTimeouts.length > 0;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(NgZone.prototype, "hasPendingAsyncTasks", {
        get: function() {
          return this.hasPendingMicrotasks || this.hasPendingTimers;
        },
        enumerable: true,
        configurable: true
      });
      NgZone.prototype.overrideOnErrorHandler = function(errorHandler) {
        this._onErrorHandler = lang_1.normalizeBlank(errorHandler);
      };
      Object.defineProperty(NgZone.prototype, "onError", {
        get: function() {
          return this._onErrorEvents;
        },
        enumerable: true,
        configurable: true
      });
      NgZone.prototype.run = function(fn) {
        if (this._disabled) {
          return fn();
        } else {
          var s = this._runScope();
          try {
            return this._innerZone.run(fn);
          } finally {
            profile_1.wtfLeave(s);
          }
        }
      };
      NgZone.prototype.runOutsideAngular = function(fn) {
        if (this._disabled) {
          return fn();
        } else {
          return this._mountZone.run(fn);
        }
      };
      NgZone.prototype._createInnerZone = function(zone, enableLongStackTrace) {
        var microtaskScope = this._microtaskScope;
        var ngZone = this;
        var errorHandling;
        if (enableLongStackTrace) {
          errorHandling = collection_1.StringMapWrapper.merge(Zone.longStackTraceZone, {onError: function(e) {
              ngZone._notifyOnError(this, e);
            }});
        } else {
          errorHandling = {onError: function(e) {
              ngZone._notifyOnError(this, e);
            }};
        }
        return zone.fork(errorHandling).fork({
          '$run': function(parentRun) {
            return function() {
              try {
                ngZone._nestedRun++;
                if (!ngZone._hasExecutedCodeInInnerZone) {
                  ngZone._hasExecutedCodeInInnerZone = true;
                  ngZone._notifyOnTurnStart(parentRun);
                  if (ngZone._onTurnStart) {
                    parentRun.call(ngZone._innerZone, ngZone._onTurnStart);
                  }
                }
                return parentRun.apply(this, arguments);
              } finally {
                ngZone._nestedRun--;
                if (ngZone._pendingMicrotasks == 0 && ngZone._nestedRun == 0 && !this._inVmTurnDone) {
                  if (ngZone._hasExecutedCodeInInnerZone) {
                    try {
                      this._inVmTurnDone = true;
                      ngZone._notifyOnTurnDone(parentRun);
                      if (ngZone._onTurnDone) {
                        parentRun.call(ngZone._innerZone, ngZone._onTurnDone);
                      }
                    } finally {
                      this._inVmTurnDone = false;
                      ngZone._hasExecutedCodeInInnerZone = false;
                    }
                  }
                  if (ngZone._pendingMicrotasks === 0) {
                    ngZone._notifyOnEventDone();
                    if (lang_1.isPresent(ngZone._onEventDone)) {
                      ngZone.runOutsideAngular(ngZone._onEventDone);
                    }
                  }
                }
              }
            };
          },
          '$scheduleMicrotask': function(parentScheduleMicrotask) {
            return function(fn) {
              ngZone._pendingMicrotasks++;
              var microtask = function() {
                var s = microtaskScope();
                try {
                  fn();
                } finally {
                  ngZone._pendingMicrotasks--;
                  profile_1.wtfLeave(s);
                }
              };
              parentScheduleMicrotask.call(this, microtask);
            };
          },
          '$setTimeout': function(parentSetTimeout) {
            return function(fn, delay) {
              var args = [];
              for (var _i = 2; _i < arguments.length; _i++) {
                args[_i - 2] = arguments[_i];
              }
              var id;
              var cb = function() {
                fn();
                collection_1.ListWrapper.remove(ngZone._pendingTimeouts, id);
              };
              id = parentSetTimeout(cb, delay, args);
              ngZone._pendingTimeouts.push(id);
              return id;
            };
          },
          '$clearTimeout': function(parentClearTimeout) {
            return function(id) {
              parentClearTimeout(id);
              collection_1.ListWrapper.remove(ngZone._pendingTimeouts, id);
            };
          },
          _innerZone: true
        });
      };
      NgZone.prototype._notifyOnError = function(zone, e) {
        if (lang_1.isPresent(this._onErrorHandler) || async_1.ObservableWrapper.hasSubscribers(this._onErrorEvents)) {
          var trace = [lang_1.normalizeBlank(e.stack)];
          while (zone && zone.constructedAtException) {
            trace.push(zone.constructedAtException.get());
            zone = zone.parent;
          }
          if (async_1.ObservableWrapper.hasSubscribers(this._onErrorEvents)) {
            async_1.ObservableWrapper.callNext(this._onErrorEvents, new NgZoneError(e, trace));
          }
          if (lang_1.isPresent(this._onErrorHandler)) {
            this._onErrorHandler(e, trace);
          }
        } else {
          console.log('## _notifyOnError ##');
          console.log(e.stack);
          throw e;
        }
      };
      return NgZone;
    })();
    exports.NgZone = NgZone;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var ng_zone_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/zone/ng_zone');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  exports.EVENT_MANAGER_PLUGINS = lang_1.CONST_EXPR(new di_1.OpaqueToken("EventManagerPlugins"));
  var EventManager = (function() {
    function EventManager(plugins, _zone) {
      var _this = this;
      this._zone = _zone;
      plugins.forEach(function(p) {
        return p.manager = _this;
      });
      this._plugins = collection_1.ListWrapper.reversed(plugins);
    }
    EventManager.prototype.addEventListener = function(element, eventName, handler) {
      var plugin = this._findPluginFor(eventName);
      plugin.addEventListener(element, eventName, handler);
    };
    EventManager.prototype.addGlobalEventListener = function(target, eventName, handler) {
      var plugin = this._findPluginFor(eventName);
      return plugin.addGlobalEventListener(target, eventName, handler);
    };
    EventManager.prototype.getZone = function() {
      return this._zone;
    };
    EventManager.prototype._findPluginFor = function(eventName) {
      var plugins = this._plugins;
      for (var i = 0; i < plugins.length; i++) {
        var plugin = plugins[i];
        if (plugin.supports(eventName)) {
          return plugin;
        }
      }
      throw new exceptions_1.BaseException("No event manager plugin found for event " + eventName);
    };
    EventManager = __decorate([di_1.Injectable(), __param(0, di_1.Inject(exports.EVENT_MANAGER_PLUGINS)), __metadata('design:paramtypes', [Array, ng_zone_1.NgZone])], EventManager);
    return EventManager;
  })();
  exports.EventManager = EventManager;
  var EventManagerPlugin = (function() {
    function EventManagerPlugin() {}
    EventManagerPlugin.prototype.supports = function(eventName) {
      return false;
    };
    EventManagerPlugin.prototype.addEventListener = function(element, eventName, handler) {
      throw "not implemented";
    };
    EventManagerPlugin.prototype.addGlobalEventListener = function(element, eventName, handler) {
      throw "not implemented";
    };
    return EventManagerPlugin;
  })();
  exports.EventManagerPlugin = EventManagerPlugin;
  var DomEventsPlugin = (function(_super) {
    __extends(DomEventsPlugin, _super);
    function DomEventsPlugin() {
      _super.apply(this, arguments);
    }
    DomEventsPlugin.prototype.supports = function(eventName) {
      return true;
    };
    DomEventsPlugin.prototype.addEventListener = function(element, eventName, handler) {
      var zone = this.manager.getZone();
      var outsideHandler = function(event) {
        return zone.run(function() {
          return handler(event);
        });
      };
      this.manager.getZone().runOutsideAngular(function() {
        dom_adapter_1.DOM.on(element, eventName, outsideHandler);
      });
    };
    DomEventsPlugin.prototype.addGlobalEventListener = function(target, eventName, handler) {
      var element = dom_adapter_1.DOM.getGlobalEventTarget(target);
      var zone = this.manager.getZone();
      var outsideHandler = function(event) {
        return zone.run(function() {
          return handler(event);
        });
      };
      return this.manager.getZone().runOutsideAngular(function() {
        return dom_adapter_1.DOM.onAndCancel(element, eventName, outsideHandler);
      });
    };
    DomEventsPlugin = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], DomEventsPlugin);
    return DomEventsPlugin;
  })(EventManagerPlugin);
  exports.DomEventsPlugin = DomEventsPlugin;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/animate/browser_details", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/math", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var math_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/math');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var BrowserDetails = (function() {
    function BrowserDetails() {
      this.elapsedTimeIncludesDelay = false;
      this.doesElapsedTimeIncludesDelay();
    }
    BrowserDetails.prototype.doesElapsedTimeIncludesDelay = function() {
      var _this = this;
      var div = dom_adapter_1.DOM.createElement('div');
      dom_adapter_1.DOM.setAttribute(div, 'style', "position: absolute; top: -9999px; left: -9999px; width: 1px;\n      height: 1px; transition: all 1ms linear 1ms;");
      this.raf(function(timestamp) {
        dom_adapter_1.DOM.on(div, 'transitionend', function(event) {
          var elapsed = math_1.Math.round(event.elapsedTime * 1000);
          _this.elapsedTimeIncludesDelay = elapsed == 2;
          dom_adapter_1.DOM.remove(div);
        });
        dom_adapter_1.DOM.setStyle(div, 'width', '2px');
      }, 2);
    };
    BrowserDetails.prototype.raf = function(callback, frames) {
      if (frames === void 0) {
        frames = 1;
      }
      var queue = new RafQueue(callback, frames);
      return function() {
        return queue.cancel();
      };
    };
    BrowserDetails = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], BrowserDetails);
    return BrowserDetails;
  })();
  exports.BrowserDetails = BrowserDetails;
  var RafQueue = (function() {
    function RafQueue(callback, frames) {
      this.callback = callback;
      this.frames = frames;
      this._raf();
    }
    RafQueue.prototype._raf = function() {
      var _this = this;
      this.currentFrameId = dom_adapter_1.DOM.requestAnimationFrame(function(timestamp) {
        return _this._nextFrame(timestamp);
      });
    };
    RafQueue.prototype._nextFrame = function(timestamp) {
      this.frames--;
      if (this.frames > 0) {
        this._raf();
      } else {
        this.callback(timestamp);
      }
    };
    RafQueue.prototype.cancel = function() {
      dom_adapter_1.DOM.cancelAnimationFrame(this.currentFrameId);
      this.currentFrameId = null;
    };
    return RafQueue;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/math", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.Math = lang_1.global.Math;
  exports.NaN = typeof exports.NaN;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/animate/animation", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/math", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/util", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var math_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/math');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/util');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var Animation = (function() {
    function Animation(element, data, browserDetails) {
      var _this = this;
      this.element = element;
      this.data = data;
      this.browserDetails = browserDetails;
      this.callbacks = [];
      this.eventClearFunctions = [];
      this.completed = false;
      this._stringPrefix = '';
      this.startTime = lang_1.DateWrapper.toMillis(lang_1.DateWrapper.now());
      this._stringPrefix = dom_adapter_1.DOM.getAnimationPrefix();
      this.setup();
      this.wait(function(timestamp) {
        return _this.start();
      });
    }
    Object.defineProperty(Animation.prototype, "totalTime", {
      get: function() {
        var delay = this.computedDelay != null ? this.computedDelay : 0;
        var duration = this.computedDuration != null ? this.computedDuration : 0;
        return delay + duration;
      },
      enumerable: true,
      configurable: true
    });
    Animation.prototype.wait = function(callback) {
      this.browserDetails.raf(callback, 2);
    };
    Animation.prototype.setup = function() {
      if (this.data.fromStyles != null)
        this.applyStyles(this.data.fromStyles);
      if (this.data.duration != null)
        this.applyStyles({'transitionDuration': this.data.duration.toString() + 'ms'});
      if (this.data.delay != null)
        this.applyStyles({'transitionDelay': this.data.delay.toString() + 'ms'});
    };
    Animation.prototype.start = function() {
      this.addClasses(this.data.classesToAdd);
      this.addClasses(this.data.animationClasses);
      this.removeClasses(this.data.classesToRemove);
      if (this.data.toStyles != null)
        this.applyStyles(this.data.toStyles);
      var computedStyles = dom_adapter_1.DOM.getComputedStyle(this.element);
      this.computedDelay = math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-delay')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-delay')));
      this.computedDuration = math_1.Math.max(this.parseDurationString(computedStyles.getPropertyValue(this._stringPrefix + 'transition-duration')), this.parseDurationString(this.element.style.getPropertyValue(this._stringPrefix + 'transition-duration')));
      this.addEvents();
    };
    Animation.prototype.applyStyles = function(styles) {
      var _this = this;
      collection_1.StringMapWrapper.forEach(styles, function(value, key) {
        var dashCaseKey = util_1.camelCaseToDashCase(key);
        if (lang_1.isPresent(dom_adapter_1.DOM.getStyle(_this.element, dashCaseKey))) {
          dom_adapter_1.DOM.setStyle(_this.element, dashCaseKey, value.toString());
        } else {
          dom_adapter_1.DOM.setStyle(_this.element, _this._stringPrefix + dashCaseKey, value.toString());
        }
      });
    };
    Animation.prototype.addClasses = function(classes) {
      for (var i = 0,
          len = classes.length; i < len; i++)
        dom_adapter_1.DOM.addClass(this.element, classes[i]);
    };
    Animation.prototype.removeClasses = function(classes) {
      for (var i = 0,
          len = classes.length; i < len; i++)
        dom_adapter_1.DOM.removeClass(this.element, classes[i]);
    };
    Animation.prototype.addEvents = function() {
      var _this = this;
      if (this.totalTime > 0) {
        this.eventClearFunctions.push(dom_adapter_1.DOM.onAndCancel(this.element, dom_adapter_1.DOM.getTransitionEnd(), function(event) {
          return _this.handleAnimationEvent(event);
        }));
      } else {
        this.handleAnimationCompleted();
      }
    };
    Animation.prototype.handleAnimationEvent = function(event) {
      var elapsedTime = math_1.Math.round(event.elapsedTime * 1000);
      if (!this.browserDetails.elapsedTimeIncludesDelay)
        elapsedTime += this.computedDelay;
      event.stopPropagation();
      if (elapsedTime >= this.totalTime)
        this.handleAnimationCompleted();
    };
    Animation.prototype.handleAnimationCompleted = function() {
      this.removeClasses(this.data.animationClasses);
      this.callbacks.forEach(function(callback) {
        return callback();
      });
      this.callbacks = [];
      this.eventClearFunctions.forEach(function(fn) {
        return fn();
      });
      this.eventClearFunctions = [];
      this.completed = true;
    };
    Animation.prototype.onComplete = function(callback) {
      if (this.completed) {
        callback();
      } else {
        this.callbacks.push(callback);
      }
      return this;
    };
    Animation.prototype.parseDurationString = function(duration) {
      var maxValue = 0;
      if (duration == null || duration.length < 2) {
        return maxValue;
      } else if (duration.substring(duration.length - 2) == 'ms') {
        var value = lang_1.NumberWrapper.parseInt(this.stripLetters(duration), 10);
        if (value > maxValue)
          maxValue = value;
      } else if (duration.substring(duration.length - 1) == 's') {
        var ms = lang_1.NumberWrapper.parseFloat(this.stripLetters(duration)) * 1000;
        var value = math_1.Math.floor(ms);
        if (value > maxValue)
          maxValue = value;
      }
      return maxValue;
    };
    Animation.prototype.stripLetters = function(str) {
      return lang_1.StringWrapper.replaceAll(str, lang_1.RegExpWrapper.create('[^0-9]+$', ''), '');
    };
    return Animation;
  })();
  exports.Animation = Animation;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/animate/css_animation_options", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var CssAnimationOptions = (function() {
    function CssAnimationOptions() {
      this.classesToAdd = [];
      this.classesToRemove = [];
      this.animationClasses = [];
    }
    return CssAnimationOptions;
  })();
  exports.CssAnimationOptions = CssAnimationOptions;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/animate/css_animation_builder", ["npm:angular2@2.0.0-alpha.46/src/animate/css_animation_options", "npm:angular2@2.0.0-alpha.46/src/animate/animation"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var css_animation_options_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/css_animation_options');
  var animation_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/animation');
  var CssAnimationBuilder = (function() {
    function CssAnimationBuilder(browserDetails) {
      this.browserDetails = browserDetails;
      this.data = new css_animation_options_1.CssAnimationOptions();
    }
    CssAnimationBuilder.prototype.addAnimationClass = function(className) {
      this.data.animationClasses.push(className);
      return this;
    };
    CssAnimationBuilder.prototype.addClass = function(className) {
      this.data.classesToAdd.push(className);
      return this;
    };
    CssAnimationBuilder.prototype.removeClass = function(className) {
      this.data.classesToRemove.push(className);
      return this;
    };
    CssAnimationBuilder.prototype.setDuration = function(duration) {
      this.data.duration = duration;
      return this;
    };
    CssAnimationBuilder.prototype.setDelay = function(delay) {
      this.data.delay = delay;
      return this;
    };
    CssAnimationBuilder.prototype.setStyles = function(from, to) {
      return this.setFromStyles(from).setToStyles(to);
    };
    CssAnimationBuilder.prototype.setFromStyles = function(from) {
      this.data.fromStyles = from;
      return this;
    };
    CssAnimationBuilder.prototype.setToStyles = function(to) {
      this.data.toStyles = to;
      return this;
    };
    CssAnimationBuilder.prototype.start = function(element) {
      return new animation_1.Animation(element, this.data, this.browserDetails);
    };
    return CssAnimationBuilder;
  })();
  exports.CssAnimationBuilder = CssAnimationBuilder;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/animate/animation_builder", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/animate/css_animation_builder", "npm:angular2@2.0.0-alpha.46/src/animate/browser_details"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var css_animation_builder_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/css_animation_builder');
  var browser_details_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/browser_details');
  var AnimationBuilder = (function() {
    function AnimationBuilder(browserDetails) {
      this.browserDetails = browserDetails;
    }
    AnimationBuilder.prototype.css = function() {
      return new css_animation_builder_1.CssAnimationBuilder(this.browserDetails);
    };
    AnimationBuilder = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [browser_details_1.BrowserDetails])], AnimationBuilder);
    return AnimationBuilder;
  })();
  exports.AnimationBuilder = AnimationBuilder;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_renderer", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/animate/animation_builder", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host", "npm:angular2@2.0.0-alpha.46/src/core/profile/profile", "npm:angular2@2.0.0-alpha.46/src/core/render/api", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens", "npm:angular2@2.0.0-alpha.46/src/core/render/view_factory", "npm:angular2@2.0.0-alpha.46/src/core/render/view", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/util", "npm:angular2@2.0.0-alpha.46/src/core/metadata"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var animation_builder_1 = $__require('npm:angular2@2.0.0-alpha.46/src/animate/animation_builder');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var event_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/events/event_manager');
  var shared_styles_host_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host');
  var profile_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/profile');
  var api_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/api');
  var dom_tokens_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens');
  var view_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/view_factory');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/view');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/util');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var XLINK_NAMESPACE = 'http://www.w3.org/1999/xlink';
  var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
  var SVG_ELEMENT_NAMES = lang_1.CONST_EXPR({
    'altGlyph': true,
    'altGlyphDef': true,
    'altGlyphItem': true,
    'animate': true,
    'animateColor': true,
    'animateMotion': true,
    'animateTransform': true,
    'circle': true,
    'clipPath': true,
    'color-profile': true,
    'cursor': true,
    'defs': true,
    'desc': true,
    'ellipse': true,
    'feBlend': true,
    'feColorMatrix': true,
    'feComponentTransfer': true,
    'feComposite': true,
    'feConvolveMatrix': true,
    'feDiffuseLighting': true,
    'feDisplacementMap': true,
    'feDistantLight': true,
    'feFlood': true,
    'feFuncA': true,
    'feFuncB': true,
    'feFuncG': true,
    'feFuncR': true,
    'feGaussianBlur': true,
    'feImage': true,
    'feMerge': true,
    'feMergeNode': true,
    'feMorphology': true,
    'feOffset': true,
    'fePointLight': true,
    'feSpecularLighting': true,
    'feSpotLight': true,
    'feTile': true,
    'feTurbulence': true,
    'filter': true,
    'font': true,
    'font-face': true,
    'font-face-format': true,
    'font-face-name': true,
    'font-face-src': true,
    'font-face-uri': true,
    'foreignObject': true,
    'g': true,
    'glyphRef': true,
    'hkern': true,
    'image': true,
    'line': true,
    'linearGradient': true,
    'marker': true,
    'mask': true,
    'metadata': true,
    'missing-glyph': true,
    'mpath': true,
    'path': true,
    'pattern': true,
    'polygon': true,
    'polyline': true,
    'radialGradient': true,
    'rect': true,
    'set': true,
    'stop': true,
    'style': true,
    'svg': true,
    'switch': true,
    'symbol': true,
    'text': true,
    'textPath': true,
    'title': true,
    'tref': true,
    'tspan': true,
    'use': true,
    'view': true,
    'vkern': true
  });
  var SVG_ATTR_NAMESPACES = lang_1.CONST_EXPR({
    'href': XLINK_NAMESPACE,
    'xlink:href': XLINK_NAMESPACE
  });
  var DomRenderer = (function(_super) {
    __extends(DomRenderer, _super);
    function DomRenderer() {
      _super.apply(this, arguments);
    }
    DomRenderer.prototype.getNativeElementSync = function(location) {
      return resolveInternalDomView(location.renderView).boundElements[location.boundElementIndex];
    };
    DomRenderer.prototype.getRootNodes = function(fragment) {
      return resolveInternalDomFragment(fragment);
    };
    DomRenderer.prototype.attachFragmentAfterFragment = function(previousFragmentRef, fragmentRef) {
      var previousFragmentNodes = resolveInternalDomFragment(previousFragmentRef);
      if (previousFragmentNodes.length > 0) {
        var sibling = previousFragmentNodes[previousFragmentNodes.length - 1];
        var nodes = resolveInternalDomFragment(fragmentRef);
        moveNodesAfterSibling(sibling, nodes);
        this.animateNodesEnter(nodes);
      }
    };
    DomRenderer.prototype.animateNodesEnter = function(nodes) {
      for (var i = 0; i < nodes.length; i++)
        this.animateNodeEnter(nodes[i]);
    };
    DomRenderer.prototype.attachFragmentAfterElement = function(elementRef, fragmentRef) {
      var parentView = resolveInternalDomView(elementRef.renderView);
      var element = parentView.boundElements[elementRef.boundElementIndex];
      var nodes = resolveInternalDomFragment(fragmentRef);
      moveNodesAfterSibling(element, nodes);
      this.animateNodesEnter(nodes);
    };
    DomRenderer.prototype.hydrateView = function(viewRef) {
      resolveInternalDomView(viewRef).hydrate();
    };
    DomRenderer.prototype.dehydrateView = function(viewRef) {
      resolveInternalDomView(viewRef).dehydrate();
    };
    DomRenderer.prototype.createTemplateAnchor = function(attrNameAndValues) {
      return this.createElement('script', attrNameAndValues);
    };
    DomRenderer.prototype.createText = function(value) {
      return dom_adapter_1.DOM.createTextNode(lang_1.isPresent(value) ? value : '');
    };
    DomRenderer.prototype.appendChild = function(parent, child) {
      dom_adapter_1.DOM.appendChild(parent, child);
    };
    DomRenderer.prototype.setElementProperty = function(location, propertyName, propertyValue) {
      var view = resolveInternalDomView(location.renderView);
      dom_adapter_1.DOM.setProperty(view.boundElements[location.boundElementIndex], propertyName, propertyValue);
    };
    DomRenderer.prototype.setElementAttribute = function(location, attributeName, attributeValue) {
      var view = resolveInternalDomView(location.renderView);
      var element = view.boundElements[location.boundElementIndex];
      var dashCasedAttributeName = util_1.camelCaseToDashCase(attributeName);
      if (lang_1.isPresent(attributeValue)) {
        dom_adapter_1.DOM.setAttribute(element, dashCasedAttributeName, lang_1.stringify(attributeValue));
      } else {
        dom_adapter_1.DOM.removeAttribute(element, dashCasedAttributeName);
      }
    };
    DomRenderer.prototype.setElementClass = function(location, className, isAdd) {
      var view = resolveInternalDomView(location.renderView);
      var element = view.boundElements[location.boundElementIndex];
      if (isAdd) {
        dom_adapter_1.DOM.addClass(element, className);
      } else {
        dom_adapter_1.DOM.removeClass(element, className);
      }
    };
    DomRenderer.prototype.setElementStyle = function(location, styleName, styleValue) {
      var view = resolveInternalDomView(location.renderView);
      var element = view.boundElements[location.boundElementIndex];
      var dashCasedStyleName = util_1.camelCaseToDashCase(styleName);
      if (lang_1.isPresent(styleValue)) {
        dom_adapter_1.DOM.setStyle(element, dashCasedStyleName, lang_1.stringify(styleValue));
      } else {
        dom_adapter_1.DOM.removeStyle(element, dashCasedStyleName);
      }
    };
    DomRenderer.prototype.invokeElementMethod = function(location, methodName, args) {
      var view = resolveInternalDomView(location.renderView);
      var element = view.boundElements[location.boundElementIndex];
      dom_adapter_1.DOM.invoke(element, methodName, args);
    };
    DomRenderer.prototype.setText = function(viewRef, textNodeIndex, text) {
      var view = resolveInternalDomView(viewRef);
      dom_adapter_1.DOM.setText(view.boundTextNodes[textNodeIndex], text);
    };
    DomRenderer.prototype.setEventDispatcher = function(viewRef, dispatcher) {
      resolveInternalDomView(viewRef).setEventDispatcher(dispatcher);
    };
    return DomRenderer;
  })(api_1.Renderer);
  exports.DomRenderer = DomRenderer;
  var DomRenderer_ = (function(_super) {
    __extends(DomRenderer_, _super);
    function DomRenderer_(_eventManager, _domSharedStylesHost, _animate, document) {
      _super.call(this);
      this._eventManager = _eventManager;
      this._domSharedStylesHost = _domSharedStylesHost;
      this._animate = _animate;
      this._componentTpls = new Map();
      this._createRootHostViewScope = profile_1.wtfCreateScope('DomRenderer#createRootHostView()');
      this._createViewScope = profile_1.wtfCreateScope('DomRenderer#createView()');
      this._detachFragmentScope = profile_1.wtfCreateScope('DomRenderer#detachFragment()');
      this._document = document;
    }
    DomRenderer_.prototype.registerComponentTemplate = function(template) {
      this._componentTpls.set(template.id, template);
      if (template.encapsulation !== metadata_1.ViewEncapsulation.Native) {
        var encapsulatedStyles = view_factory_1.encapsulateStyles(template);
        this._domSharedStylesHost.addStyles(encapsulatedStyles);
      }
    };
    DomRenderer_.prototype.createProtoView = function(componentTemplateId, cmds) {
      return new view_1.DefaultProtoViewRef(this._componentTpls.get(componentTemplateId), cmds);
    };
    DomRenderer_.prototype.resolveComponentTemplate = function(templateId) {
      return this._componentTpls.get(templateId);
    };
    DomRenderer_.prototype.createRootHostView = function(hostProtoViewRef, fragmentCount, hostElementSelector) {
      var s = this._createRootHostViewScope();
      var element = dom_adapter_1.DOM.querySelector(this._document, hostElementSelector);
      if (lang_1.isBlank(element)) {
        profile_1.wtfLeave(s);
        throw new exceptions_1.BaseException("The selector \"" + hostElementSelector + "\" did not match any elements");
      }
      return profile_1.wtfLeave(s, this._createView(hostProtoViewRef, element));
    };
    DomRenderer_.prototype.createView = function(protoViewRef, fragmentCount) {
      var s = this._createViewScope();
      return profile_1.wtfLeave(s, this._createView(protoViewRef, null));
    };
    DomRenderer_.prototype._createView = function(protoViewRef, inplaceElement) {
      var dpvr = protoViewRef;
      var view = view_factory_1.createRenderView(dpvr.template, dpvr.cmds, inplaceElement, this);
      var sdRoots = view.nativeShadowRoots;
      for (var i = 0; i < sdRoots.length; i++) {
        this._domSharedStylesHost.addHost(sdRoots[i]);
      }
      return new api_1.RenderViewWithFragments(view, view.fragments);
    };
    DomRenderer_.prototype.destroyView = function(viewRef) {
      var view = viewRef;
      var sdRoots = view.nativeShadowRoots;
      for (var i = 0; i < sdRoots.length; i++) {
        this._domSharedStylesHost.removeHost(sdRoots[i]);
      }
    };
    DomRenderer_.prototype.animateNodeEnter = function(node) {
      if (dom_adapter_1.DOM.isElementNode(node) && dom_adapter_1.DOM.hasClass(node, 'ng-animate')) {
        dom_adapter_1.DOM.addClass(node, 'ng-enter');
        this._animate.css().addAnimationClass('ng-enter-active').start(node).onComplete(function() {
          dom_adapter_1.DOM.removeClass(node, 'ng-enter');
        });
      }
    };
    DomRenderer_.prototype.animateNodeLeave = function(node) {
      if (dom_adapter_1.DOM.isElementNode(node) && dom_adapter_1.DOM.hasClass(node, 'ng-animate')) {
        dom_adapter_1.DOM.addClass(node, 'ng-leave');
        this._animate.css().addAnimationClass('ng-leave-active').start(node).onComplete(function() {
          dom_adapter_1.DOM.removeClass(node, 'ng-leave');
          dom_adapter_1.DOM.remove(node);
        });
      } else {
        dom_adapter_1.DOM.remove(node);
      }
    };
    DomRenderer_.prototype.detachFragment = function(fragmentRef) {
      var s = this._detachFragmentScope();
      var fragmentNodes = resolveInternalDomFragment(fragmentRef);
      for (var i = 0; i < fragmentNodes.length; i++) {
        this.animateNodeLeave(fragmentNodes[i]);
      }
      profile_1.wtfLeave(s);
    };
    DomRenderer_.prototype.createElement = function(name, attrNameAndValues) {
      var isSvg = SVG_ELEMENT_NAMES[name] == true;
      var el = isSvg ? dom_adapter_1.DOM.createElementNS(SVG_NAMESPACE, name) : dom_adapter_1.DOM.createElement(name);
      this._setAttributes(el, attrNameAndValues, isSvg);
      return el;
    };
    DomRenderer_.prototype.mergeElement = function(existing, attrNameAndValues) {
      dom_adapter_1.DOM.clearNodes(existing);
      this._setAttributes(existing, attrNameAndValues, false);
    };
    DomRenderer_.prototype._setAttributes = function(node, attrNameAndValues, isSvg) {
      for (var attrIdx = 0; attrIdx < attrNameAndValues.length; attrIdx += 2) {
        var attrName = attrNameAndValues[attrIdx];
        var attrValue = attrNameAndValues[attrIdx + 1];
        var attrNs = isSvg ? SVG_ATTR_NAMESPACES[attrName] : null;
        if (lang_1.isPresent(attrNs)) {
          dom_adapter_1.DOM.setAttributeNS(node, XLINK_NAMESPACE, attrName, attrValue);
        } else {
          dom_adapter_1.DOM.setAttribute(node, attrName, attrValue);
        }
      }
    };
    DomRenderer_.prototype.createRootContentInsertionPoint = function() {
      return dom_adapter_1.DOM.createComment('root-content-insertion-point');
    };
    DomRenderer_.prototype.createShadowRoot = function(host, templateId) {
      var sr = dom_adapter_1.DOM.createShadowRoot(host);
      var tpl = this._componentTpls.get(templateId);
      for (var i = 0; i < tpl.styles.length; i++) {
        dom_adapter_1.DOM.appendChild(sr, dom_adapter_1.DOM.createStyleElement(tpl.styles[i]));
      }
      return sr;
    };
    DomRenderer_.prototype.on = function(element, eventName, callback) {
      this._eventManager.addEventListener(element, eventName, decoratePreventDefault(callback));
    };
    DomRenderer_.prototype.globalOn = function(target, eventName, callback) {
      return this._eventManager.addGlobalEventListener(target, eventName, decoratePreventDefault(callback));
    };
    DomRenderer_ = __decorate([di_1.Injectable(), __param(3, di_1.Inject(dom_tokens_1.DOCUMENT)), __metadata('design:paramtypes', [event_manager_1.EventManager, shared_styles_host_1.DomSharedStylesHost, animation_builder_1.AnimationBuilder, Object])], DomRenderer_);
    return DomRenderer_;
  })(DomRenderer);
  exports.DomRenderer_ = DomRenderer_;
  function resolveInternalDomView(viewRef) {
    return viewRef;
  }
  function resolveInternalDomFragment(fragmentRef) {
    return fragmentRef.nodes;
  }
  function moveNodesAfterSibling(sibling, nodes) {
    if (nodes.length > 0 && lang_1.isPresent(dom_adapter_1.DOM.parentElement(sibling))) {
      for (var i = 0; i < nodes.length; i++) {
        dom_adapter_1.DOM.insertBefore(sibling, nodes[i]);
      }
      dom_adapter_1.DOM.insertBefore(nodes[0], sibling);
    }
  }
  function decoratePreventDefault(eventHandler) {
    return function(event) {
      var allowDefaultBehavior = eventHandler(event);
      if (!allowDefaultBehavior) {
        dom_adapter_1.DOM.preventDefault(event);
      }
    };
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.DOCUMENT = lang_1.CONST_EXPR(new di_1.OpaqueToken('DocumentToken'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  function setRootDomAdapter(adapter) {
    if (lang_1.isBlank(exports.DOM)) {
      exports.DOM = adapter;
    }
  }
  exports.setRootDomAdapter = setRootDomAdapter;
  var DomAdapter = (function() {
    function DomAdapter() {}
    return DomAdapter;
  })();
  exports.DomAdapter = DomAdapter;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host", ["npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var dom_adapter_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/dom/dom_adapter');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var dom_tokens_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens');
  var SharedStylesHost = (function() {
    function SharedStylesHost() {
      this._styles = [];
      this._stylesSet = new Set();
    }
    SharedStylesHost.prototype.addStyles = function(styles) {
      var _this = this;
      var additions = [];
      styles.forEach(function(style) {
        if (!collection_1.SetWrapper.has(_this._stylesSet, style)) {
          _this._stylesSet.add(style);
          _this._styles.push(style);
          additions.push(style);
        }
      });
      this.onStylesAdded(additions);
    };
    SharedStylesHost.prototype.onStylesAdded = function(additions) {};
    SharedStylesHost.prototype.getAllStyles = function() {
      return this._styles;
    };
    SharedStylesHost = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], SharedStylesHost);
    return SharedStylesHost;
  })();
  exports.SharedStylesHost = SharedStylesHost;
  var DomSharedStylesHost = (function(_super) {
    __extends(DomSharedStylesHost, _super);
    function DomSharedStylesHost(doc) {
      _super.call(this);
      this._hostNodes = new Set();
      this._hostNodes.add(doc.head);
    }
    DomSharedStylesHost.prototype._addStylesToHost = function(styles, host) {
      for (var i = 0; i < styles.length; i++) {
        var style = styles[i];
        dom_adapter_1.DOM.appendChild(host, dom_adapter_1.DOM.createStyleElement(style));
      }
    };
    DomSharedStylesHost.prototype.addHost = function(hostNode) {
      this._addStylesToHost(this._styles, hostNode);
      this._hostNodes.add(hostNode);
    };
    DomSharedStylesHost.prototype.removeHost = function(hostNode) {
      collection_1.SetWrapper.delete(this._hostNodes, hostNode);
    };
    DomSharedStylesHost.prototype.onStylesAdded = function(additions) {
      var _this = this;
      this._hostNodes.forEach(function(hostNode) {
        _this._addStylesToHost(additions, hostNode);
      });
    };
    DomSharedStylesHost = __decorate([di_1.Injectable(), __param(0, di_1.Inject(dom_tokens_1.DOCUMENT)), __metadata('design:paramtypes', [Object])], DomSharedStylesHost);
    return DomSharedStylesHost;
  })(SharedStylesHost);
  exports.DomSharedStylesHost = DomSharedStylesHost;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/render", ["npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_renderer", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens", "npm:angular2@2.0.0-alpha.46/src/core/render/api"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/shared_styles_host'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_renderer'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/dom_tokens'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/render/api'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/render/render", "npm:angular2@2.0.0-alpha.46/src/core/metadata"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/render');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var metadata_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  exports.ViewEncapsulation = metadata_2.ViewEncapsulation;
  var CompiledHostTemplate = (function() {
    function CompiledHostTemplate(template) {
      this.template = template;
    }
    CompiledHostTemplate = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [CompiledComponentTemplate])], CompiledHostTemplate);
    return CompiledHostTemplate;
  })();
  exports.CompiledHostTemplate = CompiledHostTemplate;
  var CompiledComponentTemplate = (function() {
    function CompiledComponentTemplate(id, changeDetectorFactory, commands, styles) {
      this.id = id;
      this.changeDetectorFactory = changeDetectorFactory;
      this.commands = commands;
      this.styles = styles;
    }
    CompiledComponentTemplate = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String, Function, Array, Array])], CompiledComponentTemplate);
    return CompiledComponentTemplate;
  })();
  exports.CompiledComponentTemplate = CompiledComponentTemplate;
  var EMPTY_ARR = lang_1.CONST_EXPR([]);
  var TextCmd = (function() {
    function TextCmd(value, isBound, ngContentIndex) {
      this.value = value;
      this.isBound = isBound;
      this.ngContentIndex = ngContentIndex;
    }
    TextCmd.prototype.visit = function(visitor, context) {
      return visitor.visitText(this, context);
    };
    TextCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String, Boolean, Number])], TextCmd);
    return TextCmd;
  })();
  exports.TextCmd = TextCmd;
  var NgContentCmd = (function() {
    function NgContentCmd(index, ngContentIndex) {
      this.index = index;
      this.ngContentIndex = ngContentIndex;
      this.isBound = false;
    }
    NgContentCmd.prototype.visit = function(visitor, context) {
      return visitor.visitNgContent(this, context);
    };
    NgContentCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Number, Number])], NgContentCmd);
    return NgContentCmd;
  })();
  exports.NgContentCmd = NgContentCmd;
  var IBeginElementCmd = (function(_super) {
    __extends(IBeginElementCmd, _super);
    function IBeginElementCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(IBeginElementCmd.prototype, "variableNameAndValues", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(IBeginElementCmd.prototype, "eventTargetAndNames", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(IBeginElementCmd.prototype, "directives", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return IBeginElementCmd;
  })(render_1.RenderBeginElementCmd);
  exports.IBeginElementCmd = IBeginElementCmd;
  var BeginElementCmd = (function() {
    function BeginElementCmd(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, isBound, ngContentIndex) {
      this.name = name;
      this.attrNameAndValues = attrNameAndValues;
      this.eventTargetAndNames = eventTargetAndNames;
      this.variableNameAndValues = variableNameAndValues;
      this.directives = directives;
      this.isBound = isBound;
      this.ngContentIndex = ngContentIndex;
    }
    BeginElementCmd.prototype.visit = function(visitor, context) {
      return visitor.visitBeginElement(this, context);
    };
    BeginElementCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String, Array, Array, Array, Array, Boolean, Number])], BeginElementCmd);
    return BeginElementCmd;
  })();
  exports.BeginElementCmd = BeginElementCmd;
  var EndElementCmd = (function() {
    function EndElementCmd() {}
    EndElementCmd.prototype.visit = function(visitor, context) {
      return visitor.visitEndElement(context);
    };
    EndElementCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], EndElementCmd);
    return EndElementCmd;
  })();
  exports.EndElementCmd = EndElementCmd;
  var BeginComponentCmd = (function() {
    function BeginComponentCmd(name, attrNameAndValues, eventTargetAndNames, variableNameAndValues, directives, encapsulation, ngContentIndex, templateGetter) {
      this.name = name;
      this.attrNameAndValues = attrNameAndValues;
      this.eventTargetAndNames = eventTargetAndNames;
      this.variableNameAndValues = variableNameAndValues;
      this.directives = directives;
      this.encapsulation = encapsulation;
      this.ngContentIndex = ngContentIndex;
      this.templateGetter = templateGetter;
      this.isBound = true;
    }
    Object.defineProperty(BeginComponentCmd.prototype, "templateId", {
      get: function() {
        return this.templateGetter().id;
      },
      enumerable: true,
      configurable: true
    });
    BeginComponentCmd.prototype.visit = function(visitor, context) {
      return visitor.visitBeginComponent(this, context);
    };
    BeginComponentCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String, Array, Array, Array, Array, Number, Number, Function])], BeginComponentCmd);
    return BeginComponentCmd;
  })();
  exports.BeginComponentCmd = BeginComponentCmd;
  var EndComponentCmd = (function() {
    function EndComponentCmd() {}
    EndComponentCmd.prototype.visit = function(visitor, context) {
      return visitor.visitEndComponent(context);
    };
    EndComponentCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], EndComponentCmd);
    return EndComponentCmd;
  })();
  exports.EndComponentCmd = EndComponentCmd;
  var EmbeddedTemplateCmd = (function() {
    function EmbeddedTemplateCmd(attrNameAndValues, variableNameAndValues, directives, isMerged, ngContentIndex, changeDetectorFactory, children) {
      this.attrNameAndValues = attrNameAndValues;
      this.variableNameAndValues = variableNameAndValues;
      this.directives = directives;
      this.isMerged = isMerged;
      this.ngContentIndex = ngContentIndex;
      this.changeDetectorFactory = changeDetectorFactory;
      this.children = children;
      this.isBound = true;
      this.name = null;
      this.eventTargetAndNames = EMPTY_ARR;
    }
    EmbeddedTemplateCmd.prototype.visit = function(visitor, context) {
      return visitor.visitEmbeddedTemplate(this, context);
    };
    EmbeddedTemplateCmd = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Array, Array, Array, Boolean, Number, Function, Array])], EmbeddedTemplateCmd);
    return EmbeddedTemplateCmd;
  })();
  exports.EmbeddedTemplateCmd = EmbeddedTemplateCmd;
  function visitAllCommands(visitor, cmds, context) {
    if (context === void 0) {
      context = null;
    }
    for (var i = 0; i < cmds.length; i++) {
      cmds[i].visit(visitor, context);
    }
  }
  exports.visitAllCommands = visitAllCommands;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.PLATFORM_DIRECTIVES = lang_1.CONST_EXPR(new di_1.OpaqueToken("Platform Directives"));
  exports.PLATFORM_PIPES = lang_1.CONST_EXPR(new di_1.OpaqueToken("Platform Pipes"));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/pipe_resolver", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  function _isPipeMetadata(type) {
    return type instanceof metadata_1.PipeMetadata;
  }
  var PipeResolver = (function() {
    function PipeResolver() {}
    PipeResolver.prototype.resolve = function(type) {
      var metas = reflection_1.reflector.annotations(di_1.resolveForwardRef(type));
      if (lang_1.isPresent(metas)) {
        var annotation = metas.find(_isPipeMetadata);
        if (lang_1.isPresent(annotation)) {
          return annotation;
        }
      }
      throw new exceptions_1.BaseException("No Pipe decorator found on " + lang_1.stringify(type));
    };
    PipeResolver = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], PipeResolver);
    return PipeResolver;
  })();
  exports.PipeResolver = PipeResolver;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/event_config", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.EVENT_TARGET_SEPARATOR = ':';
  var EventConfig = (function() {
    function EventConfig(fieldName, eventName, isLongForm) {
      this.fieldName = fieldName;
      this.eventName = eventName;
      this.isLongForm = isLongForm;
    }
    EventConfig.parse = function(eventConfig) {
      var fieldName = eventConfig,
          eventName = eventConfig,
          isLongForm = false;
      var separatorIdx = eventConfig.indexOf(exports.EVENT_TARGET_SEPARATOR);
      if (separatorIdx > -1) {
        fieldName = eventConfig.substring(0, separatorIdx).trim();
        eventName = eventConfig.substring(separatorIdx + 1).trim();
        isLongForm = true;
      }
      return new EventConfig(fieldName, eventName, isLongForm);
    };
    EventConfig.prototype.getFullName = function() {
      return this.isLongForm ? "" + this.fieldName + exports.EVENT_TARGET_SEPARATOR + this.eventName : this.eventName;
    };
    return EventConfig;
  })();
  exports.EventConfig = EventConfig;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/query_list", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var QueryList = (function() {
    function QueryList() {
      this._results = [];
      this._emitter = new async_1.EventEmitter();
    }
    Object.defineProperty(QueryList.prototype, "changes", {
      get: function() {
        return this._emitter;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryList.prototype, "length", {
      get: function() {
        return this._results.length;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryList.prototype, "first", {
      get: function() {
        return collection_1.ListWrapper.first(this._results);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryList.prototype, "last", {
      get: function() {
        return collection_1.ListWrapper.last(this._results);
      },
      enumerable: true,
      configurable: true
    });
    QueryList.prototype.map = function(fn) {
      return this._results.map(fn);
    };
    QueryList.prototype.filter = function(fn) {
      return this._results.filter(fn);
    };
    QueryList.prototype.reduce = function(fn, init) {
      return this._results.reduce(fn, init);
    };
    QueryList.prototype.toArray = function() {
      return collection_1.ListWrapper.clone(this._results);
    };
    QueryList.prototype[lang_1.getSymbolIterator()] = function() {
      return this._results[lang_1.getSymbolIterator()]();
    };
    QueryList.prototype.toString = function() {
      return this._results.toString();
    };
    QueryList.prototype.reset = function(res) {
      this._results = res;
    };
    QueryList.prototype.notifyOnChanges = function() {
      this._emitter.next(this);
    };
    return QueryList;
  })();
  exports.QueryList = QueryList;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(LifecycleHooks) {
    LifecycleHooks[LifecycleHooks["OnInit"] = 0] = "OnInit";
    LifecycleHooks[LifecycleHooks["OnDestroy"] = 1] = "OnDestroy";
    LifecycleHooks[LifecycleHooks["DoCheck"] = 2] = "DoCheck";
    LifecycleHooks[LifecycleHooks["OnChanges"] = 3] = "OnChanges";
    LifecycleHooks[LifecycleHooks["AfterContentInit"] = 4] = "AfterContentInit";
    LifecycleHooks[LifecycleHooks["AfterContentChecked"] = 5] = "AfterContentChecked";
    LifecycleHooks[LifecycleHooks["AfterViewInit"] = 6] = "AfterViewInit";
    LifecycleHooks[LifecycleHooks["AfterViewChecked"] = 7] = "AfterViewChecked";
  })(exports.LifecycleHooks || (exports.LifecycleHooks = {}));
  var LifecycleHooks = exports.LifecycleHooks;
  exports.LIFECYCLE_HOOKS_VALUES = [LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges, LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit, LifecycleHooks.AfterViewChecked];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/directive_lifecycle_reflector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces');
  function hasLifecycleHook(lcInterface, token) {
    if (!(token instanceof lang_1.Type))
      return false;
    var proto = token.prototype;
    switch (lcInterface) {
      case interfaces_1.LifecycleHooks.AfterContentInit:
        return !!proto.afterContentInit;
      case interfaces_1.LifecycleHooks.AfterContentChecked:
        return !!proto.afterContentChecked;
      case interfaces_1.LifecycleHooks.AfterViewInit:
        return !!proto.afterViewInit;
      case interfaces_1.LifecycleHooks.AfterViewChecked:
        return !!proto.afterViewChecked;
      case interfaces_1.LifecycleHooks.OnChanges:
        return !!proto.onChanges;
      case interfaces_1.LifecycleHooks.DoCheck:
        return !!proto.doCheck;
      case interfaces_1.LifecycleHooks.OnDestroy:
        return !!proto.onDestroy;
      case interfaces_1.LifecycleHooks.OnInit:
        return !!proto.onInit;
      default:
        return false;
    }
  }
  exports.hasLifecycleHook = hasLifecycleHook;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_container_ref", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var ViewContainerRef = (function() {
    function ViewContainerRef() {}
    ViewContainerRef.prototype.clear = function() {
      for (var i = this.length - 1; i >= 0; i--) {
        this.remove(i);
      }
    };
    Object.defineProperty(ViewContainerRef.prototype, "length", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return ViewContainerRef;
  })();
  exports.ViewContainerRef = ViewContainerRef;
  var ViewContainerRef_ = (function(_super) {
    __extends(ViewContainerRef_, _super);
    function ViewContainerRef_(viewManager, element) {
      _super.call(this);
      this.viewManager = viewManager;
      this.element = element;
    }
    ViewContainerRef_.prototype._getViews = function() {
      var element = this.element;
      var vc = view_ref_1.internalView(element.parentView).viewContainers[element.boundElementIndex];
      return lang_1.isPresent(vc) ? vc.views : [];
    };
    ViewContainerRef_.prototype.get = function(index) {
      return this._getViews()[index].ref;
    };
    Object.defineProperty(ViewContainerRef_.prototype, "length", {
      get: function() {
        return this._getViews().length;
      },
      enumerable: true,
      configurable: true
    });
    ViewContainerRef_.prototype.createEmbeddedView = function(templateRef, index) {
      if (index === void 0) {
        index = -1;
      }
      if (index == -1)
        index = this.length;
      return this.viewManager.createEmbeddedViewInContainer(this.element, index, templateRef);
    };
    ViewContainerRef_.prototype.createHostView = function(protoViewRef, index, dynamicallyCreatedProviders) {
      if (protoViewRef === void 0) {
        protoViewRef = null;
      }
      if (index === void 0) {
        index = -1;
      }
      if (dynamicallyCreatedProviders === void 0) {
        dynamicallyCreatedProviders = null;
      }
      if (index == -1)
        index = this.length;
      return this.viewManager.createHostViewInContainer(this.element, index, protoViewRef, dynamicallyCreatedProviders);
    };
    ViewContainerRef_.prototype.insert = function(viewRef, index) {
      if (index === void 0) {
        index = -1;
      }
      if (index == -1)
        index = this.length;
      return this.viewManager.attachViewInContainer(this.element, index, viewRef);
    };
    ViewContainerRef_.prototype.indexOf = function(viewRef) {
      return collection_1.ListWrapper.indexOf(this._getViews(), view_ref_1.internalView(viewRef));
    };
    ViewContainerRef_.prototype.remove = function(index) {
      if (index === void 0) {
        index = -1;
      }
      if (index == -1)
        index = this.length - 1;
      this.viewManager.destroyViewInContainer(this.element, index);
    };
    ViewContainerRef_.prototype.detach = function(index) {
      if (index === void 0) {
        index = -1;
      }
      if (index == -1)
        index = this.length - 1;
      return this.viewManager.detachViewInContainer(this.element, index);
    };
    return ViewContainerRef_;
  })(ViewContainerRef);
  exports.ViewContainerRef_ = ViewContainerRef_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener", ["npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var AppViewListener = (function() {
    function AppViewListener() {}
    AppViewListener.prototype.onViewCreated = function(view) {};
    AppViewListener.prototype.onViewDestroyed = function(view) {};
    AppViewListener = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], AppViewListener);
    return AppViewListener;
  })();
  exports.AppViewListener = AppViewListener;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_pool", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  exports.APP_VIEW_POOL_CAPACITY = lang_1.CONST_EXPR(new di_1.OpaqueToken('AppViewPool.viewPoolCapacity'));
  var AppViewPool = (function() {
    function AppViewPool(poolCapacityPerProtoView) {
      this._pooledViewsPerProtoView = new collection_1.Map();
      this._poolCapacityPerProtoView = poolCapacityPerProtoView;
    }
    AppViewPool.prototype.getView = function(protoView) {
      var pooledViews = this._pooledViewsPerProtoView.get(protoView);
      if (lang_1.isPresent(pooledViews) && pooledViews.length > 0) {
        return pooledViews.pop();
      }
      return null;
    };
    AppViewPool.prototype.returnView = function(view) {
      var protoView = view.proto;
      var pooledViews = this._pooledViewsPerProtoView.get(protoView);
      if (lang_1.isBlank(pooledViews)) {
        pooledViews = [];
        this._pooledViewsPerProtoView.set(protoView, pooledViews);
      }
      var haveRemainingCapacity = pooledViews.length < this._poolCapacityPerProtoView;
      if (haveRemainingCapacity) {
        pooledViews.push(view);
      }
      return haveRemainingCapacity;
    };
    AppViewPool = __decorate([di_1.Injectable(), __param(0, di_1.Inject(exports.APP_VIEW_POOL_CAPACITY)), __metadata('design:paramtypes', [Object])], AppViewPool);
    return AppViewPool;
  })();
  exports.AppViewPool = AppViewPool;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref", ["npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var TemplateRef = (function() {
    function TemplateRef() {}
    return TemplateRef;
  })();
  exports.TemplateRef = TemplateRef;
  var TemplateRef_ = (function(_super) {
    __extends(TemplateRef_, _super);
    function TemplateRef_(elementRef) {
      _super.call(this);
      this.elementRef = elementRef;
    }
    TemplateRef_.prototype._getProtoView = function() {
      var elementRef = this.elementRef;
      var parentView = view_ref_1.internalView(elementRef.parentView);
      return parentView.proto.elementBinders[elementRef.boundElementIndex - parentView.elementOffset].nestedProtoView;
    };
    Object.defineProperty(TemplateRef_.prototype, "protoViewRef", {
      get: function() {
        return this._getProtoView().ref;
      },
      enumerable: true,
      configurable: true
    });
    TemplateRef_.prototype.hasLocal = function(name) {
      return this._getProtoView().templateVariableBindings.has(name);
    };
    return TemplateRef_;
  })(TemplateRef);
  exports.TemplateRef_ = TemplateRef_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref", ["npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var ElementRef = (function() {
    function ElementRef() {}
    Object.defineProperty(ElementRef.prototype, "nativeElement", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(ElementRef.prototype, "renderView", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return ElementRef;
  })();
  exports.ElementRef = ElementRef;
  var ElementRef_ = (function(_super) {
    __extends(ElementRef_, _super);
    function ElementRef_(parentView, boundElementIndex, _renderer) {
      _super.call(this);
      this.parentView = parentView;
      this.boundElementIndex = boundElementIndex;
      this._renderer = _renderer;
    }
    Object.defineProperty(ElementRef_.prototype, "renderView", {
      get: function() {
        return this.parentView.render;
      },
      set: function(value) {
        exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ElementRef_.prototype, "nativeElement", {
      get: function() {
        return this._renderer.getNativeElementSync(this);
      },
      enumerable: true,
      configurable: true
    });
    return ElementRef_;
  })(ElementRef);
  exports.ElementRef_ = ElementRef_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager_utils", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/linker/element_injector", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/linker/view", "npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref", "npm:angular2@2.0.0-alpha.46/src/core/pipes/pipes"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var eli = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/element_injector');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var viewModule = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view');
  var element_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref');
  var template_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref');
  var pipes_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/pipes/pipes');
  var AppViewManagerUtils = (function() {
    function AppViewManagerUtils() {}
    AppViewManagerUtils.prototype.getComponentInstance = function(parentView, boundElementIndex) {
      var eli = parentView.elementInjectors[boundElementIndex];
      return eli.getComponent();
    };
    AppViewManagerUtils.prototype.createView = function(mergedParentViewProto, renderViewWithFragments, viewManager, renderer) {
      var renderFragments = renderViewWithFragments.fragmentRefs;
      var renderView = renderViewWithFragments.viewRef;
      var elementCount = mergedParentViewProto.mergeInfo.elementCount;
      var viewCount = mergedParentViewProto.mergeInfo.viewCount;
      var elementRefs = collection_1.ListWrapper.createFixedSize(elementCount);
      var viewContainers = collection_1.ListWrapper.createFixedSize(elementCount);
      var preBuiltObjects = collection_1.ListWrapper.createFixedSize(elementCount);
      var elementInjectors = collection_1.ListWrapper.createFixedSize(elementCount);
      var views = collection_1.ListWrapper.createFixedSize(viewCount);
      var elementOffset = 0;
      var textOffset = 0;
      var fragmentIdx = 0;
      var containerElementIndicesByViewIndex = collection_1.ListWrapper.createFixedSize(viewCount);
      for (var viewOffset = 0; viewOffset < viewCount; viewOffset++) {
        var containerElementIndex = containerElementIndicesByViewIndex[viewOffset];
        var containerElementInjector = lang_1.isPresent(containerElementIndex) ? elementInjectors[containerElementIndex] : null;
        var parentView = lang_1.isPresent(containerElementInjector) ? preBuiltObjects[containerElementIndex].view : null;
        var protoView = lang_1.isPresent(containerElementIndex) ? parentView.proto.elementBinders[containerElementIndex - parentView.elementOffset].nestedProtoView : mergedParentViewProto;
        var renderFragment = null;
        if (viewOffset === 0 || protoView.type === viewModule.ViewType.EMBEDDED) {
          renderFragment = renderFragments[fragmentIdx++];
        }
        var currentView = new viewModule.AppView(renderer, protoView, viewOffset, elementOffset, textOffset, protoView.protoLocals, renderView, renderFragment, containerElementInjector);
        views[viewOffset] = currentView;
        if (lang_1.isPresent(containerElementIndex)) {
          preBuiltObjects[containerElementIndex].nestedView = currentView;
        }
        var rootElementInjectors = [];
        var nestedViewOffset = viewOffset + 1;
        for (var binderIdx = 0; binderIdx < protoView.elementBinders.length; binderIdx++) {
          var binder = protoView.elementBinders[binderIdx];
          var boundElementIndex = elementOffset + binderIdx;
          var elementInjector = null;
          if (lang_1.isPresent(binder.nestedProtoView) && binder.nestedProtoView.isMergable) {
            containerElementIndicesByViewIndex[nestedViewOffset] = boundElementIndex;
            nestedViewOffset += binder.nestedProtoView.mergeInfo.viewCount;
          }
          var protoElementInjector = binder.protoElementInjector;
          if (lang_1.isPresent(protoElementInjector)) {
            if (lang_1.isPresent(protoElementInjector.parent)) {
              var parentElementInjector = elementInjectors[elementOffset + protoElementInjector.parent.index];
              elementInjector = protoElementInjector.instantiate(parentElementInjector);
            } else {
              elementInjector = protoElementInjector.instantiate(null);
              rootElementInjectors.push(elementInjector);
            }
          }
          elementInjectors[boundElementIndex] = elementInjector;
          var el = new element_ref_1.ElementRef_(currentView.ref, boundElementIndex, renderer);
          elementRefs[el.boundElementIndex] = el;
          if (lang_1.isPresent(elementInjector)) {
            var templateRef = lang_1.isPresent(binder.nestedProtoView) && binder.nestedProtoView.type === viewModule.ViewType.EMBEDDED ? new template_ref_1.TemplateRef_(el) : null;
            preBuiltObjects[boundElementIndex] = new eli.PreBuiltObjects(viewManager, currentView, el, templateRef);
          }
        }
        currentView.init(protoView.changeDetectorFactory(currentView), elementInjectors, rootElementInjectors, preBuiltObjects, views, elementRefs, viewContainers);
        if (lang_1.isPresent(parentView) && protoView.type === viewModule.ViewType.COMPONENT) {
          parentView.changeDetector.addViewChild(currentView.changeDetector);
        }
        elementOffset += protoView.elementBinders.length;
        textOffset += protoView.textBindingCount;
      }
      return views[0];
    };
    AppViewManagerUtils.prototype.hydrateRootHostView = function(hostView, injector) {
      this._hydrateView(hostView, injector, null, new Object(), null);
    };
    AppViewManagerUtils.prototype.attachViewInContainer = function(parentView, boundElementIndex, contextView, contextBoundElementIndex, index, view) {
      if (lang_1.isBlank(contextView)) {
        contextView = parentView;
        contextBoundElementIndex = boundElementIndex;
      }
      parentView.changeDetector.addContentChild(view.changeDetector);
      var viewContainer = parentView.viewContainers[boundElementIndex];
      if (lang_1.isBlank(viewContainer)) {
        viewContainer = new viewModule.AppViewContainer();
        parentView.viewContainers[boundElementIndex] = viewContainer;
      }
      collection_1.ListWrapper.insert(viewContainer.views, index, view);
      var elementInjector = contextView.elementInjectors[contextBoundElementIndex];
      for (var i = view.rootElementInjectors.length - 1; i >= 0; i--) {
        if (lang_1.isPresent(elementInjector.parent)) {
          view.rootElementInjectors[i].link(elementInjector.parent);
        }
      }
      elementInjector.traverseAndSetQueriesAsDirty();
    };
    AppViewManagerUtils.prototype.detachViewInContainer = function(parentView, boundElementIndex, index) {
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[index];
      parentView.elementInjectors[boundElementIndex].traverseAndSetQueriesAsDirty();
      view.changeDetector.remove();
      collection_1.ListWrapper.removeAt(viewContainer.views, index);
      for (var i = 0; i < view.rootElementInjectors.length; ++i) {
        var inj = view.rootElementInjectors[i];
        inj.unlink();
      }
    };
    AppViewManagerUtils.prototype.hydrateViewInContainer = function(parentView, boundElementIndex, contextView, contextBoundElementIndex, index, imperativelyCreatedProviders) {
      if (lang_1.isBlank(contextView)) {
        contextView = parentView;
        contextBoundElementIndex = boundElementIndex;
      }
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[index];
      var elementInjector = contextView.elementInjectors[contextBoundElementIndex];
      var injector = lang_1.isPresent(imperativelyCreatedProviders) ? di_1.Injector.fromResolvedProviders(imperativelyCreatedProviders) : null;
      this._hydrateView(view, injector, elementInjector.getHost(), contextView.context, contextView.locals);
    };
    AppViewManagerUtils.prototype._hydrateView = function(initView, imperativelyCreatedInjector, hostElementInjector, context, parentLocals) {
      var viewIdx = initView.viewOffset;
      var endViewOffset = viewIdx + initView.proto.mergeInfo.viewCount - 1;
      while (viewIdx <= endViewOffset) {
        var currView = initView.views[viewIdx];
        var currProtoView = currView.proto;
        if (currView !== initView && currView.proto.type === viewModule.ViewType.EMBEDDED) {
          viewIdx += currView.proto.mergeInfo.viewCount;
        } else {
          if (currView !== initView) {
            imperativelyCreatedInjector = null;
            parentLocals = null;
            hostElementInjector = currView.containerElementInjector;
            context = hostElementInjector.getComponent();
          }
          currView.context = context;
          currView.locals.parent = parentLocals;
          var binders = currProtoView.elementBinders;
          for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
            var boundElementIndex = binderIdx + currView.elementOffset;
            var elementInjector = initView.elementInjectors[boundElementIndex];
            if (lang_1.isPresent(elementInjector)) {
              elementInjector.hydrate(imperativelyCreatedInjector, hostElementInjector, currView.preBuiltObjects[boundElementIndex]);
              this._populateViewLocals(currView, elementInjector, boundElementIndex);
              this._setUpEventEmitters(currView, elementInjector, boundElementIndex);
            }
          }
          var pipes = lang_1.isPresent(hostElementInjector) ? new pipes_1.Pipes(currView.proto.pipes, hostElementInjector.getInjector()) : null;
          currView.changeDetector.hydrate(currView.context, currView.locals, currView, pipes);
          viewIdx++;
        }
      }
    };
    AppViewManagerUtils.prototype._populateViewLocals = function(view, elementInjector, boundElementIdx) {
      if (lang_1.isPresent(elementInjector.getDirectiveVariableBindings())) {
        elementInjector.getDirectiveVariableBindings().forEach(function(directiveIndex, name) {
          if (lang_1.isBlank(directiveIndex)) {
            view.locals.set(name, view.elementRefs[boundElementIdx].nativeElement);
          } else {
            view.locals.set(name, elementInjector.getDirectiveAtIndex(directiveIndex));
          }
        });
      }
    };
    AppViewManagerUtils.prototype._setUpEventEmitters = function(view, elementInjector, boundElementIndex) {
      var emitters = elementInjector.getEventEmitterAccessors();
      for (var directiveIndex = 0; directiveIndex < emitters.length; ++directiveIndex) {
        var directiveEmitters = emitters[directiveIndex];
        var directive = elementInjector.getDirectiveAtIndex(directiveIndex);
        for (var eventIndex = 0; eventIndex < directiveEmitters.length; ++eventIndex) {
          var eventEmitterAccessor = directiveEmitters[eventIndex];
          eventEmitterAccessor.subscribe(view, boundElementIndex, directive);
        }
      }
    };
    AppViewManagerUtils.prototype.dehydrateView = function(initView) {
      var endViewOffset = initView.viewOffset + initView.proto.mergeInfo.viewCount - 1;
      for (var viewIdx = initView.viewOffset; viewIdx <= endViewOffset; viewIdx++) {
        var currView = initView.views[viewIdx];
        if (currView.hydrated()) {
          if (lang_1.isPresent(currView.locals)) {
            currView.locals.clearValues();
          }
          currView.context = null;
          currView.changeDetector.dehydrate();
          var binders = currView.proto.elementBinders;
          for (var binderIdx = 0; binderIdx < binders.length; binderIdx++) {
            var eli = initView.elementInjectors[currView.elementOffset + binderIdx];
            if (lang_1.isPresent(eli)) {
              eli.dehydrate();
            }
          }
        }
      }
    };
    AppViewManagerUtils = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], AppViewManagerUtils);
    return AppViewManagerUtils;
  })();
  exports.AppViewManagerUtils = AppViewManagerUtils;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/linker/view", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref", "npm:angular2@2.0.0-alpha.46/src/core/render/api", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager_utils", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_pool", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener", "npm:angular2@2.0.0-alpha.46/src/core/profile/profile", "npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var viewModule = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view');
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var api_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/api');
  var view_manager_utils_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager_utils');
  var view_pool_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_pool');
  var view_listener_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_listener');
  var profile_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/profile');
  var proto_view_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory');
  var AppViewManager = (function() {
    function AppViewManager() {}
    AppViewManager.prototype.getHostElement = function(hostViewRef) {
      var hostView = view_ref_1.internalView(hostViewRef);
      if (hostView.proto.type !== viewModule.ViewType.HOST) {
        throw new exceptions_1.BaseException('This operation is only allowed on host views');
      }
      return hostView.elementRefs[hostView.elementOffset];
    };
    return AppViewManager;
  })();
  exports.AppViewManager = AppViewManager;
  var AppViewManager_ = (function(_super) {
    __extends(AppViewManager_, _super);
    function AppViewManager_(_viewPool, _viewListener, _utils, _renderer, _protoViewFactory) {
      _super.call(this);
      this._viewPool = _viewPool;
      this._viewListener = _viewListener;
      this._utils = _utils;
      this._renderer = _renderer;
      this._createRootHostViewScope = profile_1.wtfCreateScope('AppViewManager#createRootHostView()');
      this._destroyRootHostViewScope = profile_1.wtfCreateScope('AppViewManager#destroyRootHostView()');
      this._createEmbeddedViewInContainerScope = profile_1.wtfCreateScope('AppViewManager#createEmbeddedViewInContainer()');
      this._createHostViewInContainerScope = profile_1.wtfCreateScope('AppViewManager#createHostViewInContainer()');
      this._destroyViewInContainerScope = profile_1.wtfCreateScope('AppViewMananger#destroyViewInContainer()');
      this._attachViewInContainerScope = profile_1.wtfCreateScope('AppViewMananger#attachViewInContainer()');
      this._detachViewInContainerScope = profile_1.wtfCreateScope('AppViewMananger#detachViewInContainer()');
      this._protoViewFactory = _protoViewFactory;
    }
    AppViewManager_.prototype.getViewContainer = function(location) {
      var hostView = view_ref_1.internalView(location.parentView);
      return hostView.elementInjectors[location.boundElementIndex].getViewContainerRef();
    };
    AppViewManager_.prototype.getNamedElementInComponentView = function(hostLocation, variableName) {
      var hostView = view_ref_1.internalView(hostLocation.parentView);
      var boundElementIndex = hostLocation.boundElementIndex;
      var componentView = hostView.getNestedView(boundElementIndex);
      if (lang_1.isBlank(componentView)) {
        throw new exceptions_1.BaseException("There is no component directive at element " + boundElementIndex);
      }
      var binderIdx = componentView.proto.variableLocations.get(variableName);
      if (lang_1.isBlank(binderIdx)) {
        throw new exceptions_1.BaseException("Could not find variable " + variableName);
      }
      return componentView.elementRefs[componentView.elementOffset + binderIdx];
    };
    AppViewManager_.prototype.getComponent = function(hostLocation) {
      var hostView = view_ref_1.internalView(hostLocation.parentView);
      var boundElementIndex = hostLocation.boundElementIndex;
      return this._utils.getComponentInstance(hostView, boundElementIndex);
    };
    AppViewManager_.prototype.createRootHostView = function(hostProtoViewRef, overrideSelector, injector) {
      var s = this._createRootHostViewScope();
      var hostProtoView = view_ref_1.internalProtoView(hostProtoViewRef);
      this._protoViewFactory.initializeProtoViewIfNeeded(hostProtoView);
      var hostElementSelector = overrideSelector;
      if (lang_1.isBlank(hostElementSelector)) {
        hostElementSelector = hostProtoView.elementBinders[0].componentDirective.metadata.selector;
      }
      var renderViewWithFragments = this._renderer.createRootHostView(hostProtoView.render, hostProtoView.mergeInfo.embeddedViewCount + 1, hostElementSelector);
      var hostView = this._createMainView(hostProtoView, renderViewWithFragments);
      this._renderer.hydrateView(hostView.render);
      this._utils.hydrateRootHostView(hostView, injector);
      return profile_1.wtfLeave(s, hostView.ref);
    };
    AppViewManager_.prototype.destroyRootHostView = function(hostViewRef) {
      var s = this._destroyRootHostViewScope();
      var hostView = view_ref_1.internalView(hostViewRef);
      this._renderer.detachFragment(hostView.renderFragment);
      this._renderer.dehydrateView(hostView.render);
      this._viewDehydrateRecurse(hostView);
      this._viewListener.onViewDestroyed(hostView);
      this._renderer.destroyView(hostView.render);
      profile_1.wtfLeave(s);
    };
    AppViewManager_.prototype.createEmbeddedViewInContainer = function(viewContainerLocation, index, templateRef) {
      var s = this._createEmbeddedViewInContainerScope();
      var protoView = view_ref_1.internalProtoView(templateRef.protoViewRef);
      if (protoView.type !== viewModule.ViewType.EMBEDDED) {
        throw new exceptions_1.BaseException('This method can only be called with embedded ProtoViews!');
      }
      this._protoViewFactory.initializeProtoViewIfNeeded(protoView);
      return profile_1.wtfLeave(s, this._createViewInContainer(viewContainerLocation, index, protoView, templateRef.elementRef, null));
    };
    AppViewManager_.prototype.createHostViewInContainer = function(viewContainerLocation, index, protoViewRef, imperativelyCreatedInjector) {
      var s = this._createHostViewInContainerScope();
      var protoView = view_ref_1.internalProtoView(protoViewRef);
      if (protoView.type !== viewModule.ViewType.HOST) {
        throw new exceptions_1.BaseException('This method can only be called with host ProtoViews!');
      }
      this._protoViewFactory.initializeProtoViewIfNeeded(protoView);
      return profile_1.wtfLeave(s, this._createViewInContainer(viewContainerLocation, index, protoView, viewContainerLocation, imperativelyCreatedInjector));
    };
    AppViewManager_.prototype._createViewInContainer = function(viewContainerLocation, index, protoView, context, imperativelyCreatedInjector) {
      var parentView = view_ref_1.internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      var contextView = view_ref_1.internalView(context.parentView);
      var contextBoundElementIndex = context.boundElementIndex;
      var embeddedFragmentView = contextView.getNestedView(contextBoundElementIndex);
      var view;
      if (protoView.type === viewModule.ViewType.EMBEDDED && lang_1.isPresent(embeddedFragmentView) && !embeddedFragmentView.hydrated()) {
        view = embeddedFragmentView;
        this._attachRenderView(parentView, boundElementIndex, index, view);
      } else {
        view = this._createPooledView(protoView);
        this._attachRenderView(parentView, boundElementIndex, index, view);
        this._renderer.hydrateView(view.render);
      }
      this._utils.attachViewInContainer(parentView, boundElementIndex, contextView, contextBoundElementIndex, index, view);
      this._utils.hydrateViewInContainer(parentView, boundElementIndex, contextView, contextBoundElementIndex, index, imperativelyCreatedInjector);
      return view.ref;
    };
    AppViewManager_.prototype._attachRenderView = function(parentView, boundElementIndex, index, view) {
      var elementRef = parentView.elementRefs[boundElementIndex];
      if (index === 0) {
        this._renderer.attachFragmentAfterElement(elementRef, view.renderFragment);
      } else {
        var prevView = parentView.viewContainers[boundElementIndex].views[index - 1];
        this._renderer.attachFragmentAfterFragment(prevView.renderFragment, view.renderFragment);
      }
    };
    AppViewManager_.prototype.destroyViewInContainer = function(viewContainerLocation, index) {
      var s = this._destroyViewInContainerScope();
      var parentView = view_ref_1.internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      this._destroyViewInContainer(parentView, boundElementIndex, index);
      profile_1.wtfLeave(s);
    };
    AppViewManager_.prototype.attachViewInContainer = function(viewContainerLocation, index, viewRef) {
      var s = this._attachViewInContainerScope();
      var view = view_ref_1.internalView(viewRef);
      var parentView = view_ref_1.internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      this._utils.attachViewInContainer(parentView, boundElementIndex, null, null, index, view);
      this._attachRenderView(parentView, boundElementIndex, index, view);
      return profile_1.wtfLeave(s, viewRef);
    };
    AppViewManager_.prototype.detachViewInContainer = function(viewContainerLocation, index) {
      var s = this._detachViewInContainerScope();
      var parentView = view_ref_1.internalView(viewContainerLocation.parentView);
      var boundElementIndex = viewContainerLocation.boundElementIndex;
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[index];
      this._utils.detachViewInContainer(parentView, boundElementIndex, index);
      this._renderer.detachFragment(view.renderFragment);
      return profile_1.wtfLeave(s, view.ref);
    };
    AppViewManager_.prototype._createMainView = function(protoView, renderViewWithFragments) {
      var mergedParentView = this._utils.createView(protoView, renderViewWithFragments, this, this._renderer);
      this._renderer.setEventDispatcher(mergedParentView.render, mergedParentView);
      this._viewListener.onViewCreated(mergedParentView);
      return mergedParentView;
    };
    AppViewManager_.prototype._createPooledView = function(protoView) {
      var view = this._viewPool.getView(protoView);
      if (lang_1.isBlank(view)) {
        view = this._createMainView(protoView, this._renderer.createView(protoView.render, protoView.mergeInfo.embeddedViewCount + 1));
      }
      return view;
    };
    AppViewManager_.prototype._destroyPooledView = function(view) {
      var wasReturned = this._viewPool.returnView(view);
      if (!wasReturned) {
        this._viewListener.onViewDestroyed(view);
        this._renderer.destroyView(view.render);
      }
    };
    AppViewManager_.prototype._destroyViewInContainer = function(parentView, boundElementIndex, index) {
      var viewContainer = parentView.viewContainers[boundElementIndex];
      var view = viewContainer.views[index];
      this._viewDehydrateRecurse(view);
      this._utils.detachViewInContainer(parentView, boundElementIndex, index);
      if (view.viewOffset > 0) {
        this._renderer.detachFragment(view.renderFragment);
      } else {
        this._renderer.dehydrateView(view.render);
        this._renderer.detachFragment(view.renderFragment);
        this._destroyPooledView(view);
      }
    };
    AppViewManager_.prototype._viewDehydrateRecurse = function(view) {
      if (view.hydrated()) {
        this._utils.dehydrateView(view);
      }
      var viewContainers = view.viewContainers;
      var startViewOffset = view.viewOffset;
      var endViewOffset = view.viewOffset + view.proto.mergeInfo.viewCount - 1;
      var elementOffset = view.elementOffset;
      for (var viewIdx = startViewOffset; viewIdx <= endViewOffset; viewIdx++) {
        var currView = view.views[viewIdx];
        for (var binderIdx = 0; binderIdx < currView.proto.elementBinders.length; binderIdx++, elementOffset++) {
          var vc = viewContainers[elementOffset];
          if (lang_1.isPresent(vc)) {
            for (var j = vc.views.length - 1; j >= 0; j--) {
              this._destroyViewInContainer(currView, elementOffset, j);
            }
          }
        }
      }
    };
    AppViewManager_ = __decorate([di_1.Injectable(), __param(4, di_1.Inject(di_1.forwardRef(function() {
      return proto_view_factory_1.ProtoViewFactory;
    }))), __metadata('design:paramtypes', [view_pool_1.AppViewPool, view_listener_1.AppViewListener, view_manager_utils_1.AppViewManagerUtils, api_1.Renderer, Object])], AppViewManager_);
    return AppViewManager_;
  })(AppViewManager);
  exports.AppViewManager_ = AppViewManager_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/element_injector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/di/injector", "npm:angular2@2.0.0-alpha.46/src/core/di/provider", "npm:angular2@2.0.0-alpha.46/src/core/metadata/di", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_container_ref", "npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref", "npm:angular2@2.0.0-alpha.46/src/core/metadata/directives", "npm:angular2@2.0.0-alpha.46/src/core/linker/directive_lifecycle_reflector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/linker/query_list", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/linker/event_config", "npm:angular2@2.0.0-alpha.46/src/core/pipes/pipe_provider", "npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var injector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/injector');
  var provider_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/provider');
  var di_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/di');
  var avmModule = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager');
  var view_container_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_container_ref');
  var element_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref');
  var template_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref');
  var directives_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/directives');
  var directive_lifecycle_reflector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/directive_lifecycle_reflector');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var query_list_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/query_list');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var event_config_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/event_config');
  var pipe_provider_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/pipes/pipe_provider');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/interfaces');
  var view_container_ref_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_container_ref');
  var _staticKeys;
  var StaticKeys = (function() {
    function StaticKeys() {
      this.viewManagerId = di_1.Key.get(avmModule.AppViewManager).id;
      this.templateRefId = di_1.Key.get(template_ref_1.TemplateRef).id;
      this.viewContainerId = di_1.Key.get(view_container_ref_1.ViewContainerRef).id;
      this.changeDetectorRefId = di_1.Key.get(change_detection_1.ChangeDetectorRef).id;
      this.elementRefId = di_1.Key.get(element_ref_1.ElementRef).id;
    }
    StaticKeys.instance = function() {
      if (lang_1.isBlank(_staticKeys))
        _staticKeys = new StaticKeys();
      return _staticKeys;
    };
    return StaticKeys;
  })();
  exports.StaticKeys = StaticKeys;
  var TreeNode = (function() {
    function TreeNode(parent) {
      if (lang_1.isPresent(parent)) {
        parent.addChild(this);
      } else {
        this._parent = null;
      }
    }
    TreeNode.prototype.addChild = function(child) {
      child._parent = this;
    };
    TreeNode.prototype.remove = function() {
      this._parent = null;
    };
    Object.defineProperty(TreeNode.prototype, "parent", {
      get: function() {
        return this._parent;
      },
      enumerable: true,
      configurable: true
    });
    return TreeNode;
  })();
  exports.TreeNode = TreeNode;
  var DirectiveDependency = (function(_super) {
    __extends(DirectiveDependency, _super);
    function DirectiveDependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties, attributeName, queryDecorator) {
      _super.call(this, key, optional, lowerBoundVisibility, upperBoundVisibility, properties);
      this.attributeName = attributeName;
      this.queryDecorator = queryDecorator;
      this._verify();
    }
    DirectiveDependency.prototype._verify = function() {
      var count = 0;
      if (lang_1.isPresent(this.queryDecorator))
        count++;
      if (lang_1.isPresent(this.attributeName))
        count++;
      if (count > 1)
        throw new exceptions_1.BaseException('A directive injectable can contain only one of the following @Attribute or @Query.');
    };
    DirectiveDependency.createFrom = function(d) {
      return new DirectiveDependency(d.key, d.optional, d.lowerBoundVisibility, d.upperBoundVisibility, d.properties, DirectiveDependency._attributeName(d.properties), DirectiveDependency._query(d.properties));
    };
    DirectiveDependency._attributeName = function(properties) {
      var p = properties.find(function(p) {
        return p instanceof di_2.AttributeMetadata;
      });
      return lang_1.isPresent(p) ? p.attributeName : null;
    };
    DirectiveDependency._query = function(properties) {
      return properties.find(function(p) {
        return p instanceof di_2.QueryMetadata;
      });
    };
    return DirectiveDependency;
  })(di_1.Dependency);
  exports.DirectiveDependency = DirectiveDependency;
  var DirectiveProvider = (function(_super) {
    __extends(DirectiveProvider, _super);
    function DirectiveProvider(key, factory, deps, metadata, providers, viewProviders) {
      _super.call(this, key, [new provider_1.ResolvedFactory(factory, deps)], false);
      this.metadata = metadata;
      this.providers = providers;
      this.viewProviders = viewProviders;
      this.callOnDestroy = directive_lifecycle_reflector_1.hasLifecycleHook(interfaces_1.LifecycleHooks.OnDestroy, key.token);
    }
    Object.defineProperty(DirectiveProvider.prototype, "displayName", {
      get: function() {
        return this.key.displayName;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveProvider.prototype, "queries", {
      get: function() {
        if (lang_1.isBlank(this.metadata.queries))
          return [];
        var res = [];
        collection_1.StringMapWrapper.forEach(this.metadata.queries, function(meta, fieldName) {
          var setter = reflection_1.reflector.setter(fieldName);
          res.push(new QueryMetadataWithSetter(setter, meta));
        });
        return res;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveProvider.prototype, "eventEmitters", {
      get: function() {
        return lang_1.isPresent(this.metadata) && lang_1.isPresent(this.metadata.outputs) ? this.metadata.outputs : [];
      },
      enumerable: true,
      configurable: true
    });
    DirectiveProvider.createFromProvider = function(provider, meta) {
      if (lang_1.isBlank(meta)) {
        meta = new directives_1.DirectiveMetadata();
      }
      var rb = provider_1.resolveProvider(provider);
      var rf = rb.resolvedFactories[0];
      var deps = rf.dependencies.map(DirectiveDependency.createFrom);
      var providers = lang_1.isPresent(meta.providers) ? meta.providers : [];
      var viewBindigs = meta instanceof directives_1.ComponentMetadata && lang_1.isPresent(meta.viewProviders) ? meta.viewProviders : [];
      return new DirectiveProvider(rb.key, rf.factory, deps, meta, providers, viewBindigs);
    };
    DirectiveProvider.createFromType = function(type, annotation) {
      var provider = new di_1.Provider(type, {useClass: type});
      return DirectiveProvider.createFromProvider(provider, annotation);
    };
    return DirectiveProvider;
  })(provider_1.ResolvedProvider_);
  exports.DirectiveProvider = DirectiveProvider;
  var PreBuiltObjects = (function() {
    function PreBuiltObjects(viewManager, view, elementRef, templateRef) {
      this.viewManager = viewManager;
      this.view = view;
      this.elementRef = elementRef;
      this.templateRef = templateRef;
      this.nestedView = null;
    }
    return PreBuiltObjects;
  })();
  exports.PreBuiltObjects = PreBuiltObjects;
  var QueryMetadataWithSetter = (function() {
    function QueryMetadataWithSetter(setter, metadata) {
      this.setter = setter;
      this.metadata = metadata;
    }
    return QueryMetadataWithSetter;
  })();
  exports.QueryMetadataWithSetter = QueryMetadataWithSetter;
  var EventEmitterAccessor = (function() {
    function EventEmitterAccessor(eventName, getter) {
      this.eventName = eventName;
      this.getter = getter;
    }
    EventEmitterAccessor.prototype.subscribe = function(view, boundElementIndex, directive) {
      var _this = this;
      var eventEmitter = this.getter(directive);
      return async_1.ObservableWrapper.subscribe(eventEmitter, function(eventObj) {
        return view.triggerEventHandlers(_this.eventName, eventObj, boundElementIndex);
      });
    };
    return EventEmitterAccessor;
  })();
  exports.EventEmitterAccessor = EventEmitterAccessor;
  function _createEventEmitterAccessors(bwv) {
    var provider = bwv.provider;
    if (!(provider instanceof DirectiveProvider))
      return [];
    var db = provider;
    return db.eventEmitters.map(function(eventConfig) {
      var parsedEvent = event_config_1.EventConfig.parse(eventConfig);
      return new EventEmitterAccessor(parsedEvent.eventName, reflection_1.reflector.getter(parsedEvent.fieldName));
    });
  }
  function _createProtoQueryRefs(providers) {
    var res = [];
    collection_1.ListWrapper.forEachWithIndex(providers, function(b, i) {
      if (b.provider instanceof DirectiveProvider) {
        var directiveProvider = b.provider;
        var queries = directiveProvider.queries;
        queries.forEach(function(q) {
          return res.push(new ProtoQueryRef(i, q.setter, q.metadata));
        });
        var deps = directiveProvider.resolvedFactory.dependencies;
        deps.forEach(function(d) {
          if (lang_1.isPresent(d.queryDecorator))
            res.push(new ProtoQueryRef(i, null, d.queryDecorator));
        });
      }
    });
    return res;
  }
  var ProtoElementInjector = (function() {
    function ProtoElementInjector(parent, index, bwv, distanceToParent, _firstProviderIsComponent, directiveVariableBindings) {
      this.parent = parent;
      this.index = index;
      this.distanceToParent = distanceToParent;
      this.directiveVariableBindings = directiveVariableBindings;
      this._firstProviderIsComponent = _firstProviderIsComponent;
      var length = bwv.length;
      this.protoInjector = new injector_1.ProtoInjector(bwv);
      this.eventEmitterAccessors = collection_1.ListWrapper.createFixedSize(length);
      for (var i = 0; i < length; ++i) {
        this.eventEmitterAccessors[i] = _createEventEmitterAccessors(bwv[i]);
      }
      this.protoQueryRefs = _createProtoQueryRefs(bwv);
    }
    ProtoElementInjector.create = function(parent, index, providers, firstProviderIsComponent, distanceToParent, directiveVariableBindings) {
      var bd = [];
      ProtoElementInjector._createDirectiveProviderWithVisibility(providers, bd, firstProviderIsComponent);
      if (firstProviderIsComponent) {
        ProtoElementInjector._createViewProvidersWithVisibility(providers, bd);
      }
      ProtoElementInjector._createProvidersWithVisibility(providers, bd);
      return new ProtoElementInjector(parent, index, bd, distanceToParent, firstProviderIsComponent, directiveVariableBindings);
    };
    ProtoElementInjector._createDirectiveProviderWithVisibility = function(dirProviders, bd, firstProviderIsComponent) {
      dirProviders.forEach(function(dirProvider) {
        bd.push(ProtoElementInjector._createProviderWithVisibility(firstProviderIsComponent, dirProvider, dirProviders, dirProvider));
      });
    };
    ProtoElementInjector._createProvidersWithVisibility = function(dirProviders, bd) {
      var providersFromAllDirectives = [];
      dirProviders.forEach(function(dirProvider) {
        providersFromAllDirectives = collection_1.ListWrapper.concat(providersFromAllDirectives, dirProvider.providers);
      });
      var resolved = di_1.Injector.resolve(providersFromAllDirectives);
      resolved.forEach(function(b) {
        return bd.push(new injector_1.ProviderWithVisibility(b, injector_1.Visibility.Public));
      });
    };
    ProtoElementInjector._createProviderWithVisibility = function(firstProviderIsComponent, dirProvider, dirProviders, provider) {
      var isComponent = firstProviderIsComponent && dirProviders[0] === dirProvider;
      return new injector_1.ProviderWithVisibility(provider, isComponent ? injector_1.Visibility.PublicAndPrivate : injector_1.Visibility.Public);
    };
    ProtoElementInjector._createViewProvidersWithVisibility = function(dirProviders, bd) {
      var resolvedViewProviders = di_1.Injector.resolve(dirProviders[0].viewProviders);
      resolvedViewProviders.forEach(function(b) {
        return bd.push(new injector_1.ProviderWithVisibility(b, injector_1.Visibility.Private));
      });
    };
    ProtoElementInjector.prototype.instantiate = function(parent) {
      return new ElementInjector(this, parent);
    };
    ProtoElementInjector.prototype.directParent = function() {
      return this.distanceToParent < 2 ? this.parent : null;
    };
    Object.defineProperty(ProtoElementInjector.prototype, "hasBindings", {
      get: function() {
        return this.eventEmitterAccessors.length > 0;
      },
      enumerable: true,
      configurable: true
    });
    ProtoElementInjector.prototype.getProviderAtIndex = function(index) {
      return this.protoInjector.getProviderAtIndex(index);
    };
    return ProtoElementInjector;
  })();
  exports.ProtoElementInjector = ProtoElementInjector;
  var _Context = (function() {
    function _Context(element, componentElement, injector) {
      this.element = element;
      this.componentElement = componentElement;
      this.injector = injector;
    }
    return _Context;
  })();
  var ElementInjector = (function(_super) {
    __extends(ElementInjector, _super);
    function ElementInjector(_proto, parent) {
      var _this = this;
      _super.call(this, parent);
      this._preBuiltObjects = null;
      this._proto = _proto;
      this._injector = new di_1.Injector(this._proto.protoInjector, null, this, function() {
        return _this._debugContext();
      });
      var injectorStrategy = this._injector.internalStrategy;
      this._strategy = injectorStrategy instanceof injector_1.InjectorInlineStrategy ? new ElementInjectorInlineStrategy(injectorStrategy, this) : new ElementInjectorDynamicStrategy(injectorStrategy, this);
      this.hydrated = false;
      this._queryStrategy = this._buildQueryStrategy();
    }
    ElementInjector.prototype.dehydrate = function() {
      this.hydrated = false;
      this._host = null;
      this._preBuiltObjects = null;
      this._strategy.callOnDestroy();
      this._strategy.dehydrate();
      this._queryStrategy.dehydrate();
    };
    ElementInjector.prototype.hydrate = function(imperativelyCreatedInjector, host, preBuiltObjects) {
      this._host = host;
      this._preBuiltObjects = preBuiltObjects;
      this._reattachInjectors(imperativelyCreatedInjector);
      this._queryStrategy.hydrate();
      this._strategy.hydrate();
      this.hydrated = true;
    };
    ElementInjector.prototype._debugContext = function() {
      var p = this._preBuiltObjects;
      var index = p.elementRef.boundElementIndex - p.view.elementOffset;
      var c = this._preBuiltObjects.view.getDebugContext(index, null);
      return lang_1.isPresent(c) ? new _Context(c.element, c.componentElement, c.injector) : null;
    };
    ElementInjector.prototype._reattachInjectors = function(imperativelyCreatedInjector) {
      if (lang_1.isPresent(this._parent)) {
        if (lang_1.isPresent(imperativelyCreatedInjector)) {
          this._reattachInjector(this._injector, imperativelyCreatedInjector, false);
          this._reattachInjector(imperativelyCreatedInjector, this._parent._injector, false);
        } else {
          this._reattachInjector(this._injector, this._parent._injector, false);
        }
      } else if (lang_1.isPresent(this._host)) {
        if (lang_1.isPresent(imperativelyCreatedInjector)) {
          this._reattachInjector(this._injector, imperativelyCreatedInjector, false);
          this._reattachInjector(imperativelyCreatedInjector, this._host._injector, true);
        } else {
          this._reattachInjector(this._injector, this._host._injector, true);
        }
      } else {
        if (lang_1.isPresent(imperativelyCreatedInjector)) {
          this._reattachInjector(this._injector, imperativelyCreatedInjector, true);
        }
      }
    };
    ElementInjector.prototype._reattachInjector = function(injector, parentInjector, isBoundary) {
      injector.internalStrategy.attach(parentInjector, isBoundary);
    };
    ElementInjector.prototype.hasVariableBinding = function(name) {
      var vb = this._proto.directiveVariableBindings;
      return lang_1.isPresent(vb) && vb.has(name);
    };
    ElementInjector.prototype.getVariableBinding = function(name) {
      var index = this._proto.directiveVariableBindings.get(name);
      return lang_1.isPresent(index) ? this.getDirectiveAtIndex(index) : this.getElementRef();
    };
    ElementInjector.prototype.get = function(token) {
      return this._injector.get(token);
    };
    ElementInjector.prototype.hasDirective = function(type) {
      return lang_1.isPresent(this._injector.getOptional(type));
    };
    ElementInjector.prototype.getEventEmitterAccessors = function() {
      return this._proto.eventEmitterAccessors;
    };
    ElementInjector.prototype.getDirectiveVariableBindings = function() {
      return this._proto.directiveVariableBindings;
    };
    ElementInjector.prototype.getComponent = function() {
      return this._strategy.getComponent();
    };
    ElementInjector.prototype.getInjector = function() {
      return this._injector;
    };
    ElementInjector.prototype.getElementRef = function() {
      return this._preBuiltObjects.elementRef;
    };
    ElementInjector.prototype.getViewContainerRef = function() {
      return new view_container_ref_2.ViewContainerRef_(this._preBuiltObjects.viewManager, this.getElementRef());
    };
    ElementInjector.prototype.getNestedView = function() {
      return this._preBuiltObjects.nestedView;
    };
    ElementInjector.prototype.getView = function() {
      return this._preBuiltObjects.view;
    };
    ElementInjector.prototype.directParent = function() {
      return this._proto.distanceToParent < 2 ? this.parent : null;
    };
    ElementInjector.prototype.isComponentKey = function(key) {
      return this._strategy.isComponentKey(key);
    };
    ElementInjector.prototype.getDependency = function(injector, provider, dep) {
      var key = dep.key;
      if (provider instanceof DirectiveProvider) {
        var dirDep = dep;
        var dirProvider = provider;
        var staticKeys = StaticKeys.instance();
        if (key.id === staticKeys.viewManagerId)
          return this._preBuiltObjects.viewManager;
        if (lang_1.isPresent(dirDep.attributeName))
          return this._buildAttribute(dirDep);
        if (lang_1.isPresent(dirDep.queryDecorator))
          return this._queryStrategy.findQuery(dirDep.queryDecorator).list;
        if (dirDep.key.id === StaticKeys.instance().changeDetectorRefId) {
          if (dirProvider.metadata instanceof directives_1.ComponentMetadata) {
            var componentView = this._preBuiltObjects.view.getNestedView(this._preBuiltObjects.elementRef.boundElementIndex);
            return componentView.changeDetector.ref;
          } else {
            return this._preBuiltObjects.view.changeDetector.ref;
          }
        }
        if (dirDep.key.id === StaticKeys.instance().elementRefId) {
          return this.getElementRef();
        }
        if (dirDep.key.id === StaticKeys.instance().viewContainerId) {
          return this.getViewContainerRef();
        }
        if (dirDep.key.id === StaticKeys.instance().templateRefId) {
          if (lang_1.isBlank(this._preBuiltObjects.templateRef)) {
            if (dirDep.optional) {
              return null;
            }
            throw new di_1.NoProviderError(null, dirDep.key);
          }
          return this._preBuiltObjects.templateRef;
        }
      } else if (provider instanceof pipe_provider_1.PipeProvider) {
        if (dep.key.id === StaticKeys.instance().changeDetectorRefId) {
          var componentView = this._preBuiltObjects.view.getNestedView(this._preBuiltObjects.elementRef.boundElementIndex);
          return componentView.changeDetector.ref;
        }
      }
      return injector_1.UNDEFINED;
    };
    ElementInjector.prototype._buildAttribute = function(dep) {
      var attributes = this._proto.attributes;
      if (lang_1.isPresent(attributes) && attributes.has(dep.attributeName)) {
        return attributes.get(dep.attributeName);
      } else {
        return null;
      }
    };
    ElementInjector.prototype.addDirectivesMatchingQuery = function(query, list) {
      var templateRef = lang_1.isBlank(this._preBuiltObjects) ? null : this._preBuiltObjects.templateRef;
      if (query.selector === template_ref_1.TemplateRef && lang_1.isPresent(templateRef)) {
        list.push(templateRef);
      }
      this._strategy.addDirectivesMatchingQuery(query, list);
    };
    ElementInjector.prototype._buildQueryStrategy = function() {
      if (this._proto.protoQueryRefs.length === 0) {
        return _emptyQueryStrategy;
      } else if (this._proto.protoQueryRefs.length <= InlineQueryStrategy.NUMBER_OF_SUPPORTED_QUERIES) {
        return new InlineQueryStrategy(this);
      } else {
        return new DynamicQueryStrategy(this);
      }
    };
    ElementInjector.prototype.link = function(parent) {
      parent.addChild(this);
    };
    ElementInjector.prototype.unlink = function() {
      this.remove();
    };
    ElementInjector.prototype.getDirectiveAtIndex = function(index) {
      return this._injector.getAt(index);
    };
    ElementInjector.prototype.hasInstances = function() {
      return this._proto.hasBindings && this.hydrated;
    };
    ElementInjector.prototype.getHost = function() {
      return this._host;
    };
    ElementInjector.prototype.getBoundElementIndex = function() {
      return this._proto.index;
    };
    ElementInjector.prototype.getRootViewInjectors = function() {
      if (!this.hydrated)
        return [];
      var view = this._preBuiltObjects.view;
      var nestedView = view.getNestedView(view.elementOffset + this.getBoundElementIndex());
      return lang_1.isPresent(nestedView) ? nestedView.rootElementInjectors : [];
    };
    ElementInjector.prototype.afterViewChecked = function() {
      this._queryStrategy.updateViewQueries();
    };
    ElementInjector.prototype.afterContentChecked = function() {
      this._queryStrategy.updateContentQueries();
    };
    ElementInjector.prototype.traverseAndSetQueriesAsDirty = function() {
      var inj = this;
      while (lang_1.isPresent(inj)) {
        inj._setQueriesAsDirty();
        inj = inj.parent;
      }
    };
    ElementInjector.prototype._setQueriesAsDirty = function() {
      this._queryStrategy.setContentQueriesAsDirty();
      if (lang_1.isPresent(this._host))
        this._host._queryStrategy.setViewQueriesAsDirty();
    };
    return ElementInjector;
  })(TreeNode);
  exports.ElementInjector = ElementInjector;
  var _EmptyQueryStrategy = (function() {
    function _EmptyQueryStrategy() {}
    _EmptyQueryStrategy.prototype.setContentQueriesAsDirty = function() {};
    _EmptyQueryStrategy.prototype.setViewQueriesAsDirty = function() {};
    _EmptyQueryStrategy.prototype.hydrate = function() {};
    _EmptyQueryStrategy.prototype.dehydrate = function() {};
    _EmptyQueryStrategy.prototype.updateContentQueries = function() {};
    _EmptyQueryStrategy.prototype.updateViewQueries = function() {};
    _EmptyQueryStrategy.prototype.findQuery = function(query) {
      throw new exceptions_1.BaseException("Cannot find query for directive " + query + ".");
    };
    return _EmptyQueryStrategy;
  })();
  var _emptyQueryStrategy = new _EmptyQueryStrategy();
  var InlineQueryStrategy = (function() {
    function InlineQueryStrategy(ei) {
      var protoRefs = ei._proto.protoQueryRefs;
      if (protoRefs.length > 0)
        this.query0 = new QueryRef(protoRefs[0], ei);
      if (protoRefs.length > 1)
        this.query1 = new QueryRef(protoRefs[1], ei);
      if (protoRefs.length > 2)
        this.query2 = new QueryRef(protoRefs[2], ei);
    }
    InlineQueryStrategy.prototype.setContentQueriesAsDirty = function() {
      if (lang_1.isPresent(this.query0) && !this.query0.isViewQuery)
        this.query0.dirty = true;
      if (lang_1.isPresent(this.query1) && !this.query1.isViewQuery)
        this.query1.dirty = true;
      if (lang_1.isPresent(this.query2) && !this.query2.isViewQuery)
        this.query2.dirty = true;
    };
    InlineQueryStrategy.prototype.setViewQueriesAsDirty = function() {
      if (lang_1.isPresent(this.query0) && this.query0.isViewQuery)
        this.query0.dirty = true;
      if (lang_1.isPresent(this.query1) && this.query1.isViewQuery)
        this.query1.dirty = true;
      if (lang_1.isPresent(this.query2) && this.query2.isViewQuery)
        this.query2.dirty = true;
    };
    InlineQueryStrategy.prototype.hydrate = function() {
      if (lang_1.isPresent(this.query0))
        this.query0.hydrate();
      if (lang_1.isPresent(this.query1))
        this.query1.hydrate();
      if (lang_1.isPresent(this.query2))
        this.query2.hydrate();
    };
    InlineQueryStrategy.prototype.dehydrate = function() {
      if (lang_1.isPresent(this.query0))
        this.query0.dehydrate();
      if (lang_1.isPresent(this.query1))
        this.query1.dehydrate();
      if (lang_1.isPresent(this.query2))
        this.query2.dehydrate();
    };
    InlineQueryStrategy.prototype.updateContentQueries = function() {
      if (lang_1.isPresent(this.query0) && !this.query0.isViewQuery) {
        this.query0.update();
      }
      if (lang_1.isPresent(this.query1) && !this.query1.isViewQuery) {
        this.query1.update();
      }
      if (lang_1.isPresent(this.query2) && !this.query2.isViewQuery) {
        this.query2.update();
      }
    };
    InlineQueryStrategy.prototype.updateViewQueries = function() {
      if (lang_1.isPresent(this.query0) && this.query0.isViewQuery) {
        this.query0.update();
      }
      if (lang_1.isPresent(this.query1) && this.query1.isViewQuery) {
        this.query1.update();
      }
      if (lang_1.isPresent(this.query2) && this.query2.isViewQuery) {
        this.query2.update();
      }
    };
    InlineQueryStrategy.prototype.findQuery = function(query) {
      if (lang_1.isPresent(this.query0) && this.query0.protoQueryRef.query === query) {
        return this.query0;
      }
      if (lang_1.isPresent(this.query1) && this.query1.protoQueryRef.query === query) {
        return this.query1;
      }
      if (lang_1.isPresent(this.query2) && this.query2.protoQueryRef.query === query) {
        return this.query2;
      }
      throw new exceptions_1.BaseException("Cannot find query for directive " + query + ".");
    };
    InlineQueryStrategy.NUMBER_OF_SUPPORTED_QUERIES = 3;
    return InlineQueryStrategy;
  })();
  var DynamicQueryStrategy = (function() {
    function DynamicQueryStrategy(ei) {
      this.queries = ei._proto.protoQueryRefs.map(function(p) {
        return new QueryRef(p, ei);
      });
    }
    DynamicQueryStrategy.prototype.setContentQueriesAsDirty = function() {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        if (!q.isViewQuery)
          q.dirty = true;
      }
    };
    DynamicQueryStrategy.prototype.setViewQueriesAsDirty = function() {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        if (q.isViewQuery)
          q.dirty = true;
      }
    };
    DynamicQueryStrategy.prototype.hydrate = function() {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        q.hydrate();
      }
    };
    DynamicQueryStrategy.prototype.dehydrate = function() {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        q.dehydrate();
      }
    };
    DynamicQueryStrategy.prototype.updateContentQueries = function() {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        if (!q.isViewQuery) {
          q.update();
        }
      }
    };
    DynamicQueryStrategy.prototype.updateViewQueries = function() {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        if (q.isViewQuery) {
          q.update();
        }
      }
    };
    DynamicQueryStrategy.prototype.findQuery = function(query) {
      for (var i = 0; i < this.queries.length; ++i) {
        var q = this.queries[i];
        if (q.protoQueryRef.query === query) {
          return q;
        }
      }
      throw new exceptions_1.BaseException("Cannot find query for directive " + query + ".");
    };
    return DynamicQueryStrategy;
  })();
  var ElementInjectorInlineStrategy = (function() {
    function ElementInjectorInlineStrategy(injectorStrategy, _ei) {
      this.injectorStrategy = injectorStrategy;
      this._ei = _ei;
    }
    ElementInjectorInlineStrategy.prototype.hydrate = function() {
      var i = this.injectorStrategy;
      var p = i.protoStrategy;
      i.resetConstructionCounter();
      if (p.provider0 instanceof DirectiveProvider && lang_1.isPresent(p.keyId0) && i.obj0 === injector_1.UNDEFINED)
        i.obj0 = i.instantiateProvider(p.provider0, p.visibility0);
      if (p.provider1 instanceof DirectiveProvider && lang_1.isPresent(p.keyId1) && i.obj1 === injector_1.UNDEFINED)
        i.obj1 = i.instantiateProvider(p.provider1, p.visibility1);
      if (p.provider2 instanceof DirectiveProvider && lang_1.isPresent(p.keyId2) && i.obj2 === injector_1.UNDEFINED)
        i.obj2 = i.instantiateProvider(p.provider2, p.visibility2);
      if (p.provider3 instanceof DirectiveProvider && lang_1.isPresent(p.keyId3) && i.obj3 === injector_1.UNDEFINED)
        i.obj3 = i.instantiateProvider(p.provider3, p.visibility3);
      if (p.provider4 instanceof DirectiveProvider && lang_1.isPresent(p.keyId4) && i.obj4 === injector_1.UNDEFINED)
        i.obj4 = i.instantiateProvider(p.provider4, p.visibility4);
      if (p.provider5 instanceof DirectiveProvider && lang_1.isPresent(p.keyId5) && i.obj5 === injector_1.UNDEFINED)
        i.obj5 = i.instantiateProvider(p.provider5, p.visibility5);
      if (p.provider6 instanceof DirectiveProvider && lang_1.isPresent(p.keyId6) && i.obj6 === injector_1.UNDEFINED)
        i.obj6 = i.instantiateProvider(p.provider6, p.visibility6);
      if (p.provider7 instanceof DirectiveProvider && lang_1.isPresent(p.keyId7) && i.obj7 === injector_1.UNDEFINED)
        i.obj7 = i.instantiateProvider(p.provider7, p.visibility7);
      if (p.provider8 instanceof DirectiveProvider && lang_1.isPresent(p.keyId8) && i.obj8 === injector_1.UNDEFINED)
        i.obj8 = i.instantiateProvider(p.provider8, p.visibility8);
      if (p.provider9 instanceof DirectiveProvider && lang_1.isPresent(p.keyId9) && i.obj9 === injector_1.UNDEFINED)
        i.obj9 = i.instantiateProvider(p.provider9, p.visibility9);
    };
    ElementInjectorInlineStrategy.prototype.dehydrate = function() {
      var i = this.injectorStrategy;
      i.obj0 = injector_1.UNDEFINED;
      i.obj1 = injector_1.UNDEFINED;
      i.obj2 = injector_1.UNDEFINED;
      i.obj3 = injector_1.UNDEFINED;
      i.obj4 = injector_1.UNDEFINED;
      i.obj5 = injector_1.UNDEFINED;
      i.obj6 = injector_1.UNDEFINED;
      i.obj7 = injector_1.UNDEFINED;
      i.obj8 = injector_1.UNDEFINED;
      i.obj9 = injector_1.UNDEFINED;
    };
    ElementInjectorInlineStrategy.prototype.callOnDestroy = function() {
      var i = this.injectorStrategy;
      var p = i.protoStrategy;
      if (p.provider0 instanceof DirectiveProvider && p.provider0.callOnDestroy) {
        i.obj0.onDestroy();
      }
      if (p.provider1 instanceof DirectiveProvider && p.provider1.callOnDestroy) {
        i.obj1.onDestroy();
      }
      if (p.provider2 instanceof DirectiveProvider && p.provider2.callOnDestroy) {
        i.obj2.onDestroy();
      }
      if (p.provider3 instanceof DirectiveProvider && p.provider3.callOnDestroy) {
        i.obj3.onDestroy();
      }
      if (p.provider4 instanceof DirectiveProvider && p.provider4.callOnDestroy) {
        i.obj4.onDestroy();
      }
      if (p.provider5 instanceof DirectiveProvider && p.provider5.callOnDestroy) {
        i.obj5.onDestroy();
      }
      if (p.provider6 instanceof DirectiveProvider && p.provider6.callOnDestroy) {
        i.obj6.onDestroy();
      }
      if (p.provider7 instanceof DirectiveProvider && p.provider7.callOnDestroy) {
        i.obj7.onDestroy();
      }
      if (p.provider8 instanceof DirectiveProvider && p.provider8.callOnDestroy) {
        i.obj8.onDestroy();
      }
      if (p.provider9 instanceof DirectiveProvider && p.provider9.callOnDestroy) {
        i.obj9.onDestroy();
      }
    };
    ElementInjectorInlineStrategy.prototype.getComponent = function() {
      return this.injectorStrategy.obj0;
    };
    ElementInjectorInlineStrategy.prototype.isComponentKey = function(key) {
      return this._ei._proto._firstProviderIsComponent && lang_1.isPresent(key) && key.id === this.injectorStrategy.protoStrategy.keyId0;
    };
    ElementInjectorInlineStrategy.prototype.addDirectivesMatchingQuery = function(query, list) {
      var i = this.injectorStrategy;
      var p = i.protoStrategy;
      if (lang_1.isPresent(p.provider0) && p.provider0.key.token === query.selector) {
        if (i.obj0 === injector_1.UNDEFINED)
          i.obj0 = i.instantiateProvider(p.provider0, p.visibility0);
        list.push(i.obj0);
      }
      if (lang_1.isPresent(p.provider1) && p.provider1.key.token === query.selector) {
        if (i.obj1 === injector_1.UNDEFINED)
          i.obj1 = i.instantiateProvider(p.provider1, p.visibility1);
        list.push(i.obj1);
      }
      if (lang_1.isPresent(p.provider2) && p.provider2.key.token === query.selector) {
        if (i.obj2 === injector_1.UNDEFINED)
          i.obj2 = i.instantiateProvider(p.provider2, p.visibility2);
        list.push(i.obj2);
      }
      if (lang_1.isPresent(p.provider3) && p.provider3.key.token === query.selector) {
        if (i.obj3 === injector_1.UNDEFINED)
          i.obj3 = i.instantiateProvider(p.provider3, p.visibility3);
        list.push(i.obj3);
      }
      if (lang_1.isPresent(p.provider4) && p.provider4.key.token === query.selector) {
        if (i.obj4 === injector_1.UNDEFINED)
          i.obj4 = i.instantiateProvider(p.provider4, p.visibility4);
        list.push(i.obj4);
      }
      if (lang_1.isPresent(p.provider5) && p.provider5.key.token === query.selector) {
        if (i.obj5 === injector_1.UNDEFINED)
          i.obj5 = i.instantiateProvider(p.provider5, p.visibility5);
        list.push(i.obj5);
      }
      if (lang_1.isPresent(p.provider6) && p.provider6.key.token === query.selector) {
        if (i.obj6 === injector_1.UNDEFINED)
          i.obj6 = i.instantiateProvider(p.provider6, p.visibility6);
        list.push(i.obj6);
      }
      if (lang_1.isPresent(p.provider7) && p.provider7.key.token === query.selector) {
        if (i.obj7 === injector_1.UNDEFINED)
          i.obj7 = i.instantiateProvider(p.provider7, p.visibility7);
        list.push(i.obj7);
      }
      if (lang_1.isPresent(p.provider8) && p.provider8.key.token === query.selector) {
        if (i.obj8 === injector_1.UNDEFINED)
          i.obj8 = i.instantiateProvider(p.provider8, p.visibility8);
        list.push(i.obj8);
      }
      if (lang_1.isPresent(p.provider9) && p.provider9.key.token === query.selector) {
        if (i.obj9 === injector_1.UNDEFINED)
          i.obj9 = i.instantiateProvider(p.provider9, p.visibility9);
        list.push(i.obj9);
      }
    };
    return ElementInjectorInlineStrategy;
  })();
  var ElementInjectorDynamicStrategy = (function() {
    function ElementInjectorDynamicStrategy(injectorStrategy, _ei) {
      this.injectorStrategy = injectorStrategy;
      this._ei = _ei;
    }
    ElementInjectorDynamicStrategy.prototype.hydrate = function() {
      var inj = this.injectorStrategy;
      var p = inj.protoStrategy;
      inj.resetConstructionCounter();
      for (var i = 0; i < p.keyIds.length; i++) {
        if (p.providers[i] instanceof DirectiveProvider && lang_1.isPresent(p.keyIds[i]) && inj.objs[i] === injector_1.UNDEFINED) {
          inj.objs[i] = inj.instantiateProvider(p.providers[i], p.visibilities[i]);
        }
      }
    };
    ElementInjectorDynamicStrategy.prototype.dehydrate = function() {
      var inj = this.injectorStrategy;
      collection_1.ListWrapper.fill(inj.objs, injector_1.UNDEFINED);
    };
    ElementInjectorDynamicStrategy.prototype.callOnDestroy = function() {
      var ist = this.injectorStrategy;
      var p = ist.protoStrategy;
      for (var i = 0; i < p.providers.length; i++) {
        if (p.providers[i] instanceof DirectiveProvider && p.providers[i].callOnDestroy) {
          ist.objs[i].onDestroy();
        }
      }
    };
    ElementInjectorDynamicStrategy.prototype.getComponent = function() {
      return this.injectorStrategy.objs[0];
    };
    ElementInjectorDynamicStrategy.prototype.isComponentKey = function(key) {
      var p = this.injectorStrategy.protoStrategy;
      return this._ei._proto._firstProviderIsComponent && lang_1.isPresent(key) && key.id === p.keyIds[0];
    };
    ElementInjectorDynamicStrategy.prototype.addDirectivesMatchingQuery = function(query, list) {
      var ist = this.injectorStrategy;
      var p = ist.protoStrategy;
      for (var i = 0; i < p.providers.length; i++) {
        if (p.providers[i].key.token === query.selector) {
          if (ist.objs[i] === injector_1.UNDEFINED) {
            ist.objs[i] = ist.instantiateProvider(p.providers[i], p.visibilities[i]);
          }
          list.push(ist.objs[i]);
        }
      }
    };
    return ElementInjectorDynamicStrategy;
  })();
  var ProtoQueryRef = (function() {
    function ProtoQueryRef(dirIndex, setter, query) {
      this.dirIndex = dirIndex;
      this.setter = setter;
      this.query = query;
    }
    Object.defineProperty(ProtoQueryRef.prototype, "usesPropertySyntax", {
      get: function() {
        return lang_1.isPresent(this.setter);
      },
      enumerable: true,
      configurable: true
    });
    return ProtoQueryRef;
  })();
  exports.ProtoQueryRef = ProtoQueryRef;
  var QueryRef = (function() {
    function QueryRef(protoQueryRef, originator) {
      this.protoQueryRef = protoQueryRef;
      this.originator = originator;
    }
    Object.defineProperty(QueryRef.prototype, "isViewQuery", {
      get: function() {
        return this.protoQueryRef.query.isViewQuery;
      },
      enumerable: true,
      configurable: true
    });
    QueryRef.prototype.update = function() {
      if (!this.dirty)
        return;
      this._update();
      this.dirty = false;
      if (this.protoQueryRef.usesPropertySyntax) {
        var dir = this.originator.getDirectiveAtIndex(this.protoQueryRef.dirIndex);
        if (this.protoQueryRef.query.first) {
          this.protoQueryRef.setter(dir, this.list.length > 0 ? this.list.first : null);
        } else {
          this.protoQueryRef.setter(dir, this.list);
        }
      }
      this.list.notifyOnChanges();
    };
    QueryRef.prototype._update = function() {
      var aggregator = [];
      if (this.protoQueryRef.query.isViewQuery) {
        var view = this.originator.getView();
        var nestedView = view.getNestedView(view.elementOffset + this.originator.getBoundElementIndex());
        if (lang_1.isPresent(nestedView))
          this._visitView(nestedView, aggregator);
      } else {
        this._visit(this.originator, aggregator);
      }
      this.list.reset(aggregator);
    };
    ;
    QueryRef.prototype._visit = function(inj, aggregator) {
      var view = inj.getView();
      var startIdx = view.elementOffset + inj._proto.index;
      for (var i = startIdx; i < view.elementOffset + view.ownBindersCount; i++) {
        var curInj = view.elementInjectors[i];
        if (lang_1.isBlank(curInj))
          continue;
        if (i > startIdx && (lang_1.isBlank(curInj) || lang_1.isBlank(curInj.parent) || view.elementOffset + curInj.parent._proto.index < startIdx)) {
          break;
        }
        if (!this.protoQueryRef.query.descendants && !(curInj.parent == this.originator || curInj == this.originator))
          continue;
        this._visitInjector(curInj, aggregator);
        var vc = view.viewContainers[i];
        if (lang_1.isPresent(vc))
          this._visitViewContainer(vc, aggregator);
      }
    };
    QueryRef.prototype._visitInjector = function(inj, aggregator) {
      if (this.protoQueryRef.query.isVarBindingQuery) {
        this._aggregateVariableBinding(inj, aggregator);
      } else {
        this._aggregateDirective(inj, aggregator);
      }
    };
    QueryRef.prototype._visitViewContainer = function(vc, aggregator) {
      for (var j = 0; j < vc.views.length; j++) {
        this._visitView(vc.views[j], aggregator);
      }
    };
    QueryRef.prototype._visitView = function(view, aggregator) {
      for (var i = view.elementOffset; i < view.elementOffset + view.ownBindersCount; i++) {
        var inj = view.elementInjectors[i];
        if (lang_1.isBlank(inj))
          continue;
        this._visitInjector(inj, aggregator);
        var vc = view.viewContainers[i];
        if (lang_1.isPresent(vc))
          this._visitViewContainer(vc, aggregator);
      }
    };
    QueryRef.prototype._aggregateVariableBinding = function(inj, aggregator) {
      var vb = this.protoQueryRef.query.varBindings;
      for (var i = 0; i < vb.length; ++i) {
        if (inj.hasVariableBinding(vb[i])) {
          aggregator.push(inj.getVariableBinding(vb[i]));
        }
      }
    };
    QueryRef.prototype._aggregateDirective = function(inj, aggregator) {
      inj.addDirectivesMatchingQuery(this.protoQueryRef.query, aggregator);
    };
    QueryRef.prototype.dehydrate = function() {
      this.list = null;
    };
    QueryRef.prototype.hydrate = function() {
      this.list = new query_list_1.QueryList();
      this.dirty = true;
    };
    return QueryRef;
  })();
  exports.QueryRef = QueryRef;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/element_binder", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var ElementBinder = (function() {
    function ElementBinder(index, parent, distanceToParent, protoElementInjector, componentDirective, nestedProtoView) {
      this.index = index;
      this.parent = parent;
      this.distanceToParent = distanceToParent;
      this.protoElementInjector = protoElementInjector;
      this.componentDirective = componentDirective;
      this.nestedProtoView = nestedProtoView;
      if (lang_1.isBlank(index)) {
        throw new exceptions_1.BaseException('null index not allowed.');
      }
    }
    return ElementBinder;
  })();
  exports.ElementBinder = ElementBinder;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/dom/util", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var CAMEL_CASE_REGEXP = /([A-Z])/g;
  var DASH_CASE_REGEXP = /-([a-z])/g;
  function camelCaseToDashCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, CAMEL_CASE_REGEXP, function(m) {
      return '-' + m[1].toLowerCase();
    });
  }
  exports.camelCaseToDashCase = camelCaseToDashCase;
  function dashCaseToCamelCase(input) {
    return lang_1.StringWrapper.replaceAllMapped(input, DASH_CASE_REGEXP, function(m) {
      return m[1].toUpperCase();
    });
  }
  exports.dashCaseToCamelCase = dashCaseToCamelCase;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  function internalView(viewRef) {
    return viewRef._view;
  }
  exports.internalView = internalView;
  function internalProtoView(protoViewRef) {
    return lang_1.isPresent(protoViewRef) ? protoViewRef._protoView : null;
  }
  exports.internalProtoView = internalProtoView;
  var ViewRef = (function() {
    function ViewRef() {}
    Object.defineProperty(ViewRef.prototype, "changeDetectorRef", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      set: function(value) {
        exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    return ViewRef;
  })();
  exports.ViewRef = ViewRef;
  var ViewRef_ = (function(_super) {
    __extends(ViewRef_, _super);
    function ViewRef_(_view) {
      _super.call(this);
      this._changeDetectorRef = null;
      this._view = _view;
    }
    Object.defineProperty(ViewRef_.prototype, "render", {
      get: function() {
        return this._view.render;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewRef_.prototype, "renderFragment", {
      get: function() {
        return this._view.renderFragment;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ViewRef_.prototype, "changeDetectorRef", {
      get: function() {
        if (this._changeDetectorRef === null) {
          this._changeDetectorRef = this._view.changeDetector.ref;
        }
        return this._changeDetectorRef;
      },
      enumerable: true,
      configurable: true
    });
    ViewRef_.prototype.setLocal = function(variableName, value) {
      this._view.setLocal(variableName, value);
    };
    return ViewRef_;
  })(ViewRef);
  exports.ViewRef_ = ViewRef_;
  var ProtoViewRef = (function() {
    function ProtoViewRef() {}
    return ProtoViewRef;
  })();
  exports.ProtoViewRef = ProtoViewRef;
  var ProtoViewRef_ = (function(_super) {
    __extends(ProtoViewRef_, _super);
    function ProtoViewRef_(_protoView) {
      _super.call(this);
      this._protoView = _protoView;
    }
    return ProtoViewRef_;
  })(ProtoViewRef);
  exports.ProtoViewRef_ = ProtoViewRef_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/interfaces", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref", "npm:angular2@2.0.0-alpha.46/src/core/render/dom/util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/interfaces');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/dom/util');
  var view_ref_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  var interfaces_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/interfaces');
  exports.DebugContext = interfaces_2.DebugContext;
  var REFLECT_PREFIX = 'ng-reflect-';
  (function(ViewType) {
    ViewType[ViewType["HOST"] = 0] = "HOST";
    ViewType[ViewType["COMPONENT"] = 1] = "COMPONENT";
    ViewType[ViewType["EMBEDDED"] = 2] = "EMBEDDED";
  })(exports.ViewType || (exports.ViewType = {}));
  var ViewType = exports.ViewType;
  var AppViewContainer = (function() {
    function AppViewContainer() {
      this.views = [];
    }
    return AppViewContainer;
  })();
  exports.AppViewContainer = AppViewContainer;
  var AppView = (function() {
    function AppView(renderer, proto, viewOffset, elementOffset, textOffset, protoLocals, render, renderFragment, containerElementInjector) {
      this.renderer = renderer;
      this.proto = proto;
      this.viewOffset = viewOffset;
      this.elementOffset = elementOffset;
      this.textOffset = textOffset;
      this.render = render;
      this.renderFragment = renderFragment;
      this.containerElementInjector = containerElementInjector;
      this.views = null;
      this.elementInjectors = null;
      this.viewContainers = null;
      this.preBuiltObjects = null;
      this.changeDetector = null;
      this.context = null;
      this.ref = new view_ref_2.ViewRef_(this);
      this.locals = new change_detection_1.Locals(null, collection_1.MapWrapper.clone(protoLocals));
    }
    AppView.prototype.init = function(changeDetector, elementInjectors, rootElementInjectors, preBuiltObjects, views, elementRefs, viewContainers) {
      this.changeDetector = changeDetector;
      this.elementInjectors = elementInjectors;
      this.rootElementInjectors = rootElementInjectors;
      this.preBuiltObjects = preBuiltObjects;
      this.views = views;
      this.elementRefs = elementRefs;
      this.viewContainers = viewContainers;
    };
    AppView.prototype.setLocal = function(contextName, value) {
      if (!this.hydrated())
        throw new exceptions_1.BaseException('Cannot set locals on dehydrated view.');
      if (!this.proto.templateVariableBindings.has(contextName)) {
        return;
      }
      var templateName = this.proto.templateVariableBindings.get(contextName);
      this.locals.set(templateName, value);
    };
    AppView.prototype.hydrated = function() {
      return lang_1.isPresent(this.context);
    };
    AppView.prototype.triggerEventHandlers = function(eventName, eventObj, boundElementIndex) {
      var locals = new collection_1.Map();
      locals.set('$event', eventObj);
      this.dispatchEvent(boundElementIndex, eventName, locals);
    };
    AppView.prototype.notifyOnBinding = function(b, currentValue) {
      if (b.isTextNode()) {
        this.renderer.setText(this.render, b.elementIndex + this.textOffset, currentValue);
      } else {
        var elementRef = this.elementRefs[this.elementOffset + b.elementIndex];
        if (b.isElementProperty()) {
          this.renderer.setElementProperty(elementRef, b.name, currentValue);
        } else if (b.isElementAttribute()) {
          this.renderer.setElementAttribute(elementRef, b.name, lang_1.isPresent(currentValue) ? "" + currentValue : null);
        } else if (b.isElementClass()) {
          this.renderer.setElementClass(elementRef, b.name, currentValue);
        } else if (b.isElementStyle()) {
          var unit = lang_1.isPresent(b.unit) ? b.unit : '';
          this.renderer.setElementStyle(elementRef, b.name, lang_1.isPresent(currentValue) ? "" + currentValue + unit : null);
        } else {
          throw new exceptions_1.BaseException('Unsupported directive record');
        }
      }
    };
    AppView.prototype.logBindingUpdate = function(b, value) {
      if (b.isDirective() || b.isElementProperty()) {
        var elementRef = this.elementRefs[this.elementOffset + b.elementIndex];
        this.renderer.setElementAttribute(elementRef, "" + REFLECT_PREFIX + util_1.camelCaseToDashCase(b.name), "" + value);
      }
    };
    AppView.prototype.notifyAfterContentChecked = function() {
      var eiCount = this.proto.elementBinders.length;
      var ei = this.elementInjectors;
      for (var i = eiCount - 1; i >= 0; i--) {
        if (lang_1.isPresent(ei[i + this.elementOffset]))
          ei[i + this.elementOffset].afterContentChecked();
      }
    };
    AppView.prototype.notifyAfterViewChecked = function() {
      var eiCount = this.proto.elementBinders.length;
      var ei = this.elementInjectors;
      for (var i = eiCount - 1; i >= 0; i--) {
        if (lang_1.isPresent(ei[i + this.elementOffset]))
          ei[i + this.elementOffset].afterViewChecked();
      }
    };
    AppView.prototype.getDirectiveFor = function(directive) {
      var elementInjector = this.elementInjectors[this.elementOffset + directive.elementIndex];
      return elementInjector.getDirectiveAtIndex(directive.directiveIndex);
    };
    AppView.prototype.getNestedView = function(boundElementIndex) {
      var eli = this.elementInjectors[boundElementIndex];
      return lang_1.isPresent(eli) ? eli.getNestedView() : null;
    };
    AppView.prototype.getContainerElement = function() {
      return lang_1.isPresent(this.containerElementInjector) ? this.containerElementInjector.getElementRef() : null;
    };
    AppView.prototype.getDebugContext = function(elementIndex, directiveIndex) {
      try {
        var offsettedIndex = this.elementOffset + elementIndex;
        var hasRefForIndex = offsettedIndex < this.elementRefs.length;
        var elementRef = hasRefForIndex ? this.elementRefs[this.elementOffset + elementIndex] : null;
        var container = this.getContainerElement();
        var ei = hasRefForIndex ? this.elementInjectors[this.elementOffset + elementIndex] : null;
        var element = lang_1.isPresent(elementRef) ? elementRef.nativeElement : null;
        var componentElement = lang_1.isPresent(container) ? container.nativeElement : null;
        var directive = lang_1.isPresent(directiveIndex) ? this.getDirectiveFor(directiveIndex) : null;
        var injector = lang_1.isPresent(ei) ? ei.getInjector() : null;
        return new interfaces_1.DebugContext(element, componentElement, directive, this.context, _localsToStringMap(this.locals), injector);
      } catch (e) {
        return null;
      }
    };
    AppView.prototype.getDetectorFor = function(directive) {
      var childView = this.getNestedView(this.elementOffset + directive.elementIndex);
      return lang_1.isPresent(childView) ? childView.changeDetector : null;
    };
    AppView.prototype.invokeElementMethod = function(elementIndex, methodName, args) {
      this.renderer.invokeElementMethod(this.elementRefs[elementIndex], methodName, args);
    };
    AppView.prototype.dispatchRenderEvent = function(boundElementIndex, eventName, locals) {
      var elementRef = this.elementRefs[boundElementIndex];
      var view = view_ref_1.internalView(elementRef.parentView);
      return view.dispatchEvent(elementRef.boundElementIndex, eventName, locals);
    };
    AppView.prototype.dispatchEvent = function(boundElementIndex, eventName, locals) {
      try {
        if (this.hydrated()) {
          return !this.changeDetector.handleEvent(eventName, boundElementIndex - this.elementOffset, new change_detection_1.Locals(this.locals, locals));
        } else {
          return true;
        }
      } catch (e) {
        var c = this.getDebugContext(boundElementIndex - this.elementOffset, null);
        var context = lang_1.isPresent(c) ? new _Context(c.element, c.componentElement, c.context, c.locals, c.injector) : null;
        throw new EventEvaluationError(eventName, e, e.stack, context);
      }
    };
    Object.defineProperty(AppView.prototype, "ownBindersCount", {
      get: function() {
        return this.proto.elementBinders.length;
      },
      enumerable: true,
      configurable: true
    });
    return AppView;
  })();
  exports.AppView = AppView;
  function _localsToStringMap(locals) {
    var res = {};
    var c = locals;
    while (lang_1.isPresent(c)) {
      res = collection_1.StringMapWrapper.merge(res, collection_1.MapWrapper.toStringMap(c.current));
      c = c.parent;
    }
    return res;
  }
  var _Context = (function() {
    function _Context(element, componentElement, context, locals, injector) {
      this.element = element;
      this.componentElement = componentElement;
      this.context = context;
      this.locals = locals;
      this.injector = injector;
    }
    return _Context;
  })();
  var EventEvaluationError = (function(_super) {
    __extends(EventEvaluationError, _super);
    function EventEvaluationError(eventName, originalException, originalStack, context) {
      _super.call(this, "Error during evaluation of \"" + eventName + "\"", originalException, originalStack, context);
    }
    return EventEvaluationError;
  })(exceptions_1.WrappedException);
  var AppProtoViewMergeInfo = (function() {
    function AppProtoViewMergeInfo(embeddedViewCount, elementCount, viewCount) {
      this.embeddedViewCount = embeddedViewCount;
      this.elementCount = elementCount;
      this.viewCount = viewCount;
    }
    return AppProtoViewMergeInfo;
  })();
  exports.AppProtoViewMergeInfo = AppProtoViewMergeInfo;
  var AppProtoView = (function() {
    function AppProtoView(templateId, templateCmds, type, isMergable, changeDetectorFactory, templateVariableBindings, pipes) {
      this.templateId = templateId;
      this.templateCmds = templateCmds;
      this.type = type;
      this.isMergable = isMergable;
      this.changeDetectorFactory = changeDetectorFactory;
      this.templateVariableBindings = templateVariableBindings;
      this.pipes = pipes;
      this.elementBinders = null;
      this.mergeInfo = null;
      this.variableLocations = null;
      this.textBindingCount = null;
      this.render = null;
      this.ref = new view_ref_2.ProtoViewRef_(this);
    }
    AppProtoView.prototype.init = function(render, elementBinders, textBindingCount, mergeInfo, variableLocations) {
      var _this = this;
      this.render = render;
      this.elementBinders = elementBinders;
      this.textBindingCount = textBindingCount;
      this.mergeInfo = mergeInfo;
      this.variableLocations = variableLocations;
      this.protoLocals = new collection_1.Map();
      if (lang_1.isPresent(this.templateVariableBindings)) {
        this.templateVariableBindings.forEach(function(templateName, _) {
          _this.protoLocals.set(templateName, null);
        });
      }
      if (lang_1.isPresent(variableLocations)) {
        variableLocations.forEach(function(_, templateName) {
          _this.protoLocals.set(templateName, null);
        });
      }
    };
    AppProtoView.prototype.isInitialized = function() {
      return lang_1.isPresent(this.elementBinders);
    };
    return AppProtoView;
  })();
  exports.AppProtoView = AppProtoView;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/pipes", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var SelectedPipe = (function() {
    function SelectedPipe(pipe, pure) {
      this.pipe = pipe;
      this.pure = pure;
    }
    return SelectedPipe;
  })();
  exports.SelectedPipe = SelectedPipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/pipes/pipes", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/pipes"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var cd = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/pipes');
  var ProtoPipes = (function() {
    function ProtoPipes(config) {
      this.config = config;
      this.config = config;
    }
    ProtoPipes.fromProviders = function(providers) {
      var config = {};
      providers.forEach(function(b) {
        return config[b.name] = b;
      });
      return new ProtoPipes(config);
    };
    ProtoPipes.prototype.get = function(name) {
      var provider = this.config[name];
      if (lang_1.isBlank(provider))
        throw new exceptions_1.BaseException("Cannot find pipe '" + name + "'.");
      return provider;
    };
    return ProtoPipes;
  })();
  exports.ProtoPipes = ProtoPipes;
  var Pipes = (function() {
    function Pipes(proto, injector) {
      this.proto = proto;
      this.injector = injector;
      this._config = {};
    }
    Pipes.prototype.get = function(name) {
      var cached = collection_1.StringMapWrapper.get(this._config, name);
      if (lang_1.isPresent(cached))
        return cached;
      var p = this.proto.get(name);
      var transform = this.injector.instantiateResolved(p);
      var res = new cd.SelectedPipe(transform, p.pure);
      if (p.pure) {
        collection_1.StringMapWrapper.set(this._config, name, res);
      }
      return res;
    };
    return Pipes;
  })();
  exports.Pipes = Pipes;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/pipes/pipe_provider", ["npm:angular2@2.0.0-alpha.46/src/core/di/provider", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var provider_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/provider');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var PipeProvider = (function(_super) {
    __extends(PipeProvider, _super);
    function PipeProvider(name, pure, key, resolvedFactories, multiBinding) {
      _super.call(this, key, resolvedFactories, multiBinding);
      this.name = name;
      this.pure = pure;
    }
    PipeProvider.createFromType = function(type, metadata) {
      var provider = new di_1.Provider(type, {useClass: type});
      var rb = provider_1.resolveProvider(provider);
      return new PipeProvider(metadata.name, metadata.pure, rb.key, rb.resolvedFactories, rb.multiProvider);
    };
    return PipeProvider;
  })(provider_1.ResolvedProvider_);
  exports.PipeProvider = PipeProvider;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/render/api", ["npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var RenderProtoViewRef = (function() {
    function RenderProtoViewRef() {}
    return RenderProtoViewRef;
  })();
  exports.RenderProtoViewRef = RenderProtoViewRef;
  var RenderFragmentRef = (function() {
    function RenderFragmentRef() {}
    return RenderFragmentRef;
  })();
  exports.RenderFragmentRef = RenderFragmentRef;
  var RenderViewRef = (function() {
    function RenderViewRef() {}
    return RenderViewRef;
  })();
  exports.RenderViewRef = RenderViewRef;
  var RenderTemplateCmd = (function() {
    function RenderTemplateCmd() {}
    return RenderTemplateCmd;
  })();
  exports.RenderTemplateCmd = RenderTemplateCmd;
  var RenderBeginCmd = (function(_super) {
    __extends(RenderBeginCmd, _super);
    function RenderBeginCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(RenderBeginCmd.prototype, "ngContentIndex", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(RenderBeginCmd.prototype, "isBound", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return RenderBeginCmd;
  })(RenderTemplateCmd);
  exports.RenderBeginCmd = RenderBeginCmd;
  var RenderTextCmd = (function(_super) {
    __extends(RenderTextCmd, _super);
    function RenderTextCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(RenderTextCmd.prototype, "value", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return RenderTextCmd;
  })(RenderBeginCmd);
  exports.RenderTextCmd = RenderTextCmd;
  var RenderNgContentCmd = (function(_super) {
    __extends(RenderNgContentCmd, _super);
    function RenderNgContentCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(RenderNgContentCmd.prototype, "index", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(RenderNgContentCmd.prototype, "ngContentIndex", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return RenderNgContentCmd;
  })(RenderTemplateCmd);
  exports.RenderNgContentCmd = RenderNgContentCmd;
  var RenderBeginElementCmd = (function(_super) {
    __extends(RenderBeginElementCmd, _super);
    function RenderBeginElementCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(RenderBeginElementCmd.prototype, "name", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(RenderBeginElementCmd.prototype, "attrNameAndValues", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(RenderBeginElementCmd.prototype, "eventTargetAndNames", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return RenderBeginElementCmd;
  })(RenderBeginCmd);
  exports.RenderBeginElementCmd = RenderBeginElementCmd;
  var RenderBeginComponentCmd = (function(_super) {
    __extends(RenderBeginComponentCmd, _super);
    function RenderBeginComponentCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(RenderBeginComponentCmd.prototype, "templateId", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return RenderBeginComponentCmd;
  })(RenderBeginElementCmd);
  exports.RenderBeginComponentCmd = RenderBeginComponentCmd;
  var RenderEmbeddedTemplateCmd = (function(_super) {
    __extends(RenderEmbeddedTemplateCmd, _super);
    function RenderEmbeddedTemplateCmd() {
      _super.apply(this, arguments);
    }
    Object.defineProperty(RenderEmbeddedTemplateCmd.prototype, "isMerged", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    Object.defineProperty(RenderEmbeddedTemplateCmd.prototype, "children", {
      get: function() {
        return exceptions_1.unimplemented();
      },
      enumerable: true,
      configurable: true
    });
    ;
    return RenderEmbeddedTemplateCmd;
  })(RenderBeginElementCmd);
  exports.RenderEmbeddedTemplateCmd = RenderEmbeddedTemplateCmd;
  var RenderViewWithFragments = (function() {
    function RenderViewWithFragments(viewRef, fragmentRefs) {
      this.viewRef = viewRef;
      this.fragmentRefs = fragmentRefs;
    }
    return RenderViewWithFragments;
  })();
  exports.RenderViewWithFragments = RenderViewWithFragments;
  var RenderComponentTemplate = (function() {
    function RenderComponentTemplate(id, shortId, encapsulation, commands, styles) {
      this.id = id;
      this.shortId = shortId;
      this.encapsulation = encapsulation;
      this.commands = commands;
      this.styles = styles;
    }
    return RenderComponentTemplate;
  })();
  exports.RenderComponentTemplate = RenderComponentTemplate;
  var Renderer = (function() {
    function Renderer() {}
    return Renderer;
  })();
  exports.Renderer = Renderer;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/render/api", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/pipes/pipe_provider", "npm:angular2@2.0.0-alpha.46/src/core/pipes/pipes", "npm:angular2@2.0.0-alpha.46/src/core/linker/view", "npm:angular2@2.0.0-alpha.46/src/core/linker/element_binder", "npm:angular2@2.0.0-alpha.46/src/core/linker/element_injector", "npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/pipe_resolver", "npm:angular2@2.0.0-alpha.46/src/core/metadata/view", "npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands", "npm:angular2@2.0.0-alpha.46/render", "npm:angular2@2.0.0-alpha.46/src/core/application_tokens"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var __param = (this && this.__param) || function(paramIndex, decorator) {
    return function(target, key) {
      decorator(target, key, paramIndex);
    };
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var api_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render/api');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var pipe_provider_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/pipes/pipe_provider');
  var pipes_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/pipes/pipes');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view');
  var element_binder_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/element_binder');
  var element_injector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/element_injector');
  var directive_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver');
  var view_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver');
  var pipe_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/pipe_resolver');
  var view_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  var platform_directives_and_pipes_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/platform_directives_and_pipes');
  var template_commands_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/render');
  var application_tokens_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/application_tokens');
  var ProtoViewFactory = (function() {
    function ProtoViewFactory(_renderer, _platformPipes, _directiveResolver, _viewResolver, _pipeResolver, _appId) {
      this._renderer = _renderer;
      this._platformPipes = _platformPipes;
      this._directiveResolver = _directiveResolver;
      this._viewResolver = _viewResolver;
      this._pipeResolver = _pipeResolver;
      this._appId = _appId;
      this._cache = new Map();
      this._nextTemplateId = 0;
    }
    ProtoViewFactory.prototype.clearCache = function() {
      this._cache.clear();
    };
    ProtoViewFactory.prototype.createHost = function(compiledHostTemplate) {
      var compiledTemplate = compiledHostTemplate.template;
      var result = this._cache.get(compiledTemplate.id);
      if (lang_1.isBlank(result)) {
        var emptyMap = {};
        var shortId = this._appId + "-" + this._nextTemplateId++;
        this._renderer.registerComponentTemplate(new api_1.RenderComponentTemplate(compiledTemplate.id, shortId, view_2.ViewEncapsulation.None, compiledTemplate.commands, []));
        result = new view_1.AppProtoView(compiledTemplate.id, compiledTemplate.commands, view_1.ViewType.HOST, true, compiledTemplate.changeDetectorFactory, null, new pipes_1.ProtoPipes(emptyMap));
        this._cache.set(compiledTemplate.id, result);
      }
      return result;
    };
    ProtoViewFactory.prototype._createComponent = function(cmd) {
      var _this = this;
      var nestedProtoView = this._cache.get(cmd.templateId);
      if (lang_1.isBlank(nestedProtoView)) {
        var component = cmd.directives[0];
        var view = this._viewResolver.resolve(component);
        var compiledTemplate = cmd.templateGetter();
        var styles = _flattenStyleArr(compiledTemplate.styles, []);
        var shortId = this._appId + "-" + this._nextTemplateId++;
        this._renderer.registerComponentTemplate(new api_1.RenderComponentTemplate(compiledTemplate.id, shortId, cmd.encapsulation, compiledTemplate.commands, styles));
        var boundPipes = this._flattenPipes(view).map(function(pipe) {
          return _this._bindPipe(pipe);
        });
        nestedProtoView = new view_1.AppProtoView(compiledTemplate.id, compiledTemplate.commands, view_1.ViewType.COMPONENT, true, compiledTemplate.changeDetectorFactory, null, pipes_1.ProtoPipes.fromProviders(boundPipes));
        this._cache.set(compiledTemplate.id, nestedProtoView);
        this._initializeProtoView(nestedProtoView, null);
      }
      return nestedProtoView;
    };
    ProtoViewFactory.prototype._createEmbeddedTemplate = function(cmd, parent) {
      var nestedProtoView = new view_1.AppProtoView(parent.templateId, cmd.children, view_1.ViewType.EMBEDDED, cmd.isMerged, cmd.changeDetectorFactory, arrayToMap(cmd.variableNameAndValues, true), new pipes_1.ProtoPipes(parent.pipes.config));
      if (cmd.isMerged) {
        this.initializeProtoViewIfNeeded(nestedProtoView);
      }
      return nestedProtoView;
    };
    ProtoViewFactory.prototype.initializeProtoViewIfNeeded = function(protoView) {
      if (!protoView.isInitialized()) {
        var render = this._renderer.createProtoView(protoView.templateId, protoView.templateCmds);
        this._initializeProtoView(protoView, render);
      }
    };
    ProtoViewFactory.prototype._initializeProtoView = function(protoView, render) {
      var initializer = new _ProtoViewInitializer(protoView, this._directiveResolver, this);
      template_commands_1.visitAllCommands(initializer, protoView.templateCmds);
      var mergeInfo = new view_1.AppProtoViewMergeInfo(initializer.mergeEmbeddedViewCount, initializer.mergeElementCount, initializer.mergeViewCount);
      protoView.init(render, initializer.elementBinders, initializer.boundTextCount, mergeInfo, initializer.variableLocations);
    };
    ProtoViewFactory.prototype._bindPipe = function(typeOrProvider) {
      var meta = this._pipeResolver.resolve(typeOrProvider);
      return pipe_provider_1.PipeProvider.createFromType(typeOrProvider, meta);
    };
    ProtoViewFactory.prototype._flattenPipes = function(view) {
      var pipes = [];
      if (lang_1.isPresent(this._platformPipes)) {
        _flattenArray(this._platformPipes, pipes);
      }
      if (lang_1.isPresent(view.pipes)) {
        _flattenArray(view.pipes, pipes);
      }
      return pipes;
    };
    ProtoViewFactory = __decorate([di_1.Injectable(), __param(1, di_1.Optional()), __param(1, di_1.Inject(platform_directives_and_pipes_1.PLATFORM_PIPES)), __param(5, di_1.Inject(application_tokens_1.APP_ID)), __metadata('design:paramtypes', [render_1.Renderer, Array, directive_resolver_1.DirectiveResolver, view_resolver_1.ViewResolver, pipe_resolver_1.PipeResolver, String])], ProtoViewFactory);
    return ProtoViewFactory;
  })();
  exports.ProtoViewFactory = ProtoViewFactory;
  function createComponent(protoViewFactory, cmd) {
    return protoViewFactory._createComponent(cmd);
  }
  function createEmbeddedTemplate(protoViewFactory, cmd, parent) {
    return protoViewFactory._createEmbeddedTemplate(cmd, parent);
  }
  var _ProtoViewInitializer = (function() {
    function _ProtoViewInitializer(_protoView, _directiveResolver, _protoViewFactory) {
      this._protoView = _protoView;
      this._directiveResolver = _directiveResolver;
      this._protoViewFactory = _protoViewFactory;
      this.variableLocations = new Map();
      this.boundTextCount = 0;
      this.boundElementIndex = 0;
      this.elementBinderStack = [];
      this.distanceToParentElementBinder = 0;
      this.distanceToParentProtoElementInjector = 0;
      this.elementBinders = [];
      this.mergeEmbeddedViewCount = 0;
      this.mergeElementCount = 0;
      this.mergeViewCount = 1;
    }
    _ProtoViewInitializer.prototype.visitText = function(cmd, context) {
      if (cmd.isBound) {
        this.boundTextCount++;
      }
      return null;
    };
    _ProtoViewInitializer.prototype.visitNgContent = function(cmd, context) {
      return null;
    };
    _ProtoViewInitializer.prototype.visitBeginElement = function(cmd, context) {
      if (cmd.isBound) {
        this._visitBeginBoundElement(cmd, null);
      } else {
        this._visitBeginElement(cmd, null, null);
      }
      return null;
    };
    _ProtoViewInitializer.prototype.visitEndElement = function(context) {
      return this._visitEndElement();
    };
    _ProtoViewInitializer.prototype.visitBeginComponent = function(cmd, context) {
      var nestedProtoView = createComponent(this._protoViewFactory, cmd);
      return this._visitBeginBoundElement(cmd, nestedProtoView);
    };
    _ProtoViewInitializer.prototype.visitEndComponent = function(context) {
      return this._visitEndElement();
    };
    _ProtoViewInitializer.prototype.visitEmbeddedTemplate = function(cmd, context) {
      var nestedProtoView = createEmbeddedTemplate(this._protoViewFactory, cmd, this._protoView);
      if (cmd.isMerged) {
        this.mergeEmbeddedViewCount++;
      }
      this._visitBeginBoundElement(cmd, nestedProtoView);
      return this._visitEndElement();
    };
    _ProtoViewInitializer.prototype._visitBeginBoundElement = function(cmd, nestedProtoView) {
      if (lang_1.isPresent(nestedProtoView) && nestedProtoView.isMergable) {
        this.mergeElementCount += nestedProtoView.mergeInfo.elementCount;
        this.mergeViewCount += nestedProtoView.mergeInfo.viewCount;
        this.mergeEmbeddedViewCount += nestedProtoView.mergeInfo.embeddedViewCount;
      }
      var elementBinder = _createElementBinder(this._directiveResolver, nestedProtoView, this.elementBinderStack, this.boundElementIndex, this.distanceToParentElementBinder, this.distanceToParentProtoElementInjector, cmd);
      this.elementBinders.push(elementBinder);
      var protoElementInjector = elementBinder.protoElementInjector;
      for (var i = 0; i < cmd.variableNameAndValues.length; i += 2) {
        this.variableLocations.set(cmd.variableNameAndValues[i], this.boundElementIndex);
      }
      this.boundElementIndex++;
      this.mergeElementCount++;
      return this._visitBeginElement(cmd, elementBinder, protoElementInjector);
    };
    _ProtoViewInitializer.prototype._visitBeginElement = function(cmd, elementBinder, protoElementInjector) {
      this.distanceToParentElementBinder = lang_1.isPresent(elementBinder) ? 1 : this.distanceToParentElementBinder + 1;
      this.distanceToParentProtoElementInjector = lang_1.isPresent(protoElementInjector) ? 1 : this.distanceToParentProtoElementInjector + 1;
      this.elementBinderStack.push(elementBinder);
      return null;
    };
    _ProtoViewInitializer.prototype._visitEndElement = function() {
      var parentElementBinder = this.elementBinderStack.pop();
      var parentProtoElementInjector = lang_1.isPresent(parentElementBinder) ? parentElementBinder.protoElementInjector : null;
      this.distanceToParentElementBinder = lang_1.isPresent(parentElementBinder) ? parentElementBinder.distanceToParent : this.distanceToParentElementBinder - 1;
      this.distanceToParentProtoElementInjector = lang_1.isPresent(parentProtoElementInjector) ? parentProtoElementInjector.distanceToParent : this.distanceToParentProtoElementInjector - 1;
      return null;
    };
    return _ProtoViewInitializer;
  })();
  function _createElementBinder(directiveResolver, nestedProtoView, elementBinderStack, boundElementIndex, distanceToParentBinder, distanceToParentPei, beginElementCmd) {
    var parentElementBinder = null;
    var parentProtoElementInjector = null;
    if (distanceToParentBinder > 0) {
      parentElementBinder = elementBinderStack[elementBinderStack.length - distanceToParentBinder];
    }
    if (lang_1.isBlank(parentElementBinder)) {
      distanceToParentBinder = -1;
    }
    if (distanceToParentPei > 0) {
      var peiBinder = elementBinderStack[elementBinderStack.length - distanceToParentPei];
      if (lang_1.isPresent(peiBinder)) {
        parentProtoElementInjector = peiBinder.protoElementInjector;
      }
    }
    if (lang_1.isBlank(parentProtoElementInjector)) {
      distanceToParentPei = -1;
    }
    var componentDirectiveProvider = null;
    var isEmbeddedTemplate = false;
    var directiveProviders = beginElementCmd.directives.map(function(type) {
      return provideDirective(directiveResolver, type);
    });
    if (beginElementCmd instanceof template_commands_1.BeginComponentCmd) {
      componentDirectiveProvider = directiveProviders[0];
    } else if (beginElementCmd instanceof template_commands_1.EmbeddedTemplateCmd) {
      isEmbeddedTemplate = true;
    }
    var protoElementInjector = null;
    var hasVariables = beginElementCmd.variableNameAndValues.length > 0;
    if (directiveProviders.length > 0 || hasVariables || isEmbeddedTemplate) {
      var directiveVariableBindings = new Map();
      if (!isEmbeddedTemplate) {
        directiveVariableBindings = createDirectiveVariableBindings(beginElementCmd.variableNameAndValues, directiveProviders);
      }
      protoElementInjector = element_injector_1.ProtoElementInjector.create(parentProtoElementInjector, boundElementIndex, directiveProviders, lang_1.isPresent(componentDirectiveProvider), distanceToParentPei, directiveVariableBindings);
      protoElementInjector.attributes = arrayToMap(beginElementCmd.attrNameAndValues, false);
    }
    return new element_binder_1.ElementBinder(boundElementIndex, parentElementBinder, distanceToParentBinder, protoElementInjector, componentDirectiveProvider, nestedProtoView);
  }
  function provideDirective(directiveResolver, type) {
    var annotation = directiveResolver.resolve(type);
    return element_injector_1.DirectiveProvider.createFromType(type, annotation);
  }
  function createDirectiveVariableBindings(variableNameAndValues, directiveProviders) {
    var directiveVariableBindings = new Map();
    for (var i = 0; i < variableNameAndValues.length; i += 2) {
      var templateName = variableNameAndValues[i];
      var dirIndex = variableNameAndValues[i + 1];
      if (lang_1.isNumber(dirIndex)) {
        directiveVariableBindings.set(templateName, dirIndex);
      } else {
        directiveVariableBindings.set(templateName, null);
      }
    }
    return directiveVariableBindings;
  }
  exports.createDirectiveVariableBindings = createDirectiveVariableBindings;
  function arrayToMap(arr, inverse) {
    var result = new Map();
    for (var i = 0; i < arr.length; i += 2) {
      if (inverse) {
        result.set(arr[i + 1], arr[i]);
      } else {
        result.set(arr[i], arr[i + 1]);
      }
    }
    return result;
  }
  function _flattenArray(tree, out) {
    for (var i = 0; i < tree.length; i++) {
      var item = di_1.resolveForwardRef(tree[i]);
      if (lang_1.isArray(item)) {
        _flattenArray(item, out);
      } else {
        out.push(item);
      }
    }
  }
  function _flattenStyleArr(arr, out) {
    for (var i = 0; i < arr.length; i++) {
      var entry = arr[i];
      if (lang_1.isArray(entry)) {
        _flattenStyleArr(entry, out);
      } else {
        out.push(entry);
      }
    }
    return out;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/compiler", ["npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var proto_view_factory_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/proto_view_factory');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var template_commands_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_commands');
  var Compiler = (function() {
    function Compiler() {}
    return Compiler;
  })();
  exports.Compiler = Compiler;
  function _isCompiledHostTemplate(type) {
    return type instanceof template_commands_1.CompiledHostTemplate;
  }
  var Compiler_ = (function(_super) {
    __extends(Compiler_, _super);
    function Compiler_(_protoViewFactory) {
      _super.call(this);
      this._protoViewFactory = _protoViewFactory;
    }
    Compiler_.prototype.compileInHost = function(componentType) {
      var metadatas = reflection_1.reflector.annotations(componentType);
      var compiledHostTemplate = metadatas.find(_isCompiledHostTemplate);
      if (lang_1.isBlank(compiledHostTemplate)) {
        throw new exceptions_1.BaseException("No precompiled template for component " + lang_1.stringify(componentType) + " found");
      }
      return async_1.PromiseWrapper.resolve(this._createProtoView(compiledHostTemplate));
    };
    Compiler_.prototype._createProtoView = function(compiledHostTemplate) {
      return this._protoViewFactory.createHost(compiledHostTemplate).ref;
    };
    Compiler_.prototype.clearCache = function() {
      this._protoViewFactory.clearCache();
    };
    Compiler_ = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [proto_view_factory_1.ProtoViewFactory])], Compiler_);
    return Compiler_;
  })(Compiler);
  exports.Compiler_ = Compiler_;
  function internalCreateProtoView(compiler, compiledHostTemplate) {
    return compiler._createProtoView(compiledHostTemplate);
  }
  exports.internalCreateProtoView = internalCreateProtoView;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata/view", "npm:angular2@2.0.0-alpha.46/src/core/metadata/directives", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  var directives_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/directives');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var ViewResolver = (function() {
    function ViewResolver() {
      this._cache = new collection_1.Map();
    }
    ViewResolver.prototype.resolve = function(component) {
      var view = this._cache.get(component);
      if (lang_1.isBlank(view)) {
        view = this._resolve(component);
        this._cache.set(component, view);
      }
      return view;
    };
    ViewResolver.prototype._resolve = function(component) {
      var compMeta;
      var viewMeta;
      reflection_1.reflector.annotations(component).forEach(function(m) {
        if (m instanceof view_1.ViewMetadata) {
          viewMeta = m;
        }
        if (m instanceof directives_1.ComponentMetadata) {
          compMeta = m;
        }
      });
      if (lang_1.isPresent(compMeta)) {
        if (lang_1.isBlank(compMeta.template) && lang_1.isBlank(compMeta.templateUrl) && lang_1.isBlank(viewMeta)) {
          throw new exceptions_1.BaseException("Component '" + lang_1.stringify(component) + "' must have either 'template', 'templateUrl', or '@View' set.");
        } else if (lang_1.isPresent(compMeta.template) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("template", component);
        } else if (lang_1.isPresent(compMeta.templateUrl) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("templateUrl", component);
        } else if (lang_1.isPresent(compMeta.directives) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("directives", component);
        } else if (lang_1.isPresent(compMeta.pipes) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("pipes", component);
        } else if (lang_1.isPresent(compMeta.encapsulation) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("encapsulation", component);
        } else if (lang_1.isPresent(compMeta.styles) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("styles", component);
        } else if (lang_1.isPresent(compMeta.styleUrls) && lang_1.isPresent(viewMeta)) {
          this._throwMixingViewAndComponent("styleUrls", component);
        } else if (lang_1.isPresent(viewMeta)) {
          return viewMeta;
        } else {
          return new view_1.ViewMetadata({
            templateUrl: compMeta.templateUrl,
            template: compMeta.template,
            directives: compMeta.directives,
            pipes: compMeta.pipes,
            encapsulation: compMeta.encapsulation,
            styles: compMeta.styles,
            styleUrls: compMeta.styleUrls
          });
        }
      } else {
        if (lang_1.isBlank(viewMeta)) {
          throw new exceptions_1.BaseException("No View decorator found on component '" + lang_1.stringify(component) + "'");
        } else {
          return viewMeta;
        }
      }
      return null;
    };
    ViewResolver.prototype._throwMixingViewAndComponent = function(propertyName, component) {
      throw new exceptions_1.BaseException("Component '" + lang_1.stringify(component) + "' cannot have both '" + propertyName + "' and '@View' set at the same time\"");
    };
    ViewResolver = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], ViewResolver);
    return ViewResolver;
  })();
  exports.ViewResolver = ViewResolver;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver", ["npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  function _isDirectiveMetadata(type) {
    return type instanceof metadata_1.DirectiveMetadata;
  }
  var DirectiveResolver = (function() {
    function DirectiveResolver() {}
    DirectiveResolver.prototype.resolve = function(type) {
      var typeMetadata = reflection_1.reflector.annotations(di_1.resolveForwardRef(type));
      if (lang_1.isPresent(typeMetadata)) {
        var metadata = typeMetadata.find(_isDirectiveMetadata);
        if (lang_1.isPresent(metadata)) {
          var propertyMetadata = reflection_1.reflector.propMetadata(type);
          return this._mergeWithPropertyMetadata(metadata, propertyMetadata);
        }
      }
      throw new exceptions_1.BaseException("No Directive annotation found on " + lang_1.stringify(type));
    };
    DirectiveResolver.prototype._mergeWithPropertyMetadata = function(dm, propertyMetadata) {
      var inputs = [];
      var outputs = [];
      var host = {};
      var queries = {};
      collection_1.StringMapWrapper.forEach(propertyMetadata, function(metadata, propName) {
        metadata.forEach(function(a) {
          if (a instanceof metadata_1.InputMetadata) {
            if (lang_1.isPresent(a.bindingPropertyName)) {
              inputs.push(propName + ": " + a.bindingPropertyName);
            } else {
              inputs.push(propName);
            }
          }
          if (a instanceof metadata_1.OutputMetadata) {
            if (lang_1.isPresent(a.bindingPropertyName)) {
              outputs.push(propName + ": " + a.bindingPropertyName);
            } else {
              outputs.push(propName);
            }
          }
          if (a instanceof metadata_1.HostBindingMetadata) {
            if (lang_1.isPresent(a.hostPropertyName)) {
              host[("[" + a.hostPropertyName + "]")] = propName;
            } else {
              host[("[" + propName + "]")] = propName;
            }
          }
          if (a instanceof metadata_1.HostListenerMetadata) {
            var args = lang_1.isPresent(a.args) ? a.args.join(', ') : '';
            host[("(" + a.eventName + ")")] = propName + "(" + args + ")";
          }
          if (a instanceof metadata_1.ContentChildrenMetadata) {
            queries[propName] = a;
          }
          if (a instanceof metadata_1.ViewChildrenMetadata) {
            queries[propName] = a;
          }
          if (a instanceof metadata_1.ContentChildMetadata) {
            queries[propName] = a;
          }
          if (a instanceof metadata_1.ViewChildMetadata) {
            queries[propName] = a;
          }
        });
      });
      return this._merge(dm, inputs, outputs, host, queries);
    };
    DirectiveResolver.prototype._merge = function(dm, inputs, outputs, host, queries) {
      var mergedInputs = lang_1.isPresent(dm.inputs) ? collection_1.ListWrapper.concat(dm.inputs, inputs) : inputs;
      var mergedOutputs = lang_1.isPresent(dm.outputs) ? collection_1.ListWrapper.concat(dm.outputs, outputs) : outputs;
      var mergedHost = lang_1.isPresent(dm.host) ? collection_1.StringMapWrapper.merge(dm.host, host) : host;
      var mergedQueries = lang_1.isPresent(dm.queries) ? collection_1.StringMapWrapper.merge(dm.queries, queries) : queries;
      if (dm instanceof metadata_1.ComponentMetadata) {
        return new metadata_1.ComponentMetadata({
          selector: dm.selector,
          inputs: mergedInputs,
          outputs: mergedOutputs,
          host: mergedHost,
          exportAs: dm.exportAs,
          moduleId: dm.moduleId,
          queries: mergedQueries,
          changeDetection: dm.changeDetection,
          providers: dm.providers,
          viewProviders: dm.viewProviders
        });
      } else {
        return new metadata_1.DirectiveMetadata({
          selector: dm.selector,
          inputs: mergedInputs,
          outputs: mergedOutputs,
          host: mergedHost,
          exportAs: dm.exportAs,
          moduleId: dm.moduleId,
          queries: mergedQueries,
          providers: dm.providers
        });
      }
    };
    DirectiveResolver = __decorate([di_1.Injectable(), __metadata('design:paramtypes', [])], DirectiveResolver);
    return DirectiveResolver;
  })();
  exports.DirectiveResolver = DirectiveResolver;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/linker", ["npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver", "npm:angular2@2.0.0-alpha.46/src/core/linker/compiler", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager", "npm:angular2@2.0.0-alpha.46/src/core/linker/query_list", "npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader", "npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref", "npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref", "npm:angular2@2.0.0-alpha.46/src/core/linker/view_container_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var directive_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/directive_resolver');
  exports.DirectiveResolver = directive_resolver_1.DirectiveResolver;
  var view_resolver_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_resolver');
  exports.ViewResolver = view_resolver_1.ViewResolver;
  var compiler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/compiler');
  exports.Compiler = compiler_1.Compiler;
  var view_manager_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_manager');
  exports.AppViewManager = view_manager_1.AppViewManager;
  var query_list_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/query_list');
  exports.QueryList = query_list_1.QueryList;
  var dynamic_component_loader_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader');
  exports.DynamicComponentLoader = dynamic_component_loader_1.DynamicComponentLoader;
  var element_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/element_ref');
  exports.ElementRef = element_ref_1.ElementRef;
  var template_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/template_ref');
  exports.TemplateRef = template_ref_1.TemplateRef;
  var view_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_ref');
  exports.ViewRef = view_ref_1.ViewRef;
  exports.ProtoViewRef = view_ref_1.ProtoViewRef;
  var view_container_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/view_container_ref');
  exports.ViewContainerRef = view_container_ref_1.ViewContainerRef;
  var dynamic_component_loader_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker/dynamic_component_loader');
  exports.ComponentRef = dynamic_component_loader_2.ComponentRef;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives/ng_class", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/linker", "npm:angular2@2.0.0-alpha.46/src/core/change_detection", "npm:angular2@2.0.0-alpha.46/src/core/render", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var linker_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/linker');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection');
  var render_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/render');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var NgClass = (function() {
    function NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _renderer) {
      this._iterableDiffers = _iterableDiffers;
      this._keyValueDiffers = _keyValueDiffers;
      this._ngEl = _ngEl;
      this._renderer = _renderer;
      this._initialClasses = [];
    }
    Object.defineProperty(NgClass.prototype, "initialClasses", {
      set: function(v) {
        this._applyInitialClasses(true);
        this._initialClasses = lang_1.isPresent(v) && lang_1.isString(v) ? v.split(' ') : [];
        this._applyInitialClasses(false);
        this._applyClasses(this._rawClass, false);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(NgClass.prototype, "rawClass", {
      set: function(v) {
        this._cleanupClasses(this._rawClass);
        if (lang_1.isString(v)) {
          v = v.split(' ');
        }
        this._rawClass = v;
        if (lang_1.isPresent(v)) {
          if (collection_1.isListLikeIterable(v)) {
            this._differ = this._iterableDiffers.find(v).create(null);
            this._mode = 'iterable';
          } else {
            this._differ = this._keyValueDiffers.find(v).create(null);
            this._mode = 'keyValue';
          }
        } else {
          this._differ = null;
        }
      },
      enumerable: true,
      configurable: true
    });
    NgClass.prototype.doCheck = function() {
      if (lang_1.isPresent(this._differ)) {
        var changes = this._differ.diff(this._rawClass);
        if (lang_1.isPresent(changes)) {
          if (this._mode == 'iterable') {
            this._applyIterableChanges(changes);
          } else {
            this._applyKeyValueChanges(changes);
          }
        }
      }
    };
    NgClass.prototype.onDestroy = function() {
      this._cleanupClasses(this._rawClass);
    };
    NgClass.prototype._cleanupClasses = function(rawClassVal) {
      this._applyClasses(rawClassVal, true);
      this._applyInitialClasses(false);
    };
    NgClass.prototype._applyKeyValueChanges = function(changes) {
      var _this = this;
      changes.forEachAddedItem(function(record) {
        _this._toggleClass(record.key, record.currentValue);
      });
      changes.forEachChangedItem(function(record) {
        _this._toggleClass(record.key, record.currentValue);
      });
      changes.forEachRemovedItem(function(record) {
        if (record.previousValue) {
          _this._toggleClass(record.key, false);
        }
      });
    };
    NgClass.prototype._applyIterableChanges = function(changes) {
      var _this = this;
      changes.forEachAddedItem(function(record) {
        _this._toggleClass(record.item, true);
      });
      changes.forEachRemovedItem(function(record) {
        _this._toggleClass(record.item, false);
      });
    };
    NgClass.prototype._applyInitialClasses = function(isCleanup) {
      var _this = this;
      this._initialClasses.forEach(function(className) {
        return _this._toggleClass(className, !isCleanup);
      });
    };
    NgClass.prototype._applyClasses = function(rawClassVal, isCleanup) {
      var _this = this;
      if (lang_1.isPresent(rawClassVal)) {
        if (lang_1.isArray(rawClassVal)) {
          rawClassVal.forEach(function(className) {
            return _this._toggleClass(className, !isCleanup);
          });
        } else if (rawClassVal instanceof Set) {
          rawClassVal.forEach(function(className) {
            return _this._toggleClass(className, !isCleanup);
          });
        } else {
          collection_1.StringMapWrapper.forEach(rawClassVal, function(expVal, className) {
            if (expVal)
              _this._toggleClass(className, !isCleanup);
          });
        }
      }
    };
    NgClass.prototype._toggleClass = function(className, enabled) {
      className = className.trim();
      if (className.length > 0) {
        this._renderer.setElementClass(this._ngEl, className, enabled);
      }
    };
    NgClass = __decorate([metadata_1.Directive({
      selector: '[ng-class]',
      inputs: ['rawClass: ng-class', 'initialClasses: class']
    }), __metadata('design:paramtypes', [change_detection_1.IterableDiffers, change_detection_1.KeyValueDiffers, linker_1.ElementRef, render_1.Renderer])], NgClass);
    return NgClass;
  })();
  exports.NgClass = NgClass;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/directives", ["npm:angular2@2.0.0-alpha.46/src/common/directives/ng_class", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_for", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_if", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_style", "npm:angular2@2.0.0-alpha.46/src/common/directives/ng_switch", "npm:angular2@2.0.0-alpha.46/src/common/directives/observable_list_diff", "npm:angular2@2.0.0-alpha.46/src/common/directives/core_directives"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  var ng_class_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_class');
  exports.NgClass = ng_class_1.NgClass;
  var ng_for_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_for');
  exports.NgFor = ng_for_1.NgFor;
  var ng_if_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_if');
  exports.NgIf = ng_if_1.NgIf;
  var ng_style_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_style');
  exports.NgStyle = ng_style_1.NgStyle;
  var ng_switch_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/ng_switch');
  exports.NgSwitch = ng_switch_1.NgSwitch;
  exports.NgSwitchWhen = ng_switch_1.NgSwitchWhen;
  exports.NgSwitchDefault = ng_switch_1.NgSwitchDefault;
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/directives/observable_list_diff'));
  var core_directives_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/directives/core_directives');
  exports.CORE_DIRECTIVES = core_directives_1.CORE_DIRECTIVES;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/number_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/intl", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var intl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/intl');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var invalid_pipe_argument_exception_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception');
  var defaultLocale = 'en-US';
  var _re = lang_1.RegExpWrapper.create('^(\\d+)?\\.((\\d+)(\\-(\\d+))?)?$');
  var NumberPipe = (function() {
    function NumberPipe() {}
    NumberPipe._format = function(value, style, digits, currency, currencyAsSymbol) {
      if (currency === void 0) {
        currency = null;
      }
      if (currencyAsSymbol === void 0) {
        currencyAsSymbol = false;
      }
      if (lang_1.isBlank(value))
        return null;
      if (!lang_1.isNumber(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(NumberPipe, value);
      }
      var minInt = 1,
          minFraction = 0,
          maxFraction = 3;
      if (lang_1.isPresent(digits)) {
        var parts = lang_1.RegExpWrapper.firstMatch(_re, digits);
        if (lang_1.isBlank(parts)) {
          throw new exceptions_1.BaseException(digits + " is not a valid digit info for number pipes");
        }
        if (lang_1.isPresent(parts[1])) {
          minInt = lang_1.NumberWrapper.parseIntAutoRadix(parts[1]);
        }
        if (lang_1.isPresent(parts[3])) {
          minFraction = lang_1.NumberWrapper.parseIntAutoRadix(parts[3]);
        }
        if (lang_1.isPresent(parts[5])) {
          maxFraction = lang_1.NumberWrapper.parseIntAutoRadix(parts[5]);
        }
      }
      return intl_1.NumberFormatter.format(value, defaultLocale, style, {
        minimumIntegerDigits: minInt,
        minimumFractionDigits: minFraction,
        maximumFractionDigits: maxFraction,
        currency: currency,
        currencyAsSymbol: currencyAsSymbol
      });
    };
    NumberPipe = __decorate([lang_1.CONST(), di_1.Injectable(), __metadata('design:paramtypes', [])], NumberPipe);
    return NumberPipe;
  })();
  exports.NumberPipe = NumberPipe;
  var DecimalPipe = (function(_super) {
    __extends(DecimalPipe, _super);
    function DecimalPipe() {
      _super.apply(this, arguments);
    }
    DecimalPipe.prototype.transform = function(value, args) {
      var digits = collection_1.ListWrapper.first(args);
      return NumberPipe._format(value, intl_1.NumberFormatStyle.Decimal, digits);
    };
    DecimalPipe = __decorate([lang_1.CONST(), metadata_1.Pipe({name: 'number'}), di_1.Injectable(), __metadata('design:paramtypes', [])], DecimalPipe);
    return DecimalPipe;
  })(NumberPipe);
  exports.DecimalPipe = DecimalPipe;
  var PercentPipe = (function(_super) {
    __extends(PercentPipe, _super);
    function PercentPipe() {
      _super.apply(this, arguments);
    }
    PercentPipe.prototype.transform = function(value, args) {
      var digits = collection_1.ListWrapper.first(args);
      return NumberPipe._format(value, intl_1.NumberFormatStyle.Percent, digits);
    };
    PercentPipe = __decorate([lang_1.CONST(), metadata_1.Pipe({name: 'percent'}), di_1.Injectable(), __metadata('design:paramtypes', [])], PercentPipe);
    return PercentPipe;
  })(NumberPipe);
  exports.PercentPipe = PercentPipe;
  var CurrencyPipe = (function(_super) {
    __extends(CurrencyPipe, _super);
    function CurrencyPipe() {
      _super.apply(this, arguments);
    }
    CurrencyPipe.prototype.transform = function(value, args) {
      var currencyCode = lang_1.isPresent(args) && args.length > 0 ? args[0] : 'USD';
      var symbolDisplay = lang_1.isPresent(args) && args.length > 1 ? args[1] : false;
      var digits = lang_1.isPresent(args) && args.length > 2 ? args[2] : null;
      return NumberPipe._format(value, intl_1.NumberFormatStyle.Currency, digits, currencyCode, symbolDisplay);
    };
    CurrencyPipe = __decorate([lang_1.CONST(), metadata_1.Pipe({name: 'currency'}), di_1.Injectable(), __metadata('design:paramtypes', [])], CurrencyPipe);
    return CurrencyPipe;
  })(NumberPipe);
  exports.CurrencyPipe = CurrencyPipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/intl", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(NumberFormatStyle) {
    NumberFormatStyle[NumberFormatStyle["Decimal"] = 0] = "Decimal";
    NumberFormatStyle[NumberFormatStyle["Percent"] = 1] = "Percent";
    NumberFormatStyle[NumberFormatStyle["Currency"] = 2] = "Currency";
  })(exports.NumberFormatStyle || (exports.NumberFormatStyle = {}));
  var NumberFormatStyle = exports.NumberFormatStyle;
  var NumberFormatter = (function() {
    function NumberFormatter() {}
    NumberFormatter.format = function(num, locale, style, _a) {
      var _b = _a === void 0 ? {} : _a,
          _c = _b.minimumIntegerDigits,
          minimumIntegerDigits = _c === void 0 ? 1 : _c,
          _d = _b.minimumFractionDigits,
          minimumFractionDigits = _d === void 0 ? 0 : _d,
          _e = _b.maximumFractionDigits,
          maximumFractionDigits = _e === void 0 ? 3 : _e,
          currency = _b.currency,
          _f = _b.currencyAsSymbol,
          currencyAsSymbol = _f === void 0 ? false : _f;
      var intlOptions = {
        minimumIntegerDigits: minimumIntegerDigits,
        minimumFractionDigits: minimumFractionDigits,
        maximumFractionDigits: maximumFractionDigits
      };
      intlOptions.style = NumberFormatStyle[style].toLowerCase();
      if (style == NumberFormatStyle.Currency) {
        intlOptions.currency = currency;
        intlOptions.currencyDisplay = currencyAsSymbol ? 'symbol' : 'code';
      }
      return new Intl.NumberFormat(locale, intlOptions).format(num);
    };
    return NumberFormatter;
  })();
  exports.NumberFormatter = NumberFormatter;
  function digitCondition(len) {
    return len == 2 ? '2-digit' : 'numeric';
  }
  function nameCondition(len) {
    return len < 4 ? 'short' : 'long';
  }
  function extractComponents(pattern) {
    var ret = {};
    var i = 0,
        j;
    while (i < pattern.length) {
      j = i;
      while (j < pattern.length && pattern[j] == pattern[i])
        j++;
      var len = j - i;
      switch (pattern[i]) {
        case 'G':
          ret.era = nameCondition(len);
          break;
        case 'y':
          ret.year = digitCondition(len);
          break;
        case 'M':
          if (len >= 3)
            ret.month = nameCondition(len);
          else
            ret.month = digitCondition(len);
          break;
        case 'd':
          ret.day = digitCondition(len);
          break;
        case 'E':
          ret.weekday = nameCondition(len);
          break;
        case 'j':
          ret.hour = digitCondition(len);
          break;
        case 'h':
          ret.hour = digitCondition(len);
          ret.hour12 = true;
          break;
        case 'H':
          ret.hour = digitCondition(len);
          ret.hour12 = false;
          break;
        case 'm':
          ret.minute = digitCondition(len);
          break;
        case 's':
          ret.second = digitCondition(len);
          break;
        case 'z':
          ret.timeZoneName = 'long';
          break;
        case 'Z':
          ret.timeZoneName = 'short';
          break;
      }
      i = j;
    }
    return ret;
  }
  var dateFormatterCache = new Map();
  var DateFormatter = (function() {
    function DateFormatter() {}
    DateFormatter.format = function(date, locale, pattern) {
      var key = locale + pattern;
      if (dateFormatterCache.has(key)) {
        return dateFormatterCache.get(key).format(date);
      }
      var formatter = new Intl.DateTimeFormat(locale, extractComponents(pattern));
      dateFormatterCache.set(key, formatter);
      return formatter.format(date);
    };
    return DateFormatter;
  })();
  exports.DateFormatter = DateFormatter;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/date_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/intl", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var intl_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/intl');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var invalid_pipe_argument_exception_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception');
  var defaultLocale = 'en-US';
  var DatePipe = (function() {
    function DatePipe() {}
    DatePipe.prototype.transform = function(value, args) {
      if (lang_1.isBlank(value))
        return null;
      if (!this.supports(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(DatePipe, value);
      }
      var pattern = lang_1.isPresent(args) && args.length > 0 ? args[0] : 'mediumDate';
      if (lang_1.isNumber(value)) {
        value = lang_1.DateWrapper.fromMillis(value);
      }
      if (collection_1.StringMapWrapper.contains(DatePipe._ALIASES, pattern)) {
        pattern = collection_1.StringMapWrapper.get(DatePipe._ALIASES, pattern);
      }
      return intl_1.DateFormatter.format(value, defaultLocale, pattern);
    };
    DatePipe.prototype.supports = function(obj) {
      return lang_1.isDate(obj) || lang_1.isNumber(obj);
    };
    DatePipe._ALIASES = {
      'medium': 'yMMMdjms',
      'short': 'yMdjm',
      'fullDate': 'yMMMMEEEEd',
      'longDate': 'yMMMMd',
      'mediumDate': 'yMMMd',
      'shortDate': 'yMd',
      'mediumTime': 'jms',
      'shortTime': 'jm'
    };
    DatePipe = __decorate([lang_1.CONST(), metadata_1.Pipe({
      name: 'date',
      pure: true
    }), di_1.Injectable(), __metadata('design:paramtypes', [])], DatePipe);
    return DatePipe;
  })();
  exports.DatePipe = DatePipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/slice_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception", "npm:angular2@2.0.0-alpha.46/src/core/metadata"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var invalid_pipe_argument_exception_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var SlicePipe = (function() {
    function SlicePipe() {}
    SlicePipe.prototype.transform = function(value, args) {
      if (args === void 0) {
        args = null;
      }
      if (lang_1.isBlank(args) || args.length == 0) {
        throw new exceptions_1.BaseException('Slice pipe requires one argument');
      }
      if (!this.supports(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(SlicePipe, value);
      }
      if (lang_1.isBlank(value))
        return value;
      var start = args[0];
      var end = args.length > 1 ? args[1] : null;
      if (lang_1.isString(value)) {
        return lang_1.StringWrapper.slice(value, start, end);
      }
      return collection_1.ListWrapper.slice(value, start, end);
    };
    SlicePipe.prototype.supports = function(obj) {
      return lang_1.isString(obj) || lang_1.isArray(obj);
    };
    SlicePipe = __decorate([metadata_1.Pipe({
      name: 'slice',
      pure: false
    }), di_1.Injectable(), __metadata('design:paramtypes', [])], SlicePipe);
    return SlicePipe;
  })();
  exports.SlicePipe = SlicePipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/json_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var JsonPipe = (function() {
    function JsonPipe() {}
    JsonPipe.prototype.transform = function(value, args) {
      if (args === void 0) {
        args = null;
      }
      return lang_1.Json.stringify(value);
    };
    JsonPipe = __decorate([lang_1.CONST(), metadata_1.Pipe({
      name: 'json',
      pure: false
    }), di_1.Injectable(), __metadata('design:paramtypes', [])], JsonPipe);
    return JsonPipe;
  })();
  exports.JsonPipe = JsonPipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/lowercase_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var invalid_pipe_argument_exception_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception');
  var LowerCasePipe = (function() {
    function LowerCasePipe() {}
    LowerCasePipe.prototype.transform = function(value, args) {
      if (args === void 0) {
        args = null;
      }
      if (lang_1.isBlank(value))
        return value;
      if (!lang_1.isString(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(LowerCasePipe, value);
      }
      return value.toLowerCase();
    };
    LowerCasePipe = __decorate([lang_1.CONST(), metadata_1.Pipe({name: 'lowercase'}), di_1.Injectable(), __metadata('design:paramtypes', [])], LowerCasePipe);
    return LowerCasePipe;
  })();
  exports.LowerCasePipe = LowerCasePipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/uppercase_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var invalid_pipe_argument_exception_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception');
  var UpperCasePipe = (function() {
    function UpperCasePipe() {}
    UpperCasePipe.prototype.transform = function(value, args) {
      if (args === void 0) {
        args = null;
      }
      if (lang_1.isBlank(value))
        return value;
      if (!lang_1.isString(value)) {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(UpperCasePipe, value);
      }
      return value.toUpperCase();
    };
    UpperCasePipe = __decorate([lang_1.CONST(), metadata_1.Pipe({name: 'uppercase'}), di_1.Injectable(), __metadata('design:paramtypes', [])], UpperCasePipe);
    return UpperCasePipe;
  })();
  exports.UpperCasePipe = UpperCasePipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception", ["npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var InvalidPipeArgumentException = (function(_super) {
    __extends(InvalidPipeArgumentException, _super);
    function InvalidPipeArgumentException(type, value) {
      _super.call(this, "Invalid argument '" + value + "' for pipe '" + type + "'");
    }
    return InvalidPipeArgumentException;
  })(exceptions_1.BaseException);
  exports.InvalidPipeArgumentException = InvalidPipeArgumentException;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/metadata/view", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
        return Reflect.decorate(decorators, target, key, desc);
      switch (arguments.length) {
        case 2:
          return decorators.reduceRight(function(o, d) {
            return (d && d(o)) || o;
          }, target);
        case 3:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key)), void 0;
          }, void 0);
        case 4:
          return decorators.reduceRight(function(o, d) {
            return (d && d(target, key, o)) || o;
          }, desc);
      }
    };
    var __metadata = (this && this.__metadata) || function(k, v) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
        return Reflect.metadata(k, v);
    };
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    (function(ViewEncapsulation) {
      ViewEncapsulation[ViewEncapsulation["Emulated"] = 0] = "Emulated";
      ViewEncapsulation[ViewEncapsulation["Native"] = 1] = "Native";
      ViewEncapsulation[ViewEncapsulation["None"] = 2] = "None";
    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));
    var ViewEncapsulation = exports.ViewEncapsulation;
    exports.VIEW_ENCAPSULATION_VALUES = [ViewEncapsulation.Emulated, ViewEncapsulation.Native, ViewEncapsulation.None];
    var ViewMetadata = (function() {
      function ViewMetadata(_a) {
        var _b = _a === void 0 ? {} : _a,
            templateUrl = _b.templateUrl,
            template = _b.template,
            directives = _b.directives,
            pipes = _b.pipes,
            encapsulation = _b.encapsulation,
            styles = _b.styles,
            styleUrls = _b.styleUrls;
        this.templateUrl = templateUrl;
        this.template = template;
        this.styleUrls = styleUrls;
        this.styles = styles;
        this.directives = directives;
        this.pipes = pipes;
        this.encapsulation = encapsulation;
      }
      ViewMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], ViewMetadata);
      return ViewMetadata;
    })();
    exports.ViewMetadata = ViewMetadata;
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_facade", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function codify(obj) {
    return JSON.stringify(obj);
  }
  exports.codify = codify;
  function rawString(str) {
    return "'" + str + "'";
  }
  exports.rawString = rawString;
  function combineGeneratedStrings(vals) {
    return vals.join(' + ');
  }
  exports.combineGeneratedStrings = combineGeneratedStrings;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_logic_util", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_facade", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var codegen_facade_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_facade');
  var proto_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var CodegenLogicUtil = (function() {
    function CodegenLogicUtil(_names, _utilName, _changeDetectorStateName, _changeDetection) {
      this._names = _names;
      this._utilName = _utilName;
      this._changeDetectorStateName = _changeDetectorStateName;
      this._changeDetection = _changeDetection;
    }
    CodegenLogicUtil.prototype.genPropertyBindingEvalValue = function(protoRec) {
      var _this = this;
      return this._genEvalValue(protoRec, function(idx) {
        return _this._names.getLocalName(idx);
      }, this._names.getLocalsAccessorName());
    };
    CodegenLogicUtil.prototype.genEventBindingEvalValue = function(eventRecord, protoRec) {
      var _this = this;
      return this._genEvalValue(protoRec, function(idx) {
        return _this._names.getEventLocalName(eventRecord, idx);
      }, "locals");
    };
    CodegenLogicUtil.prototype._genEvalValue = function(protoRec, getLocalName, localsAccessor) {
      var context = (protoRec.contextIndex == -1) ? this._names.getDirectiveName(protoRec.directiveIndex) : getLocalName(protoRec.contextIndex);
      var argString = protoRec.args.map(function(arg) {
        return getLocalName(arg);
      }).join(", ");
      var rhs;
      switch (protoRec.mode) {
        case proto_record_1.RecordType.Self:
          rhs = context;
          break;
        case proto_record_1.RecordType.Const:
          rhs = codegen_facade_1.codify(protoRec.funcOrValue);
          break;
        case proto_record_1.RecordType.PropertyRead:
          rhs = this._observe(context + "." + protoRec.name, protoRec);
          break;
        case proto_record_1.RecordType.SafeProperty:
          var read = this._observe(context + "." + protoRec.name, protoRec);
          rhs = this._utilName + ".isValueBlank(" + context + ") ? null : " + this._observe(read, protoRec);
          break;
        case proto_record_1.RecordType.PropertyWrite:
          rhs = context + "." + protoRec.name + " = " + getLocalName(protoRec.args[0]);
          break;
        case proto_record_1.RecordType.Local:
          rhs = this._observe(localsAccessor + ".get(" + codegen_facade_1.rawString(protoRec.name) + ")", protoRec);
          break;
        case proto_record_1.RecordType.InvokeMethod:
          rhs = this._observe(context + "." + protoRec.name + "(" + argString + ")", protoRec);
          break;
        case proto_record_1.RecordType.SafeMethodInvoke:
          var invoke = context + "." + protoRec.name + "(" + argString + ")";
          rhs = this._utilName + ".isValueBlank(" + context + ") ? null : " + this._observe(invoke, protoRec);
          break;
        case proto_record_1.RecordType.InvokeClosure:
          rhs = context + "(" + argString + ")";
          break;
        case proto_record_1.RecordType.PrimitiveOp:
          rhs = this._utilName + "." + protoRec.name + "(" + argString + ")";
          break;
        case proto_record_1.RecordType.CollectionLiteral:
          rhs = this._utilName + "." + protoRec.name + "(" + argString + ")";
          break;
        case proto_record_1.RecordType.Interpolate:
          rhs = this._genInterpolation(protoRec);
          break;
        case proto_record_1.RecordType.KeyedRead:
          rhs = this._observe(context + "[" + getLocalName(protoRec.args[0]) + "]", protoRec);
          break;
        case proto_record_1.RecordType.KeyedWrite:
          rhs = context + "[" + getLocalName(protoRec.args[0]) + "] = " + getLocalName(protoRec.args[1]);
          break;
        case proto_record_1.RecordType.Chain:
          rhs = 'null';
          break;
        default:
          throw new exceptions_1.BaseException("Unknown operation " + protoRec.mode);
      }
      return getLocalName(protoRec.selfIndex) + " = " + rhs + ";";
    };
    CodegenLogicUtil.prototype._observe = function(exp, rec) {
      if (this._changeDetection === constants_1.ChangeDetectionStrategy.OnPushObserve) {
        return "this.observeValue(" + exp + ", " + rec.selfIndex + ")";
      } else {
        return exp;
      }
    };
    CodegenLogicUtil.prototype.genPropertyBindingTargets = function(propertyBindingTargets, genDebugInfo) {
      var _this = this;
      var bs = propertyBindingTargets.map(function(b) {
        if (lang_1.isBlank(b))
          return "null";
        var debug = genDebugInfo ? codegen_facade_1.codify(b.debug) : "null";
        return _this._utilName + ".bindingTarget(" + codegen_facade_1.codify(b.mode) + ", " + b.elementIndex + ", " + codegen_facade_1.codify(b.name) + ", " + codegen_facade_1.codify(b.unit) + ", " + debug + ")";
      });
      return "[" + bs.join(", ") + "]";
    };
    CodegenLogicUtil.prototype.genDirectiveIndices = function(directiveRecords) {
      var _this = this;
      var bs = directiveRecords.map(function(b) {
        return (_this._utilName + ".directiveIndex(" + b.directiveIndex.elementIndex + ", " + b.directiveIndex.directiveIndex + ")");
      });
      return "[" + bs.join(", ") + "]";
    };
    CodegenLogicUtil.prototype._genInterpolation = function(protoRec) {
      var iVals = [];
      for (var i = 0; i < protoRec.args.length; ++i) {
        iVals.push(codegen_facade_1.codify(protoRec.fixedArgs[i]));
        iVals.push(this._utilName + ".s(" + this._names.getLocalName(protoRec.args[i]) + ")");
      }
      iVals.push(codegen_facade_1.codify(protoRec.fixedArgs[protoRec.args.length]));
      return codegen_facade_1.combineGeneratedStrings(iVals);
    };
    CodegenLogicUtil.prototype.genHydrateDirectives = function(directiveRecords) {
      var res = [];
      for (var i = 0; i < directiveRecords.length; ++i) {
        var r = directiveRecords[i];
        res.push(this._names.getDirectiveName(r.directiveIndex) + " = " + this._genReadDirective(i) + ";");
      }
      return res.join("\n");
    };
    CodegenLogicUtil.prototype._genReadDirective = function(index) {
      if (this._changeDetection === constants_1.ChangeDetectionStrategy.OnPushObserve) {
        return "this.observeDirective(this.getDirectiveFor(directives, " + index + "), " + index + ")";
      } else {
        return "this.getDirectiveFor(directives, " + index + ")";
      }
    };
    CodegenLogicUtil.prototype.genHydrateDetectors = function(directiveRecords) {
      var res = [];
      for (var i = 0; i < directiveRecords.length; ++i) {
        var r = directiveRecords[i];
        if (!r.isDefaultChangeDetection()) {
          res.push(this._names.getDetectorName(r.directiveIndex) + " = this.getDetectorFor(directives, " + i + ");");
        }
      }
      return res.join("\n");
    };
    CodegenLogicUtil.prototype.genContentLifecycleCallbacks = function(directiveRecords) {
      var res = [];
      var eq = lang_1.IS_DART ? '==' : '===';
      for (var i = directiveRecords.length - 1; i >= 0; --i) {
        var dir = directiveRecords[i];
        if (dir.callAfterContentInit) {
          res.push("if(" + this._names.getStateName() + " " + eq + " " + this._changeDetectorStateName + ".NeverChecked) " + this._names.getDirectiveName(dir.directiveIndex) + ".afterContentInit();");
        }
        if (dir.callAfterContentChecked) {
          res.push(this._names.getDirectiveName(dir.directiveIndex) + ".afterContentChecked();");
        }
      }
      return res;
    };
    CodegenLogicUtil.prototype.genViewLifecycleCallbacks = function(directiveRecords) {
      var res = [];
      var eq = lang_1.IS_DART ? '==' : '===';
      for (var i = directiveRecords.length - 1; i >= 0; --i) {
        var dir = directiveRecords[i];
        if (dir.callAfterViewInit) {
          res.push("if(" + this._names.getStateName() + " " + eq + " " + this._changeDetectorStateName + ".NeverChecked) " + this._names.getDirectiveName(dir.directiveIndex) + ".afterViewInit();");
        }
        if (dir.callAfterViewChecked) {
          res.push(this._names.getDirectiveName(dir.directiveIndex) + ".afterViewChecked();");
        }
      }
      return res;
    };
    return CodegenLogicUtil;
  })();
  exports.CodegenLogicUtil = CodegenLogicUtil;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_name_util", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var _STATE_ACCESSOR = "state";
  var _CONTEXT_ACCESSOR = "context";
  var _PROP_BINDING_INDEX = "propertyBindingIndex";
  var _DIRECTIVES_ACCESSOR = "directiveIndices";
  var _DISPATCHER_ACCESSOR = "dispatcher";
  var _LOCALS_ACCESSOR = "locals";
  var _MODE_ACCESSOR = "mode";
  var _PIPES_ACCESSOR = "pipes";
  var _PROTOS_ACCESSOR = "protos";
  exports.CONTEXT_ACCESSOR = "context";
  exports.CONTEXT_INDEX = 0;
  var _FIELD_PREFIX = 'this.';
  var _whiteSpaceRegExp = /\W/g;
  function sanitizeName(s) {
    return lang_1.StringWrapper.replaceAll(s, _whiteSpaceRegExp, '');
  }
  exports.sanitizeName = sanitizeName;
  var CodegenNameUtil = (function() {
    function CodegenNameUtil(_records, _eventBindings, _directiveRecords, _utilName) {
      this._records = _records;
      this._eventBindings = _eventBindings;
      this._directiveRecords = _directiveRecords;
      this._utilName = _utilName;
      this._sanitizedEventNames = new collection_1.Map();
      this._sanitizedNames = collection_1.ListWrapper.createFixedSize(this._records.length + 1);
      this._sanitizedNames[exports.CONTEXT_INDEX] = exports.CONTEXT_ACCESSOR;
      for (var i = 0,
          iLen = this._records.length; i < iLen; ++i) {
        this._sanitizedNames[i + 1] = sanitizeName("" + this._records[i].name + i);
      }
      for (var ebIndex = 0; ebIndex < _eventBindings.length; ++ebIndex) {
        var eb = _eventBindings[ebIndex];
        var names = [exports.CONTEXT_ACCESSOR];
        for (var i = 0,
            iLen = eb.records.length; i < iLen; ++i) {
          names.push(sanitizeName("" + eb.records[i].name + i + "_" + ebIndex));
        }
        this._sanitizedEventNames.set(eb, names);
      }
    }
    CodegenNameUtil.prototype._addFieldPrefix = function(name) {
      return "" + _FIELD_PREFIX + name;
    };
    CodegenNameUtil.prototype.getDispatcherName = function() {
      return this._addFieldPrefix(_DISPATCHER_ACCESSOR);
    };
    CodegenNameUtil.prototype.getPipesAccessorName = function() {
      return this._addFieldPrefix(_PIPES_ACCESSOR);
    };
    CodegenNameUtil.prototype.getProtosName = function() {
      return this._addFieldPrefix(_PROTOS_ACCESSOR);
    };
    CodegenNameUtil.prototype.getDirectivesAccessorName = function() {
      return this._addFieldPrefix(_DIRECTIVES_ACCESSOR);
    };
    CodegenNameUtil.prototype.getLocalsAccessorName = function() {
      return this._addFieldPrefix(_LOCALS_ACCESSOR);
    };
    CodegenNameUtil.prototype.getStateName = function() {
      return this._addFieldPrefix(_STATE_ACCESSOR);
    };
    CodegenNameUtil.prototype.getModeName = function() {
      return this._addFieldPrefix(_MODE_ACCESSOR);
    };
    CodegenNameUtil.prototype.getPropertyBindingIndex = function() {
      return this._addFieldPrefix(_PROP_BINDING_INDEX);
    };
    CodegenNameUtil.prototype.getLocalName = function(idx) {
      return "l_" + this._sanitizedNames[idx];
    };
    CodegenNameUtil.prototype.getEventLocalName = function(eb, idx) {
      return "l_" + this._sanitizedEventNames.get(eb)[idx];
    };
    CodegenNameUtil.prototype.getChangeName = function(idx) {
      return "c_" + this._sanitizedNames[idx];
    };
    CodegenNameUtil.prototype.genInitLocals = function() {
      var declarations = [];
      var assignments = [];
      for (var i = 0,
          iLen = this.getFieldCount(); i < iLen; ++i) {
        if (i == exports.CONTEXT_INDEX) {
          declarations.push(this.getLocalName(i) + " = " + this.getFieldName(i));
        } else {
          var rec = this._records[i - 1];
          if (rec.argumentToPureFunction) {
            var changeName = this.getChangeName(i);
            declarations.push(this.getLocalName(i) + "," + changeName);
            assignments.push(changeName);
          } else {
            declarations.push("" + this.getLocalName(i));
          }
        }
      }
      var assignmentsCode = collection_1.ListWrapper.isEmpty(assignments) ? '' : assignments.join('=') + " = false;";
      return "var " + declarations.join(',') + ";" + assignmentsCode;
    };
    CodegenNameUtil.prototype.genInitEventLocals = function() {
      var _this = this;
      var res = [(this.getLocalName(exports.CONTEXT_INDEX) + " = " + this.getFieldName(exports.CONTEXT_INDEX))];
      this._sanitizedEventNames.forEach(function(names, eb) {
        for (var i = 0; i < names.length; ++i) {
          if (i !== exports.CONTEXT_INDEX) {
            res.push("" + _this.getEventLocalName(eb, i));
          }
        }
      });
      return res.length > 1 ? "var " + res.join(',') + ";" : '';
    };
    CodegenNameUtil.prototype.getPreventDefaultAccesor = function() {
      return "preventDefault";
    };
    CodegenNameUtil.prototype.getFieldCount = function() {
      return this._sanitizedNames.length;
    };
    CodegenNameUtil.prototype.getFieldName = function(idx) {
      return this._addFieldPrefix(this._sanitizedNames[idx]);
    };
    CodegenNameUtil.prototype.getAllFieldNames = function() {
      var fieldList = [];
      for (var k = 0,
          kLen = this.getFieldCount(); k < kLen; ++k) {
        if (k === 0 || this._records[k - 1].shouldBeChecked()) {
          fieldList.push(this.getFieldName(k));
        }
      }
      for (var i = 0,
          iLen = this._records.length; i < iLen; ++i) {
        var rec = this._records[i];
        if (rec.isPipeRecord()) {
          fieldList.push(this.getPipeName(rec.selfIndex));
        }
      }
      for (var j = 0,
          jLen = this._directiveRecords.length; j < jLen; ++j) {
        var dRec = this._directiveRecords[j];
        fieldList.push(this.getDirectiveName(dRec.directiveIndex));
        if (!dRec.isDefaultChangeDetection()) {
          fieldList.push(this.getDetectorName(dRec.directiveIndex));
        }
      }
      return fieldList;
    };
    CodegenNameUtil.prototype.genDehydrateFields = function() {
      var fields = this.getAllFieldNames();
      collection_1.ListWrapper.removeAt(fields, exports.CONTEXT_INDEX);
      if (collection_1.ListWrapper.isEmpty(fields))
        return '';
      fields.push(this._utilName + ".uninitialized;");
      return fields.join(' = ');
    };
    CodegenNameUtil.prototype.genPipeOnDestroy = function() {
      var _this = this;
      return this._records.filter(function(r) {
        return r.isPipeRecord();
      }).map(function(r) {
        return (_this._utilName + ".callPipeOnDestroy(" + _this.getPipeName(r.selfIndex) + ");");
      }).join('\n');
    };
    CodegenNameUtil.prototype.getPipeName = function(idx) {
      return this._addFieldPrefix(this._sanitizedNames[idx] + "_pipe");
    };
    CodegenNameUtil.prototype.getDirectiveName = function(d) {
      return this._addFieldPrefix("directive_" + d.name);
    };
    CodegenNameUtil.prototype.getDetectorName = function(d) {
      return this._addFieldPrefix("detector_" + d.name);
    };
    return CodegenNameUtil;
  })();
  exports.CodegenNameUtil = CodegenNameUtil;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_jit_generator", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/abstract_change_detector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_name_util", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_logic_util", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_facade", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_change_detector"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var abstract_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/abstract_change_detector');
  var change_detection_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util');
  var proto_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record');
  var codegen_name_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_name_util');
  var codegen_logic_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_logic_util');
  var codegen_facade_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/codegen_facade');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var proto_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_change_detector');
  var IS_CHANGED_LOCAL = "isChanged";
  var CHANGES_LOCAL = "changes";
  var ChangeDetectorJITGenerator = (function() {
    function ChangeDetectorJITGenerator(definition, changeDetectionUtilVarName, abstractChangeDetectorVarName, changeDetectorStateVarName) {
      this.changeDetectionUtilVarName = changeDetectionUtilVarName;
      this.abstractChangeDetectorVarName = abstractChangeDetectorVarName;
      this.changeDetectorStateVarName = changeDetectorStateVarName;
      var propertyBindingRecords = proto_change_detector_1.createPropertyRecords(definition);
      var eventBindingRecords = proto_change_detector_1.createEventRecords(definition);
      var propertyBindingTargets = definition.bindingRecords.map(function(b) {
        return b.target;
      });
      this.id = definition.id;
      this.changeDetectionStrategy = definition.strategy;
      this.genConfig = definition.genConfig;
      this.records = propertyBindingRecords;
      this.propertyBindingTargets = propertyBindingTargets;
      this.eventBindings = eventBindingRecords;
      this.directiveRecords = definition.directiveRecords;
      this._names = new codegen_name_util_1.CodegenNameUtil(this.records, this.eventBindings, this.directiveRecords, this.changeDetectionUtilVarName);
      this._logic = new codegen_logic_util_1.CodegenLogicUtil(this._names, this.changeDetectionUtilVarName, this.changeDetectorStateVarName, this.changeDetectionStrategy);
      this.typeName = codegen_name_util_1.sanitizeName("ChangeDetector_" + this.id);
    }
    ChangeDetectorJITGenerator.prototype.generate = function() {
      var factorySource = "\n      " + this.generateSource() + "\n      return function(dispatcher) {\n        return new " + this.typeName + "(dispatcher);\n      }\n    ";
      return new Function(this.abstractChangeDetectorVarName, this.changeDetectionUtilVarName, this.changeDetectorStateVarName, factorySource)(abstract_change_detector_1.AbstractChangeDetector, change_detection_util_1.ChangeDetectionUtil, constants_1.ChangeDetectorState);
    };
    ChangeDetectorJITGenerator.prototype.generateSource = function() {
      return "\n      var " + this.typeName + " = function " + this.typeName + "(dispatcher) {\n        " + this.abstractChangeDetectorVarName + ".call(\n            this, " + JSON.stringify(this.id) + ", dispatcher, " + this.records.length + ",\n            " + this.typeName + ".gen_propertyBindingTargets, " + this.typeName + ".gen_directiveIndices,\n            " + codegen_facade_1.codify(this.changeDetectionStrategy) + ");\n        this.dehydrateDirectives(false);\n      }\n\n      " + this.typeName + ".prototype = Object.create(" + this.abstractChangeDetectorVarName + ".prototype);\n\n      " + this.typeName + ".prototype.detectChangesInRecordsInternal = function(throwOnChange) {\n        " + this._names.genInitLocals() + "\n        var " + IS_CHANGED_LOCAL + " = false;\n        var " + CHANGES_LOCAL + " = null;\n\n        " + this._genAllRecords(this.records) + "\n      }\n\n      " + this._maybeGenHandleEventInternal() + "\n\n      " + this._maybeGenAfterContentLifecycleCallbacks() + "\n\n      " + this._maybeGenAfterViewLifecycleCallbacks() + "\n\n      " + this._maybeGenHydrateDirectives() + "\n\n      " + this._maybeGenDehydrateDirectives() + "\n\n      " + this._genPropertyBindingTargets() + "\n\n      " + this._genDirectiveIndices() + "\n    ";
    };
    ChangeDetectorJITGenerator.prototype._genPropertyBindingTargets = function() {
      var targets = this._logic.genPropertyBindingTargets(this.propertyBindingTargets, this.genConfig.genDebugInfo);
      return this.typeName + ".gen_propertyBindingTargets = " + targets + ";";
    };
    ChangeDetectorJITGenerator.prototype._genDirectiveIndices = function() {
      var indices = this._logic.genDirectiveIndices(this.directiveRecords);
      return this.typeName + ".gen_directiveIndices = " + indices + ";";
    };
    ChangeDetectorJITGenerator.prototype._maybeGenHandleEventInternal = function() {
      var _this = this;
      if (this.eventBindings.length > 0) {
        var handlers = this.eventBindings.map(function(eb) {
          return _this._genEventBinding(eb);
        }).join("\n");
        return "\n        " + this.typeName + ".prototype.handleEventInternal = function(eventName, elIndex, locals) {\n          var " + this._names.getPreventDefaultAccesor() + " = false;\n          " + this._names.genInitEventLocals() + "\n          " + handlers + "\n          return " + this._names.getPreventDefaultAccesor() + ";\n        }\n      ";
      } else {
        return '';
      }
    };
    ChangeDetectorJITGenerator.prototype._genEventBinding = function(eb) {
      var _this = this;
      var codes = [];
      this._endOfBlockIdxs = [];
      collection_1.ListWrapper.forEachWithIndex(eb.records, function(r, i) {
        var code;
        if (r.isConditionalSkipRecord()) {
          code = _this._genConditionalSkip(r, _this._names.getEventLocalName(eb, i));
        } else if (r.isUnconditionalSkipRecord()) {
          code = _this._genUnconditionalSkip(r);
        } else {
          code = _this._genEventBindingEval(eb, r);
        }
        code += _this._genEndOfSkipBlock(i);
        codes.push(code);
      });
      return "\n    if (eventName === \"" + eb.eventName + "\" && elIndex === " + eb.elIndex + ") {\n      " + codes.join("\n") + "\n    }";
    };
    ChangeDetectorJITGenerator.prototype._genEventBindingEval = function(eb, r) {
      if (r.lastInBinding) {
        var evalRecord = this._logic.genEventBindingEvalValue(eb, r);
        var markPath = this._genMarkPathToRootAsCheckOnce(r);
        var prevDefault = this._genUpdatePreventDefault(eb, r);
        return evalRecord + "\n" + markPath + "\n" + prevDefault;
      } else {
        return this._logic.genEventBindingEvalValue(eb, r);
      }
    };
    ChangeDetectorJITGenerator.prototype._genMarkPathToRootAsCheckOnce = function(r) {
      var br = r.bindingRecord;
      if (br.isDefaultChangeDetection()) {
        return "";
      } else {
        return this._names.getDetectorName(br.directiveRecord.directiveIndex) + ".markPathToRootAsCheckOnce();";
      }
    };
    ChangeDetectorJITGenerator.prototype._genUpdatePreventDefault = function(eb, r) {
      var local = this._names.getEventLocalName(eb, r.selfIndex);
      return "if (" + local + " === false) { " + this._names.getPreventDefaultAccesor() + " = true};";
    };
    ChangeDetectorJITGenerator.prototype._maybeGenDehydrateDirectives = function() {
      var destroyPipesCode = this._names.genPipeOnDestroy();
      if (destroyPipesCode) {
        destroyPipesCode = "if (destroyPipes) { " + destroyPipesCode + " }";
      }
      var dehydrateFieldsCode = this._names.genDehydrateFields();
      if (!destroyPipesCode && !dehydrateFieldsCode)
        return '';
      return this.typeName + ".prototype.dehydrateDirectives = function(destroyPipes) {\n        " + destroyPipesCode + "\n        " + dehydrateFieldsCode + "\n    }";
    };
    ChangeDetectorJITGenerator.prototype._maybeGenHydrateDirectives = function() {
      var hydrateDirectivesCode = this._logic.genHydrateDirectives(this.directiveRecords);
      var hydrateDetectorsCode = this._logic.genHydrateDetectors(this.directiveRecords);
      if (!hydrateDirectivesCode && !hydrateDetectorsCode)
        return '';
      return this.typeName + ".prototype.hydrateDirectives = function(directives) {\n      " + hydrateDirectivesCode + "\n      " + hydrateDetectorsCode + "\n    }";
    };
    ChangeDetectorJITGenerator.prototype._maybeGenAfterContentLifecycleCallbacks = function() {
      var notifications = this._logic.genContentLifecycleCallbacks(this.directiveRecords);
      if (notifications.length > 0) {
        var directiveNotifications = notifications.join("\n");
        return "\n        " + this.typeName + ".prototype.afterContentLifecycleCallbacksInternal = function() {\n          " + directiveNotifications + "\n        }\n      ";
      } else {
        return '';
      }
    };
    ChangeDetectorJITGenerator.prototype._maybeGenAfterViewLifecycleCallbacks = function() {
      var notifications = this._logic.genViewLifecycleCallbacks(this.directiveRecords);
      if (notifications.length > 0) {
        var directiveNotifications = notifications.join("\n");
        return "\n        " + this.typeName + ".prototype.afterViewLifecycleCallbacksInternal = function() {\n          " + directiveNotifications + "\n        }\n      ";
      } else {
        return '';
      }
    };
    ChangeDetectorJITGenerator.prototype._genAllRecords = function(rs) {
      var codes = [];
      this._endOfBlockIdxs = [];
      for (var i = 0; i < rs.length; i++) {
        var code = void 0;
        var r = rs[i];
        if (r.isLifeCycleRecord()) {
          code = this._genDirectiveLifecycle(r);
        } else if (r.isPipeRecord()) {
          code = this._genPipeCheck(r);
        } else if (r.isConditionalSkipRecord()) {
          code = this._genConditionalSkip(r, this._names.getLocalName(r.contextIndex));
        } else if (r.isUnconditionalSkipRecord()) {
          code = this._genUnconditionalSkip(r);
        } else {
          code = this._genReferenceCheck(r);
        }
        code = "\n        " + this._maybeFirstInBinding(r) + "\n        " + code + "\n        " + this._maybeGenLastInDirective(r) + "\n        " + this._genEndOfSkipBlock(i) + "\n      ";
        codes.push(code);
      }
      return codes.join("\n");
    };
    ChangeDetectorJITGenerator.prototype._genConditionalSkip = function(r, condition) {
      var maybeNegate = r.mode === proto_record_1.RecordType.SkipRecordsIf ? '!' : '';
      this._endOfBlockIdxs.push(r.fixedArgs[0] - 1);
      return "if (" + maybeNegate + condition + ") {";
    };
    ChangeDetectorJITGenerator.prototype._genUnconditionalSkip = function(r) {
      this._endOfBlockIdxs.pop();
      this._endOfBlockIdxs.push(r.fixedArgs[0] - 1);
      return "} else {";
    };
    ChangeDetectorJITGenerator.prototype._genEndOfSkipBlock = function(protoIndex) {
      if (!collection_1.ListWrapper.isEmpty(this._endOfBlockIdxs)) {
        var endOfBlock = collection_1.ListWrapper.last(this._endOfBlockIdxs);
        if (protoIndex === endOfBlock) {
          this._endOfBlockIdxs.pop();
          return '}';
        }
      }
      return '';
    };
    ChangeDetectorJITGenerator.prototype._genDirectiveLifecycle = function(r) {
      if (r.name === "DoCheck") {
        return this._genOnCheck(r);
      } else if (r.name === "OnInit") {
        return this._genOnInit(r);
      } else if (r.name === "OnChanges") {
        return this._genOnChange(r);
      } else {
        throw new exceptions_1.BaseException("Unknown lifecycle event '" + r.name + "'");
      }
    };
    ChangeDetectorJITGenerator.prototype._genPipeCheck = function(r) {
      var _this = this;
      var context = this._names.getLocalName(r.contextIndex);
      var argString = r.args.map(function(arg) {
        return _this._names.getLocalName(arg);
      }).join(", ");
      var oldValue = this._names.getFieldName(r.selfIndex);
      var newValue = this._names.getLocalName(r.selfIndex);
      var pipe = this._names.getPipeName(r.selfIndex);
      var pipeName = r.name;
      var init = "\n      if (" + pipe + " === " + this.changeDetectionUtilVarName + ".uninitialized) {\n        " + pipe + " = " + this._names.getPipesAccessorName() + ".get('" + pipeName + "');\n      }\n    ";
      var read = newValue + " = " + pipe + ".pipe.transform(" + context + ", [" + argString + "]);";
      var contexOrArgCheck = r.args.map(function(a) {
        return _this._names.getChangeName(a);
      });
      contexOrArgCheck.push(this._names.getChangeName(r.contextIndex));
      var condition = "!" + pipe + ".pure || (" + contexOrArgCheck.join(" || ") + ")";
      var check = "\n      if (" + this.changeDetectionUtilVarName + ".looseNotIdentical(" + oldValue + ", " + newValue + ")) {\n        " + newValue + " = " + this.changeDetectionUtilVarName + ".unwrapValue(" + newValue + ")\n        " + this._genChangeMarker(r) + "\n        " + this._genUpdateDirectiveOrElement(r) + "\n        " + this._genAddToChanges(r) + "\n        " + oldValue + " = " + newValue + ";\n      }\n    ";
      var genCode = r.shouldBeChecked() ? "" + read + check : read;
      if (r.isUsedByOtherRecord()) {
        return init + " if (" + condition + ") { " + genCode + " } else { " + newValue + " = " + oldValue + "; }";
      } else {
        return init + " if (" + condition + ") { " + genCode + " }";
      }
    };
    ChangeDetectorJITGenerator.prototype._genReferenceCheck = function(r) {
      var _this = this;
      var oldValue = this._names.getFieldName(r.selfIndex);
      var newValue = this._names.getLocalName(r.selfIndex);
      var read = "\n      " + this._logic.genPropertyBindingEvalValue(r) + "\n    ";
      var check = "\n      if (" + this.changeDetectionUtilVarName + ".looseNotIdentical(" + oldValue + ", " + newValue + ")) {\n        " + this._genChangeMarker(r) + "\n        " + this._genUpdateDirectiveOrElement(r) + "\n        " + this._genAddToChanges(r) + "\n        " + oldValue + " = " + newValue + ";\n      }\n    ";
      var genCode = r.shouldBeChecked() ? "" + read + check : read;
      if (r.isPureFunction()) {
        var condition = r.args.map(function(a) {
          return _this._names.getChangeName(a);
        }).join(" || ");
        if (r.isUsedByOtherRecord()) {
          return "if (" + condition + ") { " + genCode + " } else { " + newValue + " = " + oldValue + "; }";
        } else {
          return "if (" + condition + ") { " + genCode + " }";
        }
      } else {
        return genCode;
      }
    };
    ChangeDetectorJITGenerator.prototype._genChangeMarker = function(r) {
      return r.argumentToPureFunction ? this._names.getChangeName(r.selfIndex) + " = true" : "";
    };
    ChangeDetectorJITGenerator.prototype._genUpdateDirectiveOrElement = function(r) {
      if (!r.lastInBinding)
        return "";
      var newValue = this._names.getLocalName(r.selfIndex);
      var oldValue = this._names.getFieldName(r.selfIndex);
      var notifyDebug = this.genConfig.logBindingUpdate ? "this.logBindingUpdate(" + newValue + ");" : "";
      var br = r.bindingRecord;
      if (br.target.isDirective()) {
        var directiveProperty = this._names.getDirectiveName(br.directiveRecord.directiveIndex) + "." + br.target.name;
        return "\n        " + this._genThrowOnChangeCheck(oldValue, newValue) + "\n        " + directiveProperty + " = " + newValue + ";\n        " + notifyDebug + "\n        " + IS_CHANGED_LOCAL + " = true;\n      ";
      } else {
        return "\n        " + this._genThrowOnChangeCheck(oldValue, newValue) + "\n        this.notifyDispatcher(" + newValue + ");\n        " + notifyDebug + "\n      ";
      }
    };
    ChangeDetectorJITGenerator.prototype._genThrowOnChangeCheck = function(oldValue, newValue) {
      if (lang_1.assertionsEnabled()) {
        return "\n        if(throwOnChange) {\n          this.throwOnChangeError(" + oldValue + ", " + newValue + ");\n        }\n        ";
      } else {
        return '';
      }
    };
    ChangeDetectorJITGenerator.prototype._genAddToChanges = function(r) {
      var newValue = this._names.getLocalName(r.selfIndex);
      var oldValue = this._names.getFieldName(r.selfIndex);
      if (!r.bindingRecord.callOnChanges())
        return "";
      return CHANGES_LOCAL + " = this.addChange(" + CHANGES_LOCAL + ", " + oldValue + ", " + newValue + ");";
    };
    ChangeDetectorJITGenerator.prototype._maybeFirstInBinding = function(r) {
      var prev = change_detection_util_1.ChangeDetectionUtil.protoByIndex(this.records, r.selfIndex - 1);
      var firstInBinding = lang_1.isBlank(prev) || prev.bindingRecord !== r.bindingRecord;
      return firstInBinding && !r.bindingRecord.isDirectiveLifecycle() ? this._names.getPropertyBindingIndex() + " = " + r.propertyBindingIndex + ";" : '';
    };
    ChangeDetectorJITGenerator.prototype._maybeGenLastInDirective = function(r) {
      if (!r.lastInDirective)
        return "";
      return "\n      " + CHANGES_LOCAL + " = null;\n      " + this._genNotifyOnPushDetectors(r) + "\n      " + IS_CHANGED_LOCAL + " = false;\n    ";
    };
    ChangeDetectorJITGenerator.prototype._genOnCheck = function(r) {
      var br = r.bindingRecord;
      return "if (!throwOnChange) " + this._names.getDirectiveName(br.directiveRecord.directiveIndex) + ".doCheck();";
    };
    ChangeDetectorJITGenerator.prototype._genOnInit = function(r) {
      var br = r.bindingRecord;
      return "if (!throwOnChange && " + this._names.getStateName() + " === " + this.changeDetectorStateVarName + ".NeverChecked) " + this._names.getDirectiveName(br.directiveRecord.directiveIndex) + ".onInit();";
    };
    ChangeDetectorJITGenerator.prototype._genOnChange = function(r) {
      var br = r.bindingRecord;
      return "if (!throwOnChange && " + CHANGES_LOCAL + ") " + this._names.getDirectiveName(br.directiveRecord.directiveIndex) + ".onChanges(" + CHANGES_LOCAL + ");";
    };
    ChangeDetectorJITGenerator.prototype._genNotifyOnPushDetectors = function(r) {
      var br = r.bindingRecord;
      if (!r.lastInDirective || br.isDefaultChangeDetection())
        return "";
      var retVal = "\n      if(" + IS_CHANGED_LOCAL + ") {\n        " + this._names.getDetectorName(br.directiveRecord.directiveIndex) + ".markAsCheckOnce();\n      }\n    ";
      return retVal;
    };
    return ChangeDetectorJITGenerator;
  })();
  exports.ChangeDetectorJITGenerator = ChangeDetectorJITGenerator;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/jit_proto_change_detector", ["npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_jit_generator"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var change_detection_jit_generator_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_jit_generator');
  var JitProtoChangeDetector = (function() {
    function JitProtoChangeDetector(definition) {
      this.definition = definition;
      this._factory = this._createFactory(definition);
    }
    JitProtoChangeDetector.isSupported = function() {
      return true;
    };
    JitProtoChangeDetector.prototype.instantiate = function(dispatcher) {
      return this._factory(dispatcher);
    };
    JitProtoChangeDetector.prototype._createFactory = function(definition) {
      return new change_detection_jit_generator_1.ChangeDetectorJITGenerator(definition, 'util', 'AbstractChangeDetector', 'ChangeDetectorStatus').generate();
    };
    return JitProtoChangeDetector;
  })();
  exports.JitProtoChangeDetector = JitProtoChangeDetector;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/coalesce", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var proto_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record');
  function coalesce(srcRecords) {
    var dstRecords = [];
    var excludedIdxs = [];
    var indexMap = new collection_1.Map();
    var skipDepth = 0;
    var skipSources = collection_1.ListWrapper.createFixedSize(srcRecords.length);
    for (var protoIndex = 0; protoIndex < srcRecords.length; protoIndex++) {
      var skipRecord = skipSources[protoIndex];
      if (lang_1.isPresent(skipRecord)) {
        skipDepth--;
        skipRecord.fixedArgs[0] = dstRecords.length;
      }
      var src = srcRecords[protoIndex];
      var dst = _cloneAndUpdateIndexes(src, dstRecords, indexMap);
      if (dst.isSkipRecord()) {
        dstRecords.push(dst);
        skipDepth++;
        skipSources[dst.fixedArgs[0]] = dst;
      } else {
        var record = _mayBeAddRecord(dst, dstRecords, excludedIdxs, skipDepth > 0);
        indexMap.set(src.selfIndex, record.selfIndex);
      }
    }
    return _optimizeSkips(dstRecords);
  }
  exports.coalesce = coalesce;
  function _optimizeSkips(srcRecords) {
    var dstRecords = [];
    var skipSources = collection_1.ListWrapper.createFixedSize(srcRecords.length);
    var indexMap = new collection_1.Map();
    for (var protoIndex = 0; protoIndex < srcRecords.length; protoIndex++) {
      var skipRecord = skipSources[protoIndex];
      if (lang_1.isPresent(skipRecord)) {
        skipRecord.fixedArgs[0] = dstRecords.length;
      }
      var src = srcRecords[protoIndex];
      if (src.isSkipRecord()) {
        if (src.isConditionalSkipRecord() && src.fixedArgs[0] === protoIndex + 2 && protoIndex < srcRecords.length - 1 && srcRecords[protoIndex + 1].mode === proto_record_1.RecordType.SkipRecords) {
          src.mode = src.mode === proto_record_1.RecordType.SkipRecordsIf ? proto_record_1.RecordType.SkipRecordsIfNot : proto_record_1.RecordType.SkipRecordsIf;
          src.fixedArgs[0] = srcRecords[protoIndex + 1].fixedArgs[0];
          protoIndex++;
        }
        if (src.fixedArgs[0] > protoIndex + 1) {
          var dst = _cloneAndUpdateIndexes(src, dstRecords, indexMap);
          dstRecords.push(dst);
          skipSources[dst.fixedArgs[0]] = dst;
        }
      } else {
        var dst = _cloneAndUpdateIndexes(src, dstRecords, indexMap);
        dstRecords.push(dst);
        indexMap.set(src.selfIndex, dst.selfIndex);
      }
    }
    return dstRecords;
  }
  function _mayBeAddRecord(record, dstRecords, excludedIdxs, excluded) {
    var match = _findFirstMatch(record, dstRecords, excludedIdxs);
    if (lang_1.isPresent(match)) {
      if (record.lastInBinding) {
        dstRecords.push(_createSelfRecord(record, match.selfIndex, dstRecords.length + 1));
        match.referencedBySelf = true;
      } else {
        if (record.argumentToPureFunction) {
          match.argumentToPureFunction = true;
        }
      }
      return match;
    }
    if (excluded) {
      excludedIdxs.push(record.selfIndex);
    }
    dstRecords.push(record);
    return record;
  }
  function _findFirstMatch(record, dstRecords, excludedIdxs) {
    return dstRecords.find(function(rr) {
      return excludedIdxs.indexOf(rr.selfIndex) == -1 && rr.mode !== proto_record_1.RecordType.DirectiveLifecycle && _haveSameDirIndex(rr, record) && rr.mode === record.mode && lang_1.looseIdentical(rr.funcOrValue, record.funcOrValue) && rr.contextIndex === record.contextIndex && lang_1.looseIdentical(rr.name, record.name) && collection_1.ListWrapper.equals(rr.args, record.args);
    });
  }
  function _cloneAndUpdateIndexes(record, dstRecords, indexMap) {
    var args = record.args.map(function(src) {
      return _srcToDstSelfIndex(indexMap, src);
    });
    var contextIndex = _srcToDstSelfIndex(indexMap, record.contextIndex);
    var selfIndex = dstRecords.length + 1;
    return new proto_record_1.ProtoRecord(record.mode, record.name, record.funcOrValue, args, record.fixedArgs, contextIndex, record.directiveIndex, selfIndex, record.bindingRecord, record.lastInBinding, record.lastInDirective, record.argumentToPureFunction, record.referencedBySelf, record.propertyBindingIndex);
  }
  function _srcToDstSelfIndex(indexMap, srcIdx) {
    var dstIdx = indexMap.get(srcIdx);
    return lang_1.isPresent(dstIdx) ? dstIdx : srcIdx;
  }
  function _createSelfRecord(r, contextIndex, selfIndex) {
    return new proto_record_1.ProtoRecord(proto_record_1.RecordType.Self, "self", null, [], r.fixedArgs, contextIndex, r.directiveIndex, selfIndex, r.bindingRecord, r.lastInBinding, r.lastInDirective, false, false, r.propertyBindingIndex);
  }
  function _haveSameDirIndex(a, b) {
    var di1 = lang_1.isBlank(a.directiveIndex) ? null : a.directiveIndex.directiveIndex;
    var ei1 = lang_1.isBlank(a.directiveIndex) ? null : a.directiveIndex.elementIndex;
    var di2 = lang_1.isBlank(b.directiveIndex) ? null : b.directiveIndex.directiveIndex;
    var ei2 = lang_1.isBlank(b.directiveIndex) ? null : b.directiveIndex.elementIndex;
    return di1 === di2 && ei1 === ei2;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/event_binding", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var EventBinding = (function() {
    function EventBinding(eventName, elIndex, dirIndex, records) {
      this.eventName = eventName;
      this.elIndex = elIndex;
      this.dirIndex = dirIndex;
      this.records = records;
    }
    return EventBinding;
  })();
  exports.EventBinding = EventBinding;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(RecordType) {
    RecordType[RecordType["Self"] = 0] = "Self";
    RecordType[RecordType["Const"] = 1] = "Const";
    RecordType[RecordType["PrimitiveOp"] = 2] = "PrimitiveOp";
    RecordType[RecordType["PropertyRead"] = 3] = "PropertyRead";
    RecordType[RecordType["PropertyWrite"] = 4] = "PropertyWrite";
    RecordType[RecordType["Local"] = 5] = "Local";
    RecordType[RecordType["InvokeMethod"] = 6] = "InvokeMethod";
    RecordType[RecordType["InvokeClosure"] = 7] = "InvokeClosure";
    RecordType[RecordType["KeyedRead"] = 8] = "KeyedRead";
    RecordType[RecordType["KeyedWrite"] = 9] = "KeyedWrite";
    RecordType[RecordType["Pipe"] = 10] = "Pipe";
    RecordType[RecordType["Interpolate"] = 11] = "Interpolate";
    RecordType[RecordType["SafeProperty"] = 12] = "SafeProperty";
    RecordType[RecordType["CollectionLiteral"] = 13] = "CollectionLiteral";
    RecordType[RecordType["SafeMethodInvoke"] = 14] = "SafeMethodInvoke";
    RecordType[RecordType["DirectiveLifecycle"] = 15] = "DirectiveLifecycle";
    RecordType[RecordType["Chain"] = 16] = "Chain";
    RecordType[RecordType["SkipRecordsIf"] = 17] = "SkipRecordsIf";
    RecordType[RecordType["SkipRecordsIfNot"] = 18] = "SkipRecordsIfNot";
    RecordType[RecordType["SkipRecords"] = 19] = "SkipRecords";
  })(exports.RecordType || (exports.RecordType = {}));
  var RecordType = exports.RecordType;
  var ProtoRecord = (function() {
    function ProtoRecord(mode, name, funcOrValue, args, fixedArgs, contextIndex, directiveIndex, selfIndex, bindingRecord, lastInBinding, lastInDirective, argumentToPureFunction, referencedBySelf, propertyBindingIndex) {
      this.mode = mode;
      this.name = name;
      this.funcOrValue = funcOrValue;
      this.args = args;
      this.fixedArgs = fixedArgs;
      this.contextIndex = contextIndex;
      this.directiveIndex = directiveIndex;
      this.selfIndex = selfIndex;
      this.bindingRecord = bindingRecord;
      this.lastInBinding = lastInBinding;
      this.lastInDirective = lastInDirective;
      this.argumentToPureFunction = argumentToPureFunction;
      this.referencedBySelf = referencedBySelf;
      this.propertyBindingIndex = propertyBindingIndex;
    }
    ProtoRecord.prototype.isPureFunction = function() {
      return this.mode === RecordType.Interpolate || this.mode === RecordType.CollectionLiteral;
    };
    ProtoRecord.prototype.isUsedByOtherRecord = function() {
      return !this.lastInBinding || this.referencedBySelf;
    };
    ProtoRecord.prototype.shouldBeChecked = function() {
      return this.argumentToPureFunction || this.lastInBinding || this.isPureFunction() || this.isPipeRecord();
    };
    ProtoRecord.prototype.isPipeRecord = function() {
      return this.mode === RecordType.Pipe;
    };
    ProtoRecord.prototype.isConditionalSkipRecord = function() {
      return this.mode === RecordType.SkipRecordsIfNot || this.mode === RecordType.SkipRecordsIf;
    };
    ProtoRecord.prototype.isUnconditionalSkipRecord = function() {
      return this.mode === RecordType.SkipRecords;
    };
    ProtoRecord.prototype.isSkipRecord = function() {
      return this.isConditionalSkipRecord() || this.isUnconditionalSkipRecord();
    };
    ProtoRecord.prototype.isLifeCycleRecord = function() {
      return this.mode === RecordType.DirectiveLifecycle;
    };
    return ProtoRecord;
  })();
  exports.ProtoRecord = ProtoRecord;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/observable_facade", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function isObservable(value) {
    return false;
  }
  exports.isObservable = isObservable;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/profile/wtf_impl", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var trace;
  var events;
  function detectWTF() {
    var wtf = lang_1.global['wtf'];
    if (wtf) {
      trace = wtf['trace'];
      if (trace) {
        events = trace['events'];
        return true;
      }
    }
    return false;
  }
  exports.detectWTF = detectWTF;
  function createScope(signature, flags) {
    if (flags === void 0) {
      flags = null;
    }
    return events.createScope(signature, flags);
  }
  exports.createScope = createScope;
  function leave(scope, returnValue) {
    trace.leaveScope(scope, returnValue);
    return returnValue;
  }
  exports.leave = leave;
  function startTimeRange(rangeType, action) {
    return trace.beginTimeRange(rangeType, action);
  }
  exports.startTimeRange = startTimeRange;
  function endTimeRange(range) {
    trace.endTimeRange(range);
  }
  exports.endTimeRange = endTimeRange;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/profile/profile", ["npm:angular2@2.0.0-alpha.46/src/core/profile/wtf_impl"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var impl = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/wtf_impl');
  exports.wtfEnabled = impl.detectWTF();
  function noopScope(arg0, arg1) {
    return null;
  }
  exports.wtfCreateScope = exports.wtfEnabled ? impl.createScope : function(signature, flags) {
    return noopScope;
  };
  exports.wtfLeave = exports.wtfEnabled ? impl.leave : function(s, r) {
    return r;
  };
  exports.wtfStartTimeRange = exports.wtfEnabled ? impl.startTimeRange : function(rangeType, action) {
    return null;
  };
  exports.wtfEndTimeRange = exports.wtfEnabled ? impl.endTimeRange : function(r) {
    return null;
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detector_ref", ["npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var ChangeDetectorRef = (function() {
    function ChangeDetectorRef() {}
    return ChangeDetectorRef;
  })();
  exports.ChangeDetectorRef = ChangeDetectorRef;
  var ChangeDetectorRef_ = (function(_super) {
    __extends(ChangeDetectorRef_, _super);
    function ChangeDetectorRef_(_cd) {
      _super.call(this);
      this._cd = _cd;
    }
    ChangeDetectorRef_.prototype.markForCheck = function() {
      this._cd.markPathToRootAsCheckOnce();
    };
    ChangeDetectorRef_.prototype.detach = function() {
      this._cd.mode = constants_1.ChangeDetectionStrategy.Detached;
    };
    ChangeDetectorRef_.prototype.detectChanges = function() {
      this._cd.detectChanges();
    };
    ChangeDetectorRef_.prototype.checkNoChanges = function() {
      this._cd.checkNoChanges();
    };
    ChangeDetectorRef_.prototype.reattach = function() {
      this._cd.mode = constants_1.ChangeDetectionStrategy.CheckAlways;
      this.markForCheck();
    };
    return ChangeDetectorRef_;
  })(ChangeDetectorRef);
  exports.ChangeDetectorRef_ = ChangeDetectorRef_;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/abstract_change_detector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detector_ref", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", "npm:angular2@2.0.0-alpha.46/src/core/profile/profile", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/observable_facade"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var change_detection_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util');
  var change_detector_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detector_ref');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/exceptions');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var profile_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/profile/profile');
  var observable_facade_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/observable_facade');
  var _scope_check = profile_1.wtfCreateScope("ChangeDetector#check(ascii id, bool throwOnChange)");
  var _Context = (function() {
    function _Context(element, componentElement, context, locals, injector, expression) {
      this.element = element;
      this.componentElement = componentElement;
      this.context = context;
      this.locals = locals;
      this.injector = injector;
      this.expression = expression;
    }
    return _Context;
  })();
  var AbstractChangeDetector = (function() {
    function AbstractChangeDetector(id, dispatcher, numberOfPropertyProtoRecords, bindingTargets, directiveIndices, strategy) {
      this.id = id;
      this.dispatcher = dispatcher;
      this.numberOfPropertyProtoRecords = numberOfPropertyProtoRecords;
      this.bindingTargets = bindingTargets;
      this.directiveIndices = directiveIndices;
      this.strategy = strategy;
      this.contentChildren = [];
      this.viewChildren = [];
      this.state = constants_1.ChangeDetectorState.NeverChecked;
      this.locals = null;
      this.mode = null;
      this.pipes = null;
      this.ref = new change_detector_ref_1.ChangeDetectorRef_(this);
    }
    AbstractChangeDetector.prototype.addContentChild = function(cd) {
      this.contentChildren.push(cd);
      cd.parent = this;
    };
    AbstractChangeDetector.prototype.removeContentChild = function(cd) {
      collection_1.ListWrapper.remove(this.contentChildren, cd);
    };
    AbstractChangeDetector.prototype.addViewChild = function(cd) {
      this.viewChildren.push(cd);
      cd.parent = this;
    };
    AbstractChangeDetector.prototype.removeViewChild = function(cd) {
      collection_1.ListWrapper.remove(this.viewChildren, cd);
    };
    AbstractChangeDetector.prototype.remove = function() {
      this.parent.removeContentChild(this);
    };
    AbstractChangeDetector.prototype.handleEvent = function(eventName, elIndex, locals) {
      var res = this.handleEventInternal(eventName, elIndex, locals);
      this.markPathToRootAsCheckOnce();
      return res;
    };
    AbstractChangeDetector.prototype.handleEventInternal = function(eventName, elIndex, locals) {
      return false;
    };
    AbstractChangeDetector.prototype.detectChanges = function() {
      this.runDetectChanges(false);
    };
    AbstractChangeDetector.prototype.checkNoChanges = function() {
      if (lang_1.assertionsEnabled()) {
        this.runDetectChanges(true);
      }
    };
    AbstractChangeDetector.prototype.runDetectChanges = function(throwOnChange) {
      if (this.mode === constants_1.ChangeDetectionStrategy.Detached || this.mode === constants_1.ChangeDetectionStrategy.Checked || this.state === constants_1.ChangeDetectorState.Errored)
        return;
      var s = _scope_check(this.id, throwOnChange);
      this.detectChangesInRecords(throwOnChange);
      this._detectChangesContentChildren(throwOnChange);
      if (!throwOnChange)
        this.afterContentLifecycleCallbacks();
      this._detectChangesInViewChildren(throwOnChange);
      if (!throwOnChange)
        this.afterViewLifecycleCallbacks();
      if (this.mode === constants_1.ChangeDetectionStrategy.CheckOnce)
        this.mode = constants_1.ChangeDetectionStrategy.Checked;
      this.state = constants_1.ChangeDetectorState.CheckedBefore;
      profile_1.wtfLeave(s);
    };
    AbstractChangeDetector.prototype.detectChangesInRecords = function(throwOnChange) {
      if (!this.hydrated()) {
        this.throwDehydratedError();
      }
      try {
        this.detectChangesInRecordsInternal(throwOnChange);
      } catch (e) {
        if (!(e instanceof exceptions_1.ExpressionChangedAfterItHasBeenCheckedException)) {
          this.state = constants_1.ChangeDetectorState.Errored;
        }
        this._throwError(e, e.stack);
      }
    };
    AbstractChangeDetector.prototype.detectChangesInRecordsInternal = function(throwOnChange) {};
    AbstractChangeDetector.prototype.hydrate = function(context, locals, directives, pipes) {
      this.mode = change_detection_util_1.ChangeDetectionUtil.changeDetectionMode(this.strategy);
      this.context = context;
      if (this.strategy === constants_1.ChangeDetectionStrategy.OnPushObserve) {
        this.observeComponent(context);
      }
      this.locals = locals;
      this.pipes = pipes;
      this.hydrateDirectives(directives);
      this.state = constants_1.ChangeDetectorState.NeverChecked;
    };
    AbstractChangeDetector.prototype.hydrateDirectives = function(directives) {};
    AbstractChangeDetector.prototype.dehydrate = function() {
      this.dehydrateDirectives(true);
      if (this.strategy === constants_1.ChangeDetectionStrategy.OnPushObserve) {
        this._unsubsribeFromObservables();
      }
      this.context = null;
      this.locals = null;
      this.pipes = null;
    };
    AbstractChangeDetector.prototype.dehydrateDirectives = function(destroyPipes) {};
    AbstractChangeDetector.prototype.hydrated = function() {
      return this.context !== null;
    };
    AbstractChangeDetector.prototype.afterContentLifecycleCallbacks = function() {
      this.dispatcher.notifyAfterContentChecked();
      this.afterContentLifecycleCallbacksInternal();
    };
    AbstractChangeDetector.prototype.afterContentLifecycleCallbacksInternal = function() {};
    AbstractChangeDetector.prototype.afterViewLifecycleCallbacks = function() {
      this.dispatcher.notifyAfterViewChecked();
      this.afterViewLifecycleCallbacksInternal();
    };
    AbstractChangeDetector.prototype.afterViewLifecycleCallbacksInternal = function() {};
    AbstractChangeDetector.prototype._detectChangesContentChildren = function(throwOnChange) {
      var c = this.contentChildren;
      for (var i = 0; i < c.length; ++i) {
        c[i].runDetectChanges(throwOnChange);
      }
    };
    AbstractChangeDetector.prototype._detectChangesInViewChildren = function(throwOnChange) {
      var c = this.viewChildren;
      for (var i = 0; i < c.length; ++i) {
        c[i].runDetectChanges(throwOnChange);
      }
    };
    AbstractChangeDetector.prototype.markAsCheckOnce = function() {
      this.mode = constants_1.ChangeDetectionStrategy.CheckOnce;
    };
    AbstractChangeDetector.prototype.markPathToRootAsCheckOnce = function() {
      var c = this;
      while (lang_1.isPresent(c) && c.mode !== constants_1.ChangeDetectionStrategy.Detached) {
        if (c.mode === constants_1.ChangeDetectionStrategy.Checked)
          c.mode = constants_1.ChangeDetectionStrategy.CheckOnce;
        c = c.parent;
      }
    };
    AbstractChangeDetector.prototype._unsubsribeFromObservables = function() {
      if (lang_1.isPresent(this.subscriptions)) {
        for (var i = 0; i < this.subscriptions.length; ++i) {
          var s = this.subscriptions[i];
          if (lang_1.isPresent(this.subscriptions[i])) {
            s.cancel();
            this.subscriptions[i] = null;
          }
        }
      }
    };
    AbstractChangeDetector.prototype.observeValue = function(value, index) {
      var _this = this;
      if (observable_facade_1.isObservable(value)) {
        this._createArrayToStoreObservables();
        if (lang_1.isBlank(this.subscriptions[index])) {
          this.streams[index] = value.changes;
          this.subscriptions[index] = value.changes.listen(function(_) {
            return _this.ref.markForCheck();
          });
        } else if (this.streams[index] !== value.changes) {
          this.subscriptions[index].cancel();
          this.streams[index] = value.changes;
          this.subscriptions[index] = value.changes.listen(function(_) {
            return _this.ref.markForCheck();
          });
        }
      }
      return value;
    };
    AbstractChangeDetector.prototype.observeDirective = function(value, index) {
      var _this = this;
      if (observable_facade_1.isObservable(value)) {
        this._createArrayToStoreObservables();
        var arrayIndex = this.numberOfPropertyProtoRecords + index + 2;
        this.streams[arrayIndex] = value.changes;
        this.subscriptions[arrayIndex] = value.changes.listen(function(_) {
          return _this.ref.markForCheck();
        });
      }
      return value;
    };
    AbstractChangeDetector.prototype.observeComponent = function(value) {
      var _this = this;
      if (observable_facade_1.isObservable(value)) {
        this._createArrayToStoreObservables();
        var index = this.numberOfPropertyProtoRecords + 1;
        this.streams[index] = value.changes;
        this.subscriptions[index] = value.changes.listen(function(_) {
          return _this.ref.markForCheck();
        });
      }
      return value;
    };
    AbstractChangeDetector.prototype._createArrayToStoreObservables = function() {
      if (lang_1.isBlank(this.subscriptions)) {
        this.subscriptions = collection_1.ListWrapper.createFixedSize(this.numberOfPropertyProtoRecords + this.directiveIndices.length + 2);
        this.streams = collection_1.ListWrapper.createFixedSize(this.numberOfPropertyProtoRecords + this.directiveIndices.length + 2);
      }
    };
    AbstractChangeDetector.prototype.getDirectiveFor = function(directives, index) {
      return directives.getDirectiveFor(this.directiveIndices[index]);
    };
    AbstractChangeDetector.prototype.getDetectorFor = function(directives, index) {
      return directives.getDetectorFor(this.directiveIndices[index]);
    };
    AbstractChangeDetector.prototype.notifyDispatcher = function(value) {
      this.dispatcher.notifyOnBinding(this._currentBinding(), value);
    };
    AbstractChangeDetector.prototype.logBindingUpdate = function(value) {
      this.dispatcher.logBindingUpdate(this._currentBinding(), value);
    };
    AbstractChangeDetector.prototype.addChange = function(changes, oldValue, newValue) {
      if (lang_1.isBlank(changes)) {
        changes = {};
      }
      changes[this._currentBinding().name] = change_detection_util_1.ChangeDetectionUtil.simpleChange(oldValue, newValue);
      return changes;
    };
    AbstractChangeDetector.prototype._throwError = function(exception, stack) {
      var error;
      try {
        var c = this.dispatcher.getDebugContext(this._currentBinding().elementIndex, null);
        var context = lang_1.isPresent(c) ? new _Context(c.element, c.componentElement, c.context, c.locals, c.injector, this._currentBinding().debug) : null;
        error = new exceptions_1.ChangeDetectionError(this._currentBinding().debug, exception, stack, context);
      } catch (e) {
        error = new exceptions_1.ChangeDetectionError(null, exception, stack, null);
      }
      throw error;
    };
    AbstractChangeDetector.prototype.throwOnChangeError = function(oldValue, newValue) {
      throw new exceptions_1.ExpressionChangedAfterItHasBeenCheckedException(this._currentBinding().debug, oldValue, newValue, null);
    };
    AbstractChangeDetector.prototype.throwDehydratedError = function() {
      throw new exceptions_1.DehydratedException();
    };
    AbstractChangeDetector.prototype._currentBinding = function() {
      return this.bindingTargets[this.propertyBindingIndex];
    };
    return AbstractChangeDetector;
  })();
  exports.AbstractChangeDetector = AbstractChangeDetector;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/dynamic_change_detector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/abstract_change_detector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var abstract_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/abstract_change_detector');
  var change_detection_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var proto_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record');
  var DynamicChangeDetector = (function(_super) {
    __extends(DynamicChangeDetector, _super);
    function DynamicChangeDetector(id, dispatcher, numberOfPropertyProtoRecords, propertyBindingTargets, directiveIndices, strategy, _records, _eventBindings, _directiveRecords, _genConfig) {
      _super.call(this, id, dispatcher, numberOfPropertyProtoRecords, propertyBindingTargets, directiveIndices, strategy);
      this._records = _records;
      this._eventBindings = _eventBindings;
      this._directiveRecords = _directiveRecords;
      this._genConfig = _genConfig;
      this.directives = null;
      var len = _records.length + 1;
      this.values = collection_1.ListWrapper.createFixedSize(len);
      this.localPipes = collection_1.ListWrapper.createFixedSize(len);
      this.prevContexts = collection_1.ListWrapper.createFixedSize(len);
      this.changes = collection_1.ListWrapper.createFixedSize(len);
      this.dehydrateDirectives(false);
    }
    DynamicChangeDetector.prototype.handleEventInternal = function(eventName, elIndex, locals) {
      var _this = this;
      var preventDefault = false;
      this._matchingEventBindings(eventName, elIndex).forEach(function(rec) {
        var res = _this._processEventBinding(rec, locals);
        if (res === false) {
          preventDefault = true;
        }
      });
      return preventDefault;
    };
    DynamicChangeDetector.prototype._processEventBinding = function(eb, locals) {
      var values = collection_1.ListWrapper.createFixedSize(eb.records.length);
      values[0] = this.values[0];
      for (var protoIdx = 0; protoIdx < eb.records.length; ++protoIdx) {
        var proto = eb.records[protoIdx];
        if (proto.isSkipRecord()) {
          protoIdx += this._computeSkipLength(protoIdx, proto, values);
        } else {
          var res = this._calculateCurrValue(proto, values, locals);
          if (proto.lastInBinding) {
            this._markPathAsCheckOnce(proto);
            return res;
          } else {
            this._writeSelf(proto, res, values);
          }
        }
      }
      throw new exceptions_1.BaseException("Cannot be reached");
    };
    DynamicChangeDetector.prototype._computeSkipLength = function(protoIndex, proto, values) {
      if (proto.mode === proto_record_1.RecordType.SkipRecords) {
        return proto.fixedArgs[0] - protoIndex - 1;
      }
      if (proto.mode === proto_record_1.RecordType.SkipRecordsIf) {
        var condition = this._readContext(proto, values);
        return condition ? proto.fixedArgs[0] - protoIndex - 1 : 0;
      }
      if (proto.mode === proto_record_1.RecordType.SkipRecordsIfNot) {
        var condition = this._readContext(proto, values);
        return condition ? 0 : proto.fixedArgs[0] - protoIndex - 1;
      }
      throw new exceptions_1.BaseException("Cannot be reached");
    };
    DynamicChangeDetector.prototype._markPathAsCheckOnce = function(proto) {
      if (!proto.bindingRecord.isDefaultChangeDetection()) {
        var dir = proto.bindingRecord.directiveRecord;
        this._getDetectorFor(dir.directiveIndex).markPathToRootAsCheckOnce();
      }
    };
    DynamicChangeDetector.prototype._matchingEventBindings = function(eventName, elIndex) {
      return this._eventBindings.filter(function(eb) {
        return eb.eventName == eventName && eb.elIndex === elIndex;
      });
    };
    DynamicChangeDetector.prototype.hydrateDirectives = function(directives) {
      this.values[0] = this.context;
      this.directives = directives;
      if (this.strategy === constants_1.ChangeDetectionStrategy.OnPushObserve) {
        for (var i = 0; i < this.directiveIndices.length; ++i) {
          var index = this.directiveIndices[i];
          _super.prototype.observeDirective.call(this, directives.getDirectiveFor(index), i);
        }
      }
    };
    DynamicChangeDetector.prototype.dehydrateDirectives = function(destroyPipes) {
      if (destroyPipes) {
        this._destroyPipes();
      }
      this.values[0] = null;
      this.directives = null;
      collection_1.ListWrapper.fill(this.values, change_detection_util_1.ChangeDetectionUtil.uninitialized, 1);
      collection_1.ListWrapper.fill(this.changes, false);
      collection_1.ListWrapper.fill(this.localPipes, null);
      collection_1.ListWrapper.fill(this.prevContexts, change_detection_util_1.ChangeDetectionUtil.uninitialized);
    };
    DynamicChangeDetector.prototype._destroyPipes = function() {
      for (var i = 0; i < this.localPipes.length; ++i) {
        if (lang_1.isPresent(this.localPipes[i])) {
          change_detection_util_1.ChangeDetectionUtil.callPipeOnDestroy(this.localPipes[i]);
        }
      }
    };
    DynamicChangeDetector.prototype.checkNoChanges = function() {
      this.runDetectChanges(true);
    };
    DynamicChangeDetector.prototype.detectChangesInRecordsInternal = function(throwOnChange) {
      var protos = this._records;
      var changes = null;
      var isChanged = false;
      for (var protoIdx = 0; protoIdx < protos.length; ++protoIdx) {
        var proto = protos[protoIdx];
        var bindingRecord = proto.bindingRecord;
        var directiveRecord = bindingRecord.directiveRecord;
        if (this._firstInBinding(proto)) {
          this.propertyBindingIndex = proto.propertyBindingIndex;
        }
        if (proto.isLifeCycleRecord()) {
          if (proto.name === "DoCheck" && !throwOnChange) {
            this._getDirectiveFor(directiveRecord.directiveIndex).doCheck();
          } else if (proto.name === "OnInit" && !throwOnChange && this.state == constants_1.ChangeDetectorState.NeverChecked) {
            this._getDirectiveFor(directiveRecord.directiveIndex).onInit();
          } else if (proto.name === "OnChanges" && lang_1.isPresent(changes) && !throwOnChange) {
            this._getDirectiveFor(directiveRecord.directiveIndex).onChanges(changes);
          }
        } else if (proto.isSkipRecord()) {
          protoIdx += this._computeSkipLength(protoIdx, proto, this.values);
        } else {
          var change = this._check(proto, throwOnChange, this.values, this.locals);
          if (lang_1.isPresent(change)) {
            this._updateDirectiveOrElement(change, bindingRecord);
            isChanged = true;
            changes = this._addChange(bindingRecord, change, changes);
          }
        }
        if (proto.lastInDirective) {
          changes = null;
          if (isChanged && !bindingRecord.isDefaultChangeDetection()) {
            this._getDetectorFor(directiveRecord.directiveIndex).markAsCheckOnce();
          }
          isChanged = false;
        }
      }
    };
    DynamicChangeDetector.prototype._firstInBinding = function(r) {
      var prev = change_detection_util_1.ChangeDetectionUtil.protoByIndex(this._records, r.selfIndex - 1);
      return lang_1.isBlank(prev) || prev.bindingRecord !== r.bindingRecord;
    };
    DynamicChangeDetector.prototype.afterContentLifecycleCallbacksInternal = function() {
      var dirs = this._directiveRecords;
      for (var i = dirs.length - 1; i >= 0; --i) {
        var dir = dirs[i];
        if (dir.callAfterContentInit && this.state == constants_1.ChangeDetectorState.NeverChecked) {
          this._getDirectiveFor(dir.directiveIndex).afterContentInit();
        }
        if (dir.callAfterContentChecked) {
          this._getDirectiveFor(dir.directiveIndex).afterContentChecked();
        }
      }
    };
    DynamicChangeDetector.prototype.afterViewLifecycleCallbacksInternal = function() {
      var dirs = this._directiveRecords;
      for (var i = dirs.length - 1; i >= 0; --i) {
        var dir = dirs[i];
        if (dir.callAfterViewInit && this.state == constants_1.ChangeDetectorState.NeverChecked) {
          this._getDirectiveFor(dir.directiveIndex).afterViewInit();
        }
        if (dir.callAfterViewChecked) {
          this._getDirectiveFor(dir.directiveIndex).afterViewChecked();
        }
      }
    };
    DynamicChangeDetector.prototype._updateDirectiveOrElement = function(change, bindingRecord) {
      if (lang_1.isBlank(bindingRecord.directiveRecord)) {
        _super.prototype.notifyDispatcher.call(this, change.currentValue);
      } else {
        var directiveIndex = bindingRecord.directiveRecord.directiveIndex;
        bindingRecord.setter(this._getDirectiveFor(directiveIndex), change.currentValue);
      }
      if (this._genConfig.logBindingUpdate) {
        _super.prototype.logBindingUpdate.call(this, change.currentValue);
      }
    };
    DynamicChangeDetector.prototype._addChange = function(bindingRecord, change, changes) {
      if (bindingRecord.callOnChanges()) {
        return _super.prototype.addChange.call(this, changes, change.previousValue, change.currentValue);
      } else {
        return changes;
      }
    };
    DynamicChangeDetector.prototype._getDirectiveFor = function(directiveIndex) {
      return this.directives.getDirectiveFor(directiveIndex);
    };
    DynamicChangeDetector.prototype._getDetectorFor = function(directiveIndex) {
      return this.directives.getDetectorFor(directiveIndex);
    };
    DynamicChangeDetector.prototype._check = function(proto, throwOnChange, values, locals) {
      if (proto.isPipeRecord()) {
        return this._pipeCheck(proto, throwOnChange, values);
      } else {
        return this._referenceCheck(proto, throwOnChange, values, locals);
      }
    };
    DynamicChangeDetector.prototype._referenceCheck = function(proto, throwOnChange, values, locals) {
      if (this._pureFuncAndArgsDidNotChange(proto)) {
        this._setChanged(proto, false);
        return null;
      }
      var currValue = this._calculateCurrValue(proto, values, locals);
      if (this.strategy === constants_1.ChangeDetectionStrategy.OnPushObserve) {
        _super.prototype.observeValue.call(this, currValue, proto.selfIndex);
      }
      if (proto.shouldBeChecked()) {
        var prevValue = this._readSelf(proto, values);
        if (change_detection_util_1.ChangeDetectionUtil.looseNotIdentical(prevValue, currValue)) {
          if (proto.lastInBinding) {
            var change = change_detection_util_1.ChangeDetectionUtil.simpleChange(prevValue, currValue);
            if (throwOnChange)
              this.throwOnChangeError(prevValue, currValue);
            this._writeSelf(proto, currValue, values);
            this._setChanged(proto, true);
            return change;
          } else {
            this._writeSelf(proto, currValue, values);
            this._setChanged(proto, true);
            return null;
          }
        } else {
          this._setChanged(proto, false);
          return null;
        }
      } else {
        this._writeSelf(proto, currValue, values);
        this._setChanged(proto, true);
        return null;
      }
    };
    DynamicChangeDetector.prototype._calculateCurrValue = function(proto, values, locals) {
      switch (proto.mode) {
        case proto_record_1.RecordType.Self:
          return this._readContext(proto, values);
        case proto_record_1.RecordType.Const:
          return proto.funcOrValue;
        case proto_record_1.RecordType.PropertyRead:
          var context = this._readContext(proto, values);
          return proto.funcOrValue(context);
        case proto_record_1.RecordType.SafeProperty:
          var context = this._readContext(proto, values);
          return lang_1.isBlank(context) ? null : proto.funcOrValue(context);
        case proto_record_1.RecordType.PropertyWrite:
          var context = this._readContext(proto, values);
          var value = this._readArgs(proto, values)[0];
          proto.funcOrValue(context, value);
          return value;
        case proto_record_1.RecordType.KeyedWrite:
          var context = this._readContext(proto, values);
          var key = this._readArgs(proto, values)[0];
          var value = this._readArgs(proto, values)[1];
          context[key] = value;
          return value;
        case proto_record_1.RecordType.Local:
          return locals.get(proto.name);
        case proto_record_1.RecordType.InvokeMethod:
          var context = this._readContext(proto, values);
          var args = this._readArgs(proto, values);
          return proto.funcOrValue(context, args);
        case proto_record_1.RecordType.SafeMethodInvoke:
          var context = this._readContext(proto, values);
          if (lang_1.isBlank(context)) {
            return null;
          }
          var args = this._readArgs(proto, values);
          return proto.funcOrValue(context, args);
        case proto_record_1.RecordType.KeyedRead:
          var arg = this._readArgs(proto, values)[0];
          return this._readContext(proto, values)[arg];
        case proto_record_1.RecordType.Chain:
          var args = this._readArgs(proto, values);
          return args[args.length - 1];
        case proto_record_1.RecordType.InvokeClosure:
          return lang_1.FunctionWrapper.apply(this._readContext(proto, values), this._readArgs(proto, values));
        case proto_record_1.RecordType.Interpolate:
        case proto_record_1.RecordType.PrimitiveOp:
        case proto_record_1.RecordType.CollectionLiteral:
          return lang_1.FunctionWrapper.apply(proto.funcOrValue, this._readArgs(proto, values));
        default:
          throw new exceptions_1.BaseException("Unknown operation " + proto.mode);
      }
    };
    DynamicChangeDetector.prototype._pipeCheck = function(proto, throwOnChange, values) {
      var context = this._readContext(proto, values);
      var selectedPipe = this._pipeFor(proto, context);
      if (!selectedPipe.pure || this._argsOrContextChanged(proto)) {
        var args = this._readArgs(proto, values);
        var currValue = selectedPipe.pipe.transform(context, args);
        if (proto.shouldBeChecked()) {
          var prevValue = this._readSelf(proto, values);
          if (change_detection_util_1.ChangeDetectionUtil.looseNotIdentical(prevValue, currValue)) {
            currValue = change_detection_util_1.ChangeDetectionUtil.unwrapValue(currValue);
            if (proto.lastInBinding) {
              var change = change_detection_util_1.ChangeDetectionUtil.simpleChange(prevValue, currValue);
              if (throwOnChange)
                this.throwOnChangeError(prevValue, currValue);
              this._writeSelf(proto, currValue, values);
              this._setChanged(proto, true);
              return change;
            } else {
              this._writeSelf(proto, currValue, values);
              this._setChanged(proto, true);
              return null;
            }
          } else {
            this._setChanged(proto, false);
            return null;
          }
        } else {
          this._writeSelf(proto, currValue, values);
          this._setChanged(proto, true);
          return null;
        }
      }
    };
    DynamicChangeDetector.prototype._pipeFor = function(proto, context) {
      var storedPipe = this._readPipe(proto);
      if (lang_1.isPresent(storedPipe))
        return storedPipe;
      var pipe = this.pipes.get(proto.name);
      this._writePipe(proto, pipe);
      return pipe;
    };
    DynamicChangeDetector.prototype._readContext = function(proto, values) {
      if (proto.contextIndex == -1) {
        return this._getDirectiveFor(proto.directiveIndex);
      }
      return values[proto.contextIndex];
    };
    DynamicChangeDetector.prototype._readSelf = function(proto, values) {
      return values[proto.selfIndex];
    };
    DynamicChangeDetector.prototype._writeSelf = function(proto, value, values) {
      values[proto.selfIndex] = value;
    };
    DynamicChangeDetector.prototype._readPipe = function(proto) {
      return this.localPipes[proto.selfIndex];
    };
    DynamicChangeDetector.prototype._writePipe = function(proto, value) {
      this.localPipes[proto.selfIndex] = value;
    };
    DynamicChangeDetector.prototype._setChanged = function(proto, value) {
      if (proto.argumentToPureFunction)
        this.changes[proto.selfIndex] = value;
    };
    DynamicChangeDetector.prototype._pureFuncAndArgsDidNotChange = function(proto) {
      return proto.isPureFunction() && !this._argsChanged(proto);
    };
    DynamicChangeDetector.prototype._argsChanged = function(proto) {
      var args = proto.args;
      for (var i = 0; i < args.length; ++i) {
        if (this.changes[args[i]]) {
          return true;
        }
      }
      return false;
    };
    DynamicChangeDetector.prototype._argsOrContextChanged = function(proto) {
      return this._argsChanged(proto) || this.changes[proto.contextIndex];
    };
    DynamicChangeDetector.prototype._readArgs = function(proto, values) {
      var res = collection_1.ListWrapper.createFixedSize(proto.args.length);
      var args = proto.args;
      for (var i = 0; i < args.length; ++i) {
        res[i] = values[args[i]];
      }
      return res;
    };
    return DynamicChangeDetector;
  })(abstract_change_detector_1.AbstractChangeDetector);
  exports.DynamicChangeDetector = DynamicChangeDetector;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var DirectiveIndex = (function() {
    function DirectiveIndex(elementIndex, directiveIndex) {
      this.elementIndex = elementIndex;
      this.directiveIndex = directiveIndex;
    }
    Object.defineProperty(DirectiveIndex.prototype, "name", {
      get: function() {
        return this.elementIndex + "_" + this.directiveIndex;
      },
      enumerable: true,
      configurable: true
    });
    return DirectiveIndex;
  })();
  exports.DirectiveIndex = DirectiveIndex;
  var DirectiveRecord = (function() {
    function DirectiveRecord(_a) {
      var _b = _a === void 0 ? {} : _a,
          directiveIndex = _b.directiveIndex,
          callAfterContentInit = _b.callAfterContentInit,
          callAfterContentChecked = _b.callAfterContentChecked,
          callAfterViewInit = _b.callAfterViewInit,
          callAfterViewChecked = _b.callAfterViewChecked,
          callOnChanges = _b.callOnChanges,
          callDoCheck = _b.callDoCheck,
          callOnInit = _b.callOnInit,
          changeDetection = _b.changeDetection;
      this.directiveIndex = directiveIndex;
      this.callAfterContentInit = lang_1.normalizeBool(callAfterContentInit);
      this.callAfterContentChecked = lang_1.normalizeBool(callAfterContentChecked);
      this.callOnChanges = lang_1.normalizeBool(callOnChanges);
      this.callAfterViewInit = lang_1.normalizeBool(callAfterViewInit);
      this.callAfterViewChecked = lang_1.normalizeBool(callAfterViewChecked);
      this.callDoCheck = lang_1.normalizeBool(callDoCheck);
      this.callOnInit = lang_1.normalizeBool(callOnInit);
      this.changeDetection = changeDetection;
    }
    DirectiveRecord.prototype.isDefaultChangeDetection = function() {
      return constants_1.isDefaultChangeDetectionStrategy(this.changeDetection);
    };
    return DirectiveRecord;
  })();
  exports.DirectiveRecord = DirectiveRecord;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/binding_record", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var DIRECTIVE_LIFECYCLE = "directiveLifecycle";
  var BINDING = "native";
  var DIRECTIVE = "directive";
  var ELEMENT_PROPERTY = "elementProperty";
  var ELEMENT_ATTRIBUTE = "elementAttribute";
  var ELEMENT_CLASS = "elementClass";
  var ELEMENT_STYLE = "elementStyle";
  var TEXT_NODE = "textNode";
  var EVENT = "event";
  var HOST_EVENT = "hostEvent";
  var BindingTarget = (function() {
    function BindingTarget(mode, elementIndex, name, unit, debug) {
      this.mode = mode;
      this.elementIndex = elementIndex;
      this.name = name;
      this.unit = unit;
      this.debug = debug;
    }
    BindingTarget.prototype.isDirective = function() {
      return this.mode === DIRECTIVE;
    };
    BindingTarget.prototype.isElementProperty = function() {
      return this.mode === ELEMENT_PROPERTY;
    };
    BindingTarget.prototype.isElementAttribute = function() {
      return this.mode === ELEMENT_ATTRIBUTE;
    };
    BindingTarget.prototype.isElementClass = function() {
      return this.mode === ELEMENT_CLASS;
    };
    BindingTarget.prototype.isElementStyle = function() {
      return this.mode === ELEMENT_STYLE;
    };
    BindingTarget.prototype.isTextNode = function() {
      return this.mode === TEXT_NODE;
    };
    return BindingTarget;
  })();
  exports.BindingTarget = BindingTarget;
  var BindingRecord = (function() {
    function BindingRecord(mode, target, implicitReceiver, ast, setter, lifecycleEvent, directiveRecord) {
      this.mode = mode;
      this.target = target;
      this.implicitReceiver = implicitReceiver;
      this.ast = ast;
      this.setter = setter;
      this.lifecycleEvent = lifecycleEvent;
      this.directiveRecord = directiveRecord;
    }
    BindingRecord.prototype.isDirectiveLifecycle = function() {
      return this.mode === DIRECTIVE_LIFECYCLE;
    };
    BindingRecord.prototype.callOnChanges = function() {
      return lang_1.isPresent(this.directiveRecord) && this.directiveRecord.callOnChanges;
    };
    BindingRecord.prototype.isDefaultChangeDetection = function() {
      return lang_1.isBlank(this.directiveRecord) || this.directiveRecord.isDefaultChangeDetection();
    };
    BindingRecord.createDirectiveDoCheck = function(directiveRecord) {
      return new BindingRecord(DIRECTIVE_LIFECYCLE, null, 0, null, null, "DoCheck", directiveRecord);
    };
    BindingRecord.createDirectiveOnInit = function(directiveRecord) {
      return new BindingRecord(DIRECTIVE_LIFECYCLE, null, 0, null, null, "OnInit", directiveRecord);
    };
    BindingRecord.createDirectiveOnChanges = function(directiveRecord) {
      return new BindingRecord(DIRECTIVE_LIFECYCLE, null, 0, null, null, "OnChanges", directiveRecord);
    };
    BindingRecord.createForDirective = function(ast, propertyName, setter, directiveRecord) {
      var elementIndex = directiveRecord.directiveIndex.elementIndex;
      var t = new BindingTarget(DIRECTIVE, elementIndex, propertyName, null, ast.toString());
      return new BindingRecord(DIRECTIVE, t, 0, ast, setter, null, directiveRecord);
    };
    BindingRecord.createForElementProperty = function(ast, elementIndex, propertyName) {
      var t = new BindingTarget(ELEMENT_PROPERTY, elementIndex, propertyName, null, ast.toString());
      return new BindingRecord(BINDING, t, 0, ast, null, null, null);
    };
    BindingRecord.createForElementAttribute = function(ast, elementIndex, attributeName) {
      var t = new BindingTarget(ELEMENT_ATTRIBUTE, elementIndex, attributeName, null, ast.toString());
      return new BindingRecord(BINDING, t, 0, ast, null, null, null);
    };
    BindingRecord.createForElementClass = function(ast, elementIndex, className) {
      var t = new BindingTarget(ELEMENT_CLASS, elementIndex, className, null, ast.toString());
      return new BindingRecord(BINDING, t, 0, ast, null, null, null);
    };
    BindingRecord.createForElementStyle = function(ast, elementIndex, styleName, unit) {
      var t = new BindingTarget(ELEMENT_STYLE, elementIndex, styleName, unit, ast.toString());
      return new BindingRecord(BINDING, t, 0, ast, null, null, null);
    };
    BindingRecord.createForHostProperty = function(directiveIndex, ast, propertyName) {
      var t = new BindingTarget(ELEMENT_PROPERTY, directiveIndex.elementIndex, propertyName, null, ast.toString());
      return new BindingRecord(BINDING, t, directiveIndex, ast, null, null, null);
    };
    BindingRecord.createForHostAttribute = function(directiveIndex, ast, attributeName) {
      var t = new BindingTarget(ELEMENT_ATTRIBUTE, directiveIndex.elementIndex, attributeName, null, ast.toString());
      return new BindingRecord(BINDING, t, directiveIndex, ast, null, null, null);
    };
    BindingRecord.createForHostClass = function(directiveIndex, ast, className) {
      var t = new BindingTarget(ELEMENT_CLASS, directiveIndex.elementIndex, className, null, ast.toString());
      return new BindingRecord(BINDING, t, directiveIndex, ast, null, null, null);
    };
    BindingRecord.createForHostStyle = function(directiveIndex, ast, styleName, unit) {
      var t = new BindingTarget(ELEMENT_STYLE, directiveIndex.elementIndex, styleName, unit, ast.toString());
      return new BindingRecord(BINDING, t, directiveIndex, ast, null, null, null);
    };
    BindingRecord.createForTextNode = function(ast, elementIndex) {
      var t = new BindingTarget(TEXT_NODE, elementIndex, null, null, ast.toString());
      return new BindingRecord(BINDING, t, 0, ast, null, null, null);
    };
    BindingRecord.createForEvent = function(ast, eventName, elementIndex) {
      var t = new BindingTarget(EVENT, elementIndex, eventName, null, ast.toString());
      return new BindingRecord(EVENT, t, 0, ast, null, null, null);
    };
    BindingRecord.createForHostEvent = function(ast, eventName, directiveRecord) {
      var directiveIndex = directiveRecord.directiveIndex;
      var t = new BindingTarget(HOST_EVENT, directiveIndex.elementIndex, eventName, null, ast.toString());
      return new BindingRecord(HOST_EVENT, t, directiveIndex, ast, null, null, directiveRecord);
    };
    return BindingRecord;
  })();
  exports.BindingRecord = BindingRecord;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/pipe_lifecycle_reflector", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function implementsOnDestroy(pipe) {
    return pipe.constructor.prototype.onDestroy;
  }
  exports.implementsOnDestroy = implementsOnDestroy;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/pipe_lifecycle_reflector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/binding_record", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  var pipe_lifecycle_reflector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/pipe_lifecycle_reflector');
  var binding_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/binding_record');
  var directive_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record');
  var WrappedValue = (function() {
    function WrappedValue(wrapped) {
      this.wrapped = wrapped;
    }
    WrappedValue.wrap = function(value) {
      var w = _wrappedValues[_wrappedIndex++ % 5];
      w.wrapped = value;
      return w;
    };
    return WrappedValue;
  })();
  exports.WrappedValue = WrappedValue;
  var _wrappedValues = [new WrappedValue(null), new WrappedValue(null), new WrappedValue(null), new WrappedValue(null), new WrappedValue(null)];
  var _wrappedIndex = 0;
  var SimpleChange = (function() {
    function SimpleChange(previousValue, currentValue) {
      this.previousValue = previousValue;
      this.currentValue = currentValue;
    }
    SimpleChange.prototype.isFirstChange = function() {
      return this.previousValue === ChangeDetectionUtil.uninitialized;
    };
    return SimpleChange;
  })();
  exports.SimpleChange = SimpleChange;
  var _simpleChangesIndex = 0;
  var _simpleChanges = [new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null), new SimpleChange(null, null)];
  function _simpleChange(previousValue, currentValue) {
    var index = _simpleChangesIndex++ % 20;
    var s = _simpleChanges[index];
    s.previousValue = previousValue;
    s.currentValue = currentValue;
    return s;
  }
  var ChangeDetectionUtil = (function() {
    function ChangeDetectionUtil() {}
    ChangeDetectionUtil.arrayFn0 = function() {
      return [];
    };
    ChangeDetectionUtil.arrayFn1 = function(a1) {
      return [a1];
    };
    ChangeDetectionUtil.arrayFn2 = function(a1, a2) {
      return [a1, a2];
    };
    ChangeDetectionUtil.arrayFn3 = function(a1, a2, a3) {
      return [a1, a2, a3];
    };
    ChangeDetectionUtil.arrayFn4 = function(a1, a2, a3, a4) {
      return [a1, a2, a3, a4];
    };
    ChangeDetectionUtil.arrayFn5 = function(a1, a2, a3, a4, a5) {
      return [a1, a2, a3, a4, a5];
    };
    ChangeDetectionUtil.arrayFn6 = function(a1, a2, a3, a4, a5, a6) {
      return [a1, a2, a3, a4, a5, a6];
    };
    ChangeDetectionUtil.arrayFn7 = function(a1, a2, a3, a4, a5, a6, a7) {
      return [a1, a2, a3, a4, a5, a6, a7];
    };
    ChangeDetectionUtil.arrayFn8 = function(a1, a2, a3, a4, a5, a6, a7, a8) {
      return [a1, a2, a3, a4, a5, a6, a7, a8];
    };
    ChangeDetectionUtil.arrayFn9 = function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
      return [a1, a2, a3, a4, a5, a6, a7, a8, a9];
    };
    ChangeDetectionUtil.operation_negate = function(value) {
      return !value;
    };
    ChangeDetectionUtil.operation_add = function(left, right) {
      return left + right;
    };
    ChangeDetectionUtil.operation_subtract = function(left, right) {
      return left - right;
    };
    ChangeDetectionUtil.operation_multiply = function(left, right) {
      return left * right;
    };
    ChangeDetectionUtil.operation_divide = function(left, right) {
      return left / right;
    };
    ChangeDetectionUtil.operation_remainder = function(left, right) {
      return left % right;
    };
    ChangeDetectionUtil.operation_equals = function(left, right) {
      return left == right;
    };
    ChangeDetectionUtil.operation_not_equals = function(left, right) {
      return left != right;
    };
    ChangeDetectionUtil.operation_identical = function(left, right) {
      return left === right;
    };
    ChangeDetectionUtil.operation_not_identical = function(left, right) {
      return left !== right;
    };
    ChangeDetectionUtil.operation_less_then = function(left, right) {
      return left < right;
    };
    ChangeDetectionUtil.operation_greater_then = function(left, right) {
      return left > right;
    };
    ChangeDetectionUtil.operation_less_or_equals_then = function(left, right) {
      return left <= right;
    };
    ChangeDetectionUtil.operation_greater_or_equals_then = function(left, right) {
      return left >= right;
    };
    ChangeDetectionUtil.cond = function(cond, trueVal, falseVal) {
      return cond ? trueVal : falseVal;
    };
    ChangeDetectionUtil.mapFn = function(keys) {
      function buildMap(values) {
        var res = collection_1.StringMapWrapper.create();
        for (var i = 0; i < keys.length; ++i) {
          collection_1.StringMapWrapper.set(res, keys[i], values[i]);
        }
        return res;
      }
      switch (keys.length) {
        case 0:
          return function() {
            return [];
          };
        case 1:
          return function(a1) {
            return buildMap([a1]);
          };
        case 2:
          return function(a1, a2) {
            return buildMap([a1, a2]);
          };
        case 3:
          return function(a1, a2, a3) {
            return buildMap([a1, a2, a3]);
          };
        case 4:
          return function(a1, a2, a3, a4) {
            return buildMap([a1, a2, a3, a4]);
          };
        case 5:
          return function(a1, a2, a3, a4, a5) {
            return buildMap([a1, a2, a3, a4, a5]);
          };
        case 6:
          return function(a1, a2, a3, a4, a5, a6) {
            return buildMap([a1, a2, a3, a4, a5, a6]);
          };
        case 7:
          return function(a1, a2, a3, a4, a5, a6, a7) {
            return buildMap([a1, a2, a3, a4, a5, a6, a7]);
          };
        case 8:
          return function(a1, a2, a3, a4, a5, a6, a7, a8) {
            return buildMap([a1, a2, a3, a4, a5, a6, a7, a8]);
          };
        case 9:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
            return buildMap([a1, a2, a3, a4, a5, a6, a7, a8, a9]);
          };
        default:
          throw new exceptions_1.BaseException("Does not support literal maps with more than 9 elements");
      }
    };
    ChangeDetectionUtil.keyedAccess = function(obj, args) {
      return obj[args[0]];
    };
    ChangeDetectionUtil.unwrapValue = function(value) {
      if (value instanceof WrappedValue) {
        return value.wrapped;
      } else {
        return value;
      }
    };
    ChangeDetectionUtil.changeDetectionMode = function(strategy) {
      return constants_1.isDefaultChangeDetectionStrategy(strategy) ? constants_1.ChangeDetectionStrategy.CheckAlways : constants_1.ChangeDetectionStrategy.CheckOnce;
    };
    ChangeDetectionUtil.simpleChange = function(previousValue, currentValue) {
      return _simpleChange(previousValue, currentValue);
    };
    ChangeDetectionUtil.isValueBlank = function(value) {
      return lang_1.isBlank(value);
    };
    ChangeDetectionUtil.s = function(value) {
      return lang_1.isPresent(value) ? "" + value : '';
    };
    ChangeDetectionUtil.protoByIndex = function(protos, selfIndex) {
      return selfIndex < 1 ? null : protos[selfIndex - 1];
    };
    ChangeDetectionUtil.callPipeOnDestroy = function(selectedPipe) {
      if (pipe_lifecycle_reflector_1.implementsOnDestroy(selectedPipe.pipe)) {
        selectedPipe.pipe.onDestroy();
      }
    };
    ChangeDetectionUtil.bindingTarget = function(mode, elementIndex, name, unit, debug) {
      return new binding_record_1.BindingTarget(mode, elementIndex, name, unit, debug);
    };
    ChangeDetectionUtil.directiveIndex = function(elementIndex, directiveIndex) {
      return new directive_record_1.DirectiveIndex(elementIndex, directiveIndex);
    };
    ChangeDetectionUtil.looseNotIdentical = function(a, b) {
      return !lang_1.looseIdentical(a, b);
    };
    ChangeDetectionUtil.uninitialized = lang_1.CONST_EXPR(new Object());
    return ChangeDetectionUtil;
  })();
  exports.ChangeDetectionUtil = ChangeDetectionUtil;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_change_detector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/dynamic_change_detector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/event_binding", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/coalesce", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast');
  var change_detection_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util');
  var dynamic_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/dynamic_change_detector');
  var directive_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record');
  var event_binding_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/event_binding');
  var coalesce_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/coalesce');
  var proto_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_record');
  var DynamicProtoChangeDetector = (function() {
    function DynamicProtoChangeDetector(_definition) {
      this._definition = _definition;
      this._propertyBindingRecords = createPropertyRecords(_definition);
      this._eventBindingRecords = createEventRecords(_definition);
      this._propertyBindingTargets = this._definition.bindingRecords.map(function(b) {
        return b.target;
      });
      this._directiveIndices = this._definition.directiveRecords.map(function(d) {
        return d.directiveIndex;
      });
    }
    DynamicProtoChangeDetector.prototype.instantiate = function(dispatcher) {
      return new dynamic_change_detector_1.DynamicChangeDetector(this._definition.id, dispatcher, this._propertyBindingRecords.length, this._propertyBindingTargets, this._directiveIndices, this._definition.strategy, this._propertyBindingRecords, this._eventBindingRecords, this._definition.directiveRecords, this._definition.genConfig);
    };
    return DynamicProtoChangeDetector;
  })();
  exports.DynamicProtoChangeDetector = DynamicProtoChangeDetector;
  function createPropertyRecords(definition) {
    var recordBuilder = new ProtoRecordBuilder();
    collection_1.ListWrapper.forEachWithIndex(definition.bindingRecords, function(b, index) {
      return recordBuilder.add(b, definition.variableNames, index);
    });
    return coalesce_1.coalesce(recordBuilder.records);
  }
  exports.createPropertyRecords = createPropertyRecords;
  function createEventRecords(definition) {
    var varNames = collection_1.ListWrapper.concat(['$event'], definition.variableNames);
    return definition.eventRecords.map(function(er) {
      var records = _ConvertAstIntoProtoRecords.create(er, varNames);
      var dirIndex = er.implicitReceiver instanceof directive_record_1.DirectiveIndex ? er.implicitReceiver : null;
      return new event_binding_1.EventBinding(er.target.name, er.target.elementIndex, dirIndex, records);
    });
  }
  exports.createEventRecords = createEventRecords;
  var ProtoRecordBuilder = (function() {
    function ProtoRecordBuilder() {
      this.records = [];
    }
    ProtoRecordBuilder.prototype.add = function(b, variableNames, bindingIndex) {
      var oldLast = collection_1.ListWrapper.last(this.records);
      if (lang_1.isPresent(oldLast) && oldLast.bindingRecord.directiveRecord == b.directiveRecord) {
        oldLast.lastInDirective = false;
      }
      var numberOfRecordsBefore = this.records.length;
      this._appendRecords(b, variableNames, bindingIndex);
      var newLast = collection_1.ListWrapper.last(this.records);
      if (lang_1.isPresent(newLast) && newLast !== oldLast) {
        newLast.lastInBinding = true;
        newLast.lastInDirective = true;
        this._setArgumentToPureFunction(numberOfRecordsBefore);
      }
    };
    ProtoRecordBuilder.prototype._setArgumentToPureFunction = function(startIndex) {
      var _this = this;
      for (var i = startIndex; i < this.records.length; ++i) {
        var rec = this.records[i];
        if (rec.isPureFunction()) {
          rec.args.forEach(function(recordIndex) {
            return _this.records[recordIndex - 1].argumentToPureFunction = true;
          });
        }
        if (rec.mode === proto_record_1.RecordType.Pipe) {
          rec.args.forEach(function(recordIndex) {
            return _this.records[recordIndex - 1].argumentToPureFunction = true;
          });
          this.records[rec.contextIndex - 1].argumentToPureFunction = true;
        }
      }
    };
    ProtoRecordBuilder.prototype._appendRecords = function(b, variableNames, bindingIndex) {
      if (b.isDirectiveLifecycle()) {
        this.records.push(new proto_record_1.ProtoRecord(proto_record_1.RecordType.DirectiveLifecycle, b.lifecycleEvent, null, [], [], -1, null, this.records.length + 1, b, false, false, false, false, null));
      } else {
        _ConvertAstIntoProtoRecords.append(this.records, b, variableNames, bindingIndex);
      }
    };
    return ProtoRecordBuilder;
  })();
  exports.ProtoRecordBuilder = ProtoRecordBuilder;
  var _ConvertAstIntoProtoRecords = (function() {
    function _ConvertAstIntoProtoRecords(_records, _bindingRecord, _variableNames, _bindingIndex) {
      this._records = _records;
      this._bindingRecord = _bindingRecord;
      this._variableNames = _variableNames;
      this._bindingIndex = _bindingIndex;
    }
    _ConvertAstIntoProtoRecords.append = function(records, b, variableNames, bindingIndex) {
      var c = new _ConvertAstIntoProtoRecords(records, b, variableNames, bindingIndex);
      b.ast.visit(c);
    };
    _ConvertAstIntoProtoRecords.create = function(b, variableNames) {
      var rec = [];
      _ConvertAstIntoProtoRecords.append(rec, b, variableNames, null);
      rec[rec.length - 1].lastInBinding = true;
      return rec;
    };
    _ConvertAstIntoProtoRecords.prototype.visitImplicitReceiver = function(ast) {
      return this._bindingRecord.implicitReceiver;
    };
    _ConvertAstIntoProtoRecords.prototype.visitInterpolation = function(ast) {
      var args = this._visitAll(ast.expressions);
      return this._addRecord(proto_record_1.RecordType.Interpolate, "interpolate", _interpolationFn(ast.strings), args, ast.strings, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitLiteralPrimitive = function(ast) {
      return this._addRecord(proto_record_1.RecordType.Const, "literal", ast.value, [], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitPropertyRead = function(ast) {
      var receiver = ast.receiver.visit(this);
      if (lang_1.isPresent(this._variableNames) && collection_1.ListWrapper.contains(this._variableNames, ast.name) && ast.receiver instanceof ast_1.ImplicitReceiver) {
        return this._addRecord(proto_record_1.RecordType.Local, ast.name, ast.name, [], null, receiver);
      } else {
        return this._addRecord(proto_record_1.RecordType.PropertyRead, ast.name, ast.getter, [], null, receiver);
      }
    };
    _ConvertAstIntoProtoRecords.prototype.visitPropertyWrite = function(ast) {
      if (lang_1.isPresent(this._variableNames) && collection_1.ListWrapper.contains(this._variableNames, ast.name) && ast.receiver instanceof ast_1.ImplicitReceiver) {
        throw new exceptions_1.BaseException("Cannot reassign a variable binding " + ast.name);
      } else {
        var receiver = ast.receiver.visit(this);
        var value = ast.value.visit(this);
        return this._addRecord(proto_record_1.RecordType.PropertyWrite, ast.name, ast.setter, [value], null, receiver);
      }
    };
    _ConvertAstIntoProtoRecords.prototype.visitKeyedWrite = function(ast) {
      var obj = ast.obj.visit(this);
      var key = ast.key.visit(this);
      var value = ast.value.visit(this);
      return this._addRecord(proto_record_1.RecordType.KeyedWrite, null, null, [key, value], null, obj);
    };
    _ConvertAstIntoProtoRecords.prototype.visitSafePropertyRead = function(ast) {
      var receiver = ast.receiver.visit(this);
      return this._addRecord(proto_record_1.RecordType.SafeProperty, ast.name, ast.getter, [], null, receiver);
    };
    _ConvertAstIntoProtoRecords.prototype.visitMethodCall = function(ast) {
      var receiver = ast.receiver.visit(this);
      var args = this._visitAll(ast.args);
      if (lang_1.isPresent(this._variableNames) && collection_1.ListWrapper.contains(this._variableNames, ast.name)) {
        var target = this._addRecord(proto_record_1.RecordType.Local, ast.name, ast.name, [], null, receiver);
        return this._addRecord(proto_record_1.RecordType.InvokeClosure, "closure", null, args, null, target);
      } else {
        return this._addRecord(proto_record_1.RecordType.InvokeMethod, ast.name, ast.fn, args, null, receiver);
      }
    };
    _ConvertAstIntoProtoRecords.prototype.visitSafeMethodCall = function(ast) {
      var receiver = ast.receiver.visit(this);
      var args = this._visitAll(ast.args);
      return this._addRecord(proto_record_1.RecordType.SafeMethodInvoke, ast.name, ast.fn, args, null, receiver);
    };
    _ConvertAstIntoProtoRecords.prototype.visitFunctionCall = function(ast) {
      var target = ast.target.visit(this);
      var args = this._visitAll(ast.args);
      return this._addRecord(proto_record_1.RecordType.InvokeClosure, "closure", null, args, null, target);
    };
    _ConvertAstIntoProtoRecords.prototype.visitLiteralArray = function(ast) {
      var primitiveName = "arrayFn" + ast.expressions.length;
      return this._addRecord(proto_record_1.RecordType.CollectionLiteral, primitiveName, _arrayFn(ast.expressions.length), this._visitAll(ast.expressions), null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitLiteralMap = function(ast) {
      return this._addRecord(proto_record_1.RecordType.CollectionLiteral, _mapPrimitiveName(ast.keys), change_detection_util_1.ChangeDetectionUtil.mapFn(ast.keys), this._visitAll(ast.values), null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitBinary = function(ast) {
      var left = ast.left.visit(this);
      switch (ast.operation) {
        case '&&':
          var branchEnd = [null];
          this._addRecord(proto_record_1.RecordType.SkipRecordsIfNot, "SkipRecordsIfNot", null, [], branchEnd, left);
          var right = ast.right.visit(this);
          branchEnd[0] = right;
          return this._addRecord(proto_record_1.RecordType.PrimitiveOp, "cond", change_detection_util_1.ChangeDetectionUtil.cond, [left, right, left], null, 0);
        case '||':
          var branchEnd = [null];
          this._addRecord(proto_record_1.RecordType.SkipRecordsIf, "SkipRecordsIf", null, [], branchEnd, left);
          var right = ast.right.visit(this);
          branchEnd[0] = right;
          return this._addRecord(proto_record_1.RecordType.PrimitiveOp, "cond", change_detection_util_1.ChangeDetectionUtil.cond, [left, left, right], null, 0);
        default:
          var right = ast.right.visit(this);
          return this._addRecord(proto_record_1.RecordType.PrimitiveOp, _operationToPrimitiveName(ast.operation), _operationToFunction(ast.operation), [left, right], null, 0);
      }
    };
    _ConvertAstIntoProtoRecords.prototype.visitPrefixNot = function(ast) {
      var exp = ast.expression.visit(this);
      return this._addRecord(proto_record_1.RecordType.PrimitiveOp, "operation_negate", change_detection_util_1.ChangeDetectionUtil.operation_negate, [exp], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitConditional = function(ast) {
      var condition = ast.condition.visit(this);
      var startOfFalseBranch = [null];
      var endOfFalseBranch = [null];
      this._addRecord(proto_record_1.RecordType.SkipRecordsIfNot, "SkipRecordsIfNot", null, [], startOfFalseBranch, condition);
      var whenTrue = ast.trueExp.visit(this);
      var skip = this._addRecord(proto_record_1.RecordType.SkipRecords, "SkipRecords", null, [], endOfFalseBranch, 0);
      var whenFalse = ast.falseExp.visit(this);
      startOfFalseBranch[0] = skip;
      endOfFalseBranch[0] = whenFalse;
      return this._addRecord(proto_record_1.RecordType.PrimitiveOp, "cond", change_detection_util_1.ChangeDetectionUtil.cond, [condition, whenTrue, whenFalse], null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype.visitPipe = function(ast) {
      var value = ast.exp.visit(this);
      var args = this._visitAll(ast.args);
      return this._addRecord(proto_record_1.RecordType.Pipe, ast.name, ast.name, args, null, value);
    };
    _ConvertAstIntoProtoRecords.prototype.visitKeyedRead = function(ast) {
      var obj = ast.obj.visit(this);
      var key = ast.key.visit(this);
      return this._addRecord(proto_record_1.RecordType.KeyedRead, "keyedAccess", change_detection_util_1.ChangeDetectionUtil.keyedAccess, [key], null, obj);
    };
    _ConvertAstIntoProtoRecords.prototype.visitChain = function(ast) {
      var _this = this;
      var args = ast.expressions.map(function(e) {
        return e.visit(_this);
      });
      return this._addRecord(proto_record_1.RecordType.Chain, "chain", null, args, null, 0);
    };
    _ConvertAstIntoProtoRecords.prototype._visitAll = function(asts) {
      var res = collection_1.ListWrapper.createFixedSize(asts.length);
      for (var i = 0; i < asts.length; ++i) {
        res[i] = asts[i].visit(this);
      }
      return res;
    };
    _ConvertAstIntoProtoRecords.prototype._addRecord = function(type, name, funcOrValue, args, fixedArgs, context) {
      var selfIndex = this._records.length + 1;
      if (context instanceof directive_record_1.DirectiveIndex) {
        this._records.push(new proto_record_1.ProtoRecord(type, name, funcOrValue, args, fixedArgs, -1, context, selfIndex, this._bindingRecord, false, false, false, false, this._bindingIndex));
      } else {
        this._records.push(new proto_record_1.ProtoRecord(type, name, funcOrValue, args, fixedArgs, context, null, selfIndex, this._bindingRecord, false, false, false, false, this._bindingIndex));
      }
      return selfIndex;
    };
    return _ConvertAstIntoProtoRecords;
  })();
  function _arrayFn(length) {
    switch (length) {
      case 0:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn0;
      case 1:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn1;
      case 2:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn2;
      case 3:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn3;
      case 4:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn4;
      case 5:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn5;
      case 6:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn6;
      case 7:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn7;
      case 8:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn8;
      case 9:
        return change_detection_util_1.ChangeDetectionUtil.arrayFn9;
      default:
        throw new exceptions_1.BaseException("Does not support literal maps with more than 9 elements");
    }
  }
  function _mapPrimitiveName(keys) {
    var stringifiedKeys = keys.map(function(k) {
      return lang_1.isString(k) ? "\"" + k + "\"" : "" + k;
    }).join(', ');
    return "mapFn([" + stringifiedKeys + "])";
  }
  function _operationToPrimitiveName(operation) {
    switch (operation) {
      case '+':
        return "operation_add";
      case '-':
        return "operation_subtract";
      case '*':
        return "operation_multiply";
      case '/':
        return "operation_divide";
      case '%':
        return "operation_remainder";
      case '==':
        return "operation_equals";
      case '!=':
        return "operation_not_equals";
      case '===':
        return "operation_identical";
      case '!==':
        return "operation_not_identical";
      case '<':
        return "operation_less_then";
      case '>':
        return "operation_greater_then";
      case '<=':
        return "operation_less_or_equals_then";
      case '>=':
        return "operation_greater_or_equals_then";
      default:
        throw new exceptions_1.BaseException("Unsupported operation " + operation);
    }
  }
  function _operationToFunction(operation) {
    switch (operation) {
      case '+':
        return change_detection_util_1.ChangeDetectionUtil.operation_add;
      case '-':
        return change_detection_util_1.ChangeDetectionUtil.operation_subtract;
      case '*':
        return change_detection_util_1.ChangeDetectionUtil.operation_multiply;
      case '/':
        return change_detection_util_1.ChangeDetectionUtil.operation_divide;
      case '%':
        return change_detection_util_1.ChangeDetectionUtil.operation_remainder;
      case '==':
        return change_detection_util_1.ChangeDetectionUtil.operation_equals;
      case '!=':
        return change_detection_util_1.ChangeDetectionUtil.operation_not_equals;
      case '===':
        return change_detection_util_1.ChangeDetectionUtil.operation_identical;
      case '!==':
        return change_detection_util_1.ChangeDetectionUtil.operation_not_identical;
      case '<':
        return change_detection_util_1.ChangeDetectionUtil.operation_less_then;
      case '>':
        return change_detection_util_1.ChangeDetectionUtil.operation_greater_then;
      case '<=':
        return change_detection_util_1.ChangeDetectionUtil.operation_less_or_equals_then;
      case '>=':
        return change_detection_util_1.ChangeDetectionUtil.operation_greater_or_equals_then;
      default:
        throw new exceptions_1.BaseException("Unsupported operation " + operation);
    }
  }
  function s(v) {
    return lang_1.isPresent(v) ? "" + v : '';
  }
  function _interpolationFn(strings) {
    var length = strings.length;
    var c0 = length > 0 ? strings[0] : null;
    var c1 = length > 1 ? strings[1] : null;
    var c2 = length > 2 ? strings[2] : null;
    var c3 = length > 3 ? strings[3] : null;
    var c4 = length > 4 ? strings[4] : null;
    var c5 = length > 5 ? strings[5] : null;
    var c6 = length > 6 ? strings[6] : null;
    var c7 = length > 7 ? strings[7] : null;
    var c8 = length > 8 ? strings[8] : null;
    var c9 = length > 9 ? strings[9] : null;
    switch (length - 1) {
      case 1:
        return function(a1) {
          return c0 + s(a1) + c1;
        };
      case 2:
        return function(a1, a2) {
          return c0 + s(a1) + c1 + s(a2) + c2;
        };
      case 3:
        return function(a1, a2, a3) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3;
        };
      case 4:
        return function(a1, a2, a3, a4) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4;
        };
      case 5:
        return function(a1, a2, a3, a4, a5) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5;
        };
      case 6:
        return function(a1, a2, a3, a4, a5, a6) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6;
        };
      case 7:
        return function(a1, a2, a3, a4, a5, a6, a7) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7;
        };
      case 8:
        return function(a1, a2, a3, a4, a5, a6, a7, a8) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8;
        };
      case 9:
        return function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
          return c0 + s(a1) + c1 + s(a2) + c2 + s(a3) + c3 + s(a4) + c4 + s(a5) + c5 + s(a6) + c6 + s(a7) + c7 + s(a8) + c8 + s(a9) + c9;
        };
      default:
        throw new exceptions_1.BaseException("Does not support more than 9 expressions");
    }
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  (function(ChangeDetectorState) {
    ChangeDetectorState[ChangeDetectorState["NeverChecked"] = 0] = "NeverChecked";
    ChangeDetectorState[ChangeDetectorState["CheckedBefore"] = 1] = "CheckedBefore";
    ChangeDetectorState[ChangeDetectorState["Errored"] = 2] = "Errored";
  })(exports.ChangeDetectorState || (exports.ChangeDetectorState = {}));
  var ChangeDetectorState = exports.ChangeDetectorState;
  (function(ChangeDetectionStrategy) {
    ChangeDetectionStrategy[ChangeDetectionStrategy["CheckOnce"] = 0] = "CheckOnce";
    ChangeDetectionStrategy[ChangeDetectionStrategy["Checked"] = 1] = "Checked";
    ChangeDetectionStrategy[ChangeDetectionStrategy["CheckAlways"] = 2] = "CheckAlways";
    ChangeDetectionStrategy[ChangeDetectionStrategy["Detached"] = 3] = "Detached";
    ChangeDetectionStrategy[ChangeDetectionStrategy["OnPush"] = 4] = "OnPush";
    ChangeDetectionStrategy[ChangeDetectionStrategy["Default"] = 5] = "Default";
    ChangeDetectionStrategy[ChangeDetectionStrategy["OnPushObserve"] = 6] = "OnPushObserve";
  })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));
  var ChangeDetectionStrategy = exports.ChangeDetectionStrategy;
  exports.CHANGE_DETECTION_STRATEGY_VALUES = [ChangeDetectionStrategy.CheckOnce, ChangeDetectionStrategy.Checked, ChangeDetectionStrategy.CheckAlways, ChangeDetectionStrategy.Detached, ChangeDetectionStrategy.OnPush, ChangeDetectionStrategy.Default, ChangeDetectionStrategy.OnPushObserve];
  exports.CHANGE_DETECTOR_STATE_VALUES = [ChangeDetectorState.NeverChecked, ChangeDetectorState.CheckedBefore, ChangeDetectorState.Errored];
  function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {
    return lang_1.isBlank(changeDetectionStrategy) || changeDetectionStrategy === ChangeDetectionStrategy.Default;
  }
  exports.isDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/interfaces", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var DebugContext = (function() {
    function DebugContext(element, componentElement, directive, context, locals, injector) {
      this.element = element;
      this.componentElement = componentElement;
      this.directive = directive;
      this.context = context;
      this.locals = locals;
      this.injector = injector;
    }
    return DebugContext;
  })();
  exports.DebugContext = DebugContext;
  var ChangeDetectorGenConfig = (function() {
    function ChangeDetectorGenConfig(genDebugInfo, logBindingUpdate, useJit) {
      this.genDebugInfo = genDebugInfo;
      this.logBindingUpdate = logBindingUpdate;
      this.useJit = useJit;
    }
    return ChangeDetectorGenConfig;
  })();
  exports.ChangeDetectorGenConfig = ChangeDetectorGenConfig;
  var ChangeDetectorDefinition = (function() {
    function ChangeDetectorDefinition(id, strategy, variableNames, bindingRecords, eventRecords, directiveRecords, genConfig) {
      this.id = id;
      this.strategy = strategy;
      this.variableNames = variableNames;
      this.bindingRecords = bindingRecords;
      this.eventRecords = eventRecords;
      this.directiveRecords = directiveRecords;
      this.genConfig = genConfig;
    }
    return ChangeDetectorDefinition;
  })();
  exports.ChangeDetectorDefinition = ChangeDetectorDefinition;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/exceptions", ["npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var ExpressionChangedAfterItHasBeenCheckedException = (function(_super) {
    __extends(ExpressionChangedAfterItHasBeenCheckedException, _super);
    function ExpressionChangedAfterItHasBeenCheckedException(exp, oldValue, currValue, context) {
      _super.call(this, ("Expression '" + exp + "' has changed after it was checked. ") + ("Previous value: '" + oldValue + "'. Current value: '" + currValue + "'"));
    }
    return ExpressionChangedAfterItHasBeenCheckedException;
  })(exceptions_1.BaseException);
  exports.ExpressionChangedAfterItHasBeenCheckedException = ExpressionChangedAfterItHasBeenCheckedException;
  var ChangeDetectionError = (function(_super) {
    __extends(ChangeDetectionError, _super);
    function ChangeDetectionError(exp, originalException, originalStack, context) {
      _super.call(this, originalException + " in [" + exp + "]", originalException, originalStack, context);
      this.location = exp;
    }
    return ChangeDetectionError;
  })(exceptions_1.WrappedException);
  exports.ChangeDetectionError = ChangeDetectionError;
  var DehydratedException = (function(_super) {
    __extends(DehydratedException, _super);
    function DehydratedException() {
      _super.call(this, 'Attempt to detect changes on a dehydrated detector.');
    }
    return DehydratedException;
  })(exceptions_1.BaseException);
  exports.DehydratedException = DehydratedException;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/locals", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var Locals = (function() {
    function Locals(parent, current) {
      this.parent = parent;
      this.current = current;
    }
    Locals.prototype.contains = function(name) {
      if (this.current.has(name)) {
        return true;
      }
      if (lang_1.isPresent(this.parent)) {
        return this.parent.contains(name);
      }
      return false;
    };
    Locals.prototype.get = function(name) {
      if (this.current.has(name)) {
        return this.current.get(name);
      }
      if (lang_1.isPresent(this.parent)) {
        return this.parent.get(name);
      }
      throw new exceptions_1.BaseException("Cannot find '" + name + "'");
    };
    Locals.prototype.set = function(name, value) {
      if (this.current.has(name)) {
        this.current.set(name, value);
      } else {
        throw new exceptions_1.BaseException("Setting of new keys post-construction is not supported. Key: " + name + ".");
      }
    };
    Locals.prototype.clearValues = function() {
      collection_1.MapWrapper.clearValues(this.current);
    };
    return Locals;
  })();
  exports.Locals = Locals;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/parser", ["npm:angular2@2.0.0-alpha.46/src/core/di/decorators", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/lexer", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/decorators');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lexer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/lexer');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast');
  var _implicitReceiver = new ast_1.ImplicitReceiver();
  var INTERPOLATION_REGEXP = /\{\{(.*?)\}\}/g;
  var ParseException = (function(_super) {
    __extends(ParseException, _super);
    function ParseException(message, input, errLocation, ctxLocation) {
      _super.call(this, "Parser Error: " + message + " " + errLocation + " [" + input + "] in " + ctxLocation);
    }
    return ParseException;
  })(exceptions_1.BaseException);
  var Parser = (function() {
    function Parser(_lexer, providedReflector) {
      if (providedReflector === void 0) {
        providedReflector = null;
      }
      this._lexer = _lexer;
      this._reflector = lang_1.isPresent(providedReflector) ? providedReflector : reflection_1.reflector;
    }
    Parser.prototype.parseAction = function(input, location) {
      this._checkNoInterpolation(input, location);
      var tokens = this._lexer.tokenize(input);
      var ast = new _ParseAST(input, location, tokens, this._reflector, true).parseChain();
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.parseBinding = function(input, location) {
      this._checkNoInterpolation(input, location);
      var tokens = this._lexer.tokenize(input);
      var ast = new _ParseAST(input, location, tokens, this._reflector, false).parseChain();
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.parseSimpleBinding = function(input, location) {
      this._checkNoInterpolation(input, location);
      var tokens = this._lexer.tokenize(input);
      var ast = new _ParseAST(input, location, tokens, this._reflector, false).parseSimpleBinding();
      return new ast_1.ASTWithSource(ast, input, location);
    };
    Parser.prototype.parseTemplateBindings = function(input, location) {
      var tokens = this._lexer.tokenize(input);
      return new _ParseAST(input, location, tokens, this._reflector, false).parseTemplateBindings();
    };
    Parser.prototype.parseInterpolation = function(input, location) {
      var parts = lang_1.StringWrapper.split(input, INTERPOLATION_REGEXP);
      if (parts.length <= 1) {
        return null;
      }
      var strings = [];
      var expressions = [];
      for (var i = 0; i < parts.length; i++) {
        var part = parts[i];
        if (i % 2 === 0) {
          strings.push(part);
        } else if (part.trim().length > 0) {
          var tokens = this._lexer.tokenize(part);
          var ast = new _ParseAST(input, location, tokens, this._reflector, false).parseChain();
          expressions.push(ast);
        } else {
          throw new ParseException('Blank expressions are not allowed in interpolated strings', input, "at column " + this._findInterpolationErrorColumn(parts, i) + " in", location);
        }
      }
      return new ast_1.ASTWithSource(new ast_1.Interpolation(strings, expressions), input, location);
    };
    Parser.prototype.wrapLiteralPrimitive = function(input, location) {
      return new ast_1.ASTWithSource(new ast_1.LiteralPrimitive(input), input, location);
    };
    Parser.prototype._checkNoInterpolation = function(input, location) {
      var parts = lang_1.StringWrapper.split(input, INTERPOLATION_REGEXP);
      if (parts.length > 1) {
        throw new ParseException('Got interpolation ({{}}) where expression was expected', input, "at column " + this._findInterpolationErrorColumn(parts, 1) + " in", location);
      }
    };
    Parser.prototype._findInterpolationErrorColumn = function(parts, partInErrIdx) {
      var errLocation = '';
      for (var j = 0; j < partInErrIdx; j++) {
        errLocation += j % 2 === 0 ? parts[j] : "{{" + parts[j] + "}}";
      }
      return errLocation.length;
    };
    Parser = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [lexer_1.Lexer, reflection_1.Reflector])], Parser);
    return Parser;
  })();
  exports.Parser = Parser;
  var _ParseAST = (function() {
    function _ParseAST(input, location, tokens, reflector, parseAction) {
      this.input = input;
      this.location = location;
      this.tokens = tokens;
      this.reflector = reflector;
      this.parseAction = parseAction;
      this.index = 0;
    }
    _ParseAST.prototype.peek = function(offset) {
      var i = this.index + offset;
      return i < this.tokens.length ? this.tokens[i] : lexer_1.EOF;
    };
    Object.defineProperty(_ParseAST.prototype, "next", {
      get: function() {
        return this.peek(0);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(_ParseAST.prototype, "inputIndex", {
      get: function() {
        return (this.index < this.tokens.length) ? this.next.index : this.input.length;
      },
      enumerable: true,
      configurable: true
    });
    _ParseAST.prototype.advance = function() {
      this.index++;
    };
    _ParseAST.prototype.optionalCharacter = function(code) {
      if (this.next.isCharacter(code)) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.optionalKeywordVar = function() {
      if (this.peekKeywordVar()) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.peekKeywordVar = function() {
      return this.next.isKeywordVar() || this.next.isOperator('#');
    };
    _ParseAST.prototype.expectCharacter = function(code) {
      if (this.optionalCharacter(code))
        return;
      this.error("Missing expected " + lang_1.StringWrapper.fromCharCode(code));
    };
    _ParseAST.prototype.optionalOperator = function(op) {
      if (this.next.isOperator(op)) {
        this.advance();
        return true;
      } else {
        return false;
      }
    };
    _ParseAST.prototype.expectOperator = function(operator) {
      if (this.optionalOperator(operator))
        return;
      this.error("Missing expected operator " + operator);
    };
    _ParseAST.prototype.expectIdentifierOrKeyword = function() {
      var n = this.next;
      if (!n.isIdentifier() && !n.isKeyword()) {
        this.error("Unexpected token " + n + ", expected identifier or keyword");
      }
      this.advance();
      return n.toString();
    };
    _ParseAST.prototype.expectIdentifierOrKeywordOrString = function() {
      var n = this.next;
      if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {
        this.error("Unexpected token " + n + ", expected identifier, keyword, or string");
      }
      this.advance();
      return n.toString();
    };
    _ParseAST.prototype.parseSimpleBinding = function() {
      var ast = this.parseChain();
      if (!SimpleExpressionChecker.check(ast)) {
        this.error("Simple binding expression can only contain field access and constants'");
      }
      return ast;
    };
    _ParseAST.prototype.parseChain = function() {
      var exprs = [];
      while (this.index < this.tokens.length) {
        var expr = this.parsePipe();
        exprs.push(expr);
        if (this.optionalCharacter(lexer_1.$SEMICOLON)) {
          if (!this.parseAction) {
            this.error("Binding expression cannot contain chained expression");
          }
          while (this.optionalCharacter(lexer_1.$SEMICOLON)) {}
        } else if (this.index < this.tokens.length) {
          this.error("Unexpected token '" + this.next + "'");
        }
      }
      if (exprs.length == 0)
        return new ast_1.EmptyExpr();
      if (exprs.length == 1)
        return exprs[0];
      return new ast_1.Chain(exprs);
    };
    _ParseAST.prototype.parsePipe = function() {
      var result = this.parseExpression();
      if (this.optionalOperator("|")) {
        if (this.parseAction) {
          this.error("Cannot have a pipe in an action expression");
        }
        do {
          var name = this.expectIdentifierOrKeyword();
          var args = [];
          while (this.optionalCharacter(lexer_1.$COLON)) {
            args.push(this.parseExpression());
          }
          result = new ast_1.BindingPipe(result, name, args);
        } while (this.optionalOperator("|"));
      }
      return result;
    };
    _ParseAST.prototype.parseExpression = function() {
      return this.parseConditional();
    };
    _ParseAST.prototype.parseConditional = function() {
      var start = this.inputIndex;
      var result = this.parseLogicalOr();
      if (this.optionalOperator('?')) {
        var yes = this.parsePipe();
        if (!this.optionalCharacter(lexer_1.$COLON)) {
          var end = this.inputIndex;
          var expression = this.input.substring(start, end);
          this.error("Conditional expression " + expression + " requires all 3 expressions");
        }
        var no = this.parsePipe();
        return new ast_1.Conditional(result, yes, no);
      } else {
        return result;
      }
    };
    _ParseAST.prototype.parseLogicalOr = function() {
      var result = this.parseLogicalAnd();
      while (this.optionalOperator('||')) {
        result = new ast_1.Binary('||', result, this.parseLogicalAnd());
      }
      return result;
    };
    _ParseAST.prototype.parseLogicalAnd = function() {
      var result = this.parseEquality();
      while (this.optionalOperator('&&')) {
        result = new ast_1.Binary('&&', result, this.parseEquality());
      }
      return result;
    };
    _ParseAST.prototype.parseEquality = function() {
      var result = this.parseRelational();
      while (true) {
        if (this.optionalOperator('==')) {
          result = new ast_1.Binary('==', result, this.parseRelational());
        } else if (this.optionalOperator('===')) {
          result = new ast_1.Binary('===', result, this.parseRelational());
        } else if (this.optionalOperator('!=')) {
          result = new ast_1.Binary('!=', result, this.parseRelational());
        } else if (this.optionalOperator('!==')) {
          result = new ast_1.Binary('!==', result, this.parseRelational());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseRelational = function() {
      var result = this.parseAdditive();
      while (true) {
        if (this.optionalOperator('<')) {
          result = new ast_1.Binary('<', result, this.parseAdditive());
        } else if (this.optionalOperator('>')) {
          result = new ast_1.Binary('>', result, this.parseAdditive());
        } else if (this.optionalOperator('<=')) {
          result = new ast_1.Binary('<=', result, this.parseAdditive());
        } else if (this.optionalOperator('>=')) {
          result = new ast_1.Binary('>=', result, this.parseAdditive());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseAdditive = function() {
      var result = this.parseMultiplicative();
      while (true) {
        if (this.optionalOperator('+')) {
          result = new ast_1.Binary('+', result, this.parseMultiplicative());
        } else if (this.optionalOperator('-')) {
          result = new ast_1.Binary('-', result, this.parseMultiplicative());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parseMultiplicative = function() {
      var result = this.parsePrefix();
      while (true) {
        if (this.optionalOperator('*')) {
          result = new ast_1.Binary('*', result, this.parsePrefix());
        } else if (this.optionalOperator('%')) {
          result = new ast_1.Binary('%', result, this.parsePrefix());
        } else if (this.optionalOperator('/')) {
          result = new ast_1.Binary('/', result, this.parsePrefix());
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parsePrefix = function() {
      if (this.optionalOperator('+')) {
        return this.parsePrefix();
      } else if (this.optionalOperator('-')) {
        return new ast_1.Binary('-', new ast_1.LiteralPrimitive(0), this.parsePrefix());
      } else if (this.optionalOperator('!')) {
        return new ast_1.PrefixNot(this.parsePrefix());
      } else {
        return this.parseCallChain();
      }
    };
    _ParseAST.prototype.parseCallChain = function() {
      var result = this.parsePrimary();
      while (true) {
        if (this.optionalCharacter(lexer_1.$PERIOD)) {
          result = this.parseAccessMemberOrMethodCall(result, false);
        } else if (this.optionalOperator('?.')) {
          result = this.parseAccessMemberOrMethodCall(result, true);
        } else if (this.optionalCharacter(lexer_1.$LBRACKET)) {
          var key = this.parsePipe();
          this.expectCharacter(lexer_1.$RBRACKET);
          if (this.optionalOperator("=")) {
            var value = this.parseConditional();
            result = new ast_1.KeyedWrite(result, key, value);
          } else {
            result = new ast_1.KeyedRead(result, key);
          }
        } else if (this.optionalCharacter(lexer_1.$LPAREN)) {
          var args = this.parseCallArguments();
          this.expectCharacter(lexer_1.$RPAREN);
          result = new ast_1.FunctionCall(result, args);
        } else {
          return result;
        }
      }
    };
    _ParseAST.prototype.parsePrimary = function() {
      if (this.optionalCharacter(lexer_1.$LPAREN)) {
        var result = this.parsePipe();
        this.expectCharacter(lexer_1.$RPAREN);
        return result;
      } else if (this.next.isKeywordNull() || this.next.isKeywordUndefined()) {
        this.advance();
        return new ast_1.LiteralPrimitive(null);
      } else if (this.next.isKeywordTrue()) {
        this.advance();
        return new ast_1.LiteralPrimitive(true);
      } else if (this.next.isKeywordFalse()) {
        this.advance();
        return new ast_1.LiteralPrimitive(false);
      } else if (this.optionalCharacter(lexer_1.$LBRACKET)) {
        var elements = this.parseExpressionList(lexer_1.$RBRACKET);
        this.expectCharacter(lexer_1.$RBRACKET);
        return new ast_1.LiteralArray(elements);
      } else if (this.next.isCharacter(lexer_1.$LBRACE)) {
        return this.parseLiteralMap();
      } else if (this.next.isIdentifier()) {
        return this.parseAccessMemberOrMethodCall(_implicitReceiver, false);
      } else if (this.next.isNumber()) {
        var value = this.next.toNumber();
        this.advance();
        return new ast_1.LiteralPrimitive(value);
      } else if (this.next.isString()) {
        var literalValue = this.next.toString();
        this.advance();
        return new ast_1.LiteralPrimitive(literalValue);
      } else if (this.index >= this.tokens.length) {
        this.error("Unexpected end of expression: " + this.input);
      } else {
        this.error("Unexpected token " + this.next);
      }
      throw new exceptions_1.BaseException("Fell through all cases in parsePrimary");
    };
    _ParseAST.prototype.parseExpressionList = function(terminator) {
      var result = [];
      if (!this.next.isCharacter(terminator)) {
        do {
          result.push(this.parsePipe());
        } while (this.optionalCharacter(lexer_1.$COMMA));
      }
      return result;
    };
    _ParseAST.prototype.parseLiteralMap = function() {
      var keys = [];
      var values = [];
      this.expectCharacter(lexer_1.$LBRACE);
      if (!this.optionalCharacter(lexer_1.$RBRACE)) {
        do {
          var key = this.expectIdentifierOrKeywordOrString();
          keys.push(key);
          this.expectCharacter(lexer_1.$COLON);
          values.push(this.parsePipe());
        } while (this.optionalCharacter(lexer_1.$COMMA));
        this.expectCharacter(lexer_1.$RBRACE);
      }
      return new ast_1.LiteralMap(keys, values);
    };
    _ParseAST.prototype.parseAccessMemberOrMethodCall = function(receiver, isSafe) {
      if (isSafe === void 0) {
        isSafe = false;
      }
      var id = this.expectIdentifierOrKeyword();
      if (this.optionalCharacter(lexer_1.$LPAREN)) {
        var args = this.parseCallArguments();
        this.expectCharacter(lexer_1.$RPAREN);
        var fn = this.reflector.method(id);
        return isSafe ? new ast_1.SafeMethodCall(receiver, id, fn, args) : new ast_1.MethodCall(receiver, id, fn, args);
      } else {
        if (isSafe) {
          if (this.optionalOperator("=")) {
            this.error("The '?.' operator cannot be used in the assignment");
          } else {
            return new ast_1.SafePropertyRead(receiver, id, this.reflector.getter(id));
          }
        } else {
          if (this.optionalOperator("=")) {
            if (!this.parseAction) {
              this.error("Bindings cannot contain assignments");
            }
            var value = this.parseConditional();
            return new ast_1.PropertyWrite(receiver, id, this.reflector.setter(id), value);
          } else {
            return new ast_1.PropertyRead(receiver, id, this.reflector.getter(id));
          }
        }
      }
      return null;
    };
    _ParseAST.prototype.parseCallArguments = function() {
      if (this.next.isCharacter(lexer_1.$RPAREN))
        return [];
      var positionals = [];
      do {
        positionals.push(this.parsePipe());
      } while (this.optionalCharacter(lexer_1.$COMMA));
      return positionals;
    };
    _ParseAST.prototype.parseBlockContent = function() {
      if (!this.parseAction) {
        this.error("Binding expression cannot contain chained expression");
      }
      var exprs = [];
      while (this.index < this.tokens.length && !this.next.isCharacter(lexer_1.$RBRACE)) {
        var expr = this.parseExpression();
        exprs.push(expr);
        if (this.optionalCharacter(lexer_1.$SEMICOLON)) {
          while (this.optionalCharacter(lexer_1.$SEMICOLON)) {}
        }
      }
      if (exprs.length == 0)
        return new ast_1.EmptyExpr();
      if (exprs.length == 1)
        return exprs[0];
      return new ast_1.Chain(exprs);
    };
    _ParseAST.prototype.expectTemplateBindingKey = function() {
      var result = '';
      var operatorFound = false;
      do {
        result += this.expectIdentifierOrKeywordOrString();
        operatorFound = this.optionalOperator('-');
        if (operatorFound) {
          result += '-';
        }
      } while (operatorFound);
      return result.toString();
    };
    _ParseAST.prototype.parseTemplateBindings = function() {
      var bindings = [];
      var prefix = null;
      while (this.index < this.tokens.length) {
        var keyIsVar = this.optionalKeywordVar();
        var key = this.expectTemplateBindingKey();
        if (!keyIsVar) {
          if (prefix == null) {
            prefix = key;
          } else {
            key = prefix + '-' + key;
          }
        }
        this.optionalCharacter(lexer_1.$COLON);
        var name = null;
        var expression = null;
        if (keyIsVar) {
          if (this.optionalOperator("=")) {
            name = this.expectTemplateBindingKey();
          } else {
            name = '\$implicit';
          }
        } else if (this.next !== lexer_1.EOF && !this.peekKeywordVar()) {
          var start = this.inputIndex;
          var ast = this.parsePipe();
          var source = this.input.substring(start, this.inputIndex);
          expression = new ast_1.ASTWithSource(ast, source, this.location);
        }
        bindings.push(new ast_1.TemplateBinding(key, keyIsVar, name, expression));
        if (!this.optionalCharacter(lexer_1.$SEMICOLON)) {
          this.optionalCharacter(lexer_1.$COMMA);
        }
      }
      return bindings;
    };
    _ParseAST.prototype.error = function(message, index) {
      if (index === void 0) {
        index = null;
      }
      if (lang_1.isBlank(index))
        index = this.index;
      var location = (index < this.tokens.length) ? "at column " + (this.tokens[index].index + 1) + " in" : "at the end of the expression";
      throw new ParseException(message, this.input, location, this.location);
    };
    return _ParseAST;
  })();
  exports._ParseAST = _ParseAST;
  var SimpleExpressionChecker = (function() {
    function SimpleExpressionChecker() {
      this.simple = true;
    }
    SimpleExpressionChecker.check = function(ast) {
      var s = new SimpleExpressionChecker();
      ast.visit(s);
      return s.simple;
    };
    SimpleExpressionChecker.prototype.visitImplicitReceiver = function(ast) {};
    SimpleExpressionChecker.prototype.visitInterpolation = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitLiteralPrimitive = function(ast) {};
    SimpleExpressionChecker.prototype.visitPropertyRead = function(ast) {};
    SimpleExpressionChecker.prototype.visitPropertyWrite = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitSafePropertyRead = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitMethodCall = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitSafeMethodCall = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitFunctionCall = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitLiteralArray = function(ast) {
      this.visitAll(ast.expressions);
    };
    SimpleExpressionChecker.prototype.visitLiteralMap = function(ast) {
      this.visitAll(ast.values);
    };
    SimpleExpressionChecker.prototype.visitBinary = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitPrefixNot = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitConditional = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitPipe = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitKeyedRead = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitKeyedWrite = function(ast) {
      this.simple = false;
    };
    SimpleExpressionChecker.prototype.visitAll = function(asts) {
      var res = collection_1.ListWrapper.createFixedSize(asts.length);
      for (var i = 0; i < asts.length; ++i) {
        res[i] = asts[i].visit(this);
      }
      return res;
    };
    SimpleExpressionChecker.prototype.visitChain = function(ast) {
      this.simple = false;
    };
    return SimpleExpressionChecker;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/lexer", ["npm:angular2@2.0.0-alpha.46/src/core/di/decorators", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/decorators');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  (function(TokenType) {
    TokenType[TokenType["Character"] = 0] = "Character";
    TokenType[TokenType["Identifier"] = 1] = "Identifier";
    TokenType[TokenType["Keyword"] = 2] = "Keyword";
    TokenType[TokenType["String"] = 3] = "String";
    TokenType[TokenType["Operator"] = 4] = "Operator";
    TokenType[TokenType["Number"] = 5] = "Number";
  })(exports.TokenType || (exports.TokenType = {}));
  var TokenType = exports.TokenType;
  var Lexer = (function() {
    function Lexer() {}
    Lexer.prototype.tokenize = function(text) {
      var scanner = new _Scanner(text);
      var tokens = [];
      var token = scanner.scanToken();
      while (token != null) {
        tokens.push(token);
        token = scanner.scanToken();
      }
      return tokens;
    };
    Lexer = __decorate([decorators_1.Injectable(), __metadata('design:paramtypes', [])], Lexer);
    return Lexer;
  })();
  exports.Lexer = Lexer;
  var Token = (function() {
    function Token(index, type, numValue, strValue) {
      this.index = index;
      this.type = type;
      this.numValue = numValue;
      this.strValue = strValue;
    }
    Token.prototype.isCharacter = function(code) {
      return (this.type == TokenType.Character && this.numValue == code);
    };
    Token.prototype.isNumber = function() {
      return (this.type == TokenType.Number);
    };
    Token.prototype.isString = function() {
      return (this.type == TokenType.String);
    };
    Token.prototype.isOperator = function(operater) {
      return (this.type == TokenType.Operator && this.strValue == operater);
    };
    Token.prototype.isIdentifier = function() {
      return (this.type == TokenType.Identifier);
    };
    Token.prototype.isKeyword = function() {
      return (this.type == TokenType.Keyword);
    };
    Token.prototype.isKeywordVar = function() {
      return (this.type == TokenType.Keyword && this.strValue == "var");
    };
    Token.prototype.isKeywordNull = function() {
      return (this.type == TokenType.Keyword && this.strValue == "null");
    };
    Token.prototype.isKeywordUndefined = function() {
      return (this.type == TokenType.Keyword && this.strValue == "undefined");
    };
    Token.prototype.isKeywordTrue = function() {
      return (this.type == TokenType.Keyword && this.strValue == "true");
    };
    Token.prototype.isKeywordFalse = function() {
      return (this.type == TokenType.Keyword && this.strValue == "false");
    };
    Token.prototype.toNumber = function() {
      return (this.type == TokenType.Number) ? this.numValue : -1;
    };
    Token.prototype.toString = function() {
      switch (this.type) {
        case TokenType.Character:
        case TokenType.Identifier:
        case TokenType.Keyword:
        case TokenType.Operator:
        case TokenType.String:
          return this.strValue;
        case TokenType.Number:
          return this.numValue.toString();
        default:
          return null;
      }
    };
    return Token;
  })();
  exports.Token = Token;
  function newCharacterToken(index, code) {
    return new Token(index, TokenType.Character, code, lang_1.StringWrapper.fromCharCode(code));
  }
  function newIdentifierToken(index, text) {
    return new Token(index, TokenType.Identifier, 0, text);
  }
  function newKeywordToken(index, text) {
    return new Token(index, TokenType.Keyword, 0, text);
  }
  function newOperatorToken(index, text) {
    return new Token(index, TokenType.Operator, 0, text);
  }
  function newStringToken(index, text) {
    return new Token(index, TokenType.String, 0, text);
  }
  function newNumberToken(index, n) {
    return new Token(index, TokenType.Number, n, "");
  }
  exports.EOF = new Token(-1, TokenType.Character, 0, "");
  exports.$EOF = 0;
  exports.$TAB = 9;
  exports.$LF = 10;
  exports.$VTAB = 11;
  exports.$FF = 12;
  exports.$CR = 13;
  exports.$SPACE = 32;
  exports.$BANG = 33;
  exports.$DQ = 34;
  exports.$HASH = 35;
  exports.$$ = 36;
  exports.$PERCENT = 37;
  exports.$AMPERSAND = 38;
  exports.$SQ = 39;
  exports.$LPAREN = 40;
  exports.$RPAREN = 41;
  exports.$STAR = 42;
  exports.$PLUS = 43;
  exports.$COMMA = 44;
  exports.$MINUS = 45;
  exports.$PERIOD = 46;
  exports.$SLASH = 47;
  exports.$COLON = 58;
  exports.$SEMICOLON = 59;
  exports.$LT = 60;
  exports.$EQ = 61;
  exports.$GT = 62;
  exports.$QUESTION = 63;
  var $0 = 48;
  var $9 = 57;
  var $A = 65,
      $E = 69,
      $Z = 90;
  exports.$LBRACKET = 91;
  exports.$BACKSLASH = 92;
  exports.$RBRACKET = 93;
  var $CARET = 94;
  var $_ = 95;
  var $a = 97,
      $e = 101,
      $f = 102,
      $n = 110,
      $r = 114,
      $t = 116,
      $u = 117,
      $v = 118,
      $z = 122;
  exports.$LBRACE = 123;
  exports.$BAR = 124;
  exports.$RBRACE = 125;
  var $NBSP = 160;
  var ScannerError = (function(_super) {
    __extends(ScannerError, _super);
    function ScannerError(message) {
      _super.call(this);
      this.message = message;
    }
    ScannerError.prototype.toString = function() {
      return this.message;
    };
    return ScannerError;
  })(exceptions_1.BaseException);
  exports.ScannerError = ScannerError;
  var _Scanner = (function() {
    function _Scanner(input) {
      this.input = input;
      this.peek = 0;
      this.index = -1;
      this.length = input.length;
      this.advance();
    }
    _Scanner.prototype.advance = function() {
      this.peek = ++this.index >= this.length ? exports.$EOF : lang_1.StringWrapper.charCodeAt(this.input, this.index);
    };
    _Scanner.prototype.scanToken = function() {
      var input = this.input,
          length = this.length,
          peek = this.peek,
          index = this.index;
      while (peek <= exports.$SPACE) {
        if (++index >= length) {
          peek = exports.$EOF;
          break;
        } else {
          peek = lang_1.StringWrapper.charCodeAt(input, index);
        }
      }
      this.peek = peek;
      this.index = index;
      if (index >= length) {
        return null;
      }
      if (isIdentifierStart(peek))
        return this.scanIdentifier();
      if (isDigit(peek))
        return this.scanNumber(index);
      var start = index;
      switch (peek) {
        case exports.$PERIOD:
          this.advance();
          return isDigit(this.peek) ? this.scanNumber(start) : newCharacterToken(start, exports.$PERIOD);
        case exports.$LPAREN:
        case exports.$RPAREN:
        case exports.$LBRACE:
        case exports.$RBRACE:
        case exports.$LBRACKET:
        case exports.$RBRACKET:
        case exports.$COMMA:
        case exports.$COLON:
        case exports.$SEMICOLON:
          return this.scanCharacter(start, peek);
        case exports.$SQ:
        case exports.$DQ:
          return this.scanString();
        case exports.$HASH:
        case exports.$PLUS:
        case exports.$MINUS:
        case exports.$STAR:
        case exports.$SLASH:
        case exports.$PERCENT:
        case $CARET:
          return this.scanOperator(start, lang_1.StringWrapper.fromCharCode(peek));
        case exports.$QUESTION:
          return this.scanComplexOperator(start, '?', exports.$PERIOD, '.');
        case exports.$LT:
        case exports.$GT:
          return this.scanComplexOperator(start, lang_1.StringWrapper.fromCharCode(peek), exports.$EQ, '=');
        case exports.$BANG:
        case exports.$EQ:
          return this.scanComplexOperator(start, lang_1.StringWrapper.fromCharCode(peek), exports.$EQ, '=', exports.$EQ, '=');
        case exports.$AMPERSAND:
          return this.scanComplexOperator(start, '&', exports.$AMPERSAND, '&');
        case exports.$BAR:
          return this.scanComplexOperator(start, '|', exports.$BAR, '|');
        case $NBSP:
          while (isWhitespace(this.peek))
            this.advance();
          return this.scanToken();
      }
      this.error("Unexpected character [" + lang_1.StringWrapper.fromCharCode(peek) + "]", 0);
      return null;
    };
    _Scanner.prototype.scanCharacter = function(start, code) {
      assert(this.peek == code);
      this.advance();
      return newCharacterToken(start, code);
    };
    _Scanner.prototype.scanOperator = function(start, str) {
      assert(this.peek == lang_1.StringWrapper.charCodeAt(str, 0));
      assert(collection_1.SetWrapper.has(OPERATORS, str));
      this.advance();
      return newOperatorToken(start, str);
    };
    _Scanner.prototype.scanComplexOperator = function(start, one, twoCode, two, threeCode, three) {
      assert(this.peek == lang_1.StringWrapper.charCodeAt(one, 0));
      this.advance();
      var str = one;
      if (this.peek == twoCode) {
        this.advance();
        str += two;
      }
      if (lang_1.isPresent(threeCode) && this.peek == threeCode) {
        this.advance();
        str += three;
      }
      assert(collection_1.SetWrapper.has(OPERATORS, str));
      return newOperatorToken(start, str);
    };
    _Scanner.prototype.scanIdentifier = function() {
      assert(isIdentifierStart(this.peek));
      var start = this.index;
      this.advance();
      while (isIdentifierPart(this.peek))
        this.advance();
      var str = this.input.substring(start, this.index);
      if (collection_1.SetWrapper.has(KEYWORDS, str)) {
        return newKeywordToken(start, str);
      } else {
        return newIdentifierToken(start, str);
      }
    };
    _Scanner.prototype.scanNumber = function(start) {
      assert(isDigit(this.peek));
      var simple = (this.index === start);
      this.advance();
      while (true) {
        if (isDigit(this.peek)) {} else if (this.peek == exports.$PERIOD) {
          simple = false;
        } else if (isExponentStart(this.peek)) {
          this.advance();
          if (isExponentSign(this.peek))
            this.advance();
          if (!isDigit(this.peek))
            this.error('Invalid exponent', -1);
          simple = false;
        } else {
          break;
        }
        this.advance();
      }
      var str = this.input.substring(start, this.index);
      var value = simple ? lang_1.NumberWrapper.parseIntAutoRadix(str) : lang_1.NumberWrapper.parseFloat(str);
      return newNumberToken(start, value);
    };
    _Scanner.prototype.scanString = function() {
      assert(this.peek == exports.$SQ || this.peek == exports.$DQ);
      var start = this.index;
      var quote = this.peek;
      this.advance();
      var buffer;
      var marker = this.index;
      var input = this.input;
      while (this.peek != quote) {
        if (this.peek == exports.$BACKSLASH) {
          if (buffer == null)
            buffer = new lang_1.StringJoiner();
          buffer.add(input.substring(marker, this.index));
          this.advance();
          var unescapedCode;
          if (this.peek == $u) {
            var hex = input.substring(this.index + 1, this.index + 5);
            try {
              unescapedCode = lang_1.NumberWrapper.parseInt(hex, 16);
            } catch (e) {
              this.error("Invalid unicode escape [\\u" + hex + "]", 0);
            }
            for (var i = 0; i < 5; i++) {
              this.advance();
            }
          } else {
            unescapedCode = unescape(this.peek);
            this.advance();
          }
          buffer.add(lang_1.StringWrapper.fromCharCode(unescapedCode));
          marker = this.index;
        } else if (this.peek == exports.$EOF) {
          this.error('Unterminated quote', 0);
        } else {
          this.advance();
        }
      }
      var last = input.substring(marker, this.index);
      this.advance();
      var unescaped = last;
      if (buffer != null) {
        buffer.add(last);
        unescaped = buffer.toString();
      }
      return newStringToken(start, unescaped);
    };
    _Scanner.prototype.error = function(message, offset) {
      var position = this.index + offset;
      throw new ScannerError("Lexer Error: " + message + " at column " + position + " in expression [" + this.input + "]");
    };
    return _Scanner;
  })();
  function isWhitespace(code) {
    return (code >= exports.$TAB && code <= exports.$SPACE) || (code == $NBSP);
  }
  function isIdentifierStart(code) {
    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) || (code == $_) || (code == exports.$$);
  }
  function isIdentifierPart(code) {
    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) || ($0 <= code && code <= $9) || (code == $_) || (code == exports.$$);
  }
  function isDigit(code) {
    return $0 <= code && code <= $9;
  }
  function isExponentStart(code) {
    return code == $e || code == $E;
  }
  function isExponentSign(code) {
    return code == exports.$MINUS || code == exports.$PLUS;
  }
  function unescape(code) {
    switch (code) {
      case $n:
        return exports.$LF;
      case $f:
        return exports.$FF;
      case $r:
        return exports.$CR;
      case $t:
        return exports.$TAB;
      case $v:
        return exports.$VTAB;
      default:
        return code;
    }
  }
  var OPERATORS = collection_1.SetWrapper.createFromList(['+', '-', '*', '/', '%', '^', '=', '==', '!=', '===', '!==', '<', '>', '<=', '>=', '&&', '||', '&', '|', '!', '?', '#', '?.']);
  var KEYWORDS = collection_1.SetWrapper.createFromList(['var', 'null', 'undefined', 'true', 'false', 'if', 'else']);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast", ["npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var AST = (function() {
    function AST() {}
    AST.prototype.visit = function(visitor) {
      return null;
    };
    AST.prototype.toString = function() {
      return "AST";
    };
    return AST;
  })();
  exports.AST = AST;
  var EmptyExpr = (function(_super) {
    __extends(EmptyExpr, _super);
    function EmptyExpr() {
      _super.apply(this, arguments);
    }
    EmptyExpr.prototype.visit = function(visitor) {};
    return EmptyExpr;
  })(AST);
  exports.EmptyExpr = EmptyExpr;
  var ImplicitReceiver = (function(_super) {
    __extends(ImplicitReceiver, _super);
    function ImplicitReceiver() {
      _super.apply(this, arguments);
    }
    ImplicitReceiver.prototype.visit = function(visitor) {
      return visitor.visitImplicitReceiver(this);
    };
    return ImplicitReceiver;
  })(AST);
  exports.ImplicitReceiver = ImplicitReceiver;
  var Chain = (function(_super) {
    __extends(Chain, _super);
    function Chain(expressions) {
      _super.call(this);
      this.expressions = expressions;
    }
    Chain.prototype.visit = function(visitor) {
      return visitor.visitChain(this);
    };
    return Chain;
  })(AST);
  exports.Chain = Chain;
  var Conditional = (function(_super) {
    __extends(Conditional, _super);
    function Conditional(condition, trueExp, falseExp) {
      _super.call(this);
      this.condition = condition;
      this.trueExp = trueExp;
      this.falseExp = falseExp;
    }
    Conditional.prototype.visit = function(visitor) {
      return visitor.visitConditional(this);
    };
    return Conditional;
  })(AST);
  exports.Conditional = Conditional;
  var PropertyRead = (function(_super) {
    __extends(PropertyRead, _super);
    function PropertyRead(receiver, name, getter) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.getter = getter;
    }
    PropertyRead.prototype.visit = function(visitor) {
      return visitor.visitPropertyRead(this);
    };
    return PropertyRead;
  })(AST);
  exports.PropertyRead = PropertyRead;
  var PropertyWrite = (function(_super) {
    __extends(PropertyWrite, _super);
    function PropertyWrite(receiver, name, setter, value) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.setter = setter;
      this.value = value;
    }
    PropertyWrite.prototype.visit = function(visitor) {
      return visitor.visitPropertyWrite(this);
    };
    return PropertyWrite;
  })(AST);
  exports.PropertyWrite = PropertyWrite;
  var SafePropertyRead = (function(_super) {
    __extends(SafePropertyRead, _super);
    function SafePropertyRead(receiver, name, getter) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.getter = getter;
    }
    SafePropertyRead.prototype.visit = function(visitor) {
      return visitor.visitSafePropertyRead(this);
    };
    return SafePropertyRead;
  })(AST);
  exports.SafePropertyRead = SafePropertyRead;
  var KeyedRead = (function(_super) {
    __extends(KeyedRead, _super);
    function KeyedRead(obj, key) {
      _super.call(this);
      this.obj = obj;
      this.key = key;
    }
    KeyedRead.prototype.visit = function(visitor) {
      return visitor.visitKeyedRead(this);
    };
    return KeyedRead;
  })(AST);
  exports.KeyedRead = KeyedRead;
  var KeyedWrite = (function(_super) {
    __extends(KeyedWrite, _super);
    function KeyedWrite(obj, key, value) {
      _super.call(this);
      this.obj = obj;
      this.key = key;
      this.value = value;
    }
    KeyedWrite.prototype.visit = function(visitor) {
      return visitor.visitKeyedWrite(this);
    };
    return KeyedWrite;
  })(AST);
  exports.KeyedWrite = KeyedWrite;
  var BindingPipe = (function(_super) {
    __extends(BindingPipe, _super);
    function BindingPipe(exp, name, args) {
      _super.call(this);
      this.exp = exp;
      this.name = name;
      this.args = args;
    }
    BindingPipe.prototype.visit = function(visitor) {
      return visitor.visitPipe(this);
    };
    return BindingPipe;
  })(AST);
  exports.BindingPipe = BindingPipe;
  var LiteralPrimitive = (function(_super) {
    __extends(LiteralPrimitive, _super);
    function LiteralPrimitive(value) {
      _super.call(this);
      this.value = value;
    }
    LiteralPrimitive.prototype.visit = function(visitor) {
      return visitor.visitLiteralPrimitive(this);
    };
    return LiteralPrimitive;
  })(AST);
  exports.LiteralPrimitive = LiteralPrimitive;
  var LiteralArray = (function(_super) {
    __extends(LiteralArray, _super);
    function LiteralArray(expressions) {
      _super.call(this);
      this.expressions = expressions;
    }
    LiteralArray.prototype.visit = function(visitor) {
      return visitor.visitLiteralArray(this);
    };
    return LiteralArray;
  })(AST);
  exports.LiteralArray = LiteralArray;
  var LiteralMap = (function(_super) {
    __extends(LiteralMap, _super);
    function LiteralMap(keys, values) {
      _super.call(this);
      this.keys = keys;
      this.values = values;
    }
    LiteralMap.prototype.visit = function(visitor) {
      return visitor.visitLiteralMap(this);
    };
    return LiteralMap;
  })(AST);
  exports.LiteralMap = LiteralMap;
  var Interpolation = (function(_super) {
    __extends(Interpolation, _super);
    function Interpolation(strings, expressions) {
      _super.call(this);
      this.strings = strings;
      this.expressions = expressions;
    }
    Interpolation.prototype.visit = function(visitor) {
      visitor.visitInterpolation(this);
    };
    return Interpolation;
  })(AST);
  exports.Interpolation = Interpolation;
  var Binary = (function(_super) {
    __extends(Binary, _super);
    function Binary(operation, left, right) {
      _super.call(this);
      this.operation = operation;
      this.left = left;
      this.right = right;
    }
    Binary.prototype.visit = function(visitor) {
      return visitor.visitBinary(this);
    };
    return Binary;
  })(AST);
  exports.Binary = Binary;
  var PrefixNot = (function(_super) {
    __extends(PrefixNot, _super);
    function PrefixNot(expression) {
      _super.call(this);
      this.expression = expression;
    }
    PrefixNot.prototype.visit = function(visitor) {
      return visitor.visitPrefixNot(this);
    };
    return PrefixNot;
  })(AST);
  exports.PrefixNot = PrefixNot;
  var MethodCall = (function(_super) {
    __extends(MethodCall, _super);
    function MethodCall(receiver, name, fn, args) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.fn = fn;
      this.args = args;
    }
    MethodCall.prototype.visit = function(visitor) {
      return visitor.visitMethodCall(this);
    };
    return MethodCall;
  })(AST);
  exports.MethodCall = MethodCall;
  var SafeMethodCall = (function(_super) {
    __extends(SafeMethodCall, _super);
    function SafeMethodCall(receiver, name, fn, args) {
      _super.call(this);
      this.receiver = receiver;
      this.name = name;
      this.fn = fn;
      this.args = args;
    }
    SafeMethodCall.prototype.visit = function(visitor) {
      return visitor.visitSafeMethodCall(this);
    };
    return SafeMethodCall;
  })(AST);
  exports.SafeMethodCall = SafeMethodCall;
  var FunctionCall = (function(_super) {
    __extends(FunctionCall, _super);
    function FunctionCall(target, args) {
      _super.call(this);
      this.target = target;
      this.args = args;
    }
    FunctionCall.prototype.visit = function(visitor) {
      return visitor.visitFunctionCall(this);
    };
    return FunctionCall;
  })(AST);
  exports.FunctionCall = FunctionCall;
  var ASTWithSource = (function(_super) {
    __extends(ASTWithSource, _super);
    function ASTWithSource(ast, source, location) {
      _super.call(this);
      this.ast = ast;
      this.source = source;
      this.location = location;
    }
    ASTWithSource.prototype.visit = function(visitor) {
      return this.ast.visit(visitor);
    };
    ASTWithSource.prototype.toString = function() {
      return this.source + " in " + this.location;
    };
    return ASTWithSource;
  })(AST);
  exports.ASTWithSource = ASTWithSource;
  var TemplateBinding = (function() {
    function TemplateBinding(key, keyIsVar, name, expression) {
      this.key = key;
      this.keyIsVar = keyIsVar;
      this.name = name;
      this.expression = expression;
    }
    return TemplateBinding;
  })();
  exports.TemplateBinding = TemplateBinding;
  var RecursiveAstVisitor = (function() {
    function RecursiveAstVisitor() {}
    RecursiveAstVisitor.prototype.visitBinary = function(ast) {
      ast.left.visit(this);
      ast.right.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitChain = function(ast) {
      return this.visitAll(ast.expressions);
    };
    RecursiveAstVisitor.prototype.visitConditional = function(ast) {
      ast.condition.visit(this);
      ast.trueExp.visit(this);
      ast.falseExp.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitPipe = function(ast) {
      ast.exp.visit(this);
      this.visitAll(ast.args);
      return null;
    };
    RecursiveAstVisitor.prototype.visitFunctionCall = function(ast) {
      ast.target.visit(this);
      this.visitAll(ast.args);
      return null;
    };
    RecursiveAstVisitor.prototype.visitImplicitReceiver = function(ast) {
      return null;
    };
    RecursiveAstVisitor.prototype.visitInterpolation = function(ast) {
      return this.visitAll(ast.expressions);
    };
    RecursiveAstVisitor.prototype.visitKeyedRead = function(ast) {
      ast.obj.visit(this);
      ast.key.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitKeyedWrite = function(ast) {
      ast.obj.visit(this);
      ast.key.visit(this);
      ast.value.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitLiteralArray = function(ast) {
      return this.visitAll(ast.expressions);
    };
    RecursiveAstVisitor.prototype.visitLiteralMap = function(ast) {
      return this.visitAll(ast.values);
    };
    RecursiveAstVisitor.prototype.visitLiteralPrimitive = function(ast) {
      return null;
    };
    RecursiveAstVisitor.prototype.visitMethodCall = function(ast) {
      ast.receiver.visit(this);
      return this.visitAll(ast.args);
    };
    RecursiveAstVisitor.prototype.visitPrefixNot = function(ast) {
      ast.expression.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitPropertyRead = function(ast) {
      ast.receiver.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitPropertyWrite = function(ast) {
      ast.receiver.visit(this);
      ast.value.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitSafePropertyRead = function(ast) {
      ast.receiver.visit(this);
      return null;
    };
    RecursiveAstVisitor.prototype.visitSafeMethodCall = function(ast) {
      ast.receiver.visit(this);
      return this.visitAll(ast.args);
    };
    RecursiveAstVisitor.prototype.visitAll = function(asts) {
      var _this = this;
      asts.forEach(function(ast) {
        return ast.visit(_this);
      });
      return null;
    };
    return RecursiveAstVisitor;
  })();
  exports.RecursiveAstVisitor = RecursiveAstVisitor;
  var AstTransformer = (function() {
    function AstTransformer() {}
    AstTransformer.prototype.visitImplicitReceiver = function(ast) {
      return ast;
    };
    AstTransformer.prototype.visitInterpolation = function(ast) {
      return new Interpolation(ast.strings, this.visitAll(ast.expressions));
    };
    AstTransformer.prototype.visitLiteralPrimitive = function(ast) {
      return new LiteralPrimitive(ast.value);
    };
    AstTransformer.prototype.visitPropertyRead = function(ast) {
      return new PropertyRead(ast.receiver.visit(this), ast.name, ast.getter);
    };
    AstTransformer.prototype.visitPropertyWrite = function(ast) {
      return new PropertyWrite(ast.receiver.visit(this), ast.name, ast.setter, ast.value);
    };
    AstTransformer.prototype.visitSafePropertyRead = function(ast) {
      return new SafePropertyRead(ast.receiver.visit(this), ast.name, ast.getter);
    };
    AstTransformer.prototype.visitMethodCall = function(ast) {
      return new MethodCall(ast.receiver.visit(this), ast.name, ast.fn, this.visitAll(ast.args));
    };
    AstTransformer.prototype.visitSafeMethodCall = function(ast) {
      return new SafeMethodCall(ast.receiver.visit(this), ast.name, ast.fn, this.visitAll(ast.args));
    };
    AstTransformer.prototype.visitFunctionCall = function(ast) {
      return new FunctionCall(ast.target.visit(this), this.visitAll(ast.args));
    };
    AstTransformer.prototype.visitLiteralArray = function(ast) {
      return new LiteralArray(this.visitAll(ast.expressions));
    };
    AstTransformer.prototype.visitLiteralMap = function(ast) {
      return new LiteralMap(ast.keys, this.visitAll(ast.values));
    };
    AstTransformer.prototype.visitBinary = function(ast) {
      return new Binary(ast.operation, ast.left.visit(this), ast.right.visit(this));
    };
    AstTransformer.prototype.visitPrefixNot = function(ast) {
      return new PrefixNot(ast.expression.visit(this));
    };
    AstTransformer.prototype.visitConditional = function(ast) {
      return new Conditional(ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));
    };
    AstTransformer.prototype.visitPipe = function(ast) {
      return new BindingPipe(ast.exp.visit(this), ast.name, this.visitAll(ast.args));
    };
    AstTransformer.prototype.visitKeyedRead = function(ast) {
      return new KeyedRead(ast.obj.visit(this), ast.key.visit(this));
    };
    AstTransformer.prototype.visitKeyedWrite = function(ast) {
      return new KeyedWrite(ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));
    };
    AstTransformer.prototype.visitAll = function(asts) {
      var res = collection_1.ListWrapper.createFixedSize(asts.length);
      for (var i = 0; i < asts.length; ++i) {
        res[i] = asts[i].visit(this);
      }
      return res;
    };
    AstTransformer.prototype.visitChain = function(ast) {
      return new Chain(this.visitAll(ast.expressions));
    };
    return AstTransformer;
  })();
  exports.AstTransformer = AstTransformer;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/default_keyvalue_differ", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var DefaultKeyValueDifferFactory = (function() {
    function DefaultKeyValueDifferFactory() {}
    DefaultKeyValueDifferFactory.prototype.supports = function(obj) {
      return obj instanceof Map || lang_1.isJsObject(obj);
    };
    DefaultKeyValueDifferFactory.prototype.create = function(cdRef) {
      return new DefaultKeyValueDiffer();
    };
    DefaultKeyValueDifferFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], DefaultKeyValueDifferFactory);
    return DefaultKeyValueDifferFactory;
  })();
  exports.DefaultKeyValueDifferFactory = DefaultKeyValueDifferFactory;
  var DefaultKeyValueDiffer = (function() {
    function DefaultKeyValueDiffer() {
      this._records = new Map();
      this._mapHead = null;
      this._previousMapHead = null;
      this._changesHead = null;
      this._changesTail = null;
      this._additionsHead = null;
      this._additionsTail = null;
      this._removalsHead = null;
      this._removalsTail = null;
    }
    Object.defineProperty(DefaultKeyValueDiffer.prototype, "isDirty", {
      get: function() {
        return this._additionsHead !== null || this._changesHead !== null || this._removalsHead !== null;
      },
      enumerable: true,
      configurable: true
    });
    DefaultKeyValueDiffer.prototype.forEachItem = function(fn) {
      var record;
      for (record = this._mapHead; record !== null; record = record._next) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function(fn) {
      var record;
      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachChangedItem = function(fn) {
      var record;
      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachAddedItem = function(fn) {
      var record;
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function(fn) {
      var record;
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    };
    DefaultKeyValueDiffer.prototype.diff = function(map) {
      if (lang_1.isBlank(map))
        map = collection_1.MapWrapper.createFromPairs([]);
      if (!(map instanceof Map || lang_1.isJsObject(map))) {
        throw new exceptions_1.BaseException("Error trying to diff '" + map + "'");
      }
      if (this.check(map)) {
        return this;
      } else {
        return null;
      }
    };
    DefaultKeyValueDiffer.prototype.onDestroy = function() {};
    DefaultKeyValueDiffer.prototype.check = function(map) {
      var _this = this;
      this._reset();
      var records = this._records;
      var oldSeqRecord = this._mapHead;
      var lastOldSeqRecord = null;
      var lastNewSeqRecord = null;
      var seqChanged = false;
      this._forEach(map, function(value, key) {
        var newSeqRecord;
        if (oldSeqRecord !== null && key === oldSeqRecord.key) {
          newSeqRecord = oldSeqRecord;
          if (!lang_1.looseIdentical(value, oldSeqRecord.currentValue)) {
            oldSeqRecord.previousValue = oldSeqRecord.currentValue;
            oldSeqRecord.currentValue = value;
            _this._addToChanges(oldSeqRecord);
          }
        } else {
          seqChanged = true;
          if (oldSeqRecord !== null) {
            oldSeqRecord._next = null;
            _this._removeFromSeq(lastOldSeqRecord, oldSeqRecord);
            _this._addToRemovals(oldSeqRecord);
          }
          if (records.has(key)) {
            newSeqRecord = records.get(key);
          } else {
            newSeqRecord = new KVChangeRecord(key);
            records.set(key, newSeqRecord);
            newSeqRecord.currentValue = value;
            _this._addToAdditions(newSeqRecord);
          }
        }
        if (seqChanged) {
          if (_this._isInRemovals(newSeqRecord)) {
            _this._removeFromRemovals(newSeqRecord);
          }
          if (lastNewSeqRecord == null) {
            _this._mapHead = newSeqRecord;
          } else {
            lastNewSeqRecord._next = newSeqRecord;
          }
        }
        lastOldSeqRecord = oldSeqRecord;
        lastNewSeqRecord = newSeqRecord;
        oldSeqRecord = oldSeqRecord === null ? null : oldSeqRecord._next;
      });
      this._truncate(lastOldSeqRecord, oldSeqRecord);
      return this.isDirty;
    };
    DefaultKeyValueDiffer.prototype._reset = function() {
      if (this.isDirty) {
        var record;
        for (record = this._previousMapHead = this._mapHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }
        for (record = this._changesHead; record !== null; record = record._nextChanged) {
          record.previousValue = record.currentValue;
        }
        for (record = this._additionsHead; record != null; record = record._nextAdded) {
          record.previousValue = record.currentValue;
        }
        this._changesHead = this._changesTail = null;
        this._additionsHead = this._additionsTail = null;
        this._removalsHead = this._removalsTail = null;
      }
    };
    DefaultKeyValueDiffer.prototype._truncate = function(lastRecord, record) {
      while (record !== null) {
        if (lastRecord === null) {
          this._mapHead = null;
        } else {
          lastRecord._next = null;
        }
        var nextRecord = record._next;
        this._addToRemovals(record);
        lastRecord = record;
        record = nextRecord;
      }
      for (var rec = this._removalsHead; rec !== null; rec = rec._nextRemoved) {
        rec.previousValue = rec.currentValue;
        rec.currentValue = null;
        this._records.delete(rec.key);
      }
    };
    DefaultKeyValueDiffer.prototype._isInRemovals = function(record) {
      return record === this._removalsHead || record._nextRemoved !== null || record._prevRemoved !== null;
    };
    DefaultKeyValueDiffer.prototype._addToRemovals = function(record) {
      if (this._removalsHead === null) {
        this._removalsHead = this._removalsTail = record;
      } else {
        this._removalsTail._nextRemoved = record;
        record._prevRemoved = this._removalsTail;
        this._removalsTail = record;
      }
    };
    DefaultKeyValueDiffer.prototype._removeFromSeq = function(prev, record) {
      var next = record._next;
      if (prev === null) {
        this._mapHead = next;
      } else {
        prev._next = next;
      }
    };
    DefaultKeyValueDiffer.prototype._removeFromRemovals = function(record) {
      var prev = record._prevRemoved;
      var next = record._nextRemoved;
      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }
      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }
      record._prevRemoved = record._nextRemoved = null;
    };
    DefaultKeyValueDiffer.prototype._addToAdditions = function(record) {
      if (this._additionsHead === null) {
        this._additionsHead = this._additionsTail = record;
      } else {
        this._additionsTail._nextAdded = record;
        this._additionsTail = record;
      }
    };
    DefaultKeyValueDiffer.prototype._addToChanges = function(record) {
      if (this._changesHead === null) {
        this._changesHead = this._changesTail = record;
      } else {
        this._changesTail._nextChanged = record;
        this._changesTail = record;
      }
    };
    DefaultKeyValueDiffer.prototype.toString = function() {
      var items = [];
      var previous = [];
      var changes = [];
      var additions = [];
      var removals = [];
      var record;
      for (record = this._mapHead; record !== null; record = record._next) {
        items.push(lang_1.stringify(record));
      }
      for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {
        previous.push(lang_1.stringify(record));
      }
      for (record = this._changesHead; record !== null; record = record._nextChanged) {
        changes.push(lang_1.stringify(record));
      }
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        additions.push(lang_1.stringify(record));
      }
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        removals.push(lang_1.stringify(record));
      }
      return "map: " + items.join(', ') + "\n" + "previous: " + previous.join(', ') + "\n" + "additions: " + additions.join(', ') + "\n" + "changes: " + changes.join(', ') + "\n" + "removals: " + removals.join(', ') + "\n";
    };
    DefaultKeyValueDiffer.prototype._forEach = function(obj, fn) {
      if (obj instanceof Map) {
        obj.forEach(fn);
      } else {
        collection_1.StringMapWrapper.forEach(obj, fn);
      }
    };
    return DefaultKeyValueDiffer;
  })();
  exports.DefaultKeyValueDiffer = DefaultKeyValueDiffer;
  var KVChangeRecord = (function() {
    function KVChangeRecord(key) {
      this.key = key;
      this.previousValue = null;
      this.currentValue = null;
      this._nextPrevious = null;
      this._next = null;
      this._nextAdded = null;
      this._nextRemoved = null;
      this._prevRemoved = null;
      this._nextChanged = null;
    }
    KVChangeRecord.prototype.toString = function() {
      return lang_1.looseIdentical(this.previousValue, this.currentValue) ? lang_1.stringify(this.key) : (lang_1.stringify(this.key) + '[' + lang_1.stringify(this.previousValue) + '->' + lang_1.stringify(this.currentValue) + ']');
    };
    return KVChangeRecord;
  })();
  exports.KVChangeRecord = KVChangeRecord;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/keyvalue_differs", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var KeyValueDiffers = (function() {
    function KeyValueDiffers(factories) {
      this.factories = factories;
    }
    KeyValueDiffers.create = function(factories, parent) {
      if (lang_1.isPresent(parent)) {
        var copied = collection_1.ListWrapper.clone(parent.factories);
        factories = factories.concat(copied);
        return new KeyValueDiffers(factories);
      } else {
        return new KeyValueDiffers(factories);
      }
    };
    KeyValueDiffers.extend = function(factories) {
      return new di_1.Provider(KeyValueDiffers, {
        useFactory: function(parent) {
          if (lang_1.isBlank(parent)) {
            throw new exceptions_1.BaseException('Cannot extend KeyValueDiffers without a parent injector');
          }
          return KeyValueDiffers.create(factories, parent);
        },
        deps: [[KeyValueDiffers, new di_1.SkipSelfMetadata(), new di_1.OptionalMetadata()]]
      });
    };
    KeyValueDiffers.prototype.find = function(kv) {
      var factory = this.factories.find(function(f) {
        return f.supports(kv);
      });
      if (lang_1.isPresent(factory)) {
        return factory;
      } else {
        throw new exceptions_1.BaseException("Cannot find a differ supporting object '" + kv + "'");
      }
    };
    KeyValueDiffers = __decorate([di_1.Injectable(), lang_1.CONST(), __metadata('design:paramtypes', [Array])], KeyValueDiffers);
    return KeyValueDiffers;
  })();
  exports.KeyValueDiffers = KeyValueDiffers;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/default_iterable_differ", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_2 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var DefaultIterableDifferFactory = (function() {
    function DefaultIterableDifferFactory() {}
    DefaultIterableDifferFactory.prototype.supports = function(obj) {
      return collection_1.isListLikeIterable(obj);
    };
    DefaultIterableDifferFactory.prototype.create = function(cdRef) {
      return new DefaultIterableDiffer();
    };
    DefaultIterableDifferFactory = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], DefaultIterableDifferFactory);
    return DefaultIterableDifferFactory;
  })();
  exports.DefaultIterableDifferFactory = DefaultIterableDifferFactory;
  var DefaultIterableDiffer = (function() {
    function DefaultIterableDiffer() {
      this._collection = null;
      this._length = null;
      this._linkedRecords = null;
      this._unlinkedRecords = null;
      this._previousItHead = null;
      this._itHead = null;
      this._itTail = null;
      this._additionsHead = null;
      this._additionsTail = null;
      this._movesHead = null;
      this._movesTail = null;
      this._removalsHead = null;
      this._removalsTail = null;
    }
    Object.defineProperty(DefaultIterableDiffer.prototype, "collection", {
      get: function() {
        return this._collection;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DefaultIterableDiffer.prototype, "length", {
      get: function() {
        return this._length;
      },
      enumerable: true,
      configurable: true
    });
    DefaultIterableDiffer.prototype.forEachItem = function(fn) {
      var record;
      for (record = this._itHead; record !== null; record = record._next) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachPreviousItem = function(fn) {
      var record;
      for (record = this._previousItHead; record !== null; record = record._nextPrevious) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachAddedItem = function(fn) {
      var record;
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachMovedItem = function(fn) {
      var record;
      for (record = this._movesHead; record !== null; record = record._nextMoved) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.forEachRemovedItem = function(fn) {
      var record;
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        fn(record);
      }
    };
    DefaultIterableDiffer.prototype.diff = function(collection) {
      if (lang_2.isBlank(collection))
        collection = [];
      if (!collection_1.isListLikeIterable(collection)) {
        throw new exceptions_1.BaseException("Error trying to diff '" + collection + "'");
      }
      if (this.check(collection)) {
        return this;
      } else {
        return null;
      }
    };
    DefaultIterableDiffer.prototype.onDestroy = function() {};
    DefaultIterableDiffer.prototype.check = function(collection) {
      var _this = this;
      this._reset();
      var record = this._itHead;
      var mayBeDirty = false;
      var index;
      var item;
      if (lang_2.isArray(collection)) {
        var list = collection;
        this._length = collection.length;
        for (index = 0; index < this._length; index++) {
          item = list[index];
          if (record === null || !lang_2.looseIdentical(record.item, item)) {
            record = this._mismatch(record, item, index);
            mayBeDirty = true;
          } else if (mayBeDirty) {
            record = this._verifyReinsertion(record, item, index);
          }
          record = record._next;
        }
      } else {
        index = 0;
        collection_1.iterateListLike(collection, function(item) {
          if (record === null || !lang_2.looseIdentical(record.item, item)) {
            record = _this._mismatch(record, item, index);
            mayBeDirty = true;
          } else if (mayBeDirty) {
            record = _this._verifyReinsertion(record, item, index);
          }
          record = record._next;
          index++;
        });
        this._length = index;
      }
      this._truncate(record);
      this._collection = collection;
      return this.isDirty;
    };
    Object.defineProperty(DefaultIterableDiffer.prototype, "isDirty", {
      get: function() {
        return this._additionsHead !== null || this._movesHead !== null || this._removalsHead !== null;
      },
      enumerable: true,
      configurable: true
    });
    DefaultIterableDiffer.prototype._reset = function() {
      if (this.isDirty) {
        var record;
        var nextRecord;
        for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {
          record._nextPrevious = record._next;
        }
        for (record = this._additionsHead; record !== null; record = record._nextAdded) {
          record.previousIndex = record.currentIndex;
        }
        this._additionsHead = this._additionsTail = null;
        for (record = this._movesHead; record !== null; record = nextRecord) {
          record.previousIndex = record.currentIndex;
          nextRecord = record._nextMoved;
        }
        this._movesHead = this._movesTail = null;
        this._removalsHead = this._removalsTail = null;
      }
    };
    DefaultIterableDiffer.prototype._mismatch = function(record, item, index) {
      var previousRecord;
      if (record === null) {
        previousRecord = this._itTail;
      } else {
        previousRecord = record._prev;
        this._remove(record);
      }
      record = this._linkedRecords === null ? null : this._linkedRecords.get(item, index);
      if (record !== null) {
        this._moveAfter(record, previousRecord, index);
      } else {
        record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(item);
        if (record !== null) {
          this._reinsertAfter(record, previousRecord, index);
        } else {
          record = this._addAfter(new CollectionChangeRecord(item), previousRecord, index);
        }
      }
      return record;
    };
    DefaultIterableDiffer.prototype._verifyReinsertion = function(record, item, index) {
      var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(item);
      if (reinsertRecord !== null) {
        record = this._reinsertAfter(reinsertRecord, record._prev, index);
      } else if (record.currentIndex != index) {
        record.currentIndex = index;
        this._addToMoves(record, index);
      }
      return record;
    };
    DefaultIterableDiffer.prototype._truncate = function(record) {
      while (record !== null) {
        var nextRecord = record._next;
        this._addToRemovals(this._unlink(record));
        record = nextRecord;
      }
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.clear();
      }
      if (this._additionsTail !== null) {
        this._additionsTail._nextAdded = null;
      }
      if (this._movesTail !== null) {
        this._movesTail._nextMoved = null;
      }
      if (this._itTail !== null) {
        this._itTail._next = null;
      }
      if (this._removalsTail !== null) {
        this._removalsTail._nextRemoved = null;
      }
    };
    DefaultIterableDiffer.prototype._reinsertAfter = function(record, prevRecord, index) {
      if (this._unlinkedRecords !== null) {
        this._unlinkedRecords.remove(record);
      }
      var prev = record._prevRemoved;
      var next = record._nextRemoved;
      if (prev === null) {
        this._removalsHead = next;
      } else {
        prev._nextRemoved = next;
      }
      if (next === null) {
        this._removalsTail = prev;
      } else {
        next._prevRemoved = prev;
      }
      this._insertAfter(record, prevRecord, index);
      this._addToMoves(record, index);
      return record;
    };
    DefaultIterableDiffer.prototype._moveAfter = function(record, prevRecord, index) {
      this._unlink(record);
      this._insertAfter(record, prevRecord, index);
      this._addToMoves(record, index);
      return record;
    };
    DefaultIterableDiffer.prototype._addAfter = function(record, prevRecord, index) {
      this._insertAfter(record, prevRecord, index);
      if (this._additionsTail === null) {
        this._additionsTail = this._additionsHead = record;
      } else {
        this._additionsTail = this._additionsTail._nextAdded = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._insertAfter = function(record, prevRecord, index) {
      var next = prevRecord === null ? this._itHead : prevRecord._next;
      record._next = next;
      record._prev = prevRecord;
      if (next === null) {
        this._itTail = record;
      } else {
        next._prev = record;
      }
      if (prevRecord === null) {
        this._itHead = record;
      } else {
        prevRecord._next = record;
      }
      if (this._linkedRecords === null) {
        this._linkedRecords = new _DuplicateMap();
      }
      this._linkedRecords.put(record);
      record.currentIndex = index;
      return record;
    };
    DefaultIterableDiffer.prototype._remove = function(record) {
      return this._addToRemovals(this._unlink(record));
    };
    DefaultIterableDiffer.prototype._unlink = function(record) {
      if (this._linkedRecords !== null) {
        this._linkedRecords.remove(record);
      }
      var prev = record._prev;
      var next = record._next;
      if (prev === null) {
        this._itHead = next;
      } else {
        prev._next = next;
      }
      if (next === null) {
        this._itTail = prev;
      } else {
        next._prev = prev;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._addToMoves = function(record, toIndex) {
      if (record.previousIndex === toIndex) {
        return record;
      }
      if (this._movesTail === null) {
        this._movesTail = this._movesHead = record;
      } else {
        this._movesTail = this._movesTail._nextMoved = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype._addToRemovals = function(record) {
      if (this._unlinkedRecords === null) {
        this._unlinkedRecords = new _DuplicateMap();
      }
      this._unlinkedRecords.put(record);
      record.currentIndex = null;
      record._nextRemoved = null;
      if (this._removalsTail === null) {
        this._removalsTail = this._removalsHead = record;
        record._prevRemoved = null;
      } else {
        record._prevRemoved = this._removalsTail;
        this._removalsTail = this._removalsTail._nextRemoved = record;
      }
      return record;
    };
    DefaultIterableDiffer.prototype.toString = function() {
      var record;
      var list = [];
      for (record = this._itHead; record !== null; record = record._next) {
        list.push(record);
      }
      var previous = [];
      for (record = this._previousItHead; record !== null; record = record._nextPrevious) {
        previous.push(record);
      }
      var additions = [];
      for (record = this._additionsHead; record !== null; record = record._nextAdded) {
        additions.push(record);
      }
      var moves = [];
      for (record = this._movesHead; record !== null; record = record._nextMoved) {
        moves.push(record);
      }
      var removals = [];
      for (record = this._removalsHead; record !== null; record = record._nextRemoved) {
        removals.push(record);
      }
      return "collection: " + list.join(', ') + "\n" + "previous: " + previous.join(', ') + "\n" + "additions: " + additions.join(', ') + "\n" + "moves: " + moves.join(', ') + "\n" + "removals: " + removals.join(', ') + "\n";
    };
    return DefaultIterableDiffer;
  })();
  exports.DefaultIterableDiffer = DefaultIterableDiffer;
  var CollectionChangeRecord = (function() {
    function CollectionChangeRecord(item) {
      this.item = item;
      this.currentIndex = null;
      this.previousIndex = null;
      this._nextPrevious = null;
      this._prev = null;
      this._next = null;
      this._prevDup = null;
      this._nextDup = null;
      this._prevRemoved = null;
      this._nextRemoved = null;
      this._nextAdded = null;
      this._nextMoved = null;
    }
    CollectionChangeRecord.prototype.toString = function() {
      return this.previousIndex === this.currentIndex ? lang_2.stringify(this.item) : lang_2.stringify(this.item) + '[' + lang_2.stringify(this.previousIndex) + '->' + lang_2.stringify(this.currentIndex) + ']';
    };
    return CollectionChangeRecord;
  })();
  exports.CollectionChangeRecord = CollectionChangeRecord;
  var _DuplicateItemRecordList = (function() {
    function _DuplicateItemRecordList() {
      this._head = null;
      this._tail = null;
    }
    _DuplicateItemRecordList.prototype.add = function(record) {
      if (this._head === null) {
        this._head = this._tail = record;
        record._nextDup = null;
        record._prevDup = null;
      } else {
        this._tail._nextDup = record;
        record._prevDup = this._tail;
        record._nextDup = null;
        this._tail = record;
      }
    };
    _DuplicateItemRecordList.prototype.get = function(item, afterIndex) {
      var record;
      for (record = this._head; record !== null; record = record._nextDup) {
        if ((afterIndex === null || afterIndex < record.currentIndex) && lang_2.looseIdentical(record.item, item)) {
          return record;
        }
      }
      return null;
    };
    _DuplicateItemRecordList.prototype.remove = function(record) {
      var prev = record._prevDup;
      var next = record._nextDup;
      if (prev === null) {
        this._head = next;
      } else {
        prev._nextDup = next;
      }
      if (next === null) {
        this._tail = prev;
      } else {
        next._prevDup = prev;
      }
      return this._head === null;
    };
    return _DuplicateItemRecordList;
  })();
  var _DuplicateMap = (function() {
    function _DuplicateMap() {
      this.map = new Map();
    }
    _DuplicateMap.prototype.put = function(record) {
      var key = lang_2.getMapKey(record.item);
      var duplicates = this.map.get(key);
      if (!lang_2.isPresent(duplicates)) {
        duplicates = new _DuplicateItemRecordList();
        this.map.set(key, duplicates);
      }
      duplicates.add(record);
    };
    _DuplicateMap.prototype.get = function(value, afterIndex) {
      if (afterIndex === void 0) {
        afterIndex = null;
      }
      var key = lang_2.getMapKey(value);
      var recordList = this.map.get(key);
      return lang_2.isBlank(recordList) ? null : recordList.get(value, afterIndex);
    };
    _DuplicateMap.prototype.remove = function(record) {
      var key = lang_2.getMapKey(record.item);
      var recordList = this.map.get(key);
      if (recordList.remove(record)) {
        this.map.delete(key);
      }
      return record;
    };
    Object.defineProperty(_DuplicateMap.prototype, "isEmpty", {
      get: function() {
        return this.map.size === 0;
      },
      enumerable: true,
      configurable: true
    });
    _DuplicateMap.prototype.clear = function() {
      this.map.clear();
    };
    _DuplicateMap.prototype.toString = function() {
      return '_DuplicateMap(' + lang_2.stringify(this.map) + ')';
    };
    return _DuplicateMap;
  })();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/iterable_differs", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var IterableDiffers = (function() {
    function IterableDiffers(factories) {
      this.factories = factories;
    }
    IterableDiffers.create = function(factories, parent) {
      if (lang_1.isPresent(parent)) {
        var copied = collection_1.ListWrapper.clone(parent.factories);
        factories = factories.concat(copied);
        return new IterableDiffers(factories);
      } else {
        return new IterableDiffers(factories);
      }
    };
    IterableDiffers.extend = function(factories) {
      return new di_1.Provider(IterableDiffers, {
        useFactory: function(parent) {
          if (lang_1.isBlank(parent)) {
            throw new exceptions_1.BaseException('Cannot extend IterableDiffers without a parent injector');
          }
          return IterableDiffers.create(factories, parent);
        },
        deps: [[IterableDiffers, new di_1.SkipSelfMetadata(), new di_1.OptionalMetadata()]]
      });
    };
    IterableDiffers.prototype.find = function(iterable) {
      var factory = this.factories.find(function(f) {
        return f.supports(iterable);
      });
      if (lang_1.isPresent(factory)) {
        return factory;
      } else {
        throw new exceptions_1.BaseException("Cannot find a differ supporting object '" + iterable + "'");
      }
    };
    IterableDiffers = __decorate([di_1.Injectable(), lang_1.CONST(), __metadata('design:paramtypes', [Array])], IterableDiffers);
    return IterableDiffers;
  })();
  exports.IterableDiffers = IterableDiffers;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection", ["npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/iterable_differs", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/default_iterable_differ", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/keyvalue_differs", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/default_keyvalue_differ", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/lexer", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/parser", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/locals", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/interfaces", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_change_detector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/jit_proto_change_detector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/binding_record", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/dynamic_change_detector", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detector_ref", "npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var iterable_differs_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/iterable_differs');
  var default_iterable_differ_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/default_iterable_differ');
  var keyvalue_differs_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/keyvalue_differs');
  var default_keyvalue_differ_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/default_keyvalue_differ');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var ast_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/ast');
  exports.ASTWithSource = ast_1.ASTWithSource;
  exports.AST = ast_1.AST;
  exports.AstTransformer = ast_1.AstTransformer;
  exports.PropertyRead = ast_1.PropertyRead;
  exports.LiteralArray = ast_1.LiteralArray;
  exports.ImplicitReceiver = ast_1.ImplicitReceiver;
  var lexer_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/lexer');
  exports.Lexer = lexer_1.Lexer;
  var parser_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/parser');
  exports.Parser = parser_1.Parser;
  var locals_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/parser/locals');
  exports.Locals = locals_1.Locals;
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/exceptions');
  exports.DehydratedException = exceptions_1.DehydratedException;
  exports.ExpressionChangedAfterItHasBeenCheckedException = exceptions_1.ExpressionChangedAfterItHasBeenCheckedException;
  exports.ChangeDetectionError = exceptions_1.ChangeDetectionError;
  var interfaces_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/interfaces');
  exports.ChangeDetectorDefinition = interfaces_1.ChangeDetectorDefinition;
  exports.DebugContext = interfaces_1.DebugContext;
  exports.ChangeDetectorGenConfig = interfaces_1.ChangeDetectorGenConfig;
  var constants_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/constants');
  exports.ChangeDetectionStrategy = constants_1.ChangeDetectionStrategy;
  exports.CHANGE_DETECTION_STRATEGY_VALUES = constants_1.CHANGE_DETECTION_STRATEGY_VALUES;
  var proto_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/proto_change_detector');
  exports.DynamicProtoChangeDetector = proto_change_detector_1.DynamicProtoChangeDetector;
  var jit_proto_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/jit_proto_change_detector');
  exports.JitProtoChangeDetector = jit_proto_change_detector_1.JitProtoChangeDetector;
  var binding_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/binding_record');
  exports.BindingRecord = binding_record_1.BindingRecord;
  exports.BindingTarget = binding_record_1.BindingTarget;
  var directive_record_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/directive_record');
  exports.DirectiveIndex = directive_record_1.DirectiveIndex;
  exports.DirectiveRecord = directive_record_1.DirectiveRecord;
  var dynamic_change_detector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/dynamic_change_detector');
  exports.DynamicChangeDetector = dynamic_change_detector_1.DynamicChangeDetector;
  var change_detector_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detector_ref');
  exports.ChangeDetectorRef = change_detector_ref_1.ChangeDetectorRef;
  var iterable_differs_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/iterable_differs');
  exports.IterableDiffers = iterable_differs_2.IterableDiffers;
  var keyvalue_differs_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/differs/keyvalue_differs');
  exports.KeyValueDiffers = keyvalue_differs_2.KeyValueDiffers;
  var change_detection_util_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection_util');
  exports.WrappedValue = change_detection_util_1.WrappedValue;
  exports.SimpleChange = change_detection_util_1.SimpleChange;
  exports.keyValDiff = lang_1.CONST_EXPR([lang_1.CONST_EXPR(new default_keyvalue_differ_1.DefaultKeyValueDifferFactory())]);
  exports.iterableDiff = lang_1.CONST_EXPR([lang_1.CONST_EXPR(new default_iterable_differ_1.DefaultIterableDifferFactory())]);
  exports.defaultIterableDiffers = lang_1.CONST_EXPR(new iterable_differs_1.IterableDiffers(exports.iterableDiff));
  exports.defaultKeyValueDiffers = lang_1.CONST_EXPR(new keyvalue_differs_1.KeyValueDiffers(exports.keyValDiff));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/change_detection", ["npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection/change_detection');
  exports.ChangeDetectionStrategy = change_detection_1.ChangeDetectionStrategy;
  exports.ExpressionChangedAfterItHasBeenCheckedException = change_detection_1.ExpressionChangedAfterItHasBeenCheckedException;
  exports.ChangeDetectionError = change_detection_1.ChangeDetectionError;
  exports.ChangeDetectorRef = change_detection_1.ChangeDetectorRef;
  exports.WrappedValue = change_detection_1.WrappedValue;
  exports.SimpleChange = change_detection_1.SimpleChange;
  exports.IterableDiffers = change_detection_1.IterableDiffers;
  exports.KeyValueDiffers = change_detection_1.KeyValueDiffers;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/metadata/directives", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di/metadata", "npm:angular2@2.0.0-alpha.46/src/core/change_detection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/metadata');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection');
  var DirectiveMetadata = (function(_super) {
    __extends(DirectiveMetadata, _super);
    function DirectiveMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          selector = _b.selector,
          inputs = _b.inputs,
          outputs = _b.outputs,
          properties = _b.properties,
          events = _b.events,
          host = _b.host,
          bindings = _b.bindings,
          providers = _b.providers,
          exportAs = _b.exportAs,
          moduleId = _b.moduleId,
          queries = _b.queries;
      _super.call(this);
      this.selector = selector;
      this._inputs = inputs;
      this._properties = properties;
      this._outputs = outputs;
      this._events = events;
      this.host = host;
      this.exportAs = exportAs;
      this.moduleId = moduleId;
      this.queries = queries;
      this._providers = providers;
      this._bindings = bindings;
    }
    Object.defineProperty(DirectiveMetadata.prototype, "inputs", {
      get: function() {
        return lang_1.isPresent(this._properties) && this._properties.length > 0 ? this._properties : this._inputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "properties", {
      get: function() {
        return this.inputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "outputs", {
      get: function() {
        return lang_1.isPresent(this._events) && this._events.length > 0 ? this._events : this._outputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "events", {
      get: function() {
        return this.outputs;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "providers", {
      get: function() {
        return lang_1.isPresent(this._bindings) && this._bindings.length > 0 ? this._bindings : this._providers;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(DirectiveMetadata.prototype, "bindings", {
      get: function() {
        return this.providers;
      },
      enumerable: true,
      configurable: true
    });
    DirectiveMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], DirectiveMetadata);
    return DirectiveMetadata;
  })(metadata_1.InjectableMetadata);
  exports.DirectiveMetadata = DirectiveMetadata;
  var ComponentMetadata = (function(_super) {
    __extends(ComponentMetadata, _super);
    function ComponentMetadata(_a) {
      var _b = _a === void 0 ? {} : _a,
          selector = _b.selector,
          inputs = _b.inputs,
          outputs = _b.outputs,
          properties = _b.properties,
          events = _b.events,
          host = _b.host,
          exportAs = _b.exportAs,
          moduleId = _b.moduleId,
          bindings = _b.bindings,
          providers = _b.providers,
          viewBindings = _b.viewBindings,
          viewProviders = _b.viewProviders,
          _c = _b.changeDetection,
          changeDetection = _c === void 0 ? change_detection_1.ChangeDetectionStrategy.Default : _c,
          queries = _b.queries,
          templateUrl = _b.templateUrl,
          template = _b.template,
          styleUrls = _b.styleUrls,
          styles = _b.styles,
          directives = _b.directives,
          pipes = _b.pipes,
          encapsulation = _b.encapsulation;
      _super.call(this, {
        selector: selector,
        inputs: inputs,
        outputs: outputs,
        properties: properties,
        events: events,
        host: host,
        exportAs: exportAs,
        moduleId: moduleId,
        bindings: bindings,
        providers: providers,
        queries: queries
      });
      this.changeDetection = changeDetection;
      this._viewProviders = viewProviders;
      this._viewBindings = viewBindings;
      this.templateUrl = templateUrl;
      this.template = template;
      this.styleUrls = styleUrls;
      this.styles = styles;
      this.directives = directives;
      this.pipes = pipes;
      this.encapsulation = encapsulation;
    }
    Object.defineProperty(ComponentMetadata.prototype, "viewProviders", {
      get: function() {
        return lang_1.isPresent(this._viewBindings) && this._viewBindings.length > 0 ? this._viewBindings : this._viewProviders;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(ComponentMetadata.prototype, "viewBindings", {
      get: function() {
        return this.viewProviders;
      },
      enumerable: true,
      configurable: true
    });
    ComponentMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], ComponentMetadata);
    return ComponentMetadata;
  })(DirectiveMetadata);
  exports.ComponentMetadata = ComponentMetadata;
  var PipeMetadata = (function(_super) {
    __extends(PipeMetadata, _super);
    function PipeMetadata(_a) {
      var name = _a.name,
          pure = _a.pure;
      _super.call(this);
      this.name = name;
      this._pure = pure;
    }
    Object.defineProperty(PipeMetadata.prototype, "pure", {
      get: function() {
        return lang_1.isPresent(this._pure) ? this._pure : true;
      },
      enumerable: true,
      configurable: true
    });
    PipeMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], PipeMetadata);
    return PipeMetadata;
  })(metadata_1.InjectableMetadata);
  exports.PipeMetadata = PipeMetadata;
  var InputMetadata = (function() {
    function InputMetadata(bindingPropertyName) {
      this.bindingPropertyName = bindingPropertyName;
    }
    InputMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String])], InputMetadata);
    return InputMetadata;
  })();
  exports.InputMetadata = InputMetadata;
  var OutputMetadata = (function() {
    function OutputMetadata(bindingPropertyName) {
      this.bindingPropertyName = bindingPropertyName;
    }
    OutputMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String])], OutputMetadata);
    return OutputMetadata;
  })();
  exports.OutputMetadata = OutputMetadata;
  var HostBindingMetadata = (function() {
    function HostBindingMetadata(hostPropertyName) {
      this.hostPropertyName = hostPropertyName;
    }
    HostBindingMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String])], HostBindingMetadata);
    return HostBindingMetadata;
  })();
  exports.HostBindingMetadata = HostBindingMetadata;
  var HostListenerMetadata = (function() {
    function HostListenerMetadata(eventName, args) {
      this.eventName = eventName;
      this.args = args;
    }
    HostListenerMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String, Array])], HostListenerMetadata);
    return HostListenerMetadata;
  })();
  exports.HostListenerMetadata = HostListenerMetadata;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/opaque_token", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var OpaqueToken = (function() {
    function OpaqueToken(_desc) {
      this._desc = _desc;
    }
    OpaqueToken.prototype.toString = function() {
      return "Token " + this._desc;
    };
    OpaqueToken = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String])], OpaqueToken);
    return OpaqueToken;
  })();
  exports.OpaqueToken = OpaqueToken;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/exceptions", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  function findFirstClosedCycle(keys) {
    var res = [];
    for (var i = 0; i < keys.length; ++i) {
      if (collection_1.ListWrapper.contains(res, keys[i])) {
        res.push(keys[i]);
        return res;
      } else {
        res.push(keys[i]);
      }
    }
    return res;
  }
  function constructResolvingPath(keys) {
    if (keys.length > 1) {
      var reversed = findFirstClosedCycle(collection_1.ListWrapper.reversed(keys));
      var tokenStrs = reversed.map(function(k) {
        return lang_1.stringify(k.token);
      });
      return " (" + tokenStrs.join(' -> ') + ")";
    } else {
      return "";
    }
  }
  var AbstractProviderError = (function(_super) {
    __extends(AbstractProviderError, _super);
    function AbstractProviderError(injector, key, constructResolvingMessage) {
      _super.call(this, "DI Exception");
      this.keys = [key];
      this.injectors = [injector];
      this.constructResolvingMessage = constructResolvingMessage;
      this.message = this.constructResolvingMessage(this.keys);
    }
    AbstractProviderError.prototype.addKey = function(injector, key) {
      this.injectors.push(injector);
      this.keys.push(key);
      this.message = this.constructResolvingMessage(this.keys);
    };
    Object.defineProperty(AbstractProviderError.prototype, "context", {
      get: function() {
        return this.injectors[this.injectors.length - 1].debugContext();
      },
      enumerable: true,
      configurable: true
    });
    return AbstractProviderError;
  })(exceptions_1.BaseException);
  exports.AbstractProviderError = AbstractProviderError;
  var NoProviderError = (function(_super) {
    __extends(NoProviderError, _super);
    function NoProviderError(injector, key) {
      _super.call(this, injector, key, function(keys) {
        var first = lang_1.stringify(collection_1.ListWrapper.first(keys).token);
        return "No provider for " + first + "!" + constructResolvingPath(keys);
      });
    }
    return NoProviderError;
  })(AbstractProviderError);
  exports.NoProviderError = NoProviderError;
  var CyclicDependencyError = (function(_super) {
    __extends(CyclicDependencyError, _super);
    function CyclicDependencyError(injector, key) {
      _super.call(this, injector, key, function(keys) {
        return "Cannot instantiate cyclic dependency!" + constructResolvingPath(keys);
      });
    }
    return CyclicDependencyError;
  })(AbstractProviderError);
  exports.CyclicDependencyError = CyclicDependencyError;
  var InstantiationError = (function(_super) {
    __extends(InstantiationError, _super);
    function InstantiationError(injector, originalException, originalStack, key) {
      _super.call(this, "DI Exception", originalException, originalStack, null);
      this.keys = [key];
      this.injectors = [injector];
    }
    InstantiationError.prototype.addKey = function(injector, key) {
      this.injectors.push(injector);
      this.keys.push(key);
    };
    Object.defineProperty(InstantiationError.prototype, "wrapperMessage", {
      get: function() {
        var first = lang_1.stringify(collection_1.ListWrapper.first(this.keys).token);
        return "Error during instantiation of " + first + "!" + constructResolvingPath(this.keys) + ".";
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(InstantiationError.prototype, "causeKey", {
      get: function() {
        return this.keys[0];
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(InstantiationError.prototype, "context", {
      get: function() {
        return this.injectors[this.injectors.length - 1].debugContext();
      },
      enumerable: true,
      configurable: true
    });
    return InstantiationError;
  })(exceptions_1.WrappedException);
  exports.InstantiationError = InstantiationError;
  var InvalidProviderError = (function(_super) {
    __extends(InvalidProviderError, _super);
    function InvalidProviderError(provider) {
      _super.call(this, "Invalid provider - only instances of Provider and Type are allowed, got: " + provider.toString());
    }
    return InvalidProviderError;
  })(exceptions_1.BaseException);
  exports.InvalidProviderError = InvalidProviderError;
  var NoAnnotationError = (function(_super) {
    __extends(NoAnnotationError, _super);
    function NoAnnotationError(typeOrFunc, params) {
      _super.call(this, NoAnnotationError._genMessage(typeOrFunc, params));
    }
    NoAnnotationError._genMessage = function(typeOrFunc, params) {
      var signature = [];
      for (var i = 0,
          ii = params.length; i < ii; i++) {
        var parameter = params[i];
        if (lang_1.isBlank(parameter) || parameter.length == 0) {
          signature.push('?');
        } else {
          signature.push(parameter.map(lang_1.stringify).join(' '));
        }
      }
      return "Cannot resolve all parameters for " + lang_1.stringify(typeOrFunc) + "(" + signature.join(', ') + "). " + 'Make sure they all have valid type or annotations.';
    };
    return NoAnnotationError;
  })(exceptions_1.BaseException);
  exports.NoAnnotationError = NoAnnotationError;
  var OutOfBoundsError = (function(_super) {
    __extends(OutOfBoundsError, _super);
    function OutOfBoundsError(index) {
      _super.call(this, "Index " + index + " is out-of-bounds.");
    }
    return OutOfBoundsError;
  })(exceptions_1.BaseException);
  exports.OutOfBoundsError = OutOfBoundsError;
  var MixingMultiProvidersWithRegularProvidersError = (function(_super) {
    __extends(MixingMultiProvidersWithRegularProvidersError, _super);
    function MixingMultiProvidersWithRegularProvidersError(provider1, provider2) {
      _super.call(this, "Cannot mix multi providers and regular providers, got: " + provider1.toString() + " " + provider2.toString());
    }
    return MixingMultiProvidersWithRegularProvidersError;
  })(exceptions_1.BaseException);
  exports.MixingMultiProvidersWithRegularProvidersError = MixingMultiProvidersWithRegularProvidersError;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/type_literal", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var TypeLiteral = (function() {
    function TypeLiteral() {}
    Object.defineProperty(TypeLiteral.prototype, "type", {
      get: function() {
        throw new Error("Type literals are only supported in Dart");
      },
      enumerable: true,
      configurable: true
    });
    return TypeLiteral;
  })();
  exports.TypeLiteral = TypeLiteral;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/key", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/di/type_literal", "npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var type_literal_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/type_literal');
  var forward_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref');
  var type_literal_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/type_literal');
  exports.TypeLiteral = type_literal_2.TypeLiteral;
  var Key = (function() {
    function Key(token, id) {
      this.token = token;
      this.id = id;
      if (lang_1.isBlank(token)) {
        throw new exceptions_1.BaseException('Token must be defined!');
      }
    }
    Object.defineProperty(Key.prototype, "displayName", {
      get: function() {
        return lang_1.stringify(this.token);
      },
      enumerable: true,
      configurable: true
    });
    Key.get = function(token) {
      return _globalKeyRegistry.get(forward_ref_1.resolveForwardRef(token));
    };
    Object.defineProperty(Key, "numberOfKeys", {
      get: function() {
        return _globalKeyRegistry.numberOfKeys;
      },
      enumerable: true,
      configurable: true
    });
    return Key;
  })();
  exports.Key = Key;
  var KeyRegistry = (function() {
    function KeyRegistry() {
      this._allKeys = new Map();
    }
    KeyRegistry.prototype.get = function(token) {
      if (token instanceof Key)
        return token;
      var theToken = token;
      if (token instanceof type_literal_1.TypeLiteral) {
        theToken = token.type;
      }
      token = theToken;
      if (this._allKeys.has(token)) {
        return this._allKeys.get(token);
      }
      var newKey = new Key(token, Key.numberOfKeys);
      this._allKeys.set(token, newKey);
      return newKey;
    };
    Object.defineProperty(KeyRegistry.prototype, "numberOfKeys", {
      get: function() {
        return this._allKeys.size;
      },
      enumerable: true,
      configurable: true
    });
    return KeyRegistry;
  })();
  exports.KeyRegistry = KeyRegistry;
  var _globalKeyRegistry = new KeyRegistry();
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection_capabilities", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var ReflectionCapabilities = (function() {
    function ReflectionCapabilities(reflect) {
      this._reflect = lang_1.isPresent(reflect) ? reflect : lang_1.global.Reflect;
    }
    ReflectionCapabilities.prototype.isReflectionEnabled = function() {
      return true;
    };
    ReflectionCapabilities.prototype.factory = function(t) {
      switch (t.length) {
        case 0:
          return function() {
            return new t();
          };
        case 1:
          return function(a1) {
            return new t(a1);
          };
        case 2:
          return function(a1, a2) {
            return new t(a1, a2);
          };
        case 3:
          return function(a1, a2, a3) {
            return new t(a1, a2, a3);
          };
        case 4:
          return function(a1, a2, a3, a4) {
            return new t(a1, a2, a3, a4);
          };
        case 5:
          return function(a1, a2, a3, a4, a5) {
            return new t(a1, a2, a3, a4, a5);
          };
        case 6:
          return function(a1, a2, a3, a4, a5, a6) {
            return new t(a1, a2, a3, a4, a5, a6);
          };
        case 7:
          return function(a1, a2, a3, a4, a5, a6, a7) {
            return new t(a1, a2, a3, a4, a5, a6, a7);
          };
        case 8:
          return function(a1, a2, a3, a4, a5, a6, a7, a8) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8);
          };
        case 9:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9);
          };
        case 10:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
          };
        case 11:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
          };
        case 12:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
          };
        case 13:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
          };
        case 14:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
          };
        case 15:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
          };
        case 16:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
          };
        case 17:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
          };
        case 18:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
          };
        case 19:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
          };
        case 20:
          return function(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20) {
            return new t(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20);
          };
      }
      ;
      throw new Error("Cannot create a factory for '" + lang_1.stringify(t) + "' because its constructor has more than 20 arguments");
    };
    ReflectionCapabilities.prototype._zipTypesAndAnnotaions = function(paramTypes, paramAnnotations) {
      var result;
      if (typeof paramTypes === 'undefined') {
        result = new Array(paramAnnotations.length);
      } else {
        result = new Array(paramTypes.length);
      }
      for (var i = 0; i < result.length; i++) {
        if (typeof paramTypes === 'undefined') {
          result[i] = [];
        } else if (paramTypes[i] != Object) {
          result[i] = [paramTypes[i]];
        } else {
          result[i] = [];
        }
        if (lang_1.isPresent(paramAnnotations) && lang_1.isPresent(paramAnnotations[i])) {
          result[i] = result[i].concat(paramAnnotations[i]);
        }
      }
      return result;
    };
    ReflectionCapabilities.prototype.parameters = function(typeOrFunc) {
      if (lang_1.isPresent(typeOrFunc.parameters)) {
        return typeOrFunc.parameters;
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var paramAnnotations = this._reflect.getMetadata('parameters', typeOrFunc);
        var paramTypes = this._reflect.getMetadata('design:paramtypes', typeOrFunc);
        if (lang_1.isPresent(paramTypes) || lang_1.isPresent(paramAnnotations)) {
          return this._zipTypesAndAnnotaions(paramTypes, paramAnnotations);
        }
      }
      var parameters = new Array(typeOrFunc.length);
      parameters.fill(undefined);
      return parameters;
    };
    ReflectionCapabilities.prototype.annotations = function(typeOrFunc) {
      if (lang_1.isPresent(typeOrFunc.annotations)) {
        var annotations = typeOrFunc.annotations;
        if (lang_1.isFunction(annotations) && annotations.annotations) {
          annotations = annotations.annotations;
        }
        return annotations;
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var annotations = this._reflect.getMetadata('annotations', typeOrFunc);
        if (lang_1.isPresent(annotations))
          return annotations;
      }
      return [];
    };
    ReflectionCapabilities.prototype.propMetadata = function(typeOrFunc) {
      if (lang_1.isPresent(typeOrFunc.propMetadata)) {
        var propMetadata = typeOrFunc.propMetadata;
        if (lang_1.isFunction(propMetadata) && propMetadata.propMetadata) {
          propMetadata = propMetadata.propMetadata;
        }
        return propMetadata;
      }
      if (lang_1.isPresent(this._reflect) && lang_1.isPresent(this._reflect.getMetadata)) {
        var propMetadata = this._reflect.getMetadata('propMetadata', typeOrFunc);
        if (lang_1.isPresent(propMetadata))
          return propMetadata;
      }
      return {};
    };
    ReflectionCapabilities.prototype.interfaces = function(type) {
      throw new exceptions_1.BaseException("JavaScript does not support interfaces");
    };
    ReflectionCapabilities.prototype.getter = function(name) {
      return new Function('o', 'return o.' + name + ';');
    };
    ReflectionCapabilities.prototype.setter = function(name) {
      return new Function('o', 'v', 'return o.' + name + ' = v;');
    };
    ReflectionCapabilities.prototype.method = function(name) {
      var functionBody = "if (!o." + name + ") throw new Error('\"" + name + "\" is undefined');\n        return o." + name + ".apply(o, args);";
      return new Function('o', 'args', functionBody);
    };
    ReflectionCapabilities.prototype.importUri = function(type) {
      return './';
    };
    return ReflectionCapabilities;
  })();
  exports.ReflectionCapabilities = ReflectionCapabilities;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/reflection/reflector", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var ReflectionInfo = (function() {
    function ReflectionInfo(annotations, parameters, factory, interfaces, propMetadata) {
      this.annotations = annotations;
      this.parameters = parameters;
      this.factory = factory;
      this.interfaces = interfaces;
      this.propMetadata = propMetadata;
    }
    return ReflectionInfo;
  })();
  exports.ReflectionInfo = ReflectionInfo;
  var Reflector = (function() {
    function Reflector(reflectionCapabilities) {
      this._injectableInfo = new collection_1.Map();
      this._getters = new collection_1.Map();
      this._setters = new collection_1.Map();
      this._methods = new collection_1.Map();
      this._usedKeys = null;
      this.reflectionCapabilities = reflectionCapabilities;
    }
    Reflector.prototype.isReflectionEnabled = function() {
      return this.reflectionCapabilities.isReflectionEnabled();
    };
    Reflector.prototype.trackUsage = function() {
      this._usedKeys = new collection_1.Set();
    };
    Reflector.prototype.listUnusedKeys = function() {
      var _this = this;
      if (this._usedKeys == null) {
        throw new exceptions_1.BaseException('Usage tracking is disabled');
      }
      var allTypes = collection_1.MapWrapper.keys(this._injectableInfo);
      return allTypes.filter(function(key) {
        return !collection_1.SetWrapper.has(_this._usedKeys, key);
      });
    };
    Reflector.prototype.registerFunction = function(func, funcInfo) {
      this._injectableInfo.set(func, funcInfo);
    };
    Reflector.prototype.registerType = function(type, typeInfo) {
      this._injectableInfo.set(type, typeInfo);
    };
    Reflector.prototype.registerGetters = function(getters) {
      _mergeMaps(this._getters, getters);
    };
    Reflector.prototype.registerSetters = function(setters) {
      _mergeMaps(this._setters, setters);
    };
    Reflector.prototype.registerMethods = function(methods) {
      _mergeMaps(this._methods, methods);
    };
    Reflector.prototype.factory = function(type) {
      if (this._containsReflectionInfo(type)) {
        var res = this._getReflectionInfo(type).factory;
        return lang_1.isPresent(res) ? res : null;
      } else {
        return this.reflectionCapabilities.factory(type);
      }
    };
    Reflector.prototype.parameters = function(typeOrFunc) {
      if (this._injectableInfo.has(typeOrFunc)) {
        var res = this._getReflectionInfo(typeOrFunc).parameters;
        return lang_1.isPresent(res) ? res : [];
      } else {
        return this.reflectionCapabilities.parameters(typeOrFunc);
      }
    };
    Reflector.prototype.annotations = function(typeOrFunc) {
      if (this._injectableInfo.has(typeOrFunc)) {
        var res = this._getReflectionInfo(typeOrFunc).annotations;
        return lang_1.isPresent(res) ? res : [];
      } else {
        return this.reflectionCapabilities.annotations(typeOrFunc);
      }
    };
    Reflector.prototype.propMetadata = function(typeOrFunc) {
      if (this._injectableInfo.has(typeOrFunc)) {
        var res = this._getReflectionInfo(typeOrFunc).propMetadata;
        return lang_1.isPresent(res) ? res : {};
      } else {
        return this.reflectionCapabilities.propMetadata(typeOrFunc);
      }
    };
    Reflector.prototype.interfaces = function(type) {
      if (this._injectableInfo.has(type)) {
        var res = this._getReflectionInfo(type).interfaces;
        return lang_1.isPresent(res) ? res : [];
      } else {
        return this.reflectionCapabilities.interfaces(type);
      }
    };
    Reflector.prototype.getter = function(name) {
      if (this._getters.has(name)) {
        return this._getters.get(name);
      } else {
        return this.reflectionCapabilities.getter(name);
      }
    };
    Reflector.prototype.setter = function(name) {
      if (this._setters.has(name)) {
        return this._setters.get(name);
      } else {
        return this.reflectionCapabilities.setter(name);
      }
    };
    Reflector.prototype.method = function(name) {
      if (this._methods.has(name)) {
        return this._methods.get(name);
      } else {
        return this.reflectionCapabilities.method(name);
      }
    };
    Reflector.prototype._getReflectionInfo = function(typeOrFunc) {
      if (lang_1.isPresent(this._usedKeys)) {
        this._usedKeys.add(typeOrFunc);
      }
      return this._injectableInfo.get(typeOrFunc);
    };
    Reflector.prototype._containsReflectionInfo = function(typeOrFunc) {
      return this._injectableInfo.has(typeOrFunc);
    };
    Reflector.prototype.importUri = function(type) {
      return this.reflectionCapabilities.importUri(type);
    };
    return Reflector;
  })();
  exports.Reflector = Reflector;
  function _mergeMaps(target, config) {
    collection_1.StringMapWrapper.forEach(config, function(v, k) {
      return target.set(k, v);
    });
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", ["npm:angular2@2.0.0-alpha.46/src/core/reflection/reflector", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection_capabilities"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var reflector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflector');
  var reflector_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflector');
  exports.Reflector = reflector_2.Reflector;
  exports.ReflectionInfo = reflector_2.ReflectionInfo;
  var reflection_capabilities_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection_capabilities');
  exports.reflector = new reflector_1.Reflector(new reflection_capabilities_1.ReflectionCapabilities());
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/exception_handler", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var _ArrayLogger = (function() {
    function _ArrayLogger() {
      this.res = [];
    }
    _ArrayLogger.prototype.log = function(s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logError = function(s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroup = function(s) {
      this.res.push(s);
    };
    _ArrayLogger.prototype.logGroupEnd = function() {};
    ;
    return _ArrayLogger;
  })();
  var ExceptionHandler = (function() {
    function ExceptionHandler(_logger, _rethrowException) {
      if (_rethrowException === void 0) {
        _rethrowException = true;
      }
      this._logger = _logger;
      this._rethrowException = _rethrowException;
    }
    ExceptionHandler.exceptionToString = function(exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var l = new _ArrayLogger();
      var e = new ExceptionHandler(l, false);
      e.call(exception, stackTrace, reason);
      return l.res.join("\n");
    };
    ExceptionHandler.prototype.call = function(exception, stackTrace, reason) {
      if (stackTrace === void 0) {
        stackTrace = null;
      }
      if (reason === void 0) {
        reason = null;
      }
      var originalException = this._findOriginalException(exception);
      var originalStack = this._findOriginalStack(exception);
      var context = this._findContext(exception);
      this._logger.logGroup("EXCEPTION: " + this._extractMessage(exception));
      if (lang_1.isPresent(stackTrace) && lang_1.isBlank(originalStack)) {
        this._logger.logError("STACKTRACE:");
        this._logger.logError(this._longStackTrace(stackTrace));
      }
      if (lang_1.isPresent(reason)) {
        this._logger.logError("REASON: " + reason);
      }
      if (lang_1.isPresent(originalException)) {
        this._logger.logError("ORIGINAL EXCEPTION: " + this._extractMessage(originalException));
      }
      if (lang_1.isPresent(originalStack)) {
        this._logger.logError("ORIGINAL STACKTRACE:");
        this._logger.logError(this._longStackTrace(originalStack));
      }
      if (lang_1.isPresent(context)) {
        this._logger.logError("ERROR CONTEXT:");
        this._logger.logError(context);
      }
      this._logger.logGroupEnd();
      if (this._rethrowException)
        throw exception;
    };
    ExceptionHandler.prototype._extractMessage = function(exception) {
      return exception instanceof exceptions_1.WrappedException ? exception.wrapperMessage : exception.toString();
    };
    ExceptionHandler.prototype._longStackTrace = function(stackTrace) {
      return collection_1.isListLikeIterable(stackTrace) ? stackTrace.join("\n\n-----async gap-----\n") : stackTrace.toString();
    };
    ExceptionHandler.prototype._findContext = function(exception) {
      try {
        if (!(exception instanceof exceptions_1.WrappedException))
          return null;
        return lang_1.isPresent(exception.context) ? exception.context : this._findContext(exception.originalException);
      } catch (e) {
        return null;
      }
    };
    ExceptionHandler.prototype._findOriginalException = function(exception) {
      if (!(exception instanceof exceptions_1.WrappedException))
        return null;
      var e = exception.originalException;
      while (e instanceof exceptions_1.WrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
      }
      return e;
    };
    ExceptionHandler.prototype._findOriginalStack = function(exception) {
      if (!(exception instanceof exceptions_1.WrappedException))
        return null;
      var e = exception;
      var stack = exception.originalStack;
      while (e instanceof exceptions_1.WrappedException && lang_1.isPresent(e.originalException)) {
        e = e.originalException;
        if (e instanceof exceptions_1.WrappedException && lang_1.isPresent(e.originalException)) {
          stack = e.originalStack;
        }
      }
      return stack;
    };
    return ExceptionHandler;
  })();
  exports.ExceptionHandler = ExceptionHandler;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/exceptions", ["npm:angular2@2.0.0-alpha.46/src/facade/exception_handler"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var exception_handler_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exception_handler');
  var exception_handler_2 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exception_handler');
  exports.ExceptionHandler = exception_handler_2.ExceptionHandler;
  var BaseException = (function(_super) {
    __extends(BaseException, _super);
    function BaseException(message) {
      if (message === void 0) {
        message = "--";
      }
      _super.call(this, message);
      this.message = message;
      this.stack = (new Error(message)).stack;
    }
    BaseException.prototype.toString = function() {
      return this.message;
    };
    return BaseException;
  })(Error);
  exports.BaseException = BaseException;
  var WrappedException = (function(_super) {
    __extends(WrappedException, _super);
    function WrappedException(_wrapperMessage, _originalException, _originalStack, _context) {
      _super.call(this, _wrapperMessage);
      this._wrapperMessage = _wrapperMessage;
      this._originalException = _originalException;
      this._originalStack = _originalStack;
      this._context = _context;
      this._wrapperStack = (new Error(_wrapperMessage)).stack;
    }
    Object.defineProperty(WrappedException.prototype, "wrapperMessage", {
      get: function() {
        return this._wrapperMessage;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "wrapperStack", {
      get: function() {
        return this._wrapperStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalException", {
      get: function() {
        return this._originalException;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "originalStack", {
      get: function() {
        return this._originalStack;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "context", {
      get: function() {
        return this._context;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(WrappedException.prototype, "message", {
      get: function() {
        return exception_handler_1.ExceptionHandler.exceptionToString(this);
      },
      enumerable: true,
      configurable: true
    });
    WrappedException.prototype.toString = function() {
      return this.message;
    };
    return WrappedException;
  })(Error);
  exports.WrappedException = WrappedException;
  function makeTypeError(message) {
    return new TypeError(message);
  }
  exports.makeTypeError = makeTypeError;
  function unimplemented() {
    throw new BaseException('unimplemented');
  }
  exports.unimplemented = unimplemented;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/provider", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection", "npm:angular2@2.0.0-alpha.46/src/core/di/key", "npm:angular2@2.0.0-alpha.46/src/core/di/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/exceptions');
  var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
  var reflection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/reflection/reflection');
  var key_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/key');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/metadata');
  var exceptions_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/exceptions');
  var forward_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref');
  var Dependency = (function() {
    function Dependency(key, optional, lowerBoundVisibility, upperBoundVisibility, properties) {
      this.key = key;
      this.optional = optional;
      this.lowerBoundVisibility = lowerBoundVisibility;
      this.upperBoundVisibility = upperBoundVisibility;
      this.properties = properties;
    }
    Dependency.fromKey = function(key) {
      return new Dependency(key, false, null, null, []);
    };
    return Dependency;
  })();
  exports.Dependency = Dependency;
  var _EMPTY_LIST = lang_1.CONST_EXPR([]);
  var Provider = (function() {
    function Provider(token, _a) {
      var useClass = _a.useClass,
          useValue = _a.useValue,
          useExisting = _a.useExisting,
          useFactory = _a.useFactory,
          deps = _a.deps,
          multi = _a.multi;
      this.token = token;
      this.useClass = useClass;
      this.useValue = useValue;
      this.useExisting = useExisting;
      this.useFactory = useFactory;
      this.dependencies = deps;
      this._multi = multi;
    }
    Object.defineProperty(Provider.prototype, "multi", {
      get: function() {
        return lang_1.normalizeBool(this._multi);
      },
      enumerable: true,
      configurable: true
    });
    Provider = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object, Object])], Provider);
    return Provider;
  })();
  exports.Provider = Provider;
  var Binding = (function(_super) {
    __extends(Binding, _super);
    function Binding(token, _a) {
      var toClass = _a.toClass,
          toValue = _a.toValue,
          toAlias = _a.toAlias,
          toFactory = _a.toFactory,
          deps = _a.deps,
          multi = _a.multi;
      _super.call(this, token, {
        useClass: toClass,
        useValue: toValue,
        useExisting: toAlias,
        useFactory: toFactory,
        deps: deps,
        multi: multi
      });
    }
    Object.defineProperty(Binding.prototype, "toClass", {
      get: function() {
        return this.useClass;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Binding.prototype, "toAlias", {
      get: function() {
        return this.useExisting;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Binding.prototype, "toFactory", {
      get: function() {
        return this.useFactory;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(Binding.prototype, "toValue", {
      get: function() {
        return this.useValue;
      },
      enumerable: true,
      configurable: true
    });
    Binding = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object, Object])], Binding);
    return Binding;
  })(Provider);
  exports.Binding = Binding;
  var ResolvedProvider_ = (function() {
    function ResolvedProvider_(key, resolvedFactories, multiProvider) {
      this.key = key;
      this.resolvedFactories = resolvedFactories;
      this.multiProvider = multiProvider;
    }
    Object.defineProperty(ResolvedProvider_.prototype, "resolvedFactory", {
      get: function() {
        return this.resolvedFactories[0];
      },
      enumerable: true,
      configurable: true
    });
    return ResolvedProvider_;
  })();
  exports.ResolvedProvider_ = ResolvedProvider_;
  var ResolvedFactory = (function() {
    function ResolvedFactory(factory, dependencies) {
      this.factory = factory;
      this.dependencies = dependencies;
    }
    return ResolvedFactory;
  })();
  exports.ResolvedFactory = ResolvedFactory;
  function bind(token) {
    return new ProviderBuilder(token);
  }
  exports.bind = bind;
  function provide(token, _a) {
    var useClass = _a.useClass,
        useValue = _a.useValue,
        useExisting = _a.useExisting,
        useFactory = _a.useFactory,
        deps = _a.deps,
        multi = _a.multi;
    return new Provider(token, {
      useClass: useClass,
      useValue: useValue,
      useExisting: useExisting,
      useFactory: useFactory,
      deps: deps,
      multi: multi
    });
  }
  exports.provide = provide;
  var ProviderBuilder = (function() {
    function ProviderBuilder(token) {
      this.token = token;
    }
    ProviderBuilder.prototype.toClass = function(type) {
      if (!lang_1.isType(type)) {
        throw new exceptions_1.BaseException("Trying to create a class provider but \"" + lang_1.stringify(type) + "\" is not a class!");
      }
      return new Provider(this.token, {useClass: type});
    };
    ProviderBuilder.prototype.toValue = function(value) {
      return new Provider(this.token, {useValue: value});
    };
    ProviderBuilder.prototype.toAlias = function(aliasToken) {
      if (lang_1.isBlank(aliasToken)) {
        throw new exceptions_1.BaseException("Can not alias " + lang_1.stringify(this.token) + " to a blank value!");
      }
      return new Provider(this.token, {useExisting: aliasToken});
    };
    ProviderBuilder.prototype.toFactory = function(factory, dependencies) {
      if (!lang_1.isFunction(factory)) {
        throw new exceptions_1.BaseException("Trying to create a factory provider but \"" + lang_1.stringify(factory) + "\" is not a function!");
      }
      return new Provider(this.token, {
        useFactory: factory,
        deps: dependencies
      });
    };
    return ProviderBuilder;
  })();
  exports.ProviderBuilder = ProviderBuilder;
  function resolveFactory(provider) {
    var factoryFn;
    var resolvedDeps;
    if (lang_1.isPresent(provider.useClass)) {
      var useClass = forward_ref_1.resolveForwardRef(provider.useClass);
      factoryFn = reflection_1.reflector.factory(useClass);
      resolvedDeps = _dependenciesFor(useClass);
    } else if (lang_1.isPresent(provider.useExisting)) {
      factoryFn = function(aliasInstance) {
        return aliasInstance;
      };
      resolvedDeps = [Dependency.fromKey(key_1.Key.get(provider.useExisting))];
    } else if (lang_1.isPresent(provider.useFactory)) {
      factoryFn = provider.useFactory;
      resolvedDeps = _constructDependencies(provider.useFactory, provider.dependencies);
    } else {
      factoryFn = function() {
        return provider.useValue;
      };
      resolvedDeps = _EMPTY_LIST;
    }
    return new ResolvedFactory(factoryFn, resolvedDeps);
  }
  exports.resolveFactory = resolveFactory;
  function resolveProvider(provider) {
    return new ResolvedProvider_(key_1.Key.get(provider.token), [resolveFactory(provider)], false);
  }
  exports.resolveProvider = resolveProvider;
  function resolveProviders(providers) {
    var normalized = _createListOfProviders(_normalizeProviders(providers, new Map()));
    return normalized.map(function(b) {
      if (b instanceof _NormalizedProvider) {
        return new ResolvedProvider_(b.key, [b.resolvedFactory], false);
      } else {
        var arr = b;
        return new ResolvedProvider_(arr[0].key, arr.map(function(_) {
          return _.resolvedFactory;
        }), true);
      }
    });
  }
  exports.resolveProviders = resolveProviders;
  var _NormalizedProvider = (function() {
    function _NormalizedProvider(key, resolvedFactory) {
      this.key = key;
      this.resolvedFactory = resolvedFactory;
    }
    return _NormalizedProvider;
  })();
  function _createListOfProviders(flattenedProviders) {
    return collection_1.MapWrapper.values(flattenedProviders);
  }
  function _normalizeProviders(providers, res) {
    providers.forEach(function(b) {
      if (b instanceof lang_1.Type) {
        _normalizeProvider(provide(b, {useClass: b}), res);
      } else if (b instanceof Provider) {
        _normalizeProvider(b, res);
      } else if (b instanceof Array) {
        _normalizeProviders(b, res);
      } else if (b instanceof ProviderBuilder) {
        throw new exceptions_2.InvalidProviderError(b.token);
      } else {
        throw new exceptions_2.InvalidProviderError(b);
      }
    });
    return res;
  }
  function _normalizeProvider(b, res) {
    var key = key_1.Key.get(b.token);
    var factory = resolveFactory(b);
    var normalized = new _NormalizedProvider(key, factory);
    if (b.multi) {
      var existingProvider = res.get(key.id);
      if (existingProvider instanceof Array) {
        existingProvider.push(normalized);
      } else if (lang_1.isBlank(existingProvider)) {
        res.set(key.id, [normalized]);
      } else {
        throw new exceptions_2.MixingMultiProvidersWithRegularProvidersError(existingProvider, b);
      }
    } else {
      var existingProvider = res.get(key.id);
      if (existingProvider instanceof Array) {
        throw new exceptions_2.MixingMultiProvidersWithRegularProvidersError(existingProvider, b);
      }
      res.set(key.id, normalized);
    }
  }
  function _constructDependencies(factoryFunction, dependencies) {
    if (lang_1.isBlank(dependencies)) {
      return _dependenciesFor(factoryFunction);
    } else {
      var params = dependencies.map(function(t) {
        return [t];
      });
      return dependencies.map(function(t) {
        return _extractToken(factoryFunction, t, params);
      });
    }
  }
  function _dependenciesFor(typeOrFunc) {
    var params = reflection_1.reflector.parameters(typeOrFunc);
    if (lang_1.isBlank(params))
      return [];
    if (params.some(lang_1.isBlank)) {
      throw new exceptions_2.NoAnnotationError(typeOrFunc, params);
    }
    return params.map(function(p) {
      return _extractToken(typeOrFunc, p, params);
    });
  }
  function _extractToken(typeOrFunc, metadata, params) {
    var depProps = [];
    var token = null;
    var optional = false;
    if (!lang_1.isArray(metadata)) {
      if (metadata instanceof metadata_1.InjectMetadata) {
        return _createDependency(metadata.token, optional, null, null, depProps);
      } else {
        return _createDependency(metadata, optional, null, null, depProps);
      }
    }
    var lowerBoundVisibility = null;
    var upperBoundVisibility = null;
    for (var i = 0; i < metadata.length; ++i) {
      var paramMetadata = metadata[i];
      if (paramMetadata instanceof lang_1.Type) {
        token = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.InjectMetadata) {
        token = paramMetadata.token;
      } else if (paramMetadata instanceof metadata_1.OptionalMetadata) {
        optional = true;
      } else if (paramMetadata instanceof metadata_1.SelfMetadata) {
        upperBoundVisibility = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.HostMetadata) {
        upperBoundVisibility = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.SkipSelfMetadata) {
        lowerBoundVisibility = paramMetadata;
      } else if (paramMetadata instanceof metadata_1.DependencyMetadata) {
        if (lang_1.isPresent(paramMetadata.token)) {
          token = paramMetadata.token;
        }
        depProps.push(paramMetadata);
      }
    }
    token = forward_ref_1.resolveForwardRef(token);
    if (lang_1.isPresent(token)) {
      return _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps);
    } else {
      throw new exceptions_2.NoAnnotationError(typeOrFunc, params);
    }
  }
  function _createDependency(token, optional, lowerBoundVisibility, upperBoundVisibility, depProps) {
    return new Dependency(key_1.Key.get(token), optional, lowerBoundVisibility, upperBoundVisibility, depProps);
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/collection", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  exports.Map = lang_1.global.Map;
  exports.Set = lang_1.global.Set;
  var createMapFromPairs = (function() {
    try {
      if (new exports.Map([[1, 2]]).size === 1) {
        return function createMapFromPairs(pairs) {
          return new exports.Map(pairs);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromPairs(pairs) {
      var map = new exports.Map();
      for (var i = 0; i < pairs.length; i++) {
        var pair = pairs[i];
        map.set(pair[0], pair[1]);
      }
      return map;
    };
  })();
  var createMapFromMap = (function() {
    try {
      if (new exports.Map(new exports.Map())) {
        return function createMapFromMap(m) {
          return new exports.Map(m);
        };
      }
    } catch (e) {}
    return function createMapAndPopulateFromMap(m) {
      var map = new exports.Map();
      m.forEach(function(v, k) {
        map.set(k, v);
      });
      return map;
    };
  })();
  var _clearValues = (function() {
    if ((new exports.Map()).keys().next) {
      return function _clearValues(m) {
        var keyIterator = m.keys();
        var k;
        while (!((k = keyIterator.next()).done)) {
          m.set(k.value, null);
        }
      };
    } else {
      return function _clearValuesWithForeEach(m) {
        m.forEach(function(v, k) {
          m.set(k, null);
        });
      };
    }
  })();
  var _arrayFromMap = (function() {
    try {
      if ((new exports.Map()).values().next) {
        return function createArrayFromMap(m, getValues) {
          return getValues ? Array.from(m.values()) : Array.from(m.keys());
        };
      }
    } catch (e) {}
    return function createArrayFromMapWithForeach(m, getValues) {
      var res = ListWrapper.createFixedSize(m.size),
          i = 0;
      m.forEach(function(v, k) {
        res[i] = getValues ? v : k;
        i++;
      });
      return res;
    };
  })();
  var MapWrapper = (function() {
    function MapWrapper() {}
    MapWrapper.clone = function(m) {
      return createMapFromMap(m);
    };
    MapWrapper.createFromStringMap = function(stringMap) {
      var result = new exports.Map();
      for (var prop in stringMap) {
        result.set(prop, stringMap[prop]);
      }
      return result;
    };
    MapWrapper.toStringMap = function(m) {
      var r = {};
      m.forEach(function(v, k) {
        return r[k] = v;
      });
      return r;
    };
    MapWrapper.createFromPairs = function(pairs) {
      return createMapFromPairs(pairs);
    };
    MapWrapper.clearValues = function(m) {
      _clearValues(m);
    };
    MapWrapper.iterable = function(m) {
      return m;
    };
    MapWrapper.keys = function(m) {
      return _arrayFromMap(m, false);
    };
    MapWrapper.values = function(m) {
      return _arrayFromMap(m, true);
    };
    return MapWrapper;
  })();
  exports.MapWrapper = MapWrapper;
  var StringMapWrapper = (function() {
    function StringMapWrapper() {}
    StringMapWrapper.create = function() {
      return {};
    };
    StringMapWrapper.contains = function(map, key) {
      return map.hasOwnProperty(key);
    };
    StringMapWrapper.get = function(map, key) {
      return map.hasOwnProperty(key) ? map[key] : undefined;
    };
    StringMapWrapper.set = function(map, key, value) {
      map[key] = value;
    };
    StringMapWrapper.keys = function(map) {
      return Object.keys(map);
    };
    StringMapWrapper.isEmpty = function(map) {
      for (var prop in map) {
        return false;
      }
      return true;
    };
    StringMapWrapper.delete = function(map, key) {
      delete map[key];
    };
    StringMapWrapper.forEach = function(map, callback) {
      for (var prop in map) {
        if (map.hasOwnProperty(prop)) {
          callback(map[prop], prop);
        }
      }
    };
    StringMapWrapper.merge = function(m1, m2) {
      var m = {};
      for (var attr in m1) {
        if (m1.hasOwnProperty(attr)) {
          m[attr] = m1[attr];
        }
      }
      for (var attr in m2) {
        if (m2.hasOwnProperty(attr)) {
          m[attr] = m2[attr];
        }
      }
      return m;
    };
    StringMapWrapper.equals = function(m1, m2) {
      var k1 = Object.keys(m1);
      var k2 = Object.keys(m2);
      if (k1.length != k2.length) {
        return false;
      }
      var key;
      for (var i = 0; i < k1.length; i++) {
        key = k1[i];
        if (m1[key] !== m2[key]) {
          return false;
        }
      }
      return true;
    };
    return StringMapWrapper;
  })();
  exports.StringMapWrapper = StringMapWrapper;
  var ListWrapper = (function() {
    function ListWrapper() {}
    ListWrapper.createFixedSize = function(size) {
      return new Array(size);
    };
    ListWrapper.createGrowableSize = function(size) {
      return new Array(size);
    };
    ListWrapper.clone = function(array) {
      return array.slice(0);
    };
    ListWrapper.forEachWithIndex = function(array, fn) {
      for (var i = 0; i < array.length; i++) {
        fn(array[i], i);
      }
    };
    ListWrapper.first = function(array) {
      if (!array)
        return null;
      return array[0];
    };
    ListWrapper.last = function(array) {
      if (!array || array.length == 0)
        return null;
      return array[array.length - 1];
    };
    ListWrapper.indexOf = function(array, value, startIndex) {
      if (startIndex === void 0) {
        startIndex = 0;
      }
      return array.indexOf(value, startIndex);
    };
    ListWrapper.contains = function(list, el) {
      return list.indexOf(el) !== -1;
    };
    ListWrapper.reversed = function(array) {
      var a = ListWrapper.clone(array);
      return a.reverse();
    };
    ListWrapper.concat = function(a, b) {
      return a.concat(b);
    };
    ListWrapper.insert = function(list, index, value) {
      list.splice(index, 0, value);
    };
    ListWrapper.removeAt = function(list, index) {
      var res = list[index];
      list.splice(index, 1);
      return res;
    };
    ListWrapper.removeAll = function(list, items) {
      for (var i = 0; i < items.length; ++i) {
        var index = list.indexOf(items[i]);
        list.splice(index, 1);
      }
    };
    ListWrapper.remove = function(list, el) {
      var index = list.indexOf(el);
      if (index > -1) {
        list.splice(index, 1);
        return true;
      }
      return false;
    };
    ListWrapper.clear = function(list) {
      list.length = 0;
    };
    ListWrapper.isEmpty = function(list) {
      return list.length == 0;
    };
    ListWrapper.fill = function(list, value, start, end) {
      if (start === void 0) {
        start = 0;
      }
      if (end === void 0) {
        end = null;
      }
      list.fill(value, start, end === null ? list.length : end);
    };
    ListWrapper.equals = function(a, b) {
      if (a.length != b.length)
        return false;
      for (var i = 0; i < a.length; ++i) {
        if (a[i] !== b[i])
          return false;
      }
      return true;
    };
    ListWrapper.slice = function(l, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return l.slice(from, to === null ? undefined : to);
    };
    ListWrapper.splice = function(l, from, length) {
      return l.splice(from, length);
    };
    ListWrapper.sort = function(l, compareFn) {
      if (lang_1.isPresent(compareFn)) {
        l.sort(compareFn);
      } else {
        l.sort();
      }
    };
    ListWrapper.toString = function(l) {
      return l.toString();
    };
    ListWrapper.toJSON = function(l) {
      return JSON.stringify(l);
    };
    ListWrapper.maximum = function(list, predicate) {
      if (list.length == 0) {
        return null;
      }
      var solution = null;
      var maxValue = -Infinity;
      for (var index = 0; index < list.length; index++) {
        var candidate = list[index];
        if (lang_1.isBlank(candidate)) {
          continue;
        }
        var candidateValue = predicate(candidate);
        if (candidateValue > maxValue) {
          solution = candidate;
          maxValue = candidateValue;
        }
      }
      return solution;
    };
    return ListWrapper;
  })();
  exports.ListWrapper = ListWrapper;
  function isListLikeIterable(obj) {
    if (!lang_1.isJsObject(obj))
      return false;
    return lang_1.isArray(obj) || (!(obj instanceof exports.Map) && lang_1.getSymbolIterator() in obj);
  }
  exports.isListLikeIterable = isListLikeIterable;
  function iterateListLike(obj, fn) {
    if (lang_1.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        fn(obj[i]);
      }
    } else {
      var iterator = obj[lang_1.getSymbolIterator()]();
      var item;
      while (!((item = iterator.next()).done)) {
        fn(item.value);
      }
    }
  }
  exports.iterateListLike = iterateListLike;
  var createSetFromList = (function() {
    var test = new exports.Set([1, 2, 3]);
    if (test.size === 3) {
      return function createSetFromList(lst) {
        return new exports.Set(lst);
      };
    } else {
      return function createSetAndPopulateFromList(lst) {
        var res = new exports.Set(lst);
        if (res.size !== lst.length) {
          for (var i = 0; i < lst.length; i++) {
            res.add(lst[i]);
          }
        }
        return res;
      };
    }
  })();
  var SetWrapper = (function() {
    function SetWrapper() {}
    SetWrapper.createFromList = function(lst) {
      return createSetFromList(lst);
    };
    SetWrapper.has = function(s, key) {
      return s.has(key);
    };
    SetWrapper.delete = function(m, k) {
      m.delete(k);
    };
    return SetWrapper;
  })();
  exports.SetWrapper = SetWrapper;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/injector", ["npm:angular2@2.0.0-alpha.46/src/facade/collection", "npm:angular2@2.0.0-alpha.46/src/core/di/provider", "npm:angular2@2.0.0-alpha.46/src/core/di/exceptions", "npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di/key", "npm:angular2@2.0.0-alpha.46/src/core/di/metadata", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    var collection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/collection');
    var provider_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/provider');
    var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/exceptions');
    var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
    var key_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/key');
    var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/metadata');
    var _MAX_CONSTRUCTION_COUNTER = 10;
    exports.UNDEFINED = lang_1.CONST_EXPR(new Object());
    (function(Visibility) {
      Visibility[Visibility["Public"] = 0] = "Public";
      Visibility[Visibility["Private"] = 1] = "Private";
      Visibility[Visibility["PublicAndPrivate"] = 2] = "PublicAndPrivate";
    })(exports.Visibility || (exports.Visibility = {}));
    var Visibility = exports.Visibility;
    function canSee(src, dst) {
      return (src === dst) || (dst === Visibility.PublicAndPrivate || src === Visibility.PublicAndPrivate);
    }
    var ProtoInjectorInlineStrategy = (function() {
      function ProtoInjectorInlineStrategy(protoEI, bwv) {
        this.provider0 = null;
        this.provider1 = null;
        this.provider2 = null;
        this.provider3 = null;
        this.provider4 = null;
        this.provider5 = null;
        this.provider6 = null;
        this.provider7 = null;
        this.provider8 = null;
        this.provider9 = null;
        this.keyId0 = null;
        this.keyId1 = null;
        this.keyId2 = null;
        this.keyId3 = null;
        this.keyId4 = null;
        this.keyId5 = null;
        this.keyId6 = null;
        this.keyId7 = null;
        this.keyId8 = null;
        this.keyId9 = null;
        this.visibility0 = null;
        this.visibility1 = null;
        this.visibility2 = null;
        this.visibility3 = null;
        this.visibility4 = null;
        this.visibility5 = null;
        this.visibility6 = null;
        this.visibility7 = null;
        this.visibility8 = null;
        this.visibility9 = null;
        var length = bwv.length;
        if (length > 0) {
          this.provider0 = bwv[0].provider;
          this.keyId0 = bwv[0].getKeyId();
          this.visibility0 = bwv[0].visibility;
        }
        if (length > 1) {
          this.provider1 = bwv[1].provider;
          this.keyId1 = bwv[1].getKeyId();
          this.visibility1 = bwv[1].visibility;
        }
        if (length > 2) {
          this.provider2 = bwv[2].provider;
          this.keyId2 = bwv[2].getKeyId();
          this.visibility2 = bwv[2].visibility;
        }
        if (length > 3) {
          this.provider3 = bwv[3].provider;
          this.keyId3 = bwv[3].getKeyId();
          this.visibility3 = bwv[3].visibility;
        }
        if (length > 4) {
          this.provider4 = bwv[4].provider;
          this.keyId4 = bwv[4].getKeyId();
          this.visibility4 = bwv[4].visibility;
        }
        if (length > 5) {
          this.provider5 = bwv[5].provider;
          this.keyId5 = bwv[5].getKeyId();
          this.visibility5 = bwv[5].visibility;
        }
        if (length > 6) {
          this.provider6 = bwv[6].provider;
          this.keyId6 = bwv[6].getKeyId();
          this.visibility6 = bwv[6].visibility;
        }
        if (length > 7) {
          this.provider7 = bwv[7].provider;
          this.keyId7 = bwv[7].getKeyId();
          this.visibility7 = bwv[7].visibility;
        }
        if (length > 8) {
          this.provider8 = bwv[8].provider;
          this.keyId8 = bwv[8].getKeyId();
          this.visibility8 = bwv[8].visibility;
        }
        if (length > 9) {
          this.provider9 = bwv[9].provider;
          this.keyId9 = bwv[9].getKeyId();
          this.visibility9 = bwv[9].visibility;
        }
      }
      ProtoInjectorInlineStrategy.prototype.getProviderAtIndex = function(index) {
        if (index == 0)
          return this.provider0;
        if (index == 1)
          return this.provider1;
        if (index == 2)
          return this.provider2;
        if (index == 3)
          return this.provider3;
        if (index == 4)
          return this.provider4;
        if (index == 5)
          return this.provider5;
        if (index == 6)
          return this.provider6;
        if (index == 7)
          return this.provider7;
        if (index == 8)
          return this.provider8;
        if (index == 9)
          return this.provider9;
        throw new exceptions_1.OutOfBoundsError(index);
      };
      ProtoInjectorInlineStrategy.prototype.createInjectorStrategy = function(injector) {
        return new InjectorInlineStrategy(injector, this);
      };
      return ProtoInjectorInlineStrategy;
    })();
    exports.ProtoInjectorInlineStrategy = ProtoInjectorInlineStrategy;
    var ProtoInjectorDynamicStrategy = (function() {
      function ProtoInjectorDynamicStrategy(protoInj, bwv) {
        var len = bwv.length;
        this.providers = collection_1.ListWrapper.createFixedSize(len);
        this.keyIds = collection_1.ListWrapper.createFixedSize(len);
        this.visibilities = collection_1.ListWrapper.createFixedSize(len);
        for (var i = 0; i < len; i++) {
          this.providers[i] = bwv[i].provider;
          this.keyIds[i] = bwv[i].getKeyId();
          this.visibilities[i] = bwv[i].visibility;
        }
      }
      ProtoInjectorDynamicStrategy.prototype.getProviderAtIndex = function(index) {
        if (index < 0 || index >= this.providers.length) {
          throw new exceptions_1.OutOfBoundsError(index);
        }
        return this.providers[index];
      };
      ProtoInjectorDynamicStrategy.prototype.createInjectorStrategy = function(ei) {
        return new InjectorDynamicStrategy(this, ei);
      };
      return ProtoInjectorDynamicStrategy;
    })();
    exports.ProtoInjectorDynamicStrategy = ProtoInjectorDynamicStrategy;
    var ProtoInjector = (function() {
      function ProtoInjector(bwv) {
        this.numberOfProviders = bwv.length;
        this._strategy = bwv.length > _MAX_CONSTRUCTION_COUNTER ? new ProtoInjectorDynamicStrategy(this, bwv) : new ProtoInjectorInlineStrategy(this, bwv);
      }
      ProtoInjector.prototype.getProviderAtIndex = function(index) {
        return this._strategy.getProviderAtIndex(index);
      };
      return ProtoInjector;
    })();
    exports.ProtoInjector = ProtoInjector;
    var InjectorInlineStrategy = (function() {
      function InjectorInlineStrategy(injector, protoStrategy) {
        this.injector = injector;
        this.protoStrategy = protoStrategy;
        this.obj0 = exports.UNDEFINED;
        this.obj1 = exports.UNDEFINED;
        this.obj2 = exports.UNDEFINED;
        this.obj3 = exports.UNDEFINED;
        this.obj4 = exports.UNDEFINED;
        this.obj5 = exports.UNDEFINED;
        this.obj6 = exports.UNDEFINED;
        this.obj7 = exports.UNDEFINED;
        this.obj8 = exports.UNDEFINED;
        this.obj9 = exports.UNDEFINED;
      }
      InjectorInlineStrategy.prototype.resetConstructionCounter = function() {
        this.injector._constructionCounter = 0;
      };
      InjectorInlineStrategy.prototype.instantiateProvider = function(provider, visibility) {
        return this.injector._new(provider, visibility);
      };
      InjectorInlineStrategy.prototype.attach = function(parent, isHost) {
        var inj = this.injector;
        inj._parent = parent;
        inj._isHost = isHost;
      };
      InjectorInlineStrategy.prototype.getObjByKeyId = function(keyId, visibility) {
        var p = this.protoStrategy;
        var inj = this.injector;
        if (p.keyId0 === keyId && canSee(p.visibility0, visibility)) {
          if (this.obj0 === exports.UNDEFINED) {
            this.obj0 = inj._new(p.provider0, p.visibility0);
          }
          return this.obj0;
        }
        if (p.keyId1 === keyId && canSee(p.visibility1, visibility)) {
          if (this.obj1 === exports.UNDEFINED) {
            this.obj1 = inj._new(p.provider1, p.visibility1);
          }
          return this.obj1;
        }
        if (p.keyId2 === keyId && canSee(p.visibility2, visibility)) {
          if (this.obj2 === exports.UNDEFINED) {
            this.obj2 = inj._new(p.provider2, p.visibility2);
          }
          return this.obj2;
        }
        if (p.keyId3 === keyId && canSee(p.visibility3, visibility)) {
          if (this.obj3 === exports.UNDEFINED) {
            this.obj3 = inj._new(p.provider3, p.visibility3);
          }
          return this.obj3;
        }
        if (p.keyId4 === keyId && canSee(p.visibility4, visibility)) {
          if (this.obj4 === exports.UNDEFINED) {
            this.obj4 = inj._new(p.provider4, p.visibility4);
          }
          return this.obj4;
        }
        if (p.keyId5 === keyId && canSee(p.visibility5, visibility)) {
          if (this.obj5 === exports.UNDEFINED) {
            this.obj5 = inj._new(p.provider5, p.visibility5);
          }
          return this.obj5;
        }
        if (p.keyId6 === keyId && canSee(p.visibility6, visibility)) {
          if (this.obj6 === exports.UNDEFINED) {
            this.obj6 = inj._new(p.provider6, p.visibility6);
          }
          return this.obj6;
        }
        if (p.keyId7 === keyId && canSee(p.visibility7, visibility)) {
          if (this.obj7 === exports.UNDEFINED) {
            this.obj7 = inj._new(p.provider7, p.visibility7);
          }
          return this.obj7;
        }
        if (p.keyId8 === keyId && canSee(p.visibility8, visibility)) {
          if (this.obj8 === exports.UNDEFINED) {
            this.obj8 = inj._new(p.provider8, p.visibility8);
          }
          return this.obj8;
        }
        if (p.keyId9 === keyId && canSee(p.visibility9, visibility)) {
          if (this.obj9 === exports.UNDEFINED) {
            this.obj9 = inj._new(p.provider9, p.visibility9);
          }
          return this.obj9;
        }
        return exports.UNDEFINED;
      };
      InjectorInlineStrategy.prototype.getObjAtIndex = function(index) {
        if (index == 0)
          return this.obj0;
        if (index == 1)
          return this.obj1;
        if (index == 2)
          return this.obj2;
        if (index == 3)
          return this.obj3;
        if (index == 4)
          return this.obj4;
        if (index == 5)
          return this.obj5;
        if (index == 6)
          return this.obj6;
        if (index == 7)
          return this.obj7;
        if (index == 8)
          return this.obj8;
        if (index == 9)
          return this.obj9;
        throw new exceptions_1.OutOfBoundsError(index);
      };
      InjectorInlineStrategy.prototype.getMaxNumberOfObjects = function() {
        return _MAX_CONSTRUCTION_COUNTER;
      };
      return InjectorInlineStrategy;
    })();
    exports.InjectorInlineStrategy = InjectorInlineStrategy;
    var InjectorDynamicStrategy = (function() {
      function InjectorDynamicStrategy(protoStrategy, injector) {
        this.protoStrategy = protoStrategy;
        this.injector = injector;
        this.objs = collection_1.ListWrapper.createFixedSize(protoStrategy.providers.length);
        collection_1.ListWrapper.fill(this.objs, exports.UNDEFINED);
      }
      InjectorDynamicStrategy.prototype.resetConstructionCounter = function() {
        this.injector._constructionCounter = 0;
      };
      InjectorDynamicStrategy.prototype.instantiateProvider = function(provider, visibility) {
        return this.injector._new(provider, visibility);
      };
      InjectorDynamicStrategy.prototype.attach = function(parent, isHost) {
        var inj = this.injector;
        inj._parent = parent;
        inj._isHost = isHost;
      };
      InjectorDynamicStrategy.prototype.getObjByKeyId = function(keyId, visibility) {
        var p = this.protoStrategy;
        for (var i = 0; i < p.keyIds.length; i++) {
          if (p.keyIds[i] === keyId && canSee(p.visibilities[i], visibility)) {
            if (this.objs[i] === exports.UNDEFINED) {
              this.objs[i] = this.injector._new(p.providers[i], p.visibilities[i]);
            }
            return this.objs[i];
          }
        }
        return exports.UNDEFINED;
      };
      InjectorDynamicStrategy.prototype.getObjAtIndex = function(index) {
        if (index < 0 || index >= this.objs.length) {
          throw new exceptions_1.OutOfBoundsError(index);
        }
        return this.objs[index];
      };
      InjectorDynamicStrategy.prototype.getMaxNumberOfObjects = function() {
        return this.objs.length;
      };
      return InjectorDynamicStrategy;
    })();
    exports.InjectorDynamicStrategy = InjectorDynamicStrategy;
    var ProviderWithVisibility = (function() {
      function ProviderWithVisibility(provider, visibility) {
        this.provider = provider;
        this.visibility = visibility;
      }
      ;
      ProviderWithVisibility.prototype.getKeyId = function() {
        return this.provider.key.id;
      };
      return ProviderWithVisibility;
    })();
    exports.ProviderWithVisibility = ProviderWithVisibility;
    var Injector = (function() {
      function Injector(_proto, _parent, _depProvider, _debugContext) {
        if (_parent === void 0) {
          _parent = null;
        }
        if (_depProvider === void 0) {
          _depProvider = null;
        }
        if (_debugContext === void 0) {
          _debugContext = null;
        }
        this._depProvider = _depProvider;
        this._debugContext = _debugContext;
        this._isHost = false;
        this._constructionCounter = 0;
        this._proto = _proto;
        this._parent = _parent;
        this._strategy = _proto._strategy.createInjectorStrategy(this);
      }
      Injector.resolve = function(providers) {
        return provider_1.resolveProviders(providers);
      };
      Injector.resolveAndCreate = function(providers) {
        var resolvedProviders = Injector.resolve(providers);
        return Injector.fromResolvedProviders(resolvedProviders);
      };
      Injector.fromResolvedProviders = function(providers) {
        var bd = providers.map(function(b) {
          return new ProviderWithVisibility(b, Visibility.Public);
        });
        var proto = new ProtoInjector(bd);
        return new Injector(proto, null, null);
      };
      Injector.fromResolvedBindings = function(providers) {
        return Injector.fromResolvedProviders(providers);
      };
      Injector.prototype.debugContext = function() {
        return this._debugContext();
      };
      Injector.prototype.get = function(token) {
        return this._getByKey(key_1.Key.get(token), null, null, false, Visibility.PublicAndPrivate);
      };
      Injector.prototype.getOptional = function(token) {
        return this._getByKey(key_1.Key.get(token), null, null, true, Visibility.PublicAndPrivate);
      };
      Injector.prototype.getAt = function(index) {
        return this._strategy.getObjAtIndex(index);
      };
      Object.defineProperty(Injector.prototype, "parent", {
        get: function() {
          return this._parent;
        },
        enumerable: true,
        configurable: true
      });
      Object.defineProperty(Injector.prototype, "internalStrategy", {
        get: function() {
          return this._strategy;
        },
        enumerable: true,
        configurable: true
      });
      Injector.prototype.resolveAndCreateChild = function(providers) {
        var resolvedProviders = Injector.resolve(providers);
        return this.createChildFromResolved(resolvedProviders);
      };
      Injector.prototype.createChildFromResolved = function(providers) {
        var bd = providers.map(function(b) {
          return new ProviderWithVisibility(b, Visibility.Public);
        });
        var proto = new ProtoInjector(bd);
        var inj = new Injector(proto, null, null);
        inj._parent = this;
        return inj;
      };
      Injector.prototype.resolveAndInstantiate = function(provider) {
        return this.instantiateResolved(Injector.resolve([provider])[0]);
      };
      Injector.prototype.instantiateResolved = function(provider) {
        return this._instantiateProvider(provider, Visibility.PublicAndPrivate);
      };
      Injector.prototype._new = function(provider, visibility) {
        if (this._constructionCounter++ > this._strategy.getMaxNumberOfObjects()) {
          throw new exceptions_1.CyclicDependencyError(this, provider.key);
        }
        return this._instantiateProvider(provider, visibility);
      };
      Injector.prototype._instantiateProvider = function(provider, visibility) {
        if (provider.multiProvider) {
          var res = collection_1.ListWrapper.createFixedSize(provider.resolvedFactories.length);
          for (var i = 0; i < provider.resolvedFactories.length; ++i) {
            res[i] = this._instantiate(provider, provider.resolvedFactories[i], visibility);
          }
          return res;
        } else {
          return this._instantiate(provider, provider.resolvedFactories[0], visibility);
        }
      };
      Injector.prototype._instantiate = function(provider, resolvedFactory, visibility) {
        var factory = resolvedFactory.factory;
        var deps = resolvedFactory.dependencies;
        var length = deps.length;
        var d0,
            d1,
            d2,
            d3,
            d4,
            d5,
            d6,
            d7,
            d8,
            d9,
            d10,
            d11,
            d12,
            d13,
            d14,
            d15,
            d16,
            d17,
            d18,
            d19;
        try {
          d0 = length > 0 ? this._getByDependency(provider, deps[0], visibility) : null;
          d1 = length > 1 ? this._getByDependency(provider, deps[1], visibility) : null;
          d2 = length > 2 ? this._getByDependency(provider, deps[2], visibility) : null;
          d3 = length > 3 ? this._getByDependency(provider, deps[3], visibility) : null;
          d4 = length > 4 ? this._getByDependency(provider, deps[4], visibility) : null;
          d5 = length > 5 ? this._getByDependency(provider, deps[5], visibility) : null;
          d6 = length > 6 ? this._getByDependency(provider, deps[6], visibility) : null;
          d7 = length > 7 ? this._getByDependency(provider, deps[7], visibility) : null;
          d8 = length > 8 ? this._getByDependency(provider, deps[8], visibility) : null;
          d9 = length > 9 ? this._getByDependency(provider, deps[9], visibility) : null;
          d10 = length > 10 ? this._getByDependency(provider, deps[10], visibility) : null;
          d11 = length > 11 ? this._getByDependency(provider, deps[11], visibility) : null;
          d12 = length > 12 ? this._getByDependency(provider, deps[12], visibility) : null;
          d13 = length > 13 ? this._getByDependency(provider, deps[13], visibility) : null;
          d14 = length > 14 ? this._getByDependency(provider, deps[14], visibility) : null;
          d15 = length > 15 ? this._getByDependency(provider, deps[15], visibility) : null;
          d16 = length > 16 ? this._getByDependency(provider, deps[16], visibility) : null;
          d17 = length > 17 ? this._getByDependency(provider, deps[17], visibility) : null;
          d18 = length > 18 ? this._getByDependency(provider, deps[18], visibility) : null;
          d19 = length > 19 ? this._getByDependency(provider, deps[19], visibility) : null;
        } catch (e) {
          if (e instanceof exceptions_1.AbstractProviderError || e instanceof exceptions_1.InstantiationError) {
            e.addKey(this, provider.key);
          }
          throw e;
        }
        var obj;
        try {
          switch (length) {
            case 0:
              obj = factory();
              break;
            case 1:
              obj = factory(d0);
              break;
            case 2:
              obj = factory(d0, d1);
              break;
            case 3:
              obj = factory(d0, d1, d2);
              break;
            case 4:
              obj = factory(d0, d1, d2, d3);
              break;
            case 5:
              obj = factory(d0, d1, d2, d3, d4);
              break;
            case 6:
              obj = factory(d0, d1, d2, d3, d4, d5);
              break;
            case 7:
              obj = factory(d0, d1, d2, d3, d4, d5, d6);
              break;
            case 8:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7);
              break;
            case 9:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8);
              break;
            case 10:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9);
              break;
            case 11:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10);
              break;
            case 12:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11);
              break;
            case 13:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12);
              break;
            case 14:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13);
              break;
            case 15:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14);
              break;
            case 16:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15);
              break;
            case 17:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16);
              break;
            case 18:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17);
              break;
            case 19:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18);
              break;
            case 20:
              obj = factory(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19);
              break;
          }
        } catch (e) {
          throw new exceptions_1.InstantiationError(this, e, e.stack, provider.key);
        }
        return obj;
      };
      Injector.prototype._getByDependency = function(provider, dep, providerVisibility) {
        var special = lang_1.isPresent(this._depProvider) ? this._depProvider.getDependency(this, provider, dep) : exports.UNDEFINED;
        if (special !== exports.UNDEFINED) {
          return special;
        } else {
          return this._getByKey(dep.key, dep.lowerBoundVisibility, dep.upperBoundVisibility, dep.optional, providerVisibility);
        }
      };
      Injector.prototype._getByKey = function(key, lowerBoundVisibility, upperBoundVisibility, optional, providerVisibility) {
        if (key === INJECTOR_KEY) {
          return this;
        }
        if (upperBoundVisibility instanceof metadata_1.SelfMetadata) {
          return this._getByKeySelf(key, optional, providerVisibility);
        } else if (upperBoundVisibility instanceof metadata_1.HostMetadata) {
          return this._getByKeyHost(key, optional, providerVisibility, lowerBoundVisibility);
        } else {
          return this._getByKeyDefault(key, optional, providerVisibility, lowerBoundVisibility);
        }
      };
      Injector.prototype._throwOrNull = function(key, optional) {
        if (optional) {
          return null;
        } else {
          throw new exceptions_1.NoProviderError(this, key);
        }
      };
      Injector.prototype._getByKeySelf = function(key, optional, providerVisibility) {
        var obj = this._strategy.getObjByKeyId(key.id, providerVisibility);
        return (obj !== exports.UNDEFINED) ? obj : this._throwOrNull(key, optional);
      };
      Injector.prototype._getByKeyHost = function(key, optional, providerVisibility, lowerBoundVisibility) {
        var inj = this;
        if (lowerBoundVisibility instanceof metadata_1.SkipSelfMetadata) {
          if (inj._isHost) {
            return this._getPrivateDependency(key, optional, inj);
          } else {
            inj = inj._parent;
          }
        }
        while (inj != null) {
          var obj = inj._strategy.getObjByKeyId(key.id, providerVisibility);
          if (obj !== exports.UNDEFINED)
            return obj;
          if (lang_1.isPresent(inj._parent) && inj._isHost) {
            return this._getPrivateDependency(key, optional, inj);
          } else {
            inj = inj._parent;
          }
        }
        return this._throwOrNull(key, optional);
      };
      Injector.prototype._getPrivateDependency = function(key, optional, inj) {
        var obj = inj._parent._strategy.getObjByKeyId(key.id, Visibility.Private);
        return (obj !== exports.UNDEFINED) ? obj : this._throwOrNull(key, optional);
      };
      Injector.prototype._getByKeyDefault = function(key, optional, providerVisibility, lowerBoundVisibility) {
        var inj = this;
        if (lowerBoundVisibility instanceof metadata_1.SkipSelfMetadata) {
          providerVisibility = inj._isHost ? Visibility.PublicAndPrivate : Visibility.Public;
          inj = inj._parent;
        }
        while (inj != null) {
          var obj = inj._strategy.getObjByKeyId(key.id, providerVisibility);
          if (obj !== exports.UNDEFINED)
            return obj;
          providerVisibility = inj._isHost ? Visibility.PublicAndPrivate : Visibility.Public;
          inj = inj._parent;
        }
        return this._throwOrNull(key, optional);
      };
      Object.defineProperty(Injector.prototype, "displayName", {
        get: function() {
          return "Injector(providers: [" + _mapProviders(this, function(b) {
            return (" \"" + b.key.displayName + "\" ");
          }).join(", ") + "])";
        },
        enumerable: true,
        configurable: true
      });
      Injector.prototype.toString = function() {
        return this.displayName;
      };
      return Injector;
    })();
    exports.Injector = Injector;
    var INJECTOR_KEY = key_1.Key.get(Injector);
    function _mapProviders(injector, fn) {
      var res = [];
      for (var i = 0; i < injector._proto.numberOfProviders; ++i) {
        res.push(fn(injector._proto.getProviderAtIndex(i)));
      }
      return res;
    }
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  function forwardRef(forwardRefFn) {
    forwardRefFn.__forward_ref__ = forwardRef;
    forwardRefFn.toString = function() {
      return lang_1.stringify(this());
    };
    return forwardRefFn;
  }
  exports.forwardRef = forwardRef;
  function resolveForwardRef(type) {
    if (lang_1.isFunction(type) && type.hasOwnProperty('__forward_ref__') && type.__forward_ref__ === forwardRef) {
      return type();
    } else {
      return type;
    }
  }
  exports.resolveForwardRef = resolveForwardRef;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/util/decorators", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  function extractAnnotation(annotation) {
    if (lang_1.isFunction(annotation) && annotation.hasOwnProperty('annotation')) {
      annotation = annotation.annotation;
    }
    return annotation;
  }
  function applyParams(fnOrArray, key) {
    if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function || fnOrArray === Number || fnOrArray === Array) {
      throw new Error("Can not use native " + lang_1.stringify(fnOrArray) + " as constructor");
    }
    if (lang_1.isFunction(fnOrArray)) {
      return fnOrArray;
    } else if (fnOrArray instanceof Array) {
      var annotations = fnOrArray;
      var fn = fnOrArray[fnOrArray.length - 1];
      if (!lang_1.isFunction(fn)) {
        throw new Error("Last position of Class method array must be Function in key " + key + " was '" + lang_1.stringify(fn) + "'");
      }
      var annoLength = annotations.length - 1;
      if (annoLength != fn.length) {
        throw new Error("Number of annotations (" + annoLength + ") does not match number of arguments (" + fn.length + ") in the function: " + lang_1.stringify(fn));
      }
      var paramsAnnotations = [];
      for (var i = 0,
          ii = annotations.length - 1; i < ii; i++) {
        var paramAnnotations = [];
        paramsAnnotations.push(paramAnnotations);
        var annotation = annotations[i];
        if (annotation instanceof Array) {
          for (var j = 0; j < annotation.length; j++) {
            paramAnnotations.push(extractAnnotation(annotation[j]));
          }
        } else if (lang_1.isFunction(annotation)) {
          paramAnnotations.push(extractAnnotation(annotation));
        } else {
          paramAnnotations.push(annotation);
        }
      }
      Reflect.defineMetadata('parameters', paramsAnnotations, fn);
      return fn;
    } else {
      throw new Error("Only Function or Array is supported in Class definition for key '" + key + "' is '" + lang_1.stringify(fnOrArray) + "'");
    }
  }
  function Class(clsDef) {
    var constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');
    var proto = constructor.prototype;
    if (clsDef.hasOwnProperty('extends')) {
      if (lang_1.isFunction(clsDef.extends)) {
        constructor.prototype = proto = Object.create(clsDef.extends.prototype);
      } else {
        throw new Error("Class definition 'extends' property must be a constructor function was: " + lang_1.stringify(clsDef.extends));
      }
    }
    for (var key in clsDef) {
      if (key != 'extends' && key != 'prototype' && clsDef.hasOwnProperty(key)) {
        proto[key] = applyParams(clsDef[key], key);
      }
    }
    if (this && this.annotations instanceof Array) {
      Reflect.defineMetadata('annotations', this.annotations, constructor);
    }
    return constructor;
  }
  exports.Class = Class;
  var Reflect = lang_1.global.Reflect;
  if (!(Reflect && Reflect.getMetadata)) {
    throw 'reflect-metadata shim is required when using class decorators';
  }
  function makeDecorator(annotationCls, chainFn) {
    if (chainFn === void 0) {
      chainFn = null;
    }
    function DecoratorFactory(objOrType) {
      var annotationInstance = new annotationCls(objOrType);
      if (this instanceof annotationCls) {
        return annotationInstance;
      } else {
        var chainAnnotation = lang_1.isFunction(this) && this.annotations instanceof Array ? this.annotations : [];
        chainAnnotation.push(annotationInstance);
        var TypeDecorator = function TypeDecorator(cls) {
          var annotations = Reflect.getOwnMetadata('annotations', cls);
          annotations = annotations || [];
          annotations.push(annotationInstance);
          Reflect.defineMetadata('annotations', annotations, cls);
          return cls;
        };
        TypeDecorator.annotations = chainAnnotation;
        TypeDecorator.Class = Class;
        if (chainFn)
          chainFn(TypeDecorator);
        return TypeDecorator;
      }
    }
    DecoratorFactory.prototype = Object.create(annotationCls.prototype);
    return DecoratorFactory;
  }
  exports.makeDecorator = makeDecorator;
  function makeParamDecorator(annotationCls) {
    function ParamDecoratorFactory() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
      }
      var annotationInstance = Object.create(annotationCls.prototype);
      annotationCls.apply(annotationInstance, args);
      if (this instanceof annotationCls) {
        return annotationInstance;
      } else {
        ParamDecorator.annotation = annotationInstance;
        return ParamDecorator;
      }
      function ParamDecorator(cls, unusedKey, index) {
        var parameters = Reflect.getMetadata('parameters', cls);
        parameters = parameters || [];
        while (parameters.length <= index) {
          parameters.push(null);
        }
        parameters[index] = parameters[index] || [];
        var annotationsForParam = parameters[index];
        annotationsForParam.push(annotationInstance);
        Reflect.defineMetadata('parameters', parameters, cls);
        return cls;
      }
    }
    ParamDecoratorFactory.prototype = Object.create(annotationCls.prototype);
    return ParamDecoratorFactory;
  }
  exports.makeParamDecorator = makeParamDecorator;
  function makePropDecorator(decoratorCls) {
    function PropDecoratorFactory() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i - 0] = arguments[_i];
      }
      var decoratorInstance = Object.create(decoratorCls.prototype);
      decoratorCls.apply(decoratorInstance, args);
      if (this instanceof decoratorCls) {
        return decoratorInstance;
      } else {
        return function PropDecorator(target, name) {
          var meta = Reflect.getOwnMetadata('propMetadata', target.constructor);
          meta = meta || {};
          meta[name] = meta[name] || [];
          meta[name].unshift(decoratorInstance);
          Reflect.defineMetadata('propMetadata', meta, target.constructor);
        };
      }
    }
    PropDecoratorFactory.prototype = Object.create(decoratorCls.prototype);
    return PropDecoratorFactory;
  }
  exports.makePropDecorator = makePropDecorator;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/decorators", ["npm:angular2@2.0.0-alpha.46/src/core/di/metadata", "npm:angular2@2.0.0-alpha.46/src/core/util/decorators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/metadata');
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/util/decorators');
  exports.Inject = decorators_1.makeParamDecorator(metadata_1.InjectMetadata);
  exports.Optional = decorators_1.makeParamDecorator(metadata_1.OptionalMetadata);
  exports.Injectable = decorators_1.makeDecorator(metadata_1.InjectableMetadata);
  exports.Self = decorators_1.makeParamDecorator(metadata_1.SelfMetadata);
  exports.Host = decorators_1.makeParamDecorator(metadata_1.HostMetadata);
  exports.SkipSelf = decorators_1.makeParamDecorator(metadata_1.SkipSelfMetadata);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di/metadata", ["npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var InjectMetadata = (function() {
    function InjectMetadata(token) {
      this.token = token;
    }
    InjectMetadata.prototype.toString = function() {
      return "@Inject(" + lang_1.stringify(this.token) + ")";
    };
    InjectMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], InjectMetadata);
    return InjectMetadata;
  })();
  exports.InjectMetadata = InjectMetadata;
  var OptionalMetadata = (function() {
    function OptionalMetadata() {}
    OptionalMetadata.prototype.toString = function() {
      return "@Optional()";
    };
    OptionalMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], OptionalMetadata);
    return OptionalMetadata;
  })();
  exports.OptionalMetadata = OptionalMetadata;
  var DependencyMetadata = (function() {
    function DependencyMetadata() {}
    Object.defineProperty(DependencyMetadata.prototype, "token", {
      get: function() {
        return null;
      },
      enumerable: true,
      configurable: true
    });
    DependencyMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], DependencyMetadata);
    return DependencyMetadata;
  })();
  exports.DependencyMetadata = DependencyMetadata;
  var InjectableMetadata = (function() {
    function InjectableMetadata() {}
    InjectableMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], InjectableMetadata);
    return InjectableMetadata;
  })();
  exports.InjectableMetadata = InjectableMetadata;
  var SelfMetadata = (function() {
    function SelfMetadata() {}
    SelfMetadata.prototype.toString = function() {
      return "@Self()";
    };
    SelfMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], SelfMetadata);
    return SelfMetadata;
  })();
  exports.SelfMetadata = SelfMetadata;
  var SkipSelfMetadata = (function() {
    function SkipSelfMetadata() {}
    SkipSelfMetadata.prototype.toString = function() {
      return "@SkipSelf()";
    };
    SkipSelfMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], SkipSelfMetadata);
    return SkipSelfMetadata;
  })();
  exports.SkipSelfMetadata = SkipSelfMetadata;
  var HostMetadata = (function() {
    function HostMetadata() {}
    HostMetadata.prototype.toString = function() {
      return "@Host()";
    };
    HostMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [])], HostMetadata);
    return HostMetadata;
  })();
  exports.HostMetadata = HostMetadata;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/di", ["npm:angular2@2.0.0-alpha.46/src/core/di/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di/decorators", "npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref", "npm:angular2@2.0.0-alpha.46/src/core/di/injector", "npm:angular2@2.0.0-alpha.46/src/core/di/provider", "npm:angular2@2.0.0-alpha.46/src/core/di/key", "npm:angular2@2.0.0-alpha.46/src/core/di/exceptions", "npm:angular2@2.0.0-alpha.46/src/core/di/opaque_token"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/metadata');
  exports.InjectMetadata = metadata_1.InjectMetadata;
  exports.OptionalMetadata = metadata_1.OptionalMetadata;
  exports.InjectableMetadata = metadata_1.InjectableMetadata;
  exports.SelfMetadata = metadata_1.SelfMetadata;
  exports.HostMetadata = metadata_1.HostMetadata;
  exports.SkipSelfMetadata = metadata_1.SkipSelfMetadata;
  exports.DependencyMetadata = metadata_1.DependencyMetadata;
  __export($__require('npm:angular2@2.0.0-alpha.46/src/core/di/decorators'));
  var forward_ref_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/forward_ref');
  exports.forwardRef = forward_ref_1.forwardRef;
  exports.resolveForwardRef = forward_ref_1.resolveForwardRef;
  var injector_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/injector');
  exports.Injector = injector_1.Injector;
  var provider_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/provider');
  exports.Binding = provider_1.Binding;
  exports.ProviderBuilder = provider_1.ProviderBuilder;
  exports.ResolvedFactory = provider_1.ResolvedFactory;
  exports.Dependency = provider_1.Dependency;
  exports.bind = provider_1.bind;
  exports.Provider = provider_1.Provider;
  exports.provide = provider_1.provide;
  var key_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/key');
  exports.Key = key_1.Key;
  exports.TypeLiteral = key_1.TypeLiteral;
  var exceptions_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/exceptions');
  exports.NoProviderError = exceptions_1.NoProviderError;
  exports.AbstractProviderError = exceptions_1.AbstractProviderError;
  exports.CyclicDependencyError = exceptions_1.CyclicDependencyError;
  exports.InstantiationError = exceptions_1.InstantiationError;
  exports.InvalidProviderError = exceptions_1.InvalidProviderError;
  exports.NoAnnotationError = exceptions_1.NoAnnotationError;
  exports.OutOfBoundsError = exceptions_1.OutOfBoundsError;
  var opaque_token_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/opaque_token');
  exports.OpaqueToken = opaque_token_1.OpaqueToken;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/metadata/di", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/di/metadata"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di/metadata');
  var AttributeMetadata = (function(_super) {
    __extends(AttributeMetadata, _super);
    function AttributeMetadata(attributeName) {
      _super.call(this);
      this.attributeName = attributeName;
    }
    Object.defineProperty(AttributeMetadata.prototype, "token", {
      get: function() {
        return this;
      },
      enumerable: true,
      configurable: true
    });
    AttributeMetadata.prototype.toString = function() {
      return "@Attribute(" + lang_1.stringify(this.attributeName) + ")";
    };
    AttributeMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [String])], AttributeMetadata);
    return AttributeMetadata;
  })(metadata_1.DependencyMetadata);
  exports.AttributeMetadata = AttributeMetadata;
  var QueryMetadata = (function(_super) {
    __extends(QueryMetadata, _super);
    function QueryMetadata(_selector, _a) {
      var _b = _a === void 0 ? {} : _a,
          _c = _b.descendants,
          descendants = _c === void 0 ? false : _c,
          _d = _b.first,
          first = _d === void 0 ? false : _d;
      _super.call(this);
      this._selector = _selector;
      this.descendants = descendants;
      this.first = first;
    }
    Object.defineProperty(QueryMetadata.prototype, "isViewQuery", {
      get: function() {
        return false;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryMetadata.prototype, "selector", {
      get: function() {
        return di_1.resolveForwardRef(this._selector);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryMetadata.prototype, "isVarBindingQuery", {
      get: function() {
        return lang_1.isString(this.selector);
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(QueryMetadata.prototype, "varBindings", {
      get: function() {
        return this.selector.split(',');
      },
      enumerable: true,
      configurable: true
    });
    QueryMetadata.prototype.toString = function() {
      return "@Query(" + lang_1.stringify(this.selector) + ")";
    };
    QueryMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object, Object])], QueryMetadata);
    return QueryMetadata;
  })(metadata_1.DependencyMetadata);
  exports.QueryMetadata = QueryMetadata;
  var ContentChildrenMetadata = (function(_super) {
    __extends(ContentChildrenMetadata, _super);
    function ContentChildrenMetadata(_selector, _a) {
      var _b = (_a === void 0 ? {} : _a).descendants,
          descendants = _b === void 0 ? false : _b;
      _super.call(this, _selector, {descendants: descendants});
    }
    ContentChildrenMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object, Object])], ContentChildrenMetadata);
    return ContentChildrenMetadata;
  })(QueryMetadata);
  exports.ContentChildrenMetadata = ContentChildrenMetadata;
  var ContentChildMetadata = (function(_super) {
    __extends(ContentChildMetadata, _super);
    function ContentChildMetadata(_selector) {
      _super.call(this, _selector, {
        descendants: true,
        first: true
      });
    }
    ContentChildMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], ContentChildMetadata);
    return ContentChildMetadata;
  })(QueryMetadata);
  exports.ContentChildMetadata = ContentChildMetadata;
  var ViewQueryMetadata = (function(_super) {
    __extends(ViewQueryMetadata, _super);
    function ViewQueryMetadata(_selector, _a) {
      var _b = _a === void 0 ? {} : _a,
          _c = _b.descendants,
          descendants = _c === void 0 ? false : _c,
          _d = _b.first,
          first = _d === void 0 ? false : _d;
      _super.call(this, _selector, {
        descendants: descendants,
        first: first
      });
    }
    Object.defineProperty(ViewQueryMetadata.prototype, "isViewQuery", {
      get: function() {
        return true;
      },
      enumerable: true,
      configurable: true
    });
    ViewQueryMetadata.prototype.toString = function() {
      return "@ViewQuery(" + lang_1.stringify(this.selector) + ")";
    };
    ViewQueryMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object, Object])], ViewQueryMetadata);
    return ViewQueryMetadata;
  })(QueryMetadata);
  exports.ViewQueryMetadata = ViewQueryMetadata;
  var ViewChildrenMetadata = (function(_super) {
    __extends(ViewChildrenMetadata, _super);
    function ViewChildrenMetadata(_selector) {
      _super.call(this, _selector, {descendants: true});
    }
    ViewChildrenMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], ViewChildrenMetadata);
    return ViewChildrenMetadata;
  })(ViewQueryMetadata);
  exports.ViewChildrenMetadata = ViewChildrenMetadata;
  var ViewChildMetadata = (function(_super) {
    __extends(ViewChildMetadata, _super);
    function ViewChildMetadata(_selector) {
      _super.call(this, _selector, {
        descendants: true,
        first: true
      });
    }
    ViewChildMetadata = __decorate([lang_1.CONST(), __metadata('design:paramtypes', [Object])], ViewChildMetadata);
    return ViewChildMetadata;
  })(ViewQueryMetadata);
  exports.ViewChildMetadata = ViewChildMetadata;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/core/metadata", ["npm:angular2@2.0.0-alpha.46/src/core/metadata/di", "npm:angular2@2.0.0-alpha.46/src/core/metadata/directives", "npm:angular2@2.0.0-alpha.46/src/core/metadata/view", "npm:angular2@2.0.0-alpha.46/src/core/util/decorators"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/di');
  exports.QueryMetadata = di_1.QueryMetadata;
  exports.ContentChildrenMetadata = di_1.ContentChildrenMetadata;
  exports.ContentChildMetadata = di_1.ContentChildMetadata;
  exports.ViewChildrenMetadata = di_1.ViewChildrenMetadata;
  exports.ViewQueryMetadata = di_1.ViewQueryMetadata;
  exports.ViewChildMetadata = di_1.ViewChildMetadata;
  exports.AttributeMetadata = di_1.AttributeMetadata;
  var directives_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/directives');
  exports.ComponentMetadata = directives_1.ComponentMetadata;
  exports.DirectiveMetadata = directives_1.DirectiveMetadata;
  exports.PipeMetadata = directives_1.PipeMetadata;
  exports.InputMetadata = directives_1.InputMetadata;
  exports.OutputMetadata = directives_1.OutputMetadata;
  exports.HostBindingMetadata = directives_1.HostBindingMetadata;
  exports.HostListenerMetadata = directives_1.HostListenerMetadata;
  var view_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  exports.ViewMetadata = view_1.ViewMetadata;
  exports.ViewEncapsulation = view_1.ViewEncapsulation;
  var di_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/di');
  var directives_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/directives');
  var view_2 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata/view');
  var decorators_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/util/decorators');
  exports.Component = decorators_1.makeDecorator(directives_2.ComponentMetadata, function(fn) {
    return fn.View = exports.View;
  });
  exports.Directive = decorators_1.makeDecorator(directives_2.DirectiveMetadata);
  exports.View = decorators_1.makeDecorator(view_2.ViewMetadata, function(fn) {
    return fn.View = exports.View;
  });
  exports.Attribute = decorators_1.makeParamDecorator(di_2.AttributeMetadata);
  exports.Query = decorators_1.makeParamDecorator(di_2.QueryMetadata);
  exports.ContentChildren = decorators_1.makePropDecorator(di_2.ContentChildrenMetadata);
  exports.ContentChild = decorators_1.makePropDecorator(di_2.ContentChildMetadata);
  exports.ViewChildren = decorators_1.makePropDecorator(di_2.ViewChildrenMetadata);
  exports.ViewChild = decorators_1.makePropDecorator(di_2.ViewChildMetadata);
  exports.ViewQuery = decorators_1.makeParamDecorator(di_2.ViewQueryMetadata);
  exports.Pipe = decorators_1.makeDecorator(directives_2.PipeMetadata);
  exports.Input = decorators_1.makePropDecorator(directives_2.InputMetadata);
  exports.Output = decorators_1.makePropDecorator(directives_2.OutputMetadata);
  exports.HostBinding = decorators_1.makePropDecorator(directives_2.HostBindingMetadata);
  exports.HostListener = decorators_1.makePropDecorator(directives_2.HostListenerMetadata);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/ArgumentOutOfRangeError", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var ArgumentOutOfRangeError = function ArgumentOutOfRangeError() {
    _classCallCheck(this, ArgumentOutOfRangeError);
    this.name = 'ArgumentOutOfRangeError';
    this.message = 'argument out of range';
  };
  ;
  exports['default'] = ArgumentOutOfRangeError;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zipAll", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = zipAll;
  var _zipSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-support');
  function zipAll(project) {
    return this.lift(new _zipSupport.ZipOperator(project));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-static"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = zipProto;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _zipStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-static');
  var _zipStatic2 = _interopRequireDefault(_zipStatic);
  function zipProto() {
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    observables.unshift(this);
    return _zipStatic2['default'].apply(this, observables);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/withLatestFrom", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = withLatestFrom;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  function withLatestFrom() {
    var project = undefined;
    for (var _len = arguments.length,
        args = Array(_len),
        _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (typeof args[args.length - 1] === 'function') {
      project = args.pop();
    }
    var observables = args;
    return this.lift(new WithLatestFromOperator(observables, project));
  }
  var WithLatestFromOperator = (function() {
    function WithLatestFromOperator(observables, project) {
      _classCallCheck(this, WithLatestFromOperator);
      this.observables = observables;
      this.project = project;
    }
    WithLatestFromOperator.prototype.call = function call(subscriber) {
      return new WithLatestFromSubscriber(subscriber, this.observables, this.project);
    };
    return WithLatestFromOperator;
  })();
  var WithLatestFromSubscriber = (function(_OuterSubscriber) {
    _inherits(WithLatestFromSubscriber, _OuterSubscriber);
    function WithLatestFromSubscriber(destination, observables, project) {
      _classCallCheck(this, WithLatestFromSubscriber);
      _OuterSubscriber.call(this, destination);
      this.observables = observables;
      this.project = project;
      this.toRespond = [];
      var len = observables.length;
      this.values = new Array(len);
      for (var i = 0; i < len; i++) {
        this.toRespond.push(i);
      }
      for (var i = 0; i < len; i++) {
        var observable = observables[i];
        this.add(_utilSubscribeToResult2['default'](this, observable, observable, i));
      }
    }
    WithLatestFromSubscriber.prototype.notifyNext = function notifyNext(observable, value, observableIndex, index) {
      this.values[observableIndex] = value;
      var toRespond = this.toRespond;
      if (toRespond.length > 0) {
        var found = toRespond.indexOf(observableIndex);
        if (found !== -1) {
          toRespond.splice(found, 1);
        }
      }
    };
    WithLatestFromSubscriber.prototype.notifyComplete = function notifyComplete() {};
    WithLatestFromSubscriber.prototype._next = function _next(value) {
      if (this.toRespond.length === 0) {
        var values = this.values;
        var destination = this.destination;
        var project = this.project;
        var args = [value].concat(values);
        if (project) {
          var result = _utilTryCatch2['default'](this.project).apply(this, args);
          if (result === _utilErrorObject.errorObject) {
            destination.error(result.e);
          } else {
            destination.next(result);
          }
        } else {
          destination.next(args);
        }
      }
    };
    return WithLatestFromSubscriber;
  })(_OuterSubscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowWhen", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = window;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function window(closingSelector) {
    return this.lift(new WindowOperator(closingSelector));
  }
  var WindowOperator = (function() {
    function WindowOperator(closingSelector) {
      _classCallCheck(this, WindowOperator);
      this.closingSelector = closingSelector;
    }
    WindowOperator.prototype.call = function call(subscriber) {
      return new WindowSubscriber(subscriber, this.closingSelector);
    };
    return WindowOperator;
  })();
  var WindowSubscriber = (function(_Subscriber) {
    _inherits(WindowSubscriber, _Subscriber);
    function WindowSubscriber(destination, closingSelector) {
      _classCallCheck(this, WindowSubscriber);
      _Subscriber.call(this, destination);
      this.closingSelector = closingSelector;
      this.window = new _Subject2['default']();
      this.openWindow();
    }
    WindowSubscriber.prototype._next = function _next(value) {
      this.window.next(value);
    };
    WindowSubscriber.prototype._error = function _error(err) {
      this.window.error(err);
      this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function _complete() {
      this.window.complete();
      this.destination.complete();
    };
    WindowSubscriber.prototype.openWindow = function openWindow() {
      var prevClosingNotification = this.closingNotification;
      if (prevClosingNotification) {
        this.remove(prevClosingNotification);
        prevClosingNotification.unsubscribe();
      }
      var prevWindow = this.window;
      if (prevWindow) {
        prevWindow.complete();
      }
      this.destination.next(this.window = new _Subject2['default']());
      var closingNotifier = _utilTryCatch2['default'](this.closingSelector)();
      if (closingNotifier === _utilErrorObject.errorObject) {
        var err = closingNotifier.e;
        this.destination.error(err);
        this.window.error(err);
      } else {
        var closingNotification = this.closingNotification = new _Subscription2['default']();
        this.add(closingNotification.add(closingNotifier._subscribe(new WindowClosingNotifierSubscriber(this))));
      }
    };
    return WindowSubscriber;
  })(_Subscriber4['default']);
  var WindowClosingNotifierSubscriber = (function(_Subscriber2) {
    _inherits(WindowClosingNotifierSubscriber, _Subscriber2);
    function WindowClosingNotifierSubscriber(parent) {
      _classCallCheck(this, WindowClosingNotifierSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
    }
    WindowClosingNotifierSubscriber.prototype._next = function _next() {
      this.parent.openWindow();
    };
    WindowClosingNotifierSubscriber.prototype._error = function _error(err) {
      this.parent.error(err);
    };
    WindowClosingNotifierSubscriber.prototype._complete = function _complete() {};
    return WindowClosingNotifierSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowToggle", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = windowToggle;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber4 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber5 = _interopRequireDefault(_Subscriber4);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function windowToggle(openings, closingSelector) {
    return this.lift(new WindowToggleOperator(openings, closingSelector));
  }
  var WindowToggleOperator = (function() {
    function WindowToggleOperator(openings, closingSelector) {
      _classCallCheck(this, WindowToggleOperator);
      this.openings = openings;
      this.closingSelector = closingSelector;
    }
    WindowToggleOperator.prototype.call = function call(subscriber) {
      return new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector);
    };
    return WindowToggleOperator;
  })();
  var WindowToggleSubscriber = (function(_Subscriber) {
    _inherits(WindowToggleSubscriber, _Subscriber);
    function WindowToggleSubscriber(destination, openings, closingSelector) {
      _classCallCheck(this, WindowToggleSubscriber);
      _Subscriber.call(this, destination);
      this.openings = openings;
      this.closingSelector = closingSelector;
      this.contexts = [];
      this.add(this.openings._subscribe(new WindowToggleOpeningsSubscriber(this)));
    }
    WindowToggleSubscriber.prototype._next = function _next(value) {
      var contexts = this.contexts;
      var len = contexts.length;
      for (var i = 0; i < len; i++) {
        contexts[i].window.next(value);
      }
    };
    WindowToggleSubscriber.prototype._error = function _error(err) {
      var contexts = this.contexts;
      while (contexts.length > 0) {
        contexts.shift().window.error(err);
      }
      this.destination.error(err);
    };
    WindowToggleSubscriber.prototype._complete = function _complete() {
      var contexts = this.contexts;
      while (contexts.length > 0) {
        var context = contexts.shift();
        context.window.complete();
        context.subscription.unsubscribe();
      }
      this.destination.complete();
    };
    WindowToggleSubscriber.prototype.openWindow = function openWindow(value) {
      var closingSelector = this.closingSelector;
      var closingNotifier = _utilTryCatch2['default'](closingSelector)(value);
      if (closingNotifier === _utilErrorObject.errorObject) {
        this.error(closingNotifier.e);
      } else {
        var context = {
          window: new _Subject2['default'](),
          subscription: new _Subscription2['default']()
        };
        this.contexts.push(context);
        this.destination.next(context.window);
        var subscriber = new WindowClosingNotifierSubscriber(this, context);
        var subscription = closingNotifier._subscribe(subscriber);
        this.add(context.subscription.add(subscription));
      }
    };
    WindowToggleSubscriber.prototype.closeWindow = function closeWindow(context) {
      var window = context.window;
      var subscription = context.subscription;
      var contexts = this.contexts;
      contexts.splice(contexts.indexOf(context), 1);
      window.complete();
      this.remove(subscription);
      subscription.unsubscribe();
    };
    return WindowToggleSubscriber;
  })(_Subscriber5['default']);
  var WindowClosingNotifierSubscriber = (function(_Subscriber2) {
    _inherits(WindowClosingNotifierSubscriber, _Subscriber2);
    function WindowClosingNotifierSubscriber(parent, windowContext) {
      _classCallCheck(this, WindowClosingNotifierSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
      this.windowContext = windowContext;
    }
    WindowClosingNotifierSubscriber.prototype._next = function _next() {
      this.parent.closeWindow(this.windowContext);
    };
    WindowClosingNotifierSubscriber.prototype._error = function _error(err) {
      this.parent.error(err);
    };
    WindowClosingNotifierSubscriber.prototype._complete = function _complete() {
      this.parent.closeWindow(this.windowContext);
    };
    return WindowClosingNotifierSubscriber;
  })(_Subscriber5['default']);
  var WindowToggleOpeningsSubscriber = (function(_Subscriber3) {
    _inherits(WindowToggleOpeningsSubscriber, _Subscriber3);
    function WindowToggleOpeningsSubscriber(parent) {
      _classCallCheck(this, WindowToggleOpeningsSubscriber);
      _Subscriber3.call(this);
      this.parent = parent;
    }
    WindowToggleOpeningsSubscriber.prototype._next = function _next(value) {
      this.parent.openWindow(value);
    };
    WindowToggleOpeningsSubscriber.prototype._error = function _error(err) {
      this.parent.error(err);
    };
    WindowToggleOpeningsSubscriber.prototype._complete = function _complete() {};
    return WindowToggleOpeningsSubscriber;
  })(_Subscriber5['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowTime", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = windowTime;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  function windowTime(windowTimeSpan) {
    var windowCreationInterval = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
    var scheduler = arguments.length <= 2 || arguments[2] === undefined ? _schedulersNextTick2['default'] : arguments[2];
    return this.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler));
  }
  var WindowTimeOperator = (function() {
    function WindowTimeOperator(windowTimeSpan, windowCreationInterval, scheduler) {
      _classCallCheck(this, WindowTimeOperator);
      this.windowTimeSpan = windowTimeSpan;
      this.windowCreationInterval = windowCreationInterval;
      this.scheduler = scheduler;
    }
    WindowTimeOperator.prototype.call = function call(subscriber) {
      return new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.scheduler);
    };
    return WindowTimeOperator;
  })();
  var WindowTimeSubscriber = (function(_Subscriber) {
    _inherits(WindowTimeSubscriber, _Subscriber);
    function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, scheduler) {
      _classCallCheck(this, WindowTimeSubscriber);
      _Subscriber.call(this, destination);
      this.windowTimeSpan = windowTimeSpan;
      this.windowCreationInterval = windowCreationInterval;
      this.scheduler = scheduler;
      this.windows = [];
      if (windowCreationInterval !== null && windowCreationInterval >= 0) {
        var _window = this.openWindow();
        var closeState = {
          subscriber: this,
          window: _window,
          context: null
        };
        var creationState = {
          windowTimeSpan: windowTimeSpan,
          windowCreationInterval: windowCreationInterval,
          subscriber: this,
          scheduler: scheduler
        };
        this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
        this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
      } else {
        var _window2 = this.openWindow();
        var timeSpanOnlyState = {
          subscriber: this,
          window: _window2,
          windowTimeSpan: windowTimeSpan
        };
        this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
      }
    }
    WindowTimeSubscriber.prototype._next = function _next(value) {
      var windows = this.windows;
      var len = windows.length;
      for (var i = 0; i < len; i++) {
        windows[i].next(value);
      }
    };
    WindowTimeSubscriber.prototype._error = function _error(err) {
      var windows = this.windows;
      while (windows.length > 0) {
        windows.shift().error(err);
      }
      this.destination.error(err);
    };
    WindowTimeSubscriber.prototype._complete = function _complete() {
      var windows = this.windows;
      while (windows.length > 0) {
        windows.shift().complete();
      }
      this.destination.complete();
    };
    WindowTimeSubscriber.prototype.openWindow = function openWindow() {
      var window = new _Subject2['default']();
      this.windows.push(window);
      this.destination.next(window);
      return window;
    };
    WindowTimeSubscriber.prototype.closeWindow = function closeWindow(window) {
      window.complete();
      var windows = this.windows;
      windows.splice(windows.indexOf(window), 1);
    };
    return WindowTimeSubscriber;
  })(_Subscriber3['default']);
  function dispatchWindowTimeSpanOnly(state) {
    var subscriber = state.subscriber;
    var windowTimeSpan = state.windowTimeSpan;
    var window = state.window;
    if (window) {
      window.complete();
    }
    state.window = subscriber.openWindow();
    this.schedule(state, windowTimeSpan);
  }
  function dispatchWindowCreation(state) {
    var windowTimeSpan = state.windowTimeSpan;
    var subscriber = state.subscriber;
    var scheduler = state.scheduler;
    var windowCreationInterval = state.windowCreationInterval;
    var window = subscriber.openWindow();
    var action = this;
    var context = {
      action: action,
      subscription: null
    };
    var timeSpanState = {
      subscriber: subscriber,
      window: window,
      context: context
    };
    context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
    action.add(context.subscription);
    action.schedule(state, windowCreationInterval);
  }
  function dispatchWindowClose(_ref) {
    var subscriber = _ref.subscriber;
    var window = _ref.window;
    var context = _ref.context;
    if (context && context.action && context.subscription) {
      context.action.remove(context.subscription);
    }
    subscriber.closeWindow(window);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowCount", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = windowCount;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  function windowCount(windowSize) {
    var startWindowEvery = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
    return this.lift(new WindowCountOperator(windowSize, startWindowEvery));
  }
  var WindowCountOperator = (function() {
    function WindowCountOperator(windowSize, startWindowEvery) {
      _classCallCheck(this, WindowCountOperator);
      this.windowSize = windowSize;
      this.startWindowEvery = startWindowEvery;
    }
    WindowCountOperator.prototype.call = function call(subscriber) {
      return new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery);
    };
    return WindowCountOperator;
  })();
  var WindowCountSubscriber = (function(_Subscriber) {
    _inherits(WindowCountSubscriber, _Subscriber);
    function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
      _classCallCheck(this, WindowCountSubscriber);
      _Subscriber.call(this, destination);
      this.windowSize = windowSize;
      this.startWindowEvery = startWindowEvery;
      this.windows = [new _Subject2['default']()];
      this.count = 0;
      destination.next(this.windows[0]);
    }
    WindowCountSubscriber.prototype._next = function _next(value) {
      var startWindowEvery = this.startWindowEvery > 0 ? this.startWindowEvery : this.windowSize;
      var windowSize = this.windowSize;
      var windows = this.windows;
      var len = windows.length;
      for (var i = 0; i < len; i++) {
        windows[i].next(value);
      }
      var c = this.count - windowSize + 1;
      if (c >= 0 && c % startWindowEvery === 0) {
        windows.shift().complete();
      }
      if (++this.count % startWindowEvery === 0) {
        var _window = new _Subject2['default']();
        windows.push(_window);
        this.destination.next(_window);
      }
    };
    WindowCountSubscriber.prototype._error = function _error(err) {
      var windows = this.windows;
      while (windows.length > 0) {
        windows.shift().error(err);
      }
      this.destination.error(err);
    };
    WindowCountSubscriber.prototype._complete = function _complete() {
      var windows = this.windows;
      while (windows.length > 0) {
        windows.shift().complete();
      }
      this.destination.complete();
    };
    return WindowCountSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/window", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = window;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  function window(closingNotifier) {
    return this.lift(new WindowOperator(closingNotifier));
  }
  var WindowOperator = (function() {
    function WindowOperator(closingNotifier) {
      _classCallCheck(this, WindowOperator);
      this.closingNotifier = closingNotifier;
    }
    WindowOperator.prototype.call = function call(subscriber) {
      return new WindowSubscriber(subscriber, this.closingNotifier);
    };
    return WindowOperator;
  })();
  var WindowSubscriber = (function(_Subscriber) {
    _inherits(WindowSubscriber, _Subscriber);
    function WindowSubscriber(destination, closingNotifier) {
      _classCallCheck(this, WindowSubscriber);
      _Subscriber.call(this, destination);
      this.closingNotifier = closingNotifier;
      this.window = new _Subject2['default']();
      this.add(closingNotifier._subscribe(new WindowClosingNotifierSubscriber(this)));
      this.openWindow();
    }
    WindowSubscriber.prototype._next = function _next(value) {
      this.window.next(value);
    };
    WindowSubscriber.prototype._error = function _error(err) {
      this.window.error(err);
      this.destination.error(err);
    };
    WindowSubscriber.prototype._complete = function _complete() {
      this.window.complete();
      this.destination.complete();
    };
    WindowSubscriber.prototype.openWindow = function openWindow() {
      var prevWindow = this.window;
      if (prevWindow) {
        prevWindow.complete();
      }
      this.destination.next(this.window = new _Subject2['default']());
    };
    return WindowSubscriber;
  })(_Subscriber4['default']);
  var WindowClosingNotifierSubscriber = (function(_Subscriber2) {
    _inherits(WindowClosingNotifierSubscriber, _Subscriber2);
    function WindowClosingNotifierSubscriber(parent) {
      _classCallCheck(this, WindowClosingNotifierSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
    }
    WindowClosingNotifierSubscriber.prototype._next = function _next() {
      this.parent.openWindow();
    };
    WindowClosingNotifierSubscriber.prototype._error = function _error(err) {
      this.parent._error(err);
    };
    WindowClosingNotifierSubscriber.prototype._complete = function _complete() {
      this.parent._complete();
    };
    return WindowClosingNotifierSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/toPromise", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = toPromise;
  var _utilRoot = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
  function toPromise(PromiseCtor) {
    var _this = this;
    if (!PromiseCtor) {
      if (_utilRoot.root.Rx && _utilRoot.root.Rx.config && _utilRoot.root.Rx.config.Promise) {
        PromiseCtor = _utilRoot.root.Rx.config.Promise;
      } else if (_utilRoot.root.Promise) {
        PromiseCtor = _utilRoot.root.Promise;
      }
    }
    if (!PromiseCtor) {
      throw new Error('no Promise impl found');
    }
    return new PromiseCtor(function(resolve, reject) {
      var value = undefined;
      _this.subscribe(function(x) {
        return value = x;
      }, function(err) {
        return reject(err);
      }, function() {
        return resolve(value);
      });
    });
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/toArray", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = toArray;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function toArray() {
    return this.lift(new ToArrayOperator());
  }
  var ToArrayOperator = (function() {
    function ToArrayOperator() {
      _classCallCheck(this, ToArrayOperator);
    }
    ToArrayOperator.prototype.call = function call(subscriber) {
      return new ToArraySubscriber(subscriber);
    };
    return ToArrayOperator;
  })();
  var ToArraySubscriber = (function(_Subscriber) {
    _inherits(ToArraySubscriber, _Subscriber);
    function ToArraySubscriber(destination) {
      _classCallCheck(this, ToArraySubscriber);
      _Subscriber.call(this, destination);
      this.array = [];
    }
    ToArraySubscriber.prototype._next = function _next(x) {
      this.array.push(x);
    };
    ToArraySubscriber.prototype._complete = function _complete() {
      this.destination.next(this.array);
      this.destination.complete();
    };
    return ToArraySubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/timeoutWith", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports['default'] = timeoutWith;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  var _utilIsDate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate');
  var _utilIsDate2 = _interopRequireDefault(_utilIsDate);
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  function timeoutWith(due, withObservable) {
    var scheduler = arguments.length <= 2 || arguments[2] === undefined ? _schedulersImmediate2['default'] : arguments[2];
    var absoluteTimeout = _utilIsDate2['default'](due);
    var waitFor = absoluteTimeout ? +due - scheduler.now() : due;
    return this.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
  }
  var TimeoutWithOperator = (function() {
    function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
      _classCallCheck(this, TimeoutWithOperator);
      this.waitFor = waitFor;
      this.absoluteTimeout = absoluteTimeout;
      this.withObservable = withObservable;
      this.scheduler = scheduler;
    }
    TimeoutWithOperator.prototype.call = function call(subscriber) {
      return new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler);
    };
    return TimeoutWithOperator;
  })();
  var TimeoutWithSubscriber = (function(_OuterSubscriber) {
    _inherits(TimeoutWithSubscriber, _OuterSubscriber);
    function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
      _classCallCheck(this, TimeoutWithSubscriber);
      _OuterSubscriber.call(this, destination);
      this.absoluteTimeout = absoluteTimeout;
      this.waitFor = waitFor;
      this.withObservable = withObservable;
      this.scheduler = scheduler;
      this.timeoutSubscription = undefined;
      this.timedOut = false;
      this.index = 0;
      this._previousIndex = 0;
      this._hasCompleted = false;
      this.scheduleTimeout();
    }
    TimeoutWithSubscriber.dispatchTimeout = function dispatchTimeout(state) {
      var source = state.subscriber;
      var currentIndex = state.index;
      if (!source.hasCompleted && source.previousIndex === currentIndex) {
        source.handleTimeout();
      }
    };
    TimeoutWithSubscriber.prototype.scheduleTimeout = function scheduleTimeout() {
      var currentIndex = this.index;
      var timeoutState = {
        subscriber: this,
        index: currentIndex
      };
      this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, timeoutState);
      this.index++;
      this._previousIndex = currentIndex;
    };
    TimeoutWithSubscriber.prototype._next = function _next(value) {
      if (!this.timedOut) {
        this.destination.next(value);
        if (!this.absoluteTimeout) {
          this.scheduleTimeout();
        }
      }
    };
    TimeoutWithSubscriber.prototype._error = function _error(err) {
      if (!this.timedOut) {
        this.destination.error(err);
        this._hasCompleted = true;
      }
    };
    TimeoutWithSubscriber.prototype._complete = function _complete() {
      if (!this.timedOut) {
        this.destination.complete();
        this._hasCompleted = true;
      }
    };
    TimeoutWithSubscriber.prototype.handleTimeout = function handleTimeout() {
      var withObservable = this.withObservable;
      this.timedOut = true;
      this.add(this.timeoutSubscription = _utilSubscribeToResult2['default'](this, withObservable));
    };
    _createClass(TimeoutWithSubscriber, [{
      key: 'previousIndex',
      get: function get() {
        return this._previousIndex;
      }
    }, {
      key: 'hasCompleted',
      get: function get() {
        return this._hasCompleted;
      }
    }]);
    return TimeoutWithSubscriber;
  })(_OuterSubscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/timeout", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports['default'] = timeout;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  var _utilIsDate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate');
  var _utilIsDate2 = _interopRequireDefault(_utilIsDate);
  function timeout(due) {
    var errorToSend = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
    var scheduler = arguments.length <= 2 || arguments[2] === undefined ? _schedulersImmediate2['default'] : arguments[2];
    var absoluteTimeout = _utilIsDate2['default'](due);
    var waitFor = absoluteTimeout ? +due - scheduler.now() : due;
    return this.lift(new TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler));
  }
  var TimeoutOperator = (function() {
    function TimeoutOperator(waitFor, absoluteTimeout, errorToSend, scheduler) {
      _classCallCheck(this, TimeoutOperator);
      this.waitFor = waitFor;
      this.absoluteTimeout = absoluteTimeout;
      this.errorToSend = errorToSend;
      this.scheduler = scheduler;
    }
    TimeoutOperator.prototype.call = function call(subscriber) {
      return new TimeoutSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.errorToSend, this.scheduler);
    };
    return TimeoutOperator;
  })();
  var TimeoutSubscriber = (function(_Subscriber) {
    _inherits(TimeoutSubscriber, _Subscriber);
    function TimeoutSubscriber(destination, absoluteTimeout, waitFor, errorToSend, scheduler) {
      _classCallCheck(this, TimeoutSubscriber);
      _Subscriber.call(this, destination);
      this.absoluteTimeout = absoluteTimeout;
      this.waitFor = waitFor;
      this.errorToSend = errorToSend;
      this.scheduler = scheduler;
      this.index = 0;
      this._previousIndex = 0;
      this._hasCompleted = false;
      this.scheduleTimeout();
    }
    TimeoutSubscriber.dispatchTimeout = function dispatchTimeout(state) {
      var source = state.subscriber;
      var currentIndex = state.index;
      if (!source.hasCompleted && source.previousIndex === currentIndex) {
        source.notifyTimeout();
      }
    };
    TimeoutSubscriber.prototype.scheduleTimeout = function scheduleTimeout() {
      var currentIndex = this.index;
      this.scheduler.schedule(TimeoutSubscriber.dispatchTimeout, this.waitFor, {
        subscriber: this,
        index: currentIndex
      });
      this.index++;
      this._previousIndex = currentIndex;
    };
    TimeoutSubscriber.prototype._next = function _next(value) {
      this.destination.next(value);
      if (!this.absoluteTimeout) {
        this.scheduleTimeout();
      }
    };
    TimeoutSubscriber.prototype._error = function _error(err) {
      this.destination.error(err);
      this._hasCompleted = true;
    };
    TimeoutSubscriber.prototype._complete = function _complete() {
      this.destination.complete();
      this._hasCompleted = true;
    };
    TimeoutSubscriber.prototype.notifyTimeout = function notifyTimeout() {
      this.error(this.errorToSend || new Error('timeout'));
    };
    _createClass(TimeoutSubscriber, [{
      key: 'previousIndex',
      get: function get() {
        return this._previousIndex;
      }
    }, {
      key: 'hasCompleted',
      get: function get() {
        return this._hasCompleted;
      }
    }]);
    return TimeoutSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/throttle", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = throttle;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  function throttle(delay) {
    var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersNextTick2['default'] : arguments[1];
    return this.lift(new ThrottleOperator(delay, scheduler));
  }
  var ThrottleOperator = (function() {
    function ThrottleOperator(delay, scheduler) {
      _classCallCheck(this, ThrottleOperator);
      this.delay = delay;
      this.scheduler = scheduler;
    }
    ThrottleOperator.prototype.call = function call(subscriber) {
      return new ThrottleSubscriber(subscriber, this.delay, this.scheduler);
    };
    return ThrottleOperator;
  })();
  var ThrottleSubscriber = (function(_Subscriber) {
    _inherits(ThrottleSubscriber, _Subscriber);
    function ThrottleSubscriber(destination, delay, scheduler) {
      _classCallCheck(this, ThrottleSubscriber);
      _Subscriber.call(this, destination);
      this.delay = delay;
      this.scheduler = scheduler;
    }
    ThrottleSubscriber.prototype._next = function _next(value) {
      if (!this.throttled) {
        this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.delay, {
          value: value,
          subscriber: this
        }));
      }
    };
    ThrottleSubscriber.prototype.throttledNext = function throttledNext(value) {
      this.clearThrottle();
      this.destination.next(value);
    };
    ThrottleSubscriber.prototype.clearThrottle = function clearThrottle() {
      var throttled = this.throttled;
      if (throttled) {
        throttled.unsubscribe();
        this.remove(throttled);
      }
    };
    return ThrottleSubscriber;
  })(_Subscriber3['default']);
  function dispatchNext(_ref) {
    var value = _ref.value;
    var subscriber = _ref.subscriber;
    subscriber.throttledNext(value);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/takeUntil", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = takeUntil;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  function takeUntil(notifier) {
    return this.lift(new TakeUntilOperator(notifier));
  }
  var TakeUntilOperator = (function() {
    function TakeUntilOperator(notifier) {
      _classCallCheck(this, TakeUntilOperator);
      this.notifier = notifier;
    }
    TakeUntilOperator.prototype.call = function call(subscriber) {
      return new TakeUntilSubscriber(subscriber, this.notifier);
    };
    return TakeUntilOperator;
  })();
  var TakeUntilSubscriber = (function(_Subscriber) {
    _inherits(TakeUntilSubscriber, _Subscriber);
    function TakeUntilSubscriber(destination, notifier) {
      _classCallCheck(this, TakeUntilSubscriber);
      _Subscriber.call(this, destination);
      this.notifier = notifier;
      this.notificationSubscriber = null;
      this.notificationSubscriber = new TakeUntilInnerSubscriber(destination);
      this.add(notifier.subscribe(this.notificationSubscriber));
    }
    TakeUntilSubscriber.prototype._complete = function _complete() {
      this.destination.complete();
      this.notificationSubscriber.unsubscribe();
    };
    return TakeUntilSubscriber;
  })(_Subscriber4['default']);
  var TakeUntilInnerSubscriber = (function(_Subscriber2) {
    _inherits(TakeUntilInnerSubscriber, _Subscriber2);
    function TakeUntilInnerSubscriber(destination) {
      _classCallCheck(this, TakeUntilInnerSubscriber);
      _Subscriber2.call(this, null);
      this.destination = destination;
    }
    TakeUntilInnerSubscriber.prototype._next = function _next() {
      this.destination.complete();
    };
    TakeUntilInnerSubscriber.prototype._error = function _error(e) {
      this.destination.error(e);
    };
    TakeUntilInnerSubscriber.prototype._complete = function _complete() {};
    return TakeUntilInnerSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/take", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = take;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function take(total) {
    return this.lift(new TakeOperator(total));
  }
  var TakeOperator = (function() {
    function TakeOperator(total) {
      _classCallCheck(this, TakeOperator);
      this.total = total;
    }
    TakeOperator.prototype.call = function call(subscriber) {
      return new TakeSubscriber(subscriber, this.total);
    };
    return TakeOperator;
  })();
  var TakeSubscriber = (function(_Subscriber) {
    _inherits(TakeSubscriber, _Subscriber);
    function TakeSubscriber(destination, total) {
      _classCallCheck(this, TakeSubscriber);
      _Subscriber.call(this, destination);
      this.total = total;
      this.count = 0;
    }
    TakeSubscriber.prototype._next = function _next(value) {
      var total = this.total;
      if (++this.count <= total) {
        this.destination.next(value);
        if (this.count === total) {
          this.destination.complete();
        }
      }
    };
    return TakeSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switchMapTo", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = switchMapTo;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  function switchMapTo(observable, projectResult) {
    return this.lift(new SwitchMapToOperator(observable, projectResult));
  }
  var SwitchMapToOperator = (function() {
    function SwitchMapToOperator(observable, resultSelector) {
      _classCallCheck(this, SwitchMapToOperator);
      this.observable = observable;
      this.resultSelector = resultSelector;
    }
    SwitchMapToOperator.prototype.call = function call(subscriber) {
      return new SwitchMapToSubscriber(subscriber, this.observable, this.resultSelector);
    };
    return SwitchMapToOperator;
  })();
  var SwitchMapToSubscriber = (function(_OuterSubscriber) {
    _inherits(SwitchMapToSubscriber, _OuterSubscriber);
    function SwitchMapToSubscriber(destination, inner, resultSelector) {
      _classCallCheck(this, SwitchMapToSubscriber);
      _OuterSubscriber.call(this, destination);
      this.inner = inner;
      this.resultSelector = resultSelector;
      this.hasCompleted = false;
      this.index = 0;
    }
    SwitchMapToSubscriber.prototype._next = function _next(value) {
      var index = this.index++;
      var innerSubscription = this.innerSubscription;
      if (innerSubscription) {
        innerSubscription.unsubscribe();
      }
      this.add(this.innerSubscription = _utilSubscribeToResult2['default'](this, this.inner, value, index));
    };
    SwitchMapToSubscriber.prototype._complete = function _complete() {
      var innerSubscription = this.innerSubscription;
      this.hasCompleted = true;
      if (!innerSubscription || innerSubscription.isUnsubscribed) {
        this.destination.complete();
      }
    };
    SwitchMapToSubscriber.prototype.notifyComplete = function notifyComplete(innerSub) {
      this.remove(innerSub);
      var prevSubscription = this.innerSubscription;
      if (prevSubscription) {
        prevSubscription.unsubscribe();
      }
      this.innerSubscription = null;
      if (this.hasCompleted) {
        this.destination.complete();
      }
    };
    SwitchMapToSubscriber.prototype.notifyError = function notifyError(err) {
      this.destination.error(err);
    };
    SwitchMapToSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      var resultSelector = this.resultSelector;
      var destination = this.destination;
      if (resultSelector) {
        var result = _utilTryCatch2['default'](resultSelector)(outerValue, innerValue, outerIndex, innerIndex);
        if (result === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
        } else {
          destination.next(result);
        }
      } else {
        destination.next(innerValue);
      }
    };
    return SwitchMapToSubscriber;
  })(_OuterSubscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switchMap", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = switchMap;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  function switchMap(project, resultSelector) {
    return this.lift(new SwitchMapOperator(project, resultSelector));
  }
  var SwitchMapOperator = (function() {
    function SwitchMapOperator(project, resultSelector) {
      _classCallCheck(this, SwitchMapOperator);
      this.project = project;
      this.resultSelector = resultSelector;
    }
    SwitchMapOperator.prototype.call = function call(subscriber) {
      return new SwitchMapSubscriber(subscriber, this.project, this.resultSelector);
    };
    return SwitchMapOperator;
  })();
  var SwitchMapSubscriber = (function(_OuterSubscriber) {
    _inherits(SwitchMapSubscriber, _OuterSubscriber);
    function SwitchMapSubscriber(destination, project, resultSelector) {
      _classCallCheck(this, SwitchMapSubscriber);
      _OuterSubscriber.call(this, destination);
      this.project = project;
      this.resultSelector = resultSelector;
      this.hasCompleted = false;
      this.index = 0;
    }
    SwitchMapSubscriber.prototype._next = function _next(value) {
      var index = this.index++;
      var destination = this.destination;
      var result = _utilTryCatch2['default'](this.project)(value, index);
      if (result === _utilErrorObject.errorObject) {
        destination.error(result.e);
      } else {
        var innerSubscription = this.innerSubscription;
        if (innerSubscription) {
          innerSubscription.unsubscribe();
        }
        this.add(this.innerSubscription = _utilSubscribeToResult2['default'](this, result, value, index));
      }
    };
    SwitchMapSubscriber.prototype._complete = function _complete() {
      var innerSubscription = this.innerSubscription;
      this.hasCompleted = true;
      if (!innerSubscription || innerSubscription.isUnsubscribed) {
        this.destination.complete();
      }
    };
    SwitchMapSubscriber.prototype.notifyComplete = function notifyComplete(innerSub) {
      this.remove(innerSub);
      var prevSubscription = this.innerSubscription;
      if (prevSubscription) {
        prevSubscription.unsubscribe();
      }
      this.innerSubscription = null;
      if (this.hasCompleted) {
        this.destination.complete();
      }
    };
    SwitchMapSubscriber.prototype.notifyError = function notifyError(err) {
      this.destination.error(err);
    };
    SwitchMapSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      var resultSelector = this.resultSelector;
      var destination = this.destination;
      if (resultSelector) {
        var result = _utilTryCatch2['default'](resultSelector)(outerValue, innerValue, outerIndex, innerIndex);
        if (result === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
        } else {
          destination.next(result);
        }
      } else {
        destination.next(innerValue);
      }
    };
    return SwitchMapSubscriber;
  })(_OuterSubscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switch", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = _switch;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  function _switch() {
    return this.lift(new SwitchOperator());
  }
  var SwitchOperator = (function() {
    function SwitchOperator() {
      _classCallCheck(this, SwitchOperator);
    }
    SwitchOperator.prototype.call = function call(subscriber) {
      return new SwitchSubscriber(subscriber);
    };
    return SwitchOperator;
  })();
  var SwitchSubscriber = (function(_OuterSubscriber) {
    _inherits(SwitchSubscriber, _OuterSubscriber);
    function SwitchSubscriber(destination) {
      _classCallCheck(this, SwitchSubscriber);
      _OuterSubscriber.call(this, destination);
      this.active = 0;
      this.hasCompleted = false;
    }
    SwitchSubscriber.prototype._next = function _next(value) {
      this.unsubscribeInner();
      this.active++;
      this.add(this.innerSubscription = _utilSubscribeToResult2['default'](this, value));
    };
    SwitchSubscriber.prototype._complete = function _complete() {
      this.hasCompleted = true;
      if (this.active === 0) {
        this.destination.complete();
      }
    };
    SwitchSubscriber.prototype.unsubscribeInner = function unsubscribeInner() {
      this.active = this.active > 0 ? this.active - 1 : 0;
      var innerSubscription = this.innerSubscription;
      if (innerSubscription) {
        innerSubscription.unsubscribe();
        this.remove(innerSubscription);
      }
    };
    SwitchSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue) {
      this.destination.next(innerValue);
    };
    SwitchSubscriber.prototype.notifyError = function notifyError(err) {
      this.destination.error(err);
    };
    SwitchSubscriber.prototype.notifyComplete = function notifyComplete() {
      this.unsubscribeInner();
      if (this.hasCompleted && this.active === 0) {
        this.destination.complete();
      }
    };
    return SwitchSubscriber;
  })(_OuterSubscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/SubscribeOnObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  var SubscribeOnObservable = (function(_Observable) {
    _inherits(SubscribeOnObservable, _Observable);
    function SubscribeOnObservable(source) {
      var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      var scheduler = arguments.length <= 2 || arguments[2] === undefined ? _schedulersNextTick2['default'] : arguments[2];
      _classCallCheck(this, SubscribeOnObservable);
      _Observable.call(this);
      this.source = source;
      this.delayTime = delay;
      this.scheduler = scheduler;
    }
    SubscribeOnObservable.create = function create(source) {
      var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      var scheduler = arguments.length <= 2 || arguments[2] === undefined ? _schedulersNextTick2['default'] : arguments[2];
      return new SubscribeOnObservable(source, delay, scheduler);
    };
    SubscribeOnObservable.dispatch = function dispatch(_ref) {
      var source = _ref.source;
      var subscriber = _ref.subscriber;
      return source.subscribe(subscriber);
    };
    SubscribeOnObservable.prototype._subscribe = function _subscribe(subscriber) {
      var delay = this.delayTime;
      var source = this.source;
      var scheduler = this.scheduler;
      subscriber.add(scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
        source: source,
        subscriber: subscriber
      }));
    };
    return SubscribeOnObservable;
  })(_Observable3['default']);
  exports['default'] = SubscribeOnObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/subscribeOn", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/SubscribeOnObservable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = subscribeOn;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesSubscribeOnObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/SubscribeOnObservable');
  var _observablesSubscribeOnObservable2 = _interopRequireDefault(_observablesSubscribeOnObservable);
  function subscribeOn(scheduler) {
    var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
    return new _observablesSubscribeOnObservable2['default'](this, delay, scheduler);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/startWith", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat-static"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = startWith;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _observablesScalarObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable');
  var _observablesScalarObservable2 = _interopRequireDefault(_observablesScalarObservable);
  var _observablesEmptyObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable');
  var _observablesEmptyObservable2 = _interopRequireDefault(_observablesEmptyObservable);
  var _concatStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat-static');
  var _concatStatic2 = _interopRequireDefault(_concatStatic);
  function startWith() {
    for (var _len = arguments.length,
        array = Array(_len),
        _key = 0; _key < _len; _key++) {
      array[_key] = arguments[_key];
    }
    var scheduler = array[array.length - 1];
    if (scheduler && typeof scheduler.schedule === 'function') {
      array.pop();
    } else {
      scheduler = void 0;
    }
    var len = array.length;
    if (len === 1) {
      return _concatStatic2['default'](new _observablesScalarObservable2['default'](array[0], scheduler), this);
    } else if (len > 1) {
      return _concatStatic2['default'](new _observablesArrayObservable2['default'](array, scheduler), this);
    } else {
      return _concatStatic2['default'](new _observablesEmptyObservable2['default'](scheduler), this);
    }
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/skipUntil", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = skipUntil;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  function skipUntil(total) {
    return this.lift(new SkipUntilOperator(total));
  }
  var SkipUntilOperator = (function() {
    function SkipUntilOperator(notifier) {
      _classCallCheck(this, SkipUntilOperator);
      this.notifier = notifier;
    }
    SkipUntilOperator.prototype.call = function call(subscriber) {
      return new SkipUntilSubscriber(subscriber, this.notifier);
    };
    return SkipUntilOperator;
  })();
  var SkipUntilSubscriber = (function(_Subscriber) {
    _inherits(SkipUntilSubscriber, _Subscriber);
    function SkipUntilSubscriber(destination, notifier) {
      _classCallCheck(this, SkipUntilSubscriber);
      _Subscriber.call(this, destination);
      this.notifier = notifier;
      this.notificationSubscriber = null;
      this.notificationSubscriber = new NotificationSubscriber(this);
      this.add(this.notifier.subscribe(this.notificationSubscriber));
    }
    SkipUntilSubscriber.prototype._next = function _next(value) {
      if (this.notificationSubscriber.hasValue) {
        this.destination.next(value);
      }
    };
    SkipUntilSubscriber.prototype._complete = function _complete() {
      if (this.notificationSubscriber.hasCompleted) {
        this.destination.complete();
      }
      this.notificationSubscriber.unsubscribe();
    };
    return SkipUntilSubscriber;
  })(_Subscriber4['default']);
  var NotificationSubscriber = (function(_Subscriber2) {
    _inherits(NotificationSubscriber, _Subscriber2);
    function NotificationSubscriber(parent) {
      _classCallCheck(this, NotificationSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
      this.hasValue = false;
      this.hasCompleted = false;
    }
    NotificationSubscriber.prototype._next = function _next(unused) {
      this.hasValue = true;
    };
    NotificationSubscriber.prototype._error = function _error(err) {
      this.parent.error(err);
      this.hasValue = true;
    };
    NotificationSubscriber.prototype._complete = function _complete() {
      this.hasCompleted = true;
    };
    return NotificationSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/skip", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = skip;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function skip(total) {
    return this.lift(new SkipOperator(total));
  }
  var SkipOperator = (function() {
    function SkipOperator(total) {
      _classCallCheck(this, SkipOperator);
      this.total = total;
    }
    SkipOperator.prototype.call = function call(subscriber) {
      return new SkipSubscriber(subscriber, this.total);
    };
    return SkipOperator;
  })();
  var SkipSubscriber = (function(_Subscriber) {
    _inherits(SkipSubscriber, _Subscriber);
    function SkipSubscriber(destination, total) {
      _classCallCheck(this, SkipSubscriber);
      _Subscriber.call(this, destination);
      this.total = total;
      this.count = 0;
    }
    SkipSubscriber.prototype._next = function _next(x) {
      if (++this.count > this.total) {
        this.destination.next(x);
      }
    };
    return SkipSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/single", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = single;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  var _utilEmptyError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError');
  var _utilEmptyError2 = _interopRequireDefault(_utilEmptyError);
  function single(predicate, thisArg) {
    return this.lift(new SingleOperator(predicate, thisArg, this));
  }
  var SingleOperator = (function() {
    function SingleOperator(predicate, thisArg, source) {
      _classCallCheck(this, SingleOperator);
      this.predicate = predicate;
      this.thisArg = thisArg;
      this.source = source;
    }
    SingleOperator.prototype.call = function call(subscriber) {
      return new SingleSubscriber(subscriber, this.predicate, this.thisArg, this.source);
    };
    return SingleOperator;
  })();
  var SingleSubscriber = (function(_Subscriber) {
    _inherits(SingleSubscriber, _Subscriber);
    function SingleSubscriber(destination, predicate, thisArg, source) {
      _classCallCheck(this, SingleSubscriber);
      _Subscriber.call(this, destination);
      this.thisArg = thisArg;
      this.source = source;
      this.seenValue = false;
      this.index = 0;
      if (typeof predicate === 'function') {
        this.predicate = _utilBindCallback2['default'](predicate, thisArg, 3);
      }
    }
    SingleSubscriber.prototype.applySingleValue = function applySingleValue(value) {
      if (this.seenValue) {
        this.destination.error('Sequence contains more than one element');
      } else {
        this.seenValue = true;
        this.singleValue = value;
      }
    };
    SingleSubscriber.prototype._next = function _next(value) {
      var predicate = this.predicate;
      var currentIndex = this.index++;
      if (predicate) {
        var result = _utilTryCatch2['default'](predicate)(value, currentIndex, this.source);
        if (result === _utilErrorObject.errorObject) {
          this.destination.error(result.e);
        } else if (result) {
          this.applySingleValue(value);
        }
      } else {
        this.applySingleValue(value);
      }
    };
    SingleSubscriber.prototype._complete = function _complete() {
      var destination = this.destination;
      if (this.index > 0) {
        destination.next(this.seenValue ? this.singleValue : undefined);
        destination.complete();
      } else {
        destination.error(new _utilEmptyError2['default']());
      }
    };
    return SingleSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/shareReplay", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishReplay"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = shareReplay;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _publishReplay = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishReplay');
  var _publishReplay2 = _interopRequireDefault(_publishReplay);
  function shareReplay(bufferSize, windowTime, scheduler) {
    if (bufferSize === undefined)
      bufferSize = Number.POSITIVE_INFINITY;
    if (windowTime === undefined)
      windowTime = Number.POSITIVE_INFINITY;
    return _publishReplay2['default'].call(this, bufferSize, windowTime, scheduler).refCount();
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/shareBehavior", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishBehavior"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = shareBehavior;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _publishBehavior = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishBehavior');
  var _publishBehavior2 = _interopRequireDefault(_publishBehavior);
  function shareBehavior(value) {
    return _publishBehavior2['default'].call(this, value).refCount();
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/share", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publish"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = share;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _publish = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publish');
  var _publish2 = _interopRequireDefault(_publish);
  function share() {
    return _publish2['default'].call(this).refCount();
  }
  ;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/scan", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports['default'] = scan;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function scan(project, acc) {
    return this.lift(new ScanOperator(project, acc));
  }
  var ScanOperator = (function() {
    function ScanOperator(project, acc) {
      _classCallCheck(this, ScanOperator);
      this.acc = acc;
      this.project = project;
    }
    ScanOperator.prototype.call = function call(subscriber) {
      return new ScanSubscriber(subscriber, this.project, this.acc);
    };
    return ScanOperator;
  })();
  var ScanSubscriber = (function(_Subscriber) {
    _inherits(ScanSubscriber, _Subscriber);
    function ScanSubscriber(destination, project, acc) {
      _classCallCheck(this, ScanSubscriber);
      _Subscriber.call(this, destination);
      this.accumulatorSet = false;
      this.acc = acc;
      this.project = project;
      this.accumulatorSet = typeof acc !== 'undefined';
    }
    ScanSubscriber.prototype._next = function _next(x) {
      if (!this.accumulatorSet) {
        this.acc = x;
        this.destination.next(x);
      } else {
        var result = _utilTryCatch2['default'](this.project).call(this, this.acc, x);
        if (result === _utilErrorObject.errorObject) {
          this.destination.error(_utilErrorObject.errorObject.e);
        } else {
          this.acc = result;
          this.destination.next(this.acc);
        }
      }
    };
    _createClass(ScanSubscriber, [{
      key: 'acc',
      get: function get() {
        return this._acc;
      },
      set: function set(value) {
        this.accumulatorSet = true;
        this._acc = value;
      }
    }]);
    return ScanSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/sampleTime", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = sampleTime;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  function sampleTime(delay) {
    var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersNextTick2['default'] : arguments[1];
    return this.lift(new SampleTimeOperator(delay, scheduler));
  }
  var SampleTimeOperator = (function() {
    function SampleTimeOperator(delay, scheduler) {
      _classCallCheck(this, SampleTimeOperator);
      this.delay = delay;
      this.scheduler = scheduler;
    }
    SampleTimeOperator.prototype.call = function call(subscriber) {
      return new SampleTimeSubscriber(subscriber, this.delay, this.scheduler);
    };
    return SampleTimeOperator;
  })();
  var SampleTimeSubscriber = (function(_Subscriber) {
    _inherits(SampleTimeSubscriber, _Subscriber);
    function SampleTimeSubscriber(destination, delay, scheduler) {
      _classCallCheck(this, SampleTimeSubscriber);
      _Subscriber.call(this, destination);
      this.delay = delay;
      this.scheduler = scheduler;
      this.hasValue = false;
      this.add(scheduler.schedule(dispatchNotification, delay, {
        subscriber: this,
        delay: delay
      }));
    }
    SampleTimeSubscriber.prototype._next = function _next(value) {
      this.lastValue = value;
      this.hasValue = true;
    };
    SampleTimeSubscriber.prototype.notifyNext = function notifyNext() {
      if (this.hasValue) {
        this.destination.next(this.lastValue);
      }
    };
    return SampleTimeSubscriber;
  })(_Subscriber3['default']);
  function dispatchNotification(state) {
    var subscriber = state.subscriber;
    var delay = state.delay;
    subscriber.notifyNext();
    this.schedule(state, delay);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/sample", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = sample;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  function sample(notifier) {
    return this.lift(new SampleOperator(notifier));
  }
  var SampleOperator = (function() {
    function SampleOperator(notifier) {
      _classCallCheck(this, SampleOperator);
      this.notifier = notifier;
    }
    SampleOperator.prototype.call = function call(subscriber) {
      return new SampleSubscriber(subscriber, this.notifier);
    };
    return SampleOperator;
  })();
  var SampleSubscriber = (function(_Subscriber) {
    _inherits(SampleSubscriber, _Subscriber);
    function SampleSubscriber(destination, notifier) {
      _classCallCheck(this, SampleSubscriber);
      _Subscriber.call(this, destination);
      this.notifier = notifier;
      this.hasValue = false;
      this.add(notifier._subscribe(new SampleNoficationSubscriber(this)));
    }
    SampleSubscriber.prototype._next = function _next(value) {
      this.lastValue = value;
      this.hasValue = true;
    };
    SampleSubscriber.prototype.notifyNext = function notifyNext() {
      if (this.hasValue) {
        this.destination.next(this.lastValue);
      }
    };
    return SampleSubscriber;
  })(_Subscriber4['default']);
  var SampleNoficationSubscriber = (function(_Subscriber2) {
    _inherits(SampleNoficationSubscriber, _Subscriber2);
    function SampleNoficationSubscriber(parent) {
      _classCallCheck(this, SampleNoficationSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
    }
    SampleNoficationSubscriber.prototype._next = function _next() {
      this.parent.notifyNext();
    };
    SampleNoficationSubscriber.prototype._error = function _error(err) {
      this.parent.error(err);
    };
    SampleNoficationSubscriber.prototype._complete = function _complete() {};
    return SampleNoficationSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/retryWhen", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = retryWhen;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber4 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber5 = _interopRequireDefault(_Subscriber4);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function retryWhen(notifier) {
    return this.lift(new RetryWhenOperator(notifier, this));
  }
  var RetryWhenOperator = (function() {
    function RetryWhenOperator(notifier, source) {
      _classCallCheck(this, RetryWhenOperator);
      this.notifier = notifier;
      this.source = source;
    }
    RetryWhenOperator.prototype.call = function call(subscriber) {
      return new FirstRetryWhenSubscriber(subscriber, this.notifier, this.source);
    };
    return RetryWhenOperator;
  })();
  var FirstRetryWhenSubscriber = (function(_Subscriber) {
    _inherits(FirstRetryWhenSubscriber, _Subscriber);
    function FirstRetryWhenSubscriber(destination, notifier, source) {
      _classCallCheck(this, FirstRetryWhenSubscriber);
      _Subscriber.call(this, null);
      this.destination = destination;
      this.notifier = notifier;
      this.source = source;
      this.lastSubscription = this;
    }
    FirstRetryWhenSubscriber.prototype._next = function _next(value) {
      this.destination.next(value);
    };
    FirstRetryWhenSubscriber.prototype.error = function error(err) {
      if (!this.isUnsubscribed) {
        _Subscriber.prototype.unsubscribe.call(this);
        if (!this.retryNotifications) {
          this.errors = new _Subject2['default']();
          var notifications = _utilTryCatch2['default'](this.notifier).call(this, this.errors);
          if (notifications === _utilErrorObject.errorObject) {
            this.destination.error(_utilErrorObject.errorObject.e);
          } else {
            this.retryNotifications = notifications;
            var notificationSubscriber = new RetryNotificationSubscriber(this);
            this.notificationSubscription = notifications.subscribe(notificationSubscriber);
          }
        }
        this.errors.next(err);
      }
    };
    FirstRetryWhenSubscriber.prototype.destinationError = function destinationError(err) {
      this.tearDown();
      this.destination.error(err);
    };
    FirstRetryWhenSubscriber.prototype._complete = function _complete() {
      this.destinationComplete();
    };
    FirstRetryWhenSubscriber.prototype.destinationComplete = function destinationComplete() {
      this.tearDown();
      this.destination.complete();
    };
    FirstRetryWhenSubscriber.prototype.unsubscribe = function unsubscribe() {
      var lastSubscription = this.lastSubscription;
      if (lastSubscription === this) {
        _Subscriber.prototype.unsubscribe.call(this);
      } else {
        this.tearDown();
      }
    };
    FirstRetryWhenSubscriber.prototype.tearDown = function tearDown() {
      _Subscriber.prototype.unsubscribe.call(this);
      this.lastSubscription.unsubscribe();
      var notificationSubscription = this.notificationSubscription;
      if (notificationSubscription) {
        notificationSubscription.unsubscribe();
      }
    };
    FirstRetryWhenSubscriber.prototype.resubscribe = function resubscribe() {
      this.lastSubscription.unsubscribe();
      var nextSubscriber = new MoreRetryWhenSubscriber(this);
      this.lastSubscription = this.source.subscribe(nextSubscriber);
    };
    return FirstRetryWhenSubscriber;
  })(_Subscriber5['default']);
  var MoreRetryWhenSubscriber = (function(_Subscriber2) {
    _inherits(MoreRetryWhenSubscriber, _Subscriber2);
    function MoreRetryWhenSubscriber(parent) {
      _classCallCheck(this, MoreRetryWhenSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
    }
    MoreRetryWhenSubscriber.prototype._next = function _next(value) {
      this.parent.destination.next(value);
    };
    MoreRetryWhenSubscriber.prototype._error = function _error(err) {
      this.parent.errors.next(err);
    };
    MoreRetryWhenSubscriber.prototype._complete = function _complete() {
      this.parent.destinationComplete();
    };
    return MoreRetryWhenSubscriber;
  })(_Subscriber5['default']);
  var RetryNotificationSubscriber = (function(_Subscriber3) {
    _inherits(RetryNotificationSubscriber, _Subscriber3);
    function RetryNotificationSubscriber(parent) {
      _classCallCheck(this, RetryNotificationSubscriber);
      _Subscriber3.call(this, null);
      this.parent = parent;
    }
    RetryNotificationSubscriber.prototype._next = function _next(value) {
      this.parent.resubscribe();
    };
    RetryNotificationSubscriber.prototype._error = function _error(err) {
      this.parent.destinationError(err);
    };
    RetryNotificationSubscriber.prototype._complete = function _complete() {
      this.parent.destinationComplete();
    };
    return RetryNotificationSubscriber;
  })(_Subscriber5['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/retry", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = retry;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  function retry() {
    var count = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
    return this.lift(new RetryOperator(count, this));
  }
  var RetryOperator = (function() {
    function RetryOperator(count, source) {
      _classCallCheck(this, RetryOperator);
      this.count = count;
      this.source = source;
    }
    RetryOperator.prototype.call = function call(subscriber) {
      return new FirstRetrySubscriber(subscriber, this.count, this.source);
    };
    return RetryOperator;
  })();
  var FirstRetrySubscriber = (function(_Subscriber) {
    _inherits(FirstRetrySubscriber, _Subscriber);
    function FirstRetrySubscriber(destination, count, source) {
      _classCallCheck(this, FirstRetrySubscriber);
      _Subscriber.call(this, null);
      this.destination = destination;
      this.count = count;
      this.source = source;
      this.lastSubscription = this;
    }
    FirstRetrySubscriber.prototype._next = function _next(value) {
      this.destination.next(value);
    };
    FirstRetrySubscriber.prototype.error = function error(_error) {
      if (!this.isUnsubscribed) {
        _Subscriber.prototype.unsubscribe.call(this);
        this.resubscribe();
      }
    };
    FirstRetrySubscriber.prototype._complete = function _complete() {
      _Subscriber.prototype.unsubscribe.call(this);
      this.destination.complete();
    };
    FirstRetrySubscriber.prototype.unsubscribe = function unsubscribe() {
      var lastSubscription = this.lastSubscription;
      if (lastSubscription === this) {
        _Subscriber.prototype.unsubscribe.call(this);
      } else {
        lastSubscription.unsubscribe();
      }
    };
    FirstRetrySubscriber.prototype.resubscribe = function resubscribe() {
      var retried = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
      this.lastSubscription.unsubscribe();
      var nextSubscriber = new RetryMoreSubscriber(this, this.count, retried + 1);
      this.lastSubscription = this.source.subscribe(nextSubscriber);
    };
    return FirstRetrySubscriber;
  })(_Subscriber4['default']);
  var RetryMoreSubscriber = (function(_Subscriber2) {
    _inherits(RetryMoreSubscriber, _Subscriber2);
    function RetryMoreSubscriber(parent, count) {
      var retried = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
      _classCallCheck(this, RetryMoreSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
      this.count = count;
      this.retried = retried;
    }
    RetryMoreSubscriber.prototype._next = function _next(value) {
      this.parent.destination.next(value);
    };
    RetryMoreSubscriber.prototype._error = function _error(err) {
      var parent = this.parent;
      var retried = this.retried;
      var count = this.count;
      if (count && retried === count) {
        parent.destination.error(err);
      } else {
        parent.resubscribe(retried);
      }
    };
    RetryMoreSubscriber.prototype._complete = function _complete() {
      this.parent.destination.complete();
    };
    return RetryMoreSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/repeat", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = repeat;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  var _observablesEmptyObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable');
  var _observablesEmptyObservable2 = _interopRequireDefault(_observablesEmptyObservable);
  function repeat() {
    var count = arguments.length <= 0 || arguments[0] === undefined ? -1 : arguments[0];
    if (count === 0) {
      return _observablesEmptyObservable2['default'].create();
    } else {
      return this.lift(new RepeatOperator(count, this));
    }
  }
  var RepeatOperator = (function() {
    function RepeatOperator(count, source) {
      _classCallCheck(this, RepeatOperator);
      this.count = count;
      this.source = source;
    }
    RepeatOperator.prototype.call = function call(subscriber) {
      return new FirstRepeatSubscriber(subscriber, this.count, this.source);
    };
    return RepeatOperator;
  })();
  var FirstRepeatSubscriber = (function(_Subscriber) {
    _inherits(FirstRepeatSubscriber, _Subscriber);
    function FirstRepeatSubscriber(destination, count, source) {
      _classCallCheck(this, FirstRepeatSubscriber);
      _Subscriber.call(this, null);
      this.destination = destination;
      this.count = count;
      this.source = source;
      if (count === 0) {
        this.destination.complete();
        _Subscriber.prototype.unsubscribe.call(this);
      }
      this.lastSubscription = this;
    }
    FirstRepeatSubscriber.prototype._next = function _next(value) {
      this.destination.next(value);
    };
    FirstRepeatSubscriber.prototype._error = function _error(err) {
      this.destination.error(err);
    };
    FirstRepeatSubscriber.prototype.complete = function complete() {
      if (!this.isUnsubscribed) {
        this.resubscribe(this.count);
      }
    };
    FirstRepeatSubscriber.prototype.unsubscribe = function unsubscribe() {
      var lastSubscription = this.lastSubscription;
      if (lastSubscription === this) {
        _Subscriber.prototype.unsubscribe.call(this);
      } else {
        lastSubscription.unsubscribe();
      }
    };
    FirstRepeatSubscriber.prototype.resubscribe = function resubscribe(count) {
      this.lastSubscription.unsubscribe();
      if (count - 1 === 0) {
        this.destination.complete();
      } else {
        var nextSubscriber = new MoreRepeatSubscriber(this, count - 1);
        this.lastSubscription = this.source.subscribe(nextSubscriber);
      }
    };
    return FirstRepeatSubscriber;
  })(_Subscriber4['default']);
  var MoreRepeatSubscriber = (function(_Subscriber2) {
    _inherits(MoreRepeatSubscriber, _Subscriber2);
    function MoreRepeatSubscriber(parent, count) {
      _classCallCheck(this, MoreRepeatSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
      this.count = count;
    }
    MoreRepeatSubscriber.prototype._next = function _next(value) {
      this.parent.destination.next(value);
    };
    MoreRepeatSubscriber.prototype._error = function _error(err) {
      this.parent.destination.error(err);
    };
    MoreRepeatSubscriber.prototype._complete = function _complete() {
      var count = this.count;
      this.parent.resubscribe(count < 0 ? -1 : count);
    };
    return MoreRepeatSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/reduce-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var ReduceOperator = (function() {
    function ReduceOperator(project, acc) {
      _classCallCheck(this, ReduceOperator);
      this.acc = acc;
      this.project = project;
    }
    ReduceOperator.prototype.call = function call(subscriber) {
      return new ReduceSubscriber(subscriber, this.project, this.acc);
    };
    return ReduceOperator;
  })();
  exports.ReduceOperator = ReduceOperator;
  var ReduceSubscriber = (function(_Subscriber) {
    _inherits(ReduceSubscriber, _Subscriber);
    function ReduceSubscriber(destination, project, acc) {
      _classCallCheck(this, ReduceSubscriber);
      _Subscriber.call(this, destination);
      this.hasValue = false;
      this.acc = acc;
      this.project = project;
      this.hasSeed = typeof acc !== 'undefined';
    }
    ReduceSubscriber.prototype._next = function _next(x) {
      if (this.hasValue || (this.hasValue = this.hasSeed)) {
        var result = _utilTryCatch2['default'](this.project).call(this, this.acc, x);
        if (result === _utilErrorObject.errorObject) {
          this.destination.error(_utilErrorObject.errorObject.e);
        } else {
          this.acc = result;
        }
      } else {
        this.acc = x;
        this.hasValue = true;
      }
    };
    ReduceSubscriber.prototype._complete = function _complete() {
      if (this.hasValue || this.hasSeed) {
        this.destination.next(this.acc);
      }
      this.destination.complete();
    };
    return ReduceSubscriber;
  })(_Subscriber3['default']);
  exports.ReduceSubscriber = ReduceSubscriber;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/reduce", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/reduce-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = reduce;
  var _reduceSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/reduce-support');
  function reduce(project, acc) {
    return this.lift(new _reduceSupport.ReduceOperator(project, acc));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/ReplaySubject", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subject2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject3 = _interopRequireDefault(_Subject2);
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  var ReplaySubject = (function(_Subject) {
    _inherits(ReplaySubject, _Subject);
    function ReplaySubject(bufferSize, _windowTime, scheduler) {
      if (bufferSize === undefined)
        bufferSize = Number.POSITIVE_INFINITY;
      if (_windowTime === undefined)
        _windowTime = Number.POSITIVE_INFINITY;
      _classCallCheck(this, ReplaySubject);
      _Subject.call(this);
      this.events = [];
      this.bufferSize = bufferSize < 1 ? 1 : bufferSize;
      this._windowTime = _windowTime < 1 ? 1 : _windowTime;
      this.scheduler = scheduler;
    }
    ReplaySubject.prototype._next = function _next(value) {
      var now = this._getNow();
      this.events.push(new ReplayEvent(now, value));
      _Subject.prototype._next.call(this, value);
    };
    ReplaySubject.prototype._subscribe = function _subscribe(subscriber) {
      var events = this._getEvents(this._getNow());
      var index = -1;
      var len = events.length;
      while (!subscriber.isUnsubscribed && ++index < len) {
        subscriber.next(events[index].value);
      }
      return _Subject.prototype._subscribe.call(this, subscriber);
    };
    ReplaySubject.prototype._getNow = function _getNow() {
      return (this.scheduler || _schedulersImmediate2['default']).now();
    };
    ReplaySubject.prototype._getEvents = function _getEvents(now) {
      var bufferSize = this.bufferSize;
      var _windowTime = this._windowTime;
      var events = this.events;
      var eventsCount = events.length;
      var spliceCount = 0;
      while (spliceCount < eventsCount) {
        if (now - events[spliceCount].time < _windowTime) {
          break;
        }
        spliceCount += 1;
      }
      if (eventsCount > bufferSize) {
        spliceCount = Math.max(spliceCount, eventsCount - bufferSize);
      }
      if (spliceCount > 0) {
        events.splice(0, spliceCount);
      }
      return events;
    };
    return ReplaySubject;
  })(_Subject3['default']);
  exports['default'] = ReplaySubject;
  var ReplayEvent = function ReplayEvent(time, value) {
    _classCallCheck(this, ReplayEvent);
    this.time = time;
    this.value = value;
  };
  ;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishReplay", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/ReplaySubject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = publishReplay;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _subjectsReplaySubject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/ReplaySubject');
  var _subjectsReplaySubject2 = _interopRequireDefault(_subjectsReplaySubject);
  var _multicast = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast');
  var _multicast2 = _interopRequireDefault(_multicast);
  function publishReplay(bufferSize, windowTime, scheduler) {
    if (bufferSize === undefined)
      bufferSize = Number.POSITIVE_INFINITY;
    if (windowTime === undefined)
      windowTime = Number.POSITIVE_INFINITY;
    return _multicast2['default'].call(this, function() {
      return new _subjectsReplaySubject2['default'](bufferSize, windowTime, scheduler);
    });
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/BehaviorSubject", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subject2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject3 = _interopRequireDefault(_Subject2);
  var BehaviorSubject = (function(_Subject) {
    _inherits(BehaviorSubject, _Subject);
    function BehaviorSubject(value) {
      _classCallCheck(this, BehaviorSubject);
      _Subject.call(this);
      this.value = value;
    }
    BehaviorSubject.prototype._subscribe = function _subscribe(subscriber) {
      var subscription = _Subject.prototype._subscribe.call(this, subscriber);
      if (!subscription) {
        return;
      } else if (!subscription.isUnsubscribed) {
        subscriber.next(this.value);
      }
      return subscription;
    };
    BehaviorSubject.prototype._next = function _next(value) {
      _Subject.prototype._next.call(this, this.value = value);
    };
    return BehaviorSubject;
  })(_Subject3['default']);
  exports['default'] = BehaviorSubject;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishBehavior", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/BehaviorSubject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = publishBehavior;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _subjectsBehaviorSubject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/BehaviorSubject');
  var _subjectsBehaviorSubject2 = _interopRequireDefault(_subjectsBehaviorSubject);
  var _multicast = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast');
  var _multicast2 = _interopRequireDefault(_multicast);
  function publishBehavior(value) {
    return _multicast2['default'].call(this, function() {
      return new _subjectsBehaviorSubject2['default'](value);
    });
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publish", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = publish;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _multicast = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast');
  var _multicast2 = _interopRequireDefault(_multicast);
  function subjectFactory() {
    return new _Subject2['default']();
  }
  function publish() {
    return _multicast2['default'].call(this, subjectFactory);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/not", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports["default"] = not;
  function not(pred, thisArg) {
    function notPred() {
      return !notPred.pred.apply(notPred.thisArg, arguments);
    }
    notPred.pred = pred;
    notPred.thisArg = thisArg;
    return notPred;
  }
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/partition", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/not", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/filter"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = partition;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _utilNot = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/not');
  var _utilNot2 = _interopRequireDefault(_utilNot);
  var _filter = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/filter');
  var _filter2 = _interopRequireDefault(_filter);
  function partition(predicate, thisArg) {
    return [_filter2['default'].call(this, predicate), _filter2['default'].call(this, _utilNot2['default'](predicate, thisArg))];
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = observeOn;
  var _observeOnSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn-support');
  function observeOn(scheduler) {
    var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
    return this.lift(new _observeOnSupport.ObserveOnOperator(scheduler, delay));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ConnectableObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable4 = _interopRequireDefault(_Observable3);
  var _Subscription3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription4 = _interopRequireDefault(_Subscription3);
  var ConnectableObservable = (function(_Observable) {
    _inherits(ConnectableObservable, _Observable);
    function ConnectableObservable(source, subjectFactory) {
      _classCallCheck(this, ConnectableObservable);
      _Observable.call(this);
      this.source = source;
      this.subjectFactory = subjectFactory;
    }
    ConnectableObservable.prototype._subscribe = function _subscribe(subscriber) {
      return this._getSubject().subscribe(subscriber);
    };
    ConnectableObservable.prototype._getSubject = function _getSubject() {
      var subject = this.subject;
      if (subject && !subject.isUnsubscribed) {
        return subject;
      }
      return this.subject = this.subjectFactory();
    };
    ConnectableObservable.prototype.connect = function connect() {
      var source = this.source;
      var subscription = this.subscription;
      if (subscription && !subscription.isUnsubscribed) {
        return subscription;
      }
      subscription = source.subscribe(this._getSubject());
      subscription.add(new ConnectableSubscription(this));
      return this.subscription = subscription;
    };
    ConnectableObservable.prototype.refCount = function refCount() {
      return new RefCountObservable(this);
    };
    return ConnectableObservable;
  })(_Observable4['default']);
  exports['default'] = ConnectableObservable;
  var ConnectableSubscription = (function(_Subscription) {
    _inherits(ConnectableSubscription, _Subscription);
    function ConnectableSubscription(connectable) {
      _classCallCheck(this, ConnectableSubscription);
      _Subscription.call(this);
      this.connectable = connectable;
    }
    ConnectableSubscription.prototype._unsubscribe = function _unsubscribe() {
      var connectable = this.connectable;
      connectable.subject = void 0;
      connectable.subscription = void 0;
      this.connectable = void 0;
    };
    return ConnectableSubscription;
  })(_Subscription4['default']);
  var RefCountObservable = (function(_Observable2) {
    _inherits(RefCountObservable, _Observable2);
    function RefCountObservable(connectable) {
      var refCount = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      _classCallCheck(this, RefCountObservable);
      _Observable2.call(this);
      this.connectable = connectable;
      this.refCount = refCount;
    }
    RefCountObservable.prototype._subscribe = function _subscribe(subscriber) {
      var connectable = this.connectable;
      var subscription = connectable.subscribe(subscriber);
      if (++this.refCount === 1) {
        this.connection = connectable.connect();
      }
      subscription.add(new RefCountSubscription(this));
      return subscription;
    };
    return RefCountObservable;
  })(_Observable4['default']);
  var RefCountSubscription = (function(_Subscription2) {
    _inherits(RefCountSubscription, _Subscription2);
    function RefCountSubscription(refCountObservable) {
      _classCallCheck(this, RefCountSubscription);
      _Subscription2.call(this);
      this.refCountObservable = refCountObservable;
    }
    RefCountSubscription.prototype._unsubscribe = function _unsubscribe() {
      var observable = this.refCountObservable;
      if (--observable.refCount === 0) {
        observable.connection.unsubscribe();
        observable.connection = void 0;
      }
    };
    return RefCountSubscription;
  })(_Subscription4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ConnectableObservable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = multicast;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesConnectableObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ConnectableObservable');
  var _observablesConnectableObservable2 = _interopRequireDefault(_observablesConnectableObservable);
  function multicast(subjectFactory) {
    return new _observablesConnectableObservable2['default'](this, subjectFactory);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = mergeMapTo;
  var _mergeMapToSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo-support');
  function mergeMapTo(observable, resultSelector) {
    var concurrent = arguments.length <= 2 || arguments[2] === undefined ? Number.POSITIVE_INFINITY : arguments[2];
    return this.lift(new _mergeMapToSupport.MergeMapToOperator(observable, resultSelector, concurrent));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = mergeMap;
  var _mergeMapSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap-support');
  function mergeMap(project, resultSelector) {
    var concurrent = arguments.length <= 2 || arguments[2] === undefined ? Number.POSITIVE_INFINITY : arguments[2];
    return this.lift(new _mergeMapSupport.MergeMapOperator(project, resultSelector, concurrent));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = mergeAll;
  var _mergeAllSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support');
  function mergeAll() {
    var concurrent = arguments.length <= 0 || arguments[0] === undefined ? Number.POSITIVE_INFINITY : arguments[0];
    return this.lift(new _mergeAllSupport.MergeAllOperator(concurrent));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge-static"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = merge;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _mergeStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge-static');
  var _mergeStatic2 = _interopRequireDefault(_mergeStatic);
  function merge() {
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    observables.unshift(this);
    return _mergeStatic2['default'].apply(this, observables);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/materialize", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = materialize;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _Notification = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification');
  var _Notification2 = _interopRequireDefault(_Notification);
  function materialize() {
    return this.lift(new MaterializeOperator());
  }
  var MaterializeOperator = (function() {
    function MaterializeOperator() {
      _classCallCheck(this, MaterializeOperator);
    }
    MaterializeOperator.prototype.call = function call(subscriber) {
      return new MaterializeSubscriber(subscriber);
    };
    return MaterializeOperator;
  })();
  var MaterializeSubscriber = (function(_Subscriber) {
    _inherits(MaterializeSubscriber, _Subscriber);
    function MaterializeSubscriber(destination) {
      _classCallCheck(this, MaterializeSubscriber);
      _Subscriber.call(this, destination);
    }
    MaterializeSubscriber.prototype._next = function _next(value) {
      this.destination.next(_Notification2['default'].createNext(value));
    };
    MaterializeSubscriber.prototype._error = function _error(err) {
      var destination = this.destination;
      destination.next(_Notification2['default'].createError(err));
      destination.complete();
    };
    MaterializeSubscriber.prototype._complete = function _complete() {
      var destination = this.destination;
      destination.next(_Notification2['default'].createComplete());
      destination.complete();
    };
    return MaterializeSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mapTo", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = mapTo;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function mapTo(value) {
    return this.lift(new MapToOperator(value));
  }
  var MapToOperator = (function() {
    function MapToOperator(value) {
      _classCallCheck(this, MapToOperator);
      this.value = value;
    }
    MapToOperator.prototype.call = function call(subscriber) {
      return new MapToSubscriber(subscriber, this.value);
    };
    return MapToOperator;
  })();
  var MapToSubscriber = (function(_Subscriber) {
    _inherits(MapToSubscriber, _Subscriber);
    function MapToSubscriber(destination, value) {
      _classCallCheck(this, MapToSubscriber);
      _Subscriber.call(this, destination);
      this.value = value;
    }
    MapToSubscriber.prototype._next = function _next(x) {
      this.destination.next(this.value);
    };
    return MapToSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/map", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = map;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  function map(project, thisArg) {
    return this.lift(new MapOperator(project, thisArg));
  }
  var MapOperator = (function() {
    function MapOperator(project, thisArg) {
      _classCallCheck(this, MapOperator);
      this.project = _utilBindCallback2['default'](project, thisArg, 2);
    }
    MapOperator.prototype.call = function call(subscriber) {
      return new MapSubscriber(subscriber, this.project);
    };
    return MapOperator;
  })();
  var MapSubscriber = (function(_Subscriber) {
    _inherits(MapSubscriber, _Subscriber);
    function MapSubscriber(destination, project) {
      _classCallCheck(this, MapSubscriber);
      _Subscriber.call(this, destination);
      this.count = 0;
      this.project = project;
    }
    MapSubscriber.prototype._next = function _next(x) {
      var result = _utilTryCatch2['default'](this.project)(x, this.count++);
      if (result === _utilErrorObject.errorObject) {
        this.error(_utilErrorObject.errorObject.e);
      } else {
        this.destination.next(result);
      }
    };
    return MapSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/last", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = last;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilEmptyError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError');
  var _utilEmptyError2 = _interopRequireDefault(_utilEmptyError);
  function last(predicate, resultSelector, defaultValue) {
    return this.lift(new LastOperator(predicate, resultSelector, defaultValue, this));
  }
  var LastOperator = (function() {
    function LastOperator(predicate, resultSelector, defaultValue, source) {
      _classCallCheck(this, LastOperator);
      this.predicate = predicate;
      this.resultSelector = resultSelector;
      this.defaultValue = defaultValue;
      this.source = source;
    }
    LastOperator.prototype.call = function call(observer) {
      return new LastSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source);
    };
    return LastOperator;
  })();
  var LastSubscriber = (function(_Subscriber) {
    _inherits(LastSubscriber, _Subscriber);
    function LastSubscriber(destination, predicate, resultSelector, defaultValue, source) {
      _classCallCheck(this, LastSubscriber);
      _Subscriber.call(this, destination);
      this.predicate = predicate;
      this.resultSelector = resultSelector;
      this.defaultValue = defaultValue;
      this.source = source;
      this.hasValue = false;
      this.index = 0;
      if (typeof defaultValue !== 'undefined') {
        this.lastValue = defaultValue;
        this.hasValue = true;
      }
    }
    LastSubscriber.prototype._next = function _next(value) {
      var predicate = this.predicate;
      var resultSelector = this.resultSelector;
      var destination = this.destination;
      var index = this.index++;
      if (predicate) {
        var found = _utilTryCatch2['default'](predicate)(value, index, this.source);
        if (found === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
          return;
        }
        if (found) {
          if (resultSelector) {
            var result = _utilTryCatch2['default'](resultSelector)(value, index);
            if (result === _utilErrorObject.errorObject) {
              destination.error(_utilErrorObject.errorObject.e);
              return;
            }
            this.lastValue = result;
          } else {
            this.lastValue = value;
          }
          this.hasValue = true;
        }
      } else {
        this.lastValue = value;
        this.hasValue = true;
      }
    };
    LastSubscriber.prototype._complete = function _complete() {
      var destination = this.destination;
      if (this.hasValue) {
        destination.next(this.lastValue);
        destination.complete();
      } else {
        destination.error(new _utilEmptyError2['default']());
      }
    };
    return LastSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/every", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = every;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _observablesScalarObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable');
  var _observablesScalarObservable2 = _interopRequireDefault(_observablesScalarObservable);
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _observablesErrorObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable');
  var _observablesErrorObservable2 = _interopRequireDefault(_observablesErrorObservable);
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  function every(predicate, thisArg) {
    var source = this;
    var result = undefined;
    if (source._isScalar) {
      result = _utilTryCatch2['default'](predicate)(source.value, 0, source);
      if (result === _utilErrorObject.errorObject) {
        return new _observablesErrorObservable2['default'](_utilErrorObject.errorObject.e, source.scheduler);
      } else {
        return new _observablesScalarObservable2['default'](result, source.scheduler);
      }
    }
    if (source instanceof _observablesArrayObservable2['default']) {
      var array = source.array;
      var _result = _utilTryCatch2['default'](function(array, predicate) {
        return array.every(predicate);
      })(array, predicate);
      if (_result === _utilErrorObject.errorObject) {
        return new _observablesErrorObservable2['default'](_utilErrorObject.errorObject.e, source.scheduler);
      } else {
        return new _observablesScalarObservable2['default'](_result, source.scheduler);
      }
    }
    return source.lift(new EveryOperator(predicate, thisArg, source));
  }
  var EveryOperator = (function() {
    function EveryOperator(predicate, thisArg, source) {
      _classCallCheck(this, EveryOperator);
      this.predicate = predicate;
      this.thisArg = thisArg;
      this.source = source;
    }
    EveryOperator.prototype.call = function call(observer) {
      return new EverySubscriber(observer, this.predicate, this.thisArg, this.source);
    };
    return EveryOperator;
  })();
  var EverySubscriber = (function(_Subscriber) {
    _inherits(EverySubscriber, _Subscriber);
    function EverySubscriber(destination, predicate, thisArg, source) {
      _classCallCheck(this, EverySubscriber);
      _Subscriber.call(this, destination);
      this.thisArg = thisArg;
      this.source = source;
      this.predicate = undefined;
      this.index = 0;
      if (typeof predicate === 'function') {
        this.predicate = _utilBindCallback2['default'](predicate, thisArg, 3);
      }
    }
    EverySubscriber.prototype.notifyComplete = function notifyComplete(everyValueMatch) {
      this.destination.next(everyValueMatch);
      this.destination.complete();
    };
    EverySubscriber.prototype._next = function _next(value) {
      var predicate = this.predicate;
      if (predicate === undefined) {
        this.destination.error(new TypeError('predicate must be a function'));
      }
      var result = _utilTryCatch2['default'](predicate)(value, this.index++, this.source);
      if (result === _utilErrorObject.errorObject) {
        this.destination.error(result.e);
      } else if (!result) {
        this.notifyComplete(false);
      }
    };
    EverySubscriber.prototype._complete = function _complete() {
      this.notifyComplete(true);
    };
    return EverySubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/ignoreElements", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = ignoreElements;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function ignoreElements() {
    return this.lift(new IgnoreElementsOperator());
  }
  ;
  var IgnoreElementsOperator = (function() {
    function IgnoreElementsOperator() {
      _classCallCheck(this, IgnoreElementsOperator);
    }
    IgnoreElementsOperator.prototype.call = function call(subscriber) {
      return new IgnoreElementsSubscriber(subscriber);
    };
    return IgnoreElementsOperator;
  })();
  var IgnoreElementsSubscriber = (function(_Subscriber) {
    _inherits(IgnoreElementsSubscriber, _Subscriber);
    function IgnoreElementsSubscriber() {
      _classCallCheck(this, IgnoreElementsSubscriber);
      _Subscriber.apply(this, arguments);
    }
    IgnoreElementsSubscriber.prototype._next = function _next() {};
    return IgnoreElementsSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/groupBy-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subscription3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription4 = _interopRequireDefault(_Subscription3);
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var RefCountSubscription = (function(_Subscription) {
    _inherits(RefCountSubscription, _Subscription);
    function RefCountSubscription() {
      _classCallCheck(this, RefCountSubscription);
      _Subscription.call(this);
      this.attemptedToUnsubscribePrimary = false;
      this.count = 0;
    }
    RefCountSubscription.prototype.setPrimary = function setPrimary(subscription) {
      this.primary = subscription;
    };
    RefCountSubscription.prototype.unsubscribe = function unsubscribe() {
      if (!this.isUnsubscribed && !this.attemptedToUnsubscribePrimary) {
        this.attemptedToUnsubscribePrimary = true;
        if (this.count === 0) {
          _Subscription.prototype.unsubscribe.call(this);
          this.primary.unsubscribe();
        }
      }
    };
    return RefCountSubscription;
  })(_Subscription4['default']);
  exports.RefCountSubscription = RefCountSubscription;
  var GroupedObservable = (function(_Observable) {
    _inherits(GroupedObservable, _Observable);
    function GroupedObservable(key, groupSubject, refCountSubscription) {
      _classCallCheck(this, GroupedObservable);
      _Observable.call(this);
      this.key = key;
      this.groupSubject = groupSubject;
      this.refCountSubscription = refCountSubscription;
    }
    GroupedObservable.prototype._subscribe = function _subscribe(subscriber) {
      var subscription = new _Subscription4['default']();
      if (this.refCountSubscription && !this.refCountSubscription.isUnsubscribed) {
        subscription.add(new InnerRefCountSubscription(this.refCountSubscription));
      }
      subscription.add(this.groupSubject.subscribe(subscriber));
      return subscription;
    };
    return GroupedObservable;
  })(_Observable3['default']);
  exports.GroupedObservable = GroupedObservable;
  var InnerRefCountSubscription = (function(_Subscription2) {
    _inherits(InnerRefCountSubscription, _Subscription2);
    function InnerRefCountSubscription(parent) {
      _classCallCheck(this, InnerRefCountSubscription);
      _Subscription2.call(this);
      this.parent = parent;
      parent.count++;
    }
    InnerRefCountSubscription.prototype.unsubscribe = function unsubscribe() {
      if (!this.parent.isUnsubscribed && !this.isUnsubscribed) {
        _Subscription2.prototype.unsubscribe.call(this);
        this.parent.count--;
        if (this.parent.count === 0 && this.parent.attemptedToUnsubscribePrimary) {
          this.parent.unsubscribe();
          this.parent.primary.unsubscribe();
        }
      }
    };
    return InnerRefCountSubscription;
  })(_Subscription4['default']);
  exports.InnerRefCountSubscription = InnerRefCountSubscription;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/FastMap", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var FastMap = (function() {
    function FastMap() {
      _classCallCheck(this, FastMap);
      this.size = 0;
      this._values = {};
    }
    FastMap.prototype["delete"] = function _delete(key) {
      this._values[key] = null;
      return true;
    };
    FastMap.prototype.set = function set(key, value) {
      this._values[key] = value;
      return this;
    };
    FastMap.prototype.get = function get(key) {
      return this._values[key];
    };
    FastMap.prototype.forEach = function forEach(cb, thisArg) {
      var values = this._values;
      for (var key in values) {
        if (values.hasOwnProperty(key) && values[key] !== null) {
          cb.call(thisArg, values[key], key);
        }
      }
    };
    FastMap.prototype.clear = function clear() {
      this._values = {};
    };
    return FastMap;
  })();
  exports["default"] = FastMap;
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Map", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _root = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
  exports['default'] = _root.root.Map || (function() {
    function Map() {
      this.size = 0;
      this._values = [];
      this._keys = [];
    }
    Map.prototype['delete'] = function(key) {
      var i = this._keys.indexOf(key);
      if (i === -1) {
        return false;
      }
      this._values.splice(i, 1);
      this._keys.splice(i, 1);
      this.size--;
      return true;
    };
    Map.prototype.get = function(key) {
      var i = this._keys.indexOf(key);
      return i === -1 ? undefined : this._values[i];
    };
    Map.prototype.set = function(key, value) {
      var i = this._keys.indexOf(key);
      if (i === -1) {
        this._keys.push(key);
        this._values.push(value);
        this.size++;
      } else {
        this._values[i] = value;
      }
      return this;
    };
    Map.prototype.forEach = function(cb, thisArg) {
      for (var i = 0; i < this.size; i++) {
        cb.call(thisArg, this._values[i], this._keys[i]);
      }
    };
    return Map;
  })();
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/SubjectSubscription", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subscription2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription3 = _interopRequireDefault(_Subscription2);
  var _Subscriber = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber2 = _interopRequireDefault(_Subscriber);
  var SubjectSubscription = (function(_Subscription) {
    _inherits(SubjectSubscription, _Subscription);
    function SubjectSubscription(subject, observer) {
      _classCallCheck(this, SubjectSubscription);
      _Subscription.call(this);
      this.subject = subject;
      this.observer = observer;
      this.isUnsubscribed = false;
    }
    SubjectSubscription.prototype.unsubscribe = function unsubscribe() {
      if (this.isUnsubscribed) {
        return;
      }
      this.isUnsubscribed = true;
      var subject = this.subject;
      var observers = subject.observers;
      this.subject = void 0;
      if (!observers || observers.length === 0 || subject.isUnsubscribed) {
        return;
      }
      if (this.observer instanceof _Subscriber2['default']) {
        this.observer.unsubscribe();
      }
      var subscriberIndex = observers.indexOf(this.observer);
      if (subscriberIndex !== -1) {
        observers.splice(subscriberIndex, 1);
      }
    };
    return SubjectSubscription;
  })(_Subscription3['default']);
  exports['default'] = SubjectSubscription;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/SubjectSubscription"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _Subscriber = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber2 = _interopRequireDefault(_Subscriber);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _subjectsSubjectSubscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/SubjectSubscription');
  var _subjectsSubjectSubscription2 = _interopRequireDefault(_subjectsSubjectSubscription);
  var subscriptionAdd = _Subscription2['default'].prototype.add;
  var subscriptionRemove = _Subscription2['default'].prototype.remove;
  var subscriptionUnsubscribe = _Subscription2['default'].prototype.unsubscribe;
  var subscriberNext = _Subscriber2['default'].prototype.next;
  var subscriberError = _Subscriber2['default'].prototype.error;
  var subscriberComplete = _Subscriber2['default'].prototype.complete;
  var _subscriberNext = _Subscriber2['default'].prototype._next;
  var _subscriberError = _Subscriber2['default'].prototype._error;
  var _subscriberComplete = _Subscriber2['default'].prototype._complete;
  var Subject = (function(_Observable) {
    _inherits(Subject, _Observable);
    function Subject() {
      _classCallCheck(this, Subject);
      for (var _len = arguments.length,
          args = Array(_len),
          _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _Observable.call.apply(_Observable, [this].concat(args));
      this.observers = [];
      this.isUnsubscribed = false;
      this.dispatching = false;
      this.errorSignal = false;
      this.completeSignal = false;
    }
    Subject.create = function create(source, destination) {
      return new BidirectionalSubject(source, destination);
    };
    Subject.prototype.lift = function lift(operator) {
      var subject = new BidirectionalSubject(this, this.destination || this);
      subject.operator = operator;
      return subject;
    };
    Subject.prototype._subscribe = function _subscribe(subscriber) {
      if (subscriber.isUnsubscribed) {
        return;
      } else if (this.errorSignal) {
        subscriber.error(this.errorInstance);
        return;
      } else if (this.completeSignal) {
        subscriber.complete();
        return;
      } else if (this.isUnsubscribed) {
        throw new Error("Cannot subscribe to a disposed Subject.");
      }
      this.observers.push(subscriber);
      return new _subjectsSubjectSubscription2['default'](this, subscriber);
    };
    Subject.prototype.add = function add(subscription) {
      subscriptionAdd.call(this, subscription);
    };
    Subject.prototype.remove = function remove(subscription) {
      subscriptionRemove.call(this, subscription);
    };
    Subject.prototype.unsubscribe = function unsubscribe() {
      this.observers = void 0;
      subscriptionUnsubscribe.call(this);
    };
    Subject.prototype.next = function next(value) {
      if (this.isUnsubscribed) {
        return;
      }
      this.dispatching = true;
      this._next(value);
      this.dispatching = false;
      if (this.errorSignal) {
        this.error(this.errorInstance);
      } else if (this.completeSignal) {
        this.complete();
      }
    };
    Subject.prototype.error = function error(_error) {
      if (this.isUnsubscribed || this.completeSignal) {
        return;
      }
      this.errorSignal = true;
      this.errorInstance = _error;
      if (this.dispatching) {
        return;
      }
      this._error(_error);
      this.unsubscribe();
    };
    Subject.prototype.complete = function complete() {
      if (this.isUnsubscribed || this.errorSignal) {
        return;
      }
      this.completeSignal = true;
      if (this.dispatching) {
        return;
      }
      this._complete();
      this.unsubscribe();
    };
    Subject.prototype._next = function _next(value) {
      var index = -1;
      var observers = this.observers.slice(0);
      var len = observers.length;
      while (++index < len) {
        observers[index].next(value);
      }
    };
    Subject.prototype._error = function _error(error) {
      var index = -1;
      var observers = this.observers;
      var len = observers.length;
      this.observers = void 0;
      this.isUnsubscribed = true;
      while (++index < len) {
        observers[index].error(error);
      }
      this.isUnsubscribed = false;
    };
    Subject.prototype._complete = function _complete() {
      var index = -1;
      var observers = this.observers;
      var len = observers.length;
      this.observers = void 0;
      this.isUnsubscribed = true;
      while (++index < len) {
        observers[index].complete();
      }
      this.isUnsubscribed = false;
    };
    return Subject;
  })(_Observable3['default']);
  exports['default'] = Subject;
  var BidirectionalSubject = (function(_Subject) {
    _inherits(BidirectionalSubject, _Subject);
    function BidirectionalSubject(source, destination) {
      _classCallCheck(this, BidirectionalSubject);
      _Subject.call(this);
      this.source = source;
      this.destination = destination;
    }
    BidirectionalSubject.prototype._subscribe = function _subscribe(subscriber) {
      var operator = this.operator;
      return this.source._subscribe.call(this.source, operator ? operator.call(subscriber) : subscriber);
    };
    BidirectionalSubject.prototype.next = function next(x) {
      subscriberNext.call(this, x);
    };
    BidirectionalSubject.prototype.error = function error(e) {
      subscriberError.call(this, e);
    };
    BidirectionalSubject.prototype.complete = function complete() {
      subscriberComplete.call(this);
    };
    BidirectionalSubject.prototype._next = function _next(x) {
      _subscriberNext.call(this, x);
    };
    BidirectionalSubject.prototype._error = function _error(e) {
      _subscriberError.call(this, e);
    };
    BidirectionalSubject.prototype._complete = function _complete() {
      _subscriberComplete.call(this);
    };
    return BidirectionalSubject;
  })(Subject);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/groupBy", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Map", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/FastMap", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/groupBy-support", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports.groupBy = groupBy;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _utilMap = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Map');
  var _utilMap2 = _interopRequireDefault(_utilMap);
  var _utilFastMap = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/FastMap');
  var _utilFastMap2 = _interopRequireDefault(_utilFastMap);
  var _groupBySupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/groupBy-support');
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function groupBy(keySelector, elementSelector, durationSelector) {
    return new GroupByObservable(this, keySelector, elementSelector, durationSelector);
  }
  var GroupByObservable = (function(_Observable) {
    _inherits(GroupByObservable, _Observable);
    function GroupByObservable(source, keySelector, elementSelector, durationSelector) {
      _classCallCheck(this, GroupByObservable);
      _Observable.call(this);
      this.source = source;
      this.keySelector = keySelector;
      this.elementSelector = elementSelector;
      this.durationSelector = durationSelector;
    }
    GroupByObservable.prototype._subscribe = function _subscribe(subscriber) {
      var refCountSubscription = new _groupBySupport.RefCountSubscription();
      var groupBySubscriber = new GroupBySubscriber(subscriber, refCountSubscription, this.keySelector, this.elementSelector, this.durationSelector);
      refCountSubscription.setPrimary(this.source.subscribe(groupBySubscriber));
      return refCountSubscription;
    };
    return GroupByObservable;
  })(_Observable3['default']);
  exports.GroupByObservable = GroupByObservable;
  var GroupBySubscriber = (function(_Subscriber) {
    _inherits(GroupBySubscriber, _Subscriber);
    function GroupBySubscriber(destination, refCountSubscription, keySelector, elementSelector, durationSelector) {
      _classCallCheck(this, GroupBySubscriber);
      _Subscriber.call(this);
      this.refCountSubscription = refCountSubscription;
      this.keySelector = keySelector;
      this.elementSelector = elementSelector;
      this.durationSelector = durationSelector;
      this.groups = null;
      this.destination = destination;
      this.add(destination);
    }
    GroupBySubscriber.prototype._next = function _next(x) {
      var key = _utilTryCatch2['default'](this.keySelector)(x);
      if (key === _utilErrorObject.errorObject) {
        this.error(key.e);
      } else {
        var groups = this.groups;
        var elementSelector = this.elementSelector;
        var durationSelector = this.durationSelector;
        if (!groups) {
          groups = this.groups = typeof key === 'string' ? new _utilFastMap2['default']() : new _utilMap2['default']();
        }
        var group = groups.get(key);
        if (!group) {
          groups.set(key, group = new _Subject2['default']());
          var groupedObservable = new _groupBySupport.GroupedObservable(key, group, this.refCountSubscription);
          if (durationSelector) {
            var duration = _utilTryCatch2['default'](durationSelector)(new _groupBySupport.GroupedObservable(key, group));
            if (duration === _utilErrorObject.errorObject) {
              this.error(duration.e);
            } else {
              this.add(duration._subscribe(new GroupDurationSubscriber(key, group, this)));
            }
          }
          this.destination.next(groupedObservable);
        }
        if (elementSelector) {
          var value = _utilTryCatch2['default'](elementSelector)(x);
          if (value === _utilErrorObject.errorObject) {
            this.error(value.e);
          } else {
            group.next(value);
          }
        } else {
          group.next(x);
        }
      }
    };
    GroupBySubscriber.prototype._error = function _error(err) {
      var _this = this;
      var groups = this.groups;
      if (groups) {
        groups.forEach(function(group, key) {
          group.error(err);
          _this.removeGroup(key);
        });
      }
      this.destination.error(err);
    };
    GroupBySubscriber.prototype._complete = function _complete() {
      var _this2 = this;
      var groups = this.groups;
      if (groups) {
        groups.forEach(function(group, key) {
          group.complete();
          _this2.removeGroup(group);
        });
      }
      this.destination.complete();
    };
    GroupBySubscriber.prototype.removeGroup = function removeGroup(key) {
      this.groups['delete'](key);
    };
    return GroupBySubscriber;
  })(_Subscriber4['default']);
  var GroupDurationSubscriber = (function(_Subscriber2) {
    _inherits(GroupDurationSubscriber, _Subscriber2);
    function GroupDurationSubscriber(key, group, parent) {
      _classCallCheck(this, GroupDurationSubscriber);
      _Subscriber2.call(this, null);
      this.key = key;
      this.group = group;
      this.parent = parent;
    }
    GroupDurationSubscriber.prototype._next = function _next(value) {
      this.group.complete();
      this.parent.removeGroup(this.key);
    };
    GroupDurationSubscriber.prototype._error = function _error(err) {
      this.group.error(err);
      this.parent.removeGroup(this.key);
    };
    GroupDurationSubscriber.prototype._complete = function _complete() {
      this.group.complete();
      this.parent.removeGroup(this.key);
    };
    return GroupDurationSubscriber;
  })(_Subscriber4['default']);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var EmptyError = function EmptyError() {
    _classCallCheck(this, EmptyError);
    this.name = 'EmptyError';
    this.message = 'no elements in sequence';
  };
  ;
  exports['default'] = EmptyError;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/first", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = first;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilEmptyError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError');
  var _utilEmptyError2 = _interopRequireDefault(_utilEmptyError);
  function first(predicate, resultSelector, defaultValue) {
    return this.lift(new FirstOperator(predicate, resultSelector, defaultValue, this));
  }
  var FirstOperator = (function() {
    function FirstOperator(predicate, resultSelector, defaultValue, source) {
      _classCallCheck(this, FirstOperator);
      this.predicate = predicate;
      this.resultSelector = resultSelector;
      this.defaultValue = defaultValue;
      this.source = source;
    }
    FirstOperator.prototype.call = function call(observer) {
      return new FirstSubscriber(observer, this.predicate, this.resultSelector, this.defaultValue, this.source);
    };
    return FirstOperator;
  })();
  var FirstSubscriber = (function(_Subscriber) {
    _inherits(FirstSubscriber, _Subscriber);
    function FirstSubscriber(destination, predicate, resultSelector, defaultValue, source) {
      _classCallCheck(this, FirstSubscriber);
      _Subscriber.call(this, destination);
      this.predicate = predicate;
      this.resultSelector = resultSelector;
      this.defaultValue = defaultValue;
      this.source = source;
      this.index = 0;
      this.hasCompleted = false;
    }
    FirstSubscriber.prototype._next = function _next(value) {
      var destination = this.destination;
      var predicate = this.predicate;
      var resultSelector = this.resultSelector;
      var index = this.index++;
      var passed = true;
      if (predicate) {
        passed = _utilTryCatch2['default'](predicate)(value, index, this.source);
        if (passed === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
          return;
        }
      }
      if (passed) {
        if (resultSelector) {
          var result = _utilTryCatch2['default'](resultSelector)(value, index);
          if (result === _utilErrorObject.errorObject) {
            destination.error(_utilErrorObject.errorObject.e);
            return;
          }
          destination.next(result);
        } else {
          destination.next(value);
        }
        destination.complete();
        this.hasCompleted = true;
      }
    };
    FirstSubscriber.prototype._complete = function _complete() {
      var destination = this.destination;
      if (!this.hasCompleted && typeof this.defaultValue !== 'undefined') {
        destination.next(this.defaultValue);
        destination.complete();
      } else if (!this.hasCompleted) {
        destination.error(new _utilEmptyError2['default']());
      }
    };
    return FirstSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/finally", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = _finally;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  function _finally(finallySelector, thisArg) {
    return this.lift(new FinallyOperator(thisArg ? _utilBindCallback2['default'](finallySelector, thisArg, 2) : finallySelector));
  }
  var FinallyOperator = (function() {
    function FinallyOperator(finallySelector) {
      _classCallCheck(this, FinallyOperator);
      this.finallySelector = finallySelector;
    }
    FinallyOperator.prototype.call = function call(subscriber) {
      return new FinallySubscriber(subscriber, this.finallySelector);
    };
    return FinallyOperator;
  })();
  var FinallySubscriber = (function(_Subscriber) {
    _inherits(FinallySubscriber, _Subscriber);
    function FinallySubscriber(destination, finallySelector) {
      _classCallCheck(this, FinallySubscriber);
      _Subscriber.call(this, destination);
      this.add(new _Subscription2['default'](finallySelector));
    }
    return FinallySubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/filter", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = filter;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  function filter(select, thisArg) {
    return this.lift(new FilterOperator(select, thisArg));
  }
  var FilterOperator = (function() {
    function FilterOperator(select, thisArg) {
      _classCallCheck(this, FilterOperator);
      this.select = _utilBindCallback2['default'](select, thisArg, 2);
    }
    FilterOperator.prototype.call = function call(subscriber) {
      return new FilterSubscriber(subscriber, this.select);
    };
    return FilterOperator;
  })();
  var FilterSubscriber = (function(_Subscriber) {
    _inherits(FilterSubscriber, _Subscriber);
    function FilterSubscriber(destination, select) {
      _classCallCheck(this, FilterSubscriber);
      _Subscriber.call(this, destination);
      this.count = 0;
      this.select = select;
    }
    FilterSubscriber.prototype._next = function _next(x) {
      var result = _utilTryCatch2['default'](this.select)(x, this.count++);
      if (result === _utilErrorObject.errorObject) {
        this.destination.error(_utilErrorObject.errorObject.e);
      } else if (Boolean(result)) {
        this.destination.next(x);
      }
    };
    return FilterSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/expand-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  var ExpandOperator = (function() {
    function ExpandOperator(project) {
      var concurrent = arguments.length <= 1 || arguments[1] === undefined ? Number.POSITIVE_INFINITY : arguments[1];
      _classCallCheck(this, ExpandOperator);
      this.project = project;
      this.concurrent = concurrent;
    }
    ExpandOperator.prototype.call = function call(subscriber) {
      return new ExpandSubscriber(subscriber, this.project, this.concurrent);
    };
    return ExpandOperator;
  })();
  exports.ExpandOperator = ExpandOperator;
  var ExpandSubscriber = (function(_OuterSubscriber) {
    _inherits(ExpandSubscriber, _OuterSubscriber);
    function ExpandSubscriber(destination, project) {
      var concurrent = arguments.length <= 2 || arguments[2] === undefined ? Number.POSITIVE_INFINITY : arguments[2];
      _classCallCheck(this, ExpandSubscriber);
      _OuterSubscriber.call(this, destination);
      this.project = project;
      this.concurrent = concurrent;
      this.index = 0;
      this.active = 0;
      this.hasCompleted = false;
      if (concurrent < Number.POSITIVE_INFINITY) {
        this.buffer = [];
      }
    }
    ExpandSubscriber.prototype._next = function _next(value) {
      var index = this.index++;
      this.destination.next(value);
      if (this.active < this.concurrent) {
        var result = _utilTryCatch2['default'](this.project)(value, index);
        if (result === _utilErrorObject.errorObject) {
          this.destination.error(result.e);
        } else {
          if (result._isScalar) {
            this._next(result.value);
          } else {
            this.active++;
            this.add(_utilSubscribeToResult2['default'](this, result, value, index));
          }
        }
      } else {
        this.buffer.push(value);
      }
    };
    ExpandSubscriber.prototype._complete = function _complete() {
      this.hasCompleted = true;
      if (this.hasCompleted && this.active === 0) {
        this.destination.complete();
      }
    };
    ExpandSubscriber.prototype.notifyComplete = function notifyComplete(innerSub) {
      var buffer = this.buffer;
      this.remove(innerSub);
      this.active--;
      if (buffer && buffer.length > 0) {
        this._next(buffer.shift());
      }
      if (this.hasCompleted && this.active === 0) {
        this.destination.complete();
      }
    };
    ExpandSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      this._next(innerValue);
    };
    return ExpandSubscriber;
  })(_OuterSubscriber3['default']);
  exports.ExpandSubscriber = ExpandSubscriber;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/expand", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/expand-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = expand;
  var _expandSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/expand-support');
  function expand(project) {
    var concurrent = arguments.length <= 1 || arguments[1] === undefined ? Number.POSITIVE_INFINITY : arguments[1];
    return this.lift(new _expandSupport.ExpandOperator(project, concurrent));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/do", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/noop", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = _do;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilNoop = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/noop');
  var _utilNoop2 = _interopRequireDefault(_utilNoop);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function _do(nextOrObserver, error, complete) {
    var next = undefined;
    if (nextOrObserver && typeof nextOrObserver === 'object') {
      next = nextOrObserver.next;
      error = nextOrObserver.error;
      complete = nextOrObserver.complete;
    } else {
      next = nextOrObserver;
    }
    return this.lift(new DoOperator(next || _utilNoop2['default'], error || _utilNoop2['default'], complete || _utilNoop2['default']));
  }
  var DoOperator = (function() {
    function DoOperator(next, error, complete) {
      _classCallCheck(this, DoOperator);
      this.next = next;
      this.error = error;
      this.complete = complete;
    }
    DoOperator.prototype.call = function call(subscriber) {
      return new DoSubscriber(subscriber, this.next, this.error, this.complete);
    };
    return DoOperator;
  })();
  var DoSubscriber = (function(_Subscriber) {
    _inherits(DoSubscriber, _Subscriber);
    function DoSubscriber(destination, next, error, complete) {
      _classCallCheck(this, DoSubscriber);
      _Subscriber.call(this, destination);
      this.__next = next;
      this.__error = error;
      this.__complete = complete;
    }
    DoSubscriber.prototype._next = function _next(x) {
      var result = _utilTryCatch2['default'](this.__next)(x);
      if (result === _utilErrorObject.errorObject) {
        this.destination.error(_utilErrorObject.errorObject.e);
      } else {
        this.destination.next(x);
      }
    };
    DoSubscriber.prototype._error = function _error(e) {
      var result = _utilTryCatch2['default'](this.__error)(e);
      if (result === _utilErrorObject.errorObject) {
        this.destination.error(_utilErrorObject.errorObject.e);
      } else {
        this.destination.error(e);
      }
    };
    DoSubscriber.prototype._complete = function _complete() {
      var result = _utilTryCatch2['default'](this.__complete)();
      if (result === _utilErrorObject.errorObject) {
        this.destination.error(_utilErrorObject.errorObject.e);
      } else {
        this.destination.complete();
      }
    };
    return DoSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/distinctUntilChanged", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = distinctUntilChanged;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  function distinctUntilChanged(compare, thisArg) {
    return this.lift(new DistinctUntilChangedOperator(thisArg ? _utilBindCallback2['default'](compare, thisArg, 2) : compare));
  }
  var DistinctUntilChangedOperator = (function() {
    function DistinctUntilChangedOperator(compare) {
      _classCallCheck(this, DistinctUntilChangedOperator);
      this.compare = compare;
    }
    DistinctUntilChangedOperator.prototype.call = function call(subscriber) {
      return new DistinctUntilChangedSubscriber(subscriber, this.compare);
    };
    return DistinctUntilChangedOperator;
  })();
  var DistinctUntilChangedSubscriber = (function(_Subscriber) {
    _inherits(DistinctUntilChangedSubscriber, _Subscriber);
    function DistinctUntilChangedSubscriber(destination, compare) {
      _classCallCheck(this, DistinctUntilChangedSubscriber);
      _Subscriber.call(this, destination);
      this.hasValue = false;
      if (typeof compare === 'function') {
        this.compare = compare;
      }
    }
    DistinctUntilChangedSubscriber.prototype.compare = function compare(x, y) {
      return x === y;
    };
    DistinctUntilChangedSubscriber.prototype._next = function _next(x) {
      var result = false;
      if (this.hasValue) {
        result = _utilTryCatch2['default'](this.compare)(this.value, x);
        if (result === _utilErrorObject.errorObject) {
          this.destination.error(_utilErrorObject.errorObject.e);
          return;
        }
      } else {
        this.hasValue = true;
      }
      if (Boolean(result) === false) {
        this.value = x;
        this.destination.next(x);
      }
    };
    return DistinctUntilChangedSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports["default"] = isDate;
  function isDate(value) {
    return value instanceof Date && !isNaN(+value);
  }
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/delay", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = delay;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _Notification = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification');
  var _Notification2 = _interopRequireDefault(_Notification);
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  var _utilIsDate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isDate');
  var _utilIsDate2 = _interopRequireDefault(_utilIsDate);
  function delay(delay) {
    var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersImmediate2['default'] : arguments[1];
    var absoluteDelay = _utilIsDate2['default'](delay);
    var delayFor = absoluteDelay ? +delay - scheduler.now() : delay;
    return this.lift(new DelayOperator(delayFor, scheduler));
  }
  var DelayOperator = (function() {
    function DelayOperator(delay, scheduler) {
      _classCallCheck(this, DelayOperator);
      this.delay = delay;
      this.scheduler = scheduler;
    }
    DelayOperator.prototype.call = function call(subscriber) {
      return new DelaySubscriber(subscriber, this.delay, this.scheduler);
    };
    return DelayOperator;
  })();
  var DelaySubscriber = (function(_Subscriber) {
    _inherits(DelaySubscriber, _Subscriber);
    function DelaySubscriber(destination, delay, scheduler) {
      _classCallCheck(this, DelaySubscriber);
      _Subscriber.call(this, destination);
      this.delay = delay;
      this.scheduler = scheduler;
      this.queue = [];
      this.active = false;
      this.errored = false;
    }
    DelaySubscriber.dispatch = function dispatch(state) {
      var source = state.source;
      var queue = source.queue;
      var scheduler = state.scheduler;
      var destination = state.destination;
      while (queue.length > 0 && queue[0].time - scheduler.now() <= 0) {
        queue.shift().notification.observe(destination);
      }
      if (queue.length > 0) {
        var _delay = Math.max(0, queue[0].time - scheduler.now());
        this.schedule(state, _delay);
      } else {
        source.active = false;
      }
    };
    DelaySubscriber.prototype._schedule = function _schedule(scheduler) {
      this.active = true;
      this.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
        source: this,
        destination: this.destination,
        scheduler: scheduler
      }));
    };
    DelaySubscriber.prototype.scheduleNotification = function scheduleNotification(notification) {
      if (this.errored === true) {
        return;
      }
      var scheduler = this.scheduler;
      var message = new DelayMessage(scheduler.now() + this.delay, notification);
      this.queue.push(message);
      if (this.active === false) {
        this._schedule(scheduler);
      }
    };
    DelaySubscriber.prototype._next = function _next(value) {
      this.scheduleNotification(_Notification2['default'].createNext(value));
    };
    DelaySubscriber.prototype._error = function _error(err) {
      this.errored = true;
      this.queue = [];
      this.destination.error(err);
    };
    DelaySubscriber.prototype._complete = function _complete() {
      this.scheduleNotification(_Notification2['default'].createComplete());
    };
    return DelaySubscriber;
  })(_Subscriber3['default']);
  var DelayMessage = function DelayMessage(time, notification) {
    _classCallCheck(this, DelayMessage);
    this.time = time;
    this.notification = notification;
  };
  ;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/defaultIfEmpty", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = defaultIfEmpty;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function defaultIfEmpty() {
    var defaultValue = arguments.length <= 0 || arguments[0] === undefined ? null : arguments[0];
    return this.lift(new DefaultIfEmptyOperator(defaultValue));
  }
  var DefaultIfEmptyOperator = (function() {
    function DefaultIfEmptyOperator(defaultValue) {
      _classCallCheck(this, DefaultIfEmptyOperator);
      this.defaultValue = defaultValue;
    }
    DefaultIfEmptyOperator.prototype.call = function call(subscriber) {
      return new DefaultIfEmptySubscriber(subscriber, this.defaultValue);
    };
    return DefaultIfEmptyOperator;
  })();
  var DefaultIfEmptySubscriber = (function(_Subscriber) {
    _inherits(DefaultIfEmptySubscriber, _Subscriber);
    function DefaultIfEmptySubscriber(destination, defaultValue) {
      _classCallCheck(this, DefaultIfEmptySubscriber);
      _Subscriber.call(this, destination);
      this.defaultValue = defaultValue;
      this.isEmpty = true;
    }
    DefaultIfEmptySubscriber.prototype._next = function _next(x) {
      this.isEmpty = false;
      this.destination.next(x);
    };
    DefaultIfEmptySubscriber.prototype._complete = function _complete() {
      if (this.isEmpty) {
        this.destination.next(this.defaultValue);
      }
      this.destination.complete();
    };
    return DefaultIfEmptySubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/debounceTime", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = debounceTime;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  function debounceTime(dueTime) {
    var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersNextTick2['default'] : arguments[1];
    return this.lift(new DebounceTimeOperator(dueTime, scheduler));
  }
  var DebounceTimeOperator = (function() {
    function DebounceTimeOperator(dueTime, scheduler) {
      _classCallCheck(this, DebounceTimeOperator);
      this.dueTime = dueTime;
      this.scheduler = scheduler;
    }
    DebounceTimeOperator.prototype.call = function call(subscriber) {
      return new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler);
    };
    return DebounceTimeOperator;
  })();
  var DebounceTimeSubscriber = (function(_Subscriber) {
    _inherits(DebounceTimeSubscriber, _Subscriber);
    function DebounceTimeSubscriber(destination, dueTime, scheduler) {
      _classCallCheck(this, DebounceTimeSubscriber);
      _Subscriber.call(this, destination);
      this.dueTime = dueTime;
      this.scheduler = scheduler;
      this.debouncedSubscription = null;
      this.lastValue = null;
    }
    DebounceTimeSubscriber.prototype._next = function _next(value) {
      this.clearDebounce();
      this.lastValue = value;
      this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
    };
    DebounceTimeSubscriber.prototype._complete = function _complete() {
      this.debouncedNext();
      this.destination.complete();
    };
    DebounceTimeSubscriber.prototype.debouncedNext = function debouncedNext() {
      this.clearDebounce();
      if (this.lastValue != null) {
        this.destination.next(this.lastValue);
        this.lastValue = null;
      }
    };
    DebounceTimeSubscriber.prototype.clearDebounce = function clearDebounce() {
      var debouncedSubscription = this.debouncedSubscription;
      if (debouncedSubscription !== null) {
        this.remove(debouncedSubscription);
        debouncedSubscription.unsubscribe();
        this.debouncedSubscription = null;
      }
    };
    return DebounceTimeSubscriber;
  })(_Subscriber3['default']);
  function dispatchNext(subscriber) {
    subscriber.debouncedNext();
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/debounce", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  exports['default'] = debounce;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _observablesPromiseObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable');
  var _observablesPromiseObservable2 = _interopRequireDefault(_observablesPromiseObservable);
  var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber4 = _interopRequireDefault(_Subscriber3);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function debounce(durationSelector) {
    return this.lift(new DebounceOperator(durationSelector));
  }
  var DebounceOperator = (function() {
    function DebounceOperator(durationSelector) {
      _classCallCheck(this, DebounceOperator);
      this.durationSelector = durationSelector;
    }
    DebounceOperator.prototype.call = function call(observer) {
      return new DebounceSubscriber(observer, this.durationSelector);
    };
    return DebounceOperator;
  })();
  var DebounceSubscriber = (function(_Subscriber) {
    _inherits(DebounceSubscriber, _Subscriber);
    function DebounceSubscriber(destination, durationSelector) {
      _classCallCheck(this, DebounceSubscriber);
      _Subscriber.call(this, destination);
      this.durationSelector = durationSelector;
      this.debouncedSubscription = null;
      this.lastValue = null;
      this._index = 0;
    }
    DebounceSubscriber.prototype._next = function _next(value) {
      var destination = this.destination;
      var currentIndex = ++this._index;
      var debounce = _utilTryCatch2['default'](this.durationSelector)(value);
      if (debounce === _utilErrorObject.errorObject) {
        destination.error(_utilErrorObject.errorObject.e);
      } else {
        if (typeof debounce.subscribe !== 'function' && typeof debounce.then === 'function') {
          debounce = _observablesPromiseObservable2['default'].create(debounce);
        }
        this.lastValue = value;
        this.add(this.debouncedSubscription = debounce._subscribe(new DurationSelectorSubscriber(this, currentIndex)));
      }
    };
    DebounceSubscriber.prototype._complete = function _complete() {
      this.debouncedNext();
      this.destination.complete();
    };
    DebounceSubscriber.prototype.debouncedNext = function debouncedNext() {
      this.clearDebounce();
      if (this.lastValue != null) {
        this.destination.next(this.lastValue);
        this.lastValue = null;
      }
    };
    DebounceSubscriber.prototype.clearDebounce = function clearDebounce() {
      var debouncedSubscription = this.debouncedSubscription;
      if (debouncedSubscription !== null) {
        this.remove(debouncedSubscription);
        this.debouncedSubscription = null;
      }
    };
    _createClass(DebounceSubscriber, [{
      key: 'index',
      get: function get() {
        return this._index;
      }
    }]);
    return DebounceSubscriber;
  })(_Subscriber4['default']);
  var DurationSelectorSubscriber = (function(_Subscriber2) {
    _inherits(DurationSelectorSubscriber, _Subscriber2);
    function DurationSelectorSubscriber(parent, currentIndex) {
      _classCallCheck(this, DurationSelectorSubscriber);
      _Subscriber2.call(this, null);
      this.parent = parent;
      this.currentIndex = currentIndex;
    }
    DurationSelectorSubscriber.prototype.debounceNext = function debounceNext() {
      var parent = this.parent;
      if (this.currentIndex === parent.index) {
        parent.debouncedNext();
        if (!this.isUnsubscribed) {
          this.unsubscribe();
        }
      }
    };
    DurationSelectorSubscriber.prototype._next = function _next(unused) {
      this.debounceNext();
    };
    DurationSelectorSubscriber.prototype._error = function _error(err) {
      this.parent.error(err);
    };
    DurationSelectorSubscriber.prototype._complete = function _complete() {
      this.debounceNext();
    };
    return DurationSelectorSubscriber;
  })(_Subscriber4['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/dematerialize", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = dematerialize;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  function dematerialize() {
    return this.lift(new DeMaterializeOperator());
  }
  var DeMaterializeOperator = (function() {
    function DeMaterializeOperator() {
      _classCallCheck(this, DeMaterializeOperator);
    }
    DeMaterializeOperator.prototype.call = function call(subscriber) {
      return new DeMaterializeSubscriber(subscriber);
    };
    return DeMaterializeOperator;
  })();
  var DeMaterializeSubscriber = (function(_Subscriber) {
    _inherits(DeMaterializeSubscriber, _Subscriber);
    function DeMaterializeSubscriber(destination) {
      _classCallCheck(this, DeMaterializeSubscriber);
      _Subscriber.call(this, destination);
    }
    DeMaterializeSubscriber.prototype._next = function _next(value) {
      value.observe(this.destination);
    };
    return DeMaterializeSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = bindCallback;
  function bindCallback(func, thisArg, argCount) {
    if (typeof thisArg === 'undefined') {
      return func;
    }
    switch (argCount) {
      case 0:
        return function() {
          return func.call(thisArg);
        };
      case 1:
        return function(arg) {
          return func.call(thisArg, arg);
        };
      case 2:
        return function(value, index) {
          return func.call(thisArg, value, index);
        };
      case 3:
        return function(value, index, collection) {
          return func.call(thisArg, value, index, collection);
        };
    }
    return function() {
      return func.apply(thisArg, arguments);
    };
  }
  ;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/count", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = count;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilBindCallback = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/bindCallback');
  var _utilBindCallback2 = _interopRequireDefault(_utilBindCallback);
  function count(predicate, thisArg) {
    return this.lift(new CountOperator(predicate, thisArg, this));
  }
  var CountOperator = (function() {
    function CountOperator(predicate, thisArg, source) {
      _classCallCheck(this, CountOperator);
      this.predicate = predicate;
      this.thisArg = thisArg;
      this.source = source;
    }
    CountOperator.prototype.call = function call(subscriber) {
      return new CountSubscriber(subscriber, this.predicate, this.thisArg, this.source);
    };
    return CountOperator;
  })();
  var CountSubscriber = (function(_Subscriber) {
    _inherits(CountSubscriber, _Subscriber);
    function CountSubscriber(destination, predicate, thisArg, source) {
      _classCallCheck(this, CountSubscriber);
      _Subscriber.call(this, destination);
      this.thisArg = thisArg;
      this.source = source;
      this.count = 0;
      this.index = 0;
      if (typeof predicate === 'function') {
        this.predicate = _utilBindCallback2['default'](predicate, thisArg, 3);
      }
    }
    CountSubscriber.prototype._next = function _next(value) {
      var predicate = this.predicate;
      var passed = true;
      if (predicate) {
        passed = _utilTryCatch2['default'](predicate)(value, this.index++, this.source);
        if (passed === _utilErrorObject.errorObject) {
          this.destination.error(passed.e);
          return;
        }
      }
      if (passed) {
        this.count += 1;
      }
    };
    CountSubscriber.prototype._complete = function _complete() {
      this.destination.next(this.count);
      this.destination.complete();
    };
    return CountSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  var MergeMapToOperator = (function() {
    function MergeMapToOperator(ish, resultSelector) {
      var concurrent = arguments.length <= 2 || arguments[2] === undefined ? Number.POSITIVE_INFINITY : arguments[2];
      _classCallCheck(this, MergeMapToOperator);
      this.ish = ish;
      this.resultSelector = resultSelector;
      this.concurrent = concurrent;
    }
    MergeMapToOperator.prototype.call = function call(observer) {
      return new MergeMapToSubscriber(observer, this.ish, this.resultSelector, this.concurrent);
    };
    return MergeMapToOperator;
  })();
  exports.MergeMapToOperator = MergeMapToOperator;
  var MergeMapToSubscriber = (function(_OuterSubscriber) {
    _inherits(MergeMapToSubscriber, _OuterSubscriber);
    function MergeMapToSubscriber(destination, ish, resultSelector) {
      var concurrent = arguments.length <= 3 || arguments[3] === undefined ? Number.POSITIVE_INFINITY : arguments[3];
      _classCallCheck(this, MergeMapToSubscriber);
      _OuterSubscriber.call(this, destination);
      this.ish = ish;
      this.resultSelector = resultSelector;
      this.concurrent = concurrent;
      this.hasCompleted = false;
      this.buffer = [];
      this.active = 0;
      this.index = 0;
    }
    MergeMapToSubscriber.prototype._next = function _next(value) {
      if (this.active < this.concurrent) {
        var resultSelector = this.resultSelector;
        var index = this.index++;
        var ish = this.ish;
        var destination = this.destination;
        if (ish === _utilErrorObject.errorObject) {
          destination.error(ish.e);
        } else {
          this.active++;
          this._innerSub(ish, destination, resultSelector, value, index);
        }
      } else {
        this.buffer.push(value);
      }
    };
    MergeMapToSubscriber.prototype._innerSub = function _innerSub(ish, destination, resultSelector, value, index) {
      this.add(_utilSubscribeToResult2['default'](this, ish, value, index));
    };
    MergeMapToSubscriber.prototype._complete = function _complete() {
      this.hasCompleted = true;
      if (this.active === 0 && this.buffer.length === 0) {
        this.destination.complete();
      }
    };
    MergeMapToSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      var resultSelector = this.resultSelector;
      var destination = this.destination;
      if (resultSelector) {
        var result = _utilTryCatch2['default'](resultSelector)(outerValue, innerValue, outerIndex, innerIndex);
        if (result === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
        } else {
          destination.next(result);
        }
      } else {
        destination.next(innerValue);
      }
    };
    MergeMapToSubscriber.prototype.notifyError = function notifyError(err) {
      this.destination.error(err);
    };
    MergeMapToSubscriber.prototype.notifyComplete = function notifyComplete(innerSub) {
      var buffer = this.buffer;
      this.remove(innerSub);
      this.active--;
      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        this.destination.complete();
      }
    };
    return MergeMapToSubscriber;
  })(_OuterSubscriber3['default']);
  exports.MergeMapToSubscriber = MergeMapToSubscriber;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatMapTo", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = concatMapTo;
  var _mergeMapToSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo-support');
  function concatMapTo(observable, projectResult) {
    return this.lift(new _mergeMapToSupport.MergeMapToOperator(observable, projectResult, 1));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var MergeMapOperator = (function() {
    function MergeMapOperator(project, resultSelector) {
      var concurrent = arguments.length <= 2 || arguments[2] === undefined ? Number.POSITIVE_INFINITY : arguments[2];
      _classCallCheck(this, MergeMapOperator);
      this.project = project;
      this.resultSelector = resultSelector;
      this.concurrent = concurrent;
    }
    MergeMapOperator.prototype.call = function call(observer) {
      return new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent);
    };
    return MergeMapOperator;
  })();
  exports.MergeMapOperator = MergeMapOperator;
  var MergeMapSubscriber = (function(_OuterSubscriber) {
    _inherits(MergeMapSubscriber, _OuterSubscriber);
    function MergeMapSubscriber(destination, project, resultSelector) {
      var concurrent = arguments.length <= 3 || arguments[3] === undefined ? Number.POSITIVE_INFINITY : arguments[3];
      _classCallCheck(this, MergeMapSubscriber);
      _OuterSubscriber.call(this, destination);
      this.project = project;
      this.resultSelector = resultSelector;
      this.concurrent = concurrent;
      this.hasCompleted = false;
      this.buffer = [];
      this.active = 0;
      this.index = 0;
    }
    MergeMapSubscriber.prototype._next = function _next(value) {
      if (this.active < this.concurrent) {
        var index = this.index++;
        var ish = _utilTryCatch2['default'](this.project)(value, index);
        var destination = this.destination;
        if (ish === _utilErrorObject.errorObject) {
          destination.error(ish.e);
        } else {
          this.active++;
          this._innerSub(ish, value, index);
        }
      } else {
        this.buffer.push(value);
      }
    };
    MergeMapSubscriber.prototype._innerSub = function _innerSub(ish, value, index) {
      this.add(_utilSubscribeToResult2['default'](this, ish, value, index));
    };
    MergeMapSubscriber.prototype._complete = function _complete() {
      this.hasCompleted = true;
      if (this.active === 0 && this.buffer.length === 0) {
        this.destination.complete();
      }
    };
    MergeMapSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      var destination = this.destination;
      var resultSelector = this.resultSelector;
      if (resultSelector) {
        var result = _utilTryCatch2['default'](resultSelector)(outerValue, innerValue, outerIndex, innerIndex);
        if (result === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
        } else {
          destination.next(result);
        }
      } else {
        destination.next(innerValue);
      }
    };
    MergeMapSubscriber.prototype.notifyComplete = function notifyComplete(innerSub) {
      var buffer = this.buffer;
      this.remove(innerSub);
      this.active--;
      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        this.destination.complete();
      }
    };
    return MergeMapSubscriber;
  })(_OuterSubscriber3['default']);
  exports.MergeMapSubscriber = MergeMapSubscriber;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatMap", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = concatMap;
  var _mergeMapSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap-support');
  function concatMap(project, projectResult) {
    return this.lift(new _mergeMapSupport.MergeMapOperator(project, projectResult, 1));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatAll", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = concatAll;
  var _mergeAllSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support');
  function concatAll() {
    return this.lift(new _mergeAllSupport.MergeAllOperator(1));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = concat;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _Observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable2 = _interopRequireDefault(_Observable);
  function concat() {
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    var args = observables;
    args.unshift(this);
    if (args.length > 1 && typeof args[args.length - 1].schedule === 'function') {
      args.splice(args.length - 2, 0, 1);
    }
    return _Observable2['default'].fromArray(args).mergeAll(1);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = combineLatest;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _combineLatestSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support');
  function combineLatest() {
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    observables.unshift(this);
    var project = undefined;
    if (typeof observables[observables.length - 1] === 'function') {
      project = observables.pop();
    }
    return new _observablesArrayObservable2['default'](observables).lift(new _combineLatestSupport.CombineLatestOperator(project));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineAll", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = combineAll;
  var _combineLatestSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support');
  function combineAll(project) {
    return this.lift(new _combineLatestSupport.CombineLatestOperator(project));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/catch", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = _catch;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  function _catch(selector) {
    var catchOperator = new CatchOperator(selector);
    var caught = this.lift(catchOperator);
    catchOperator.caught = caught;
    return caught;
  }
  var CatchOperator = (function() {
    function CatchOperator(selector) {
      _classCallCheck(this, CatchOperator);
      this.selector = selector;
    }
    CatchOperator.prototype.call = function call(subscriber) {
      return new CatchSubscriber(subscriber, this.selector, this.caught);
    };
    return CatchOperator;
  })();
  var CatchSubscriber = (function(_Subscriber) {
    _inherits(CatchSubscriber, _Subscriber);
    function CatchSubscriber(destination, selector, caught) {
      _classCallCheck(this, CatchSubscriber);
      _Subscriber.call(this, destination);
      this.selector = selector;
      this.caught = caught;
    }
    CatchSubscriber.prototype._error = function _error(err) {
      var result = _utilTryCatch2['default'](this.selector)(err, this.caught);
      if (result === _utilErrorObject.errorObject) {
        this.destination.error(_utilErrorObject.errorObject.e);
      } else {
        this.add(result.subscribe(this.destination));
      }
    };
    return CatchSubscriber;
  })(_Subscriber3['default']);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferWhen", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "github:jspm/nodelibs-buffer@0.1.0", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(Buffer, process) {
    'use strict';
    exports.__esModule = true;
    exports['default'] = bufferWhen;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }});
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
    var _Subscriber4 = _interopRequireDefault(_Subscriber3);
    var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
    var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
    var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
    function bufferWhen(closingSelector) {
      return this.lift(new BufferWhenOperator(closingSelector));
    }
    var BufferWhenOperator = (function() {
      function BufferWhenOperator(closingSelector) {
        _classCallCheck(this, BufferWhenOperator);
        this.closingSelector = closingSelector;
      }
      BufferWhenOperator.prototype.call = function call(subscriber) {
        return new BufferWhenSubscriber(subscriber, this.closingSelector);
      };
      return BufferWhenOperator;
    })();
    var BufferWhenSubscriber = (function(_Subscriber) {
      _inherits(BufferWhenSubscriber, _Subscriber);
      function BufferWhenSubscriber(destination, closingSelector) {
        _classCallCheck(this, BufferWhenSubscriber);
        _Subscriber.call(this, destination);
        this.closingSelector = closingSelector;
        this.openBuffer();
      }
      BufferWhenSubscriber.prototype._next = function _next(value) {
        this.buffer.push(value);
      };
      BufferWhenSubscriber.prototype._error = function _error(err) {
        this.buffer = null;
        this.destination.error(err);
      };
      BufferWhenSubscriber.prototype._complete = function _complete() {
        var buffer = this.buffer;
        this.destination.next(buffer);
        this.buffer = null;
        this.destination.complete();
      };
      BufferWhenSubscriber.prototype.openBuffer = function openBuffer() {
        var prevClosingNotification = this.closingNotification;
        if (prevClosingNotification) {
          this.remove(prevClosingNotification);
          prevClosingNotification.unsubscribe();
        }
        var buffer = this.buffer;
        if (buffer) {
          this.destination.next(buffer);
        }
        this.buffer = [];
        var closingNotifier = _utilTryCatch2['default'](this.closingSelector)();
        if (closingNotifier === _utilErrorObject.errorObject) {
          var err = closingNotifier.e;
          this.buffer = null;
          this.destination.error(err);
        } else {
          this.add(this.closingNotification = closingNotifier._subscribe(new BufferClosingNotifierSubscriber(this)));
        }
      };
      return BufferWhenSubscriber;
    })(_Subscriber4['default']);
    var BufferClosingNotifierSubscriber = (function(_Subscriber2) {
      _inherits(BufferClosingNotifierSubscriber, _Subscriber2);
      function BufferClosingNotifierSubscriber(parent) {
        _classCallCheck(this, BufferClosingNotifierSubscriber);
        _Subscriber2.call(this, null);
        this.parent = parent;
      }
      BufferClosingNotifierSubscriber.prototype._next = function _next() {
        this.parent.openBuffer();
      };
      BufferClosingNotifierSubscriber.prototype._error = function _error(err) {
        this.parent.error(err);
      };
      BufferClosingNotifierSubscriber.prototype._complete = function _complete() {
        this.parent.openBuffer();
      };
      return BufferClosingNotifierSubscriber;
    })(_Subscriber4['default']);
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-buffer@0.1.0').Buffer, $__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferToggle", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "github:jspm/nodelibs-buffer@0.1.0"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(Buffer) {
    'use strict';
    exports.__esModule = true;
    exports['default'] = bufferToggle;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }});
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    var _Subscriber4 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
    var _Subscriber5 = _interopRequireDefault(_Subscriber4);
    var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
    var _Subscription2 = _interopRequireDefault(_Subscription);
    var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
    var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
    var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
    function bufferToggle(openings, closingSelector) {
      return this.lift(new BufferToggleOperator(openings, closingSelector));
    }
    var BufferToggleOperator = (function() {
      function BufferToggleOperator(openings, closingSelector) {
        _classCallCheck(this, BufferToggleOperator);
        this.openings = openings;
        this.closingSelector = closingSelector;
      }
      BufferToggleOperator.prototype.call = function call(subscriber) {
        return new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector);
      };
      return BufferToggleOperator;
    })();
    var BufferToggleSubscriber = (function(_Subscriber) {
      _inherits(BufferToggleSubscriber, _Subscriber);
      function BufferToggleSubscriber(destination, openings, closingSelector) {
        _classCallCheck(this, BufferToggleSubscriber);
        _Subscriber.call(this, destination);
        this.openings = openings;
        this.closingSelector = closingSelector;
        this.contexts = [];
        this.add(this.openings._subscribe(new BufferToggleOpeningsSubscriber(this)));
      }
      BufferToggleSubscriber.prototype._next = function _next(value) {
        var contexts = this.contexts;
        var len = contexts.length;
        for (var i = 0; i < len; i++) {
          contexts[i].buffer.push(value);
        }
      };
      BufferToggleSubscriber.prototype._error = function _error(err) {
        this.contexts = null;
        this.destination.error(err);
      };
      BufferToggleSubscriber.prototype._complete = function _complete() {
        var contexts = this.contexts;
        while (contexts.length > 0) {
          var context = contexts.shift();
          this.destination.next(context.buffer);
          context.subscription.unsubscribe();
          context.buffer = null;
        }
        this.destination.complete();
      };
      BufferToggleSubscriber.prototype.openBuffer = function openBuffer(value) {
        var closingSelector = this.closingSelector;
        var contexts = this.contexts;
        var closingNotifier = _utilTryCatch2['default'](closingSelector)(value);
        if (closingNotifier === _utilErrorObject.errorObject) {
          var err = closingNotifier.e;
          this.contexts = null;
          this.destination.error(err);
        } else {
          var context = {
            buffer: [],
            subscription: new _Subscription2['default']()
          };
          contexts.push(context);
          var subscriber = new BufferClosingNotifierSubscriber(this, context);
          var subscription = closingNotifier._subscribe(subscriber);
          this.add(context.subscription.add(subscription));
        }
      };
      BufferToggleSubscriber.prototype.closeBuffer = function closeBuffer(context) {
        var contexts = this.contexts;
        if (contexts === null) {
          return;
        }
        var buffer = context.buffer;
        var subscription = context.subscription;
        this.destination.next(buffer);
        contexts.splice(contexts.indexOf(context), 1);
        this.remove(subscription);
        subscription.unsubscribe();
      };
      return BufferToggleSubscriber;
    })(_Subscriber5['default']);
    var BufferClosingNotifierSubscriber = (function(_Subscriber2) {
      _inherits(BufferClosingNotifierSubscriber, _Subscriber2);
      function BufferClosingNotifierSubscriber(parent, context) {
        _classCallCheck(this, BufferClosingNotifierSubscriber);
        _Subscriber2.call(this, null);
        this.parent = parent;
        this.context = context;
      }
      BufferClosingNotifierSubscriber.prototype._next = function _next() {
        this.parent.closeBuffer(this.context);
      };
      BufferClosingNotifierSubscriber.prototype._error = function _error(err) {
        this.parent.error(err);
      };
      BufferClosingNotifierSubscriber.prototype._complete = function _complete() {
        this.parent.closeBuffer(this.context);
      };
      return BufferClosingNotifierSubscriber;
    })(_Subscriber5['default']);
    var BufferToggleOpeningsSubscriber = (function(_Subscriber3) {
      _inherits(BufferToggleOpeningsSubscriber, _Subscriber3);
      function BufferToggleOpeningsSubscriber(parent) {
        _classCallCheck(this, BufferToggleOpeningsSubscriber);
        _Subscriber3.call(this, null);
        this.parent = parent;
      }
      BufferToggleOpeningsSubscriber.prototype._next = function _next(value) {
        this.parent.openBuffer(value);
      };
      BufferToggleOpeningsSubscriber.prototype._error = function _error(err) {
        this.parent.error(err);
      };
      BufferToggleOpeningsSubscriber.prototype._complete = function _complete() {};
      return BufferToggleOpeningsSubscriber;
    })(_Subscriber5['default']);
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-buffer@0.1.0').Buffer);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferTime", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick", "github:jspm/nodelibs-buffer@0.1.0"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(Buffer) {
    'use strict';
    exports.__esModule = true;
    exports['default'] = bufferTime;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }});
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
    var _Subscriber3 = _interopRequireDefault(_Subscriber2);
    var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
    var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
    function bufferTime(bufferTimeSpan) {
      var bufferCreationInterval = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
      var scheduler = arguments.length <= 2 || arguments[2] === undefined ? _schedulersNextTick2['default'] : arguments[2];
      return this.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, scheduler));
    }
    var BufferTimeOperator = (function() {
      function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, scheduler) {
        _classCallCheck(this, BufferTimeOperator);
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.scheduler = scheduler;
      }
      BufferTimeOperator.prototype.call = function call(subscriber) {
        return new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.scheduler);
      };
      return BufferTimeOperator;
    })();
    var BufferTimeSubscriber = (function(_Subscriber) {
      _inherits(BufferTimeSubscriber, _Subscriber);
      function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, scheduler) {
        _classCallCheck(this, BufferTimeSubscriber);
        _Subscriber.call(this, destination);
        this.bufferTimeSpan = bufferTimeSpan;
        this.bufferCreationInterval = bufferCreationInterval;
        this.scheduler = scheduler;
        this.buffers = [];
        var buffer = this.openBuffer();
        if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {
          var closeState = {
            subscriber: this,
            buffer: buffer
          };
          var creationState = {
            bufferTimeSpan: bufferTimeSpan,
            bufferCreationInterval: bufferCreationInterval,
            subscriber: this,
            scheduler: scheduler
          };
          this.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
          this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
        } else {
          var timeSpanOnlyState = {
            subscriber: this,
            buffer: buffer,
            bufferTimeSpan: bufferTimeSpan
          };
          this.add(scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
        }
      }
      BufferTimeSubscriber.prototype._next = function _next(value) {
        var buffers = this.buffers;
        var len = buffers.length;
        for (var i = 0; i < len; i++) {
          buffers[i].push(value);
        }
      };
      BufferTimeSubscriber.prototype._error = function _error(err) {
        this.buffers.length = 0;
        this.destination.error(err);
      };
      BufferTimeSubscriber.prototype._complete = function _complete() {
        var buffers = this.buffers;
        while (buffers.length > 0) {
          this.destination.next(buffers.shift());
        }
        this.destination.complete();
      };
      BufferTimeSubscriber.prototype.openBuffer = function openBuffer() {
        var buffer = [];
        this.buffers.push(buffer);
        return buffer;
      };
      BufferTimeSubscriber.prototype.closeBuffer = function closeBuffer(buffer) {
        this.destination.next(buffer);
        var buffers = this.buffers;
        buffers.splice(buffers.indexOf(buffer), 1);
      };
      return BufferTimeSubscriber;
    })(_Subscriber3['default']);
    function dispatchBufferTimeSpanOnly(state) {
      var subscriber = state.subscriber;
      var prevBuffer = state.buffer;
      if (prevBuffer) {
        subscriber.closeBuffer(prevBuffer);
      }
      state.buffer = subscriber.openBuffer();
      if (!subscriber.isUnsubscribed) {
        this.schedule(state, state.bufferTimeSpan);
      }
    }
    function dispatchBufferCreation(state) {
      var bufferCreationInterval = state.bufferCreationInterval;
      var bufferTimeSpan = state.bufferTimeSpan;
      var subscriber = state.subscriber;
      var scheduler = state.scheduler;
      var buffer = subscriber.openBuffer();
      var action = this;
      if (!subscriber.isUnsubscribed) {
        action.add(scheduler.schedule(dispatchBufferClose, bufferTimeSpan, {
          subscriber: subscriber,
          buffer: buffer
        }));
        action.schedule(state, bufferCreationInterval);
      }
    }
    function dispatchBufferClose(_ref) {
      var subscriber = _ref.subscriber;
      var buffer = _ref.buffer;
      subscriber.closeBuffer(buffer);
    }
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-buffer@0.1.0').Buffer);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferCount", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "github:jspm/nodelibs-buffer@0.1.0"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(Buffer) {
    'use strict';
    exports.__esModule = true;
    exports['default'] = bufferCount;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }});
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
    var _Subscriber3 = _interopRequireDefault(_Subscriber2);
    function bufferCount(bufferSize) {
      var startBufferEvery = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];
      return this.lift(new BufferCountOperator(bufferSize, startBufferEvery));
    }
    var BufferCountOperator = (function() {
      function BufferCountOperator(bufferSize, startBufferEvery) {
        _classCallCheck(this, BufferCountOperator);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
      }
      BufferCountOperator.prototype.call = function call(subscriber) {
        return new BufferCountSubscriber(subscriber, this.bufferSize, this.startBufferEvery);
      };
      return BufferCountOperator;
    })();
    var BufferCountSubscriber = (function(_Subscriber) {
      _inherits(BufferCountSubscriber, _Subscriber);
      function BufferCountSubscriber(destination, bufferSize, startBufferEvery) {
        _classCallCheck(this, BufferCountSubscriber);
        _Subscriber.call(this, destination);
        this.bufferSize = bufferSize;
        this.startBufferEvery = startBufferEvery;
        this.buffers = [[]];
        this.count = 0;
      }
      BufferCountSubscriber.prototype._next = function _next(value) {
        var count = this.count += 1;
        var destination = this.destination;
        var bufferSize = this.bufferSize;
        var startBufferEvery = this.startBufferEvery == null ? bufferSize : this.startBufferEvery;
        var buffers = this.buffers;
        var len = buffers.length;
        var remove = -1;
        if (count % startBufferEvery === 0) {
          buffers.push([]);
        }
        for (var i = 0; i < len; i++) {
          var buffer = buffers[i];
          buffer.push(value);
          if (buffer.length === bufferSize) {
            remove = i;
            destination.next(buffer);
          }
        }
        if (remove !== -1) {
          buffers.splice(remove, 1);
        }
      };
      BufferCountSubscriber.prototype._error = function _error(err) {
        this.destination.error(err);
      };
      BufferCountSubscriber.prototype._complete = function _complete() {
        var destination = this.destination;
        var buffers = this.buffers;
        while (buffers.length > 0) {
          var buffer = buffers.shift();
          if (buffer.length > 0) {
            destination.next(buffer);
          }
        }
        destination.complete();
      };
      return BufferCountSubscriber;
    })(_Subscriber3['default']);
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-buffer@0.1.0').Buffer);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:is-array@1.0.1/index", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var isArray = Array.isArray;
  var str = Object.prototype.toString;
  module.exports = isArray || function(val) {
    return !!val && '[object Array]' == str.call(val);
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:is-array@1.0.1", ["npm:is-array@1.0.1/index"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:is-array@1.0.1/index');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ieee754@1.1.6/index", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.read = function(buffer, offset, isLE, mLen, nBytes) {
    var e,
        m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? (nBytes - 1) : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & ((1 << (-nBits)) - 1);
    s >>= (-nBits);
    nBits += eLen;
    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}
    m = e & ((1 << (-nBits)) - 1);
    e >>= (-nBits);
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}
    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : ((s ? -1 : 1) * Infinity);
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
  };
  exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e,
        m,
        c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
    var i = isLE ? 0 : (nBytes - 1);
    var d = isLE ? 1 : -1;
    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);
      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }
      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }
    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}
    e = (e << mLen) | m;
    eLen += mLen;
    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}
    buffer[offset + i - d] |= s * 128;
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ieee754@1.1.6", ["npm:ieee754@1.1.6/index"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:ieee754@1.1.6/index');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:base64-js@0.0.8/lib/b64", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
  ;
  (function(exports) {
    'use strict';
    var Arr = (typeof Uint8Array !== 'undefined') ? Uint8Array : Array;
    var PLUS = '+'.charCodeAt(0);
    var SLASH = '/'.charCodeAt(0);
    var NUMBER = '0'.charCodeAt(0);
    var LOWER = 'a'.charCodeAt(0);
    var UPPER = 'A'.charCodeAt(0);
    var PLUS_URL_SAFE = '-'.charCodeAt(0);
    var SLASH_URL_SAFE = '_'.charCodeAt(0);
    function decode(elt) {
      var code = elt.charCodeAt(0);
      if (code === PLUS || code === PLUS_URL_SAFE)
        return 62;
      if (code === SLASH || code === SLASH_URL_SAFE)
        return 63;
      if (code < NUMBER)
        return -1;
      if (code < NUMBER + 10)
        return code - NUMBER + 26 + 26;
      if (code < UPPER + 26)
        return code - UPPER;
      if (code < LOWER + 26)
        return code - LOWER + 26;
    }
    function b64ToByteArray(b64) {
      var i,
          j,
          l,
          tmp,
          placeHolders,
          arr;
      if (b64.length % 4 > 0) {
        throw new Error('Invalid string. Length must be a multiple of 4');
      }
      var len = b64.length;
      placeHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0;
      arr = new Arr(b64.length * 3 / 4 - placeHolders);
      l = placeHolders > 0 ? b64.length - 4 : b64.length;
      var L = 0;
      function push(v) {
        arr[L++] = v;
      }
      for (i = 0, j = 0; i < l; i += 4, j += 3) {
        tmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3));
        push((tmp & 0xFF0000) >> 16);
        push((tmp & 0xFF00) >> 8);
        push(tmp & 0xFF);
      }
      if (placeHolders === 2) {
        tmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4);
        push(tmp & 0xFF);
      } else if (placeHolders === 1) {
        tmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2);
        push((tmp >> 8) & 0xFF);
        push(tmp & 0xFF);
      }
      return arr;
    }
    function uint8ToBase64(uint8) {
      var i,
          extraBytes = uint8.length % 3,
          output = "",
          temp,
          length;
      function encode(num) {
        return lookup.charAt(num);
      }
      function tripletToBase64(num) {
        return encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F);
      }
      for (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {
        temp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
        output += tripletToBase64(temp);
      }
      switch (extraBytes) {
        case 1:
          temp = uint8[uint8.length - 1];
          output += encode(temp >> 2);
          output += encode((temp << 4) & 0x3F);
          output += '==';
          break;
        case 2:
          temp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1]);
          output += encode(temp >> 10);
          output += encode((temp >> 4) & 0x3F);
          output += encode((temp << 2) & 0x3F);
          output += '=';
          break;
      }
      return output;
    }
    exports.toByteArray = b64ToByteArray;
    exports.fromByteArray = uint8ToBase64;
  }(typeof exports === 'undefined' ? (this.base64js = {}) : exports));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:base64-js@0.0.8", ["npm:base64-js@0.0.8/lib/b64"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:base64-js@0.0.8/lib/b64');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:buffer@3.5.2/index", ["npm:base64-js@0.0.8", "npm:ieee754@1.1.6", "npm:is-array@1.0.1"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var base64 = $__require('npm:base64-js@0.0.8');
  var ieee754 = $__require('npm:ieee754@1.1.6');
  var isArray = $__require('npm:is-array@1.0.1');
  exports.Buffer = Buffer;
  exports.SlowBuffer = SlowBuffer;
  exports.INSPECT_MAX_BYTES = 50;
  Buffer.poolSize = 8192;
  var rootParent = {};
  Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();
  function typedArraySupport() {
    function Bar() {}
    try {
      var arr = new Uint8Array(1);
      arr.foo = function() {
        return 42;
      };
      arr.constructor = Bar;
      return arr.foo() === 42 && arr.constructor === Bar && typeof arr.subarray === 'function' && arr.subarray(1, 1).byteLength === 0;
    } catch (e) {
      return false;
    }
  }
  function kMaxLength() {
    return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;
  }
  function Buffer(arg) {
    if (!(this instanceof Buffer)) {
      if (arguments.length > 1)
        return new Buffer(arg, arguments[1]);
      return new Buffer(arg);
    }
    this.length = 0;
    this.parent = undefined;
    if (typeof arg === 'number') {
      return fromNumber(this, arg);
    }
    if (typeof arg === 'string') {
      return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8');
    }
    return fromObject(this, arg);
  }
  function fromNumber(that, length) {
    that = allocate(that, length < 0 ? 0 : checked(length) | 0);
    if (!Buffer.TYPED_ARRAY_SUPPORT) {
      for (var i = 0; i < length; i++) {
        that[i] = 0;
      }
    }
    return that;
  }
  function fromString(that, string, encoding) {
    if (typeof encoding !== 'string' || encoding === '')
      encoding = 'utf8';
    var length = byteLength(string, encoding) | 0;
    that = allocate(that, length);
    that.write(string, encoding);
    return that;
  }
  function fromObject(that, object) {
    if (Buffer.isBuffer(object))
      return fromBuffer(that, object);
    if (isArray(object))
      return fromArray(that, object);
    if (object == null) {
      throw new TypeError('must start with number, buffer, array or string');
    }
    if (typeof ArrayBuffer !== 'undefined') {
      if (object.buffer instanceof ArrayBuffer) {
        return fromTypedArray(that, object);
      }
      if (object instanceof ArrayBuffer) {
        return fromArrayBuffer(that, object);
      }
    }
    if (object.length)
      return fromArrayLike(that, object);
    return fromJsonObject(that, object);
  }
  function fromBuffer(that, buffer) {
    var length = checked(buffer.length) | 0;
    that = allocate(that, length);
    buffer.copy(that, 0, 0, length);
    return that;
  }
  function fromArray(that, array) {
    var length = checked(array.length) | 0;
    that = allocate(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that;
  }
  function fromTypedArray(that, array) {
    var length = checked(array.length) | 0;
    that = allocate(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that;
  }
  function fromArrayBuffer(that, array) {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      array.byteLength;
      that = Buffer._augment(new Uint8Array(array));
    } else {
      that = fromTypedArray(that, new Uint8Array(array));
    }
    return that;
  }
  function fromArrayLike(that, array) {
    var length = checked(array.length) | 0;
    that = allocate(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that;
  }
  function fromJsonObject(that, object) {
    var array;
    var length = 0;
    if (object.type === 'Buffer' && isArray(object.data)) {
      array = object.data;
      length = checked(array.length) | 0;
    }
    that = allocate(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that;
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    Buffer.prototype.__proto__ = Uint8Array.prototype;
    Buffer.__proto__ = Uint8Array;
  }
  function allocate(that, length) {
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      that = Buffer._augment(new Uint8Array(length));
      that.__proto__ = Buffer.prototype;
    } else {
      that.length = length;
      that._isBuffer = true;
    }
    var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1;
    if (fromPool)
      that.parent = rootParent;
    return that;
  }
  function checked(length) {
    if (length >= kMaxLength()) {
      throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');
    }
    return length | 0;
  }
  function SlowBuffer(subject, encoding) {
    if (!(this instanceof SlowBuffer))
      return new SlowBuffer(subject, encoding);
    var buf = new Buffer(subject, encoding);
    delete buf.parent;
    return buf;
  }
  Buffer.isBuffer = function isBuffer(b) {
    return !!(b != null && b._isBuffer);
  };
  Buffer.compare = function compare(a, b) {
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
      throw new TypeError('Arguments must be Buffers');
    }
    if (a === b)
      return 0;
    var x = a.length;
    var y = b.length;
    var i = 0;
    var len = Math.min(x, y);
    while (i < len) {
      if (a[i] !== b[i])
        break;
      ++i;
    }
    if (i !== len) {
      x = a[i];
      y = b[i];
    }
    if (x < y)
      return -1;
    if (y < x)
      return 1;
    return 0;
  };
  Buffer.isEncoding = function isEncoding(encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'binary':
      case 'base64':
      case 'raw':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true;
      default:
        return false;
    }
  };
  Buffer.concat = function concat(list, length) {
    if (!isArray(list))
      throw new TypeError('list argument must be an Array of Buffers.');
    if (list.length === 0) {
      return new Buffer(0);
    }
    var i;
    if (length === undefined) {
      length = 0;
      for (i = 0; i < list.length; i++) {
        length += list[i].length;
      }
    }
    var buf = new Buffer(length);
    var pos = 0;
    for (i = 0; i < list.length; i++) {
      var item = list[i];
      item.copy(buf, pos);
      pos += item.length;
    }
    return buf;
  };
  function byteLength(string, encoding) {
    if (typeof string !== 'string')
      string = '' + string;
    var len = string.length;
    if (len === 0)
      return 0;
    var loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case 'ascii':
        case 'binary':
        case 'raw':
        case 'raws':
          return len;
        case 'utf8':
        case 'utf-8':
          return utf8ToBytes(string).length;
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2;
        case 'hex':
          return len >>> 1;
        case 'base64':
          return base64ToBytes(string).length;
        default:
          if (loweredCase)
            return utf8ToBytes(string).length;
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.byteLength = byteLength;
  Buffer.prototype.length = undefined;
  Buffer.prototype.parent = undefined;
  function slowToString(encoding, start, end) {
    var loweredCase = false;
    start = start | 0;
    end = end === undefined || end === Infinity ? this.length : end | 0;
    if (!encoding)
      encoding = 'utf8';
    if (start < 0)
      start = 0;
    if (end > this.length)
      end = this.length;
    if (end <= start)
      return '';
    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end);
        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end);
        case 'ascii':
          return asciiSlice(this, start, end);
        case 'binary':
          return binarySlice(this, start, end);
        case 'base64':
          return base64Slice(this, start, end);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end);
        default:
          if (loweredCase)
            throw new TypeError('Unknown encoding: ' + encoding);
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.prototype.toString = function toString() {
    var length = this.length | 0;
    if (length === 0)
      return '';
    if (arguments.length === 0)
      return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
  };
  Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b))
      throw new TypeError('Argument must be a Buffer');
    if (this === b)
      return true;
    return Buffer.compare(this, b) === 0;
  };
  Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    if (this.length > 0) {
      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
      if (this.length > max)
        str += ' ... ';
    }
    return '<Buffer ' + str + '>';
  };
  Buffer.prototype.compare = function compare(b) {
    if (!Buffer.isBuffer(b))
      throw new TypeError('Argument must be a Buffer');
    if (this === b)
      return 0;
    return Buffer.compare(this, b);
  };
  Buffer.prototype.indexOf = function indexOf(val, byteOffset) {
    if (byteOffset > 0x7fffffff)
      byteOffset = 0x7fffffff;
    else if (byteOffset < -0x80000000)
      byteOffset = -0x80000000;
    byteOffset >>= 0;
    if (this.length === 0)
      return -1;
    if (byteOffset >= this.length)
      return -1;
    if (byteOffset < 0)
      byteOffset = Math.max(this.length + byteOffset, 0);
    if (typeof val === 'string') {
      if (val.length === 0)
        return -1;
      return String.prototype.indexOf.call(this, val, byteOffset);
    }
    if (Buffer.isBuffer(val)) {
      return arrayIndexOf(this, val, byteOffset);
    }
    if (typeof val === 'number') {
      if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {
        return Uint8Array.prototype.indexOf.call(this, val, byteOffset);
      }
      return arrayIndexOf(this, [val], byteOffset);
    }
    function arrayIndexOf(arr, val, byteOffset) {
      var foundIndex = -1;
      for (var i = 0; byteOffset + i < arr.length; i++) {
        if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {
          if (foundIndex === -1)
            foundIndex = i;
          if (i - foundIndex + 1 === val.length)
            return byteOffset + foundIndex;
        } else {
          foundIndex = -1;
        }
      }
      return -1;
    }
    throw new TypeError('val must be string, number or Buffer');
  };
  Buffer.prototype.get = function get(offset) {
    console.log('.get() is deprecated. Access using array indexes instead.');
    return this.readUInt8(offset);
  };
  Buffer.prototype.set = function set(v, offset) {
    console.log('.set() is deprecated. Access using array indexes instead.');
    return this.writeUInt8(v, offset);
  };
  function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
      length = remaining;
    } else {
      length = Number(length);
      if (length > remaining) {
        length = remaining;
      }
    }
    var strLen = string.length;
    if (strLen % 2 !== 0)
      throw new Error('Invalid hex string');
    if (length > strLen / 2) {
      length = strLen / 2;
    }
    for (var i = 0; i < length; i++) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (isNaN(parsed))
        throw new Error('Invalid hex string');
      buf[offset + i] = parsed;
    }
    return i;
  }
  function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
  }
  function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
  }
  function binaryWrite(buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length);
  }
  function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
  }
  function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
  }
  Buffer.prototype.write = function write(string, offset, length, encoding) {
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    } else if (isFinite(offset)) {
      offset = offset | 0;
      if (isFinite(length)) {
        length = length | 0;
        if (encoding === undefined)
          encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    } else {
      var swap = encoding;
      encoding = offset;
      offset = length | 0;
      length = swap;
    }
    var remaining = this.length - offset;
    if (length === undefined || length > remaining)
      length = remaining;
    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
      throw new RangeError('attempt to write outside buffer bounds');
    }
    if (!encoding)
      encoding = 'utf8';
    var loweredCase = false;
    for (; ; ) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length);
        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length);
        case 'ascii':
          return asciiWrite(this, string, offset, length);
        case 'binary':
          return binaryWrite(this, string, offset, length);
        case 'base64':
          return base64Write(this, string, offset, length);
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length);
        default:
          if (loweredCase)
            throw new TypeError('Unknown encoding: ' + encoding);
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };
  Buffer.prototype.toJSON = function toJSON() {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    };
  };
  function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
      return base64.fromByteArray(buf);
    } else {
      return base64.fromByteArray(buf.slice(start, end));
    }
  }
  function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = (firstByte > 0xEF) ? 4 : (firstByte > 0xDF) ? 3 : (firstByte > 0xBF) ? 2 : 1;
      if (i + bytesPerSequence <= end) {
        var secondByte,
            thirdByte,
            fourthByte,
            tempCodePoint;
        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }
            break;
          case 2:
            secondByte = buf[i + 1];
            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }
            break;
          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }
        }
      }
      if (codePoint === null) {
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }
      res.push(codePoint);
      i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
  }
  var MAX_ARGUMENTS_LENGTH = 0x1000;
  function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints);
    }
    var res = '';
    var i = 0;
    while (i < len) {
      res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }
    return res;
  }
  function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for (var i = start; i < end; i++) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }
    return ret;
  }
  function binarySlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for (var i = start; i < end; i++) {
      ret += String.fromCharCode(buf[i]);
    }
    return ret;
  }
  function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0)
      start = 0;
    if (!end || end < 0 || end > len)
      end = len;
    var out = '';
    for (var i = start; i < end; i++) {
      out += toHex(buf[i]);
    }
    return out;
  }
  function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res;
  }
  Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
      start += len;
      if (start < 0)
        start = 0;
    } else if (start > len) {
      start = len;
    }
    if (end < 0) {
      end += len;
      if (end < 0)
        end = 0;
    } else if (end > len) {
      end = len;
    }
    if (end < start)
      end = start;
    var newBuf;
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      newBuf = Buffer._augment(this.subarray(start, end));
    } else {
      var sliceLen = end - start;
      newBuf = new Buffer(sliceLen, undefined);
      for (var i = 0; i < sliceLen; i++) {
        newBuf[i] = this[i + start];
      }
    }
    if (newBuf.length)
      newBuf.parent = this.parent || this;
    return newBuf;
  };
  function checkOffset(offset, ext, length) {
    if ((offset % 1) !== 0 || offset < 0)
      throw new RangeError('offset is not uint');
    if (offset + ext > length)
      throw new RangeError('Trying to access beyond buffer length');
  }
  Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    return val;
  };
  Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }
    var val = this[offset + --byteLength];
    var mul = 1;
    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }
    return val;
  };
  Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 1, this.length);
    return this[offset];
  };
  Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    return this[offset] | (this[offset + 1] << 8);
  };
  Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    return (this[offset] << 8) | this[offset + 1];
  };
  Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ((this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16)) + (this[offset + 3] * 0x1000000);
  };
  Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset] * 0x1000000) + ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3]);
  };
  Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    mul *= 0x80;
    if (val >= mul)
      val -= Math.pow(2, 8 * byteLength);
    return val;
  };
  Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }
    mul *= 0x80;
    if (val >= mul)
      val -= Math.pow(2, 8 * byteLength);
    return val;
  };
  Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80))
      return (this[offset]);
    return ((0xff - this[offset] + 1) * -1);
  };
  Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    var val = this[offset] | (this[offset + 1] << 8);
    return (val & 0x8000) ? val | 0xFFFF0000 : val;
  };
  Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | (this[offset] << 8);
    return (val & 0x8000) ? val | 0xFFFF0000 : val;
  };
  Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset]) | (this[offset + 1] << 8) | (this[offset + 2] << 16) | (this[offset + 3] << 24);
  };
  Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return (this[offset] << 24) | (this[offset + 1] << 16) | (this[offset + 2] << 8) | (this[offset + 3]);
  };
  Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
  };
  Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
  };
  Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
  };
  Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    if (!noAssert)
      checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
  };
  function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf))
      throw new TypeError('buffer must be a Buffer instance');
    if (value > max || value < min)
      throw new RangeError('value is out of bounds');
    if (offset + ext > buf.length)
      throw new RangeError('index out of range');
  }
  Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);
    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = (value / mul) & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert)
      checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0);
    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = (value / mul) & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 1, 0xff, 0);
    if (!Buffer.TYPED_ARRAY_SUPPORT)
      value = Math.floor(value);
    this[offset] = (value & 0xff);
    return offset + 1;
  };
  function objectWriteUInt16(buf, value, offset, littleEndian) {
    if (value < 0)
      value = 0xffff + value + 1;
    for (var i = 0,
        j = Math.min(buf.length - offset, 2); i < j; i++) {
      buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>> (littleEndian ? i : 1 - i) * 8;
    }
  }
  Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0xffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
    } else {
      objectWriteUInt16(this, value, offset, true);
    }
    return offset + 2;
  };
  Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0xffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 8);
      this[offset + 1] = (value & 0xff);
    } else {
      objectWriteUInt16(this, value, offset, false);
    }
    return offset + 2;
  };
  function objectWriteUInt32(buf, value, offset, littleEndian) {
    if (value < 0)
      value = 0xffffffff + value + 1;
    for (var i = 0,
        j = Math.min(buf.length - offset, 4); i < j; i++) {
      buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
    }
  }
  Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0xffffffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset + 3] = (value >>> 24);
      this[offset + 2] = (value >>> 16);
      this[offset + 1] = (value >>> 8);
      this[offset] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, true);
    }
    return offset + 4;
  };
  Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0xffffffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 24);
      this[offset + 1] = (value >>> 16);
      this[offset + 2] = (value >>> 8);
      this[offset + 3] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, false);
    }
    return offset + 4;
  };
  Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = 0;
    var mul = 1;
    var sub = value < 0 ? 1 : 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);
      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = byteLength - 1;
    var mul = 1;
    var sub = value < 0 ? 1 : 0;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
  };
  Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 1, 0x7f, -0x80);
    if (!Buffer.TYPED_ARRAY_SUPPORT)
      value = Math.floor(value);
    if (value < 0)
      value = 0xff + value + 1;
    this[offset] = (value & 0xff);
    return offset + 1;
  };
  Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
    } else {
      objectWriteUInt16(this, value, offset, true);
    }
    return offset + 2;
  };
  Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 8);
      this[offset + 1] = (value & 0xff);
    } else {
      objectWriteUInt16(this, value, offset, false);
    }
    return offset + 2;
  };
  Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
      this[offset + 2] = (value >>> 16);
      this[offset + 3] = (value >>> 24);
    } else {
      objectWriteUInt32(this, value, offset, true);
    }
    return offset + 4;
  };
  Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert)
      checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (value < 0)
      value = 0xffffffff + value + 1;
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 24);
      this[offset + 1] = (value >>> 16);
      this[offset + 2] = (value >>> 8);
      this[offset + 3] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, false);
    }
    return offset + 4;
  };
  function checkIEEE754(buf, value, offset, ext, max, min) {
    if (value > max || value < min)
      throw new RangeError('value is out of bounds');
    if (offset + ext > buf.length)
      throw new RangeError('index out of range');
    if (offset < 0)
      throw new RangeError('index out of range');
  }
  function writeFloat(buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
  }
  Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
  };
  Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
  };
  function writeDouble(buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
    }
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
  }
  Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
  };
  Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
  };
  Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!start)
      start = 0;
    if (!end && end !== 0)
      end = this.length;
    if (targetStart >= target.length)
      targetStart = target.length;
    if (!targetStart)
      targetStart = 0;
    if (end > 0 && end < start)
      end = start;
    if (end === start)
      return 0;
    if (target.length === 0 || this.length === 0)
      return 0;
    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds');
    }
    if (start < 0 || start >= this.length)
      throw new RangeError('sourceStart out of bounds');
    if (end < 0)
      throw new RangeError('sourceEnd out of bounds');
    if (end > this.length)
      end = this.length;
    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }
    var len = end - start;
    var i;
    if (this === target && start < targetStart && targetStart < end) {
      for (i = len - 1; i >= 0; i--) {
        target[i + targetStart] = this[i + start];
      }
    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
      for (i = 0; i < len; i++) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      target._set(this.subarray(start, start + len), targetStart);
    }
    return len;
  };
  Buffer.prototype.fill = function fill(value, start, end) {
    if (!value)
      value = 0;
    if (!start)
      start = 0;
    if (!end)
      end = this.length;
    if (end < start)
      throw new RangeError('end < start');
    if (end === start)
      return;
    if (this.length === 0)
      return;
    if (start < 0 || start >= this.length)
      throw new RangeError('start out of bounds');
    if (end < 0 || end > this.length)
      throw new RangeError('end out of bounds');
    var i;
    if (typeof value === 'number') {
      for (i = start; i < end; i++) {
        this[i] = value;
      }
    } else {
      var bytes = utf8ToBytes(value.toString());
      var len = bytes.length;
      for (i = start; i < end; i++) {
        this[i] = bytes[i % len];
      }
    }
    return this;
  };
  Buffer.prototype.toArrayBuffer = function toArrayBuffer() {
    if (typeof Uint8Array !== 'undefined') {
      if (Buffer.TYPED_ARRAY_SUPPORT) {
        return (new Buffer(this)).buffer;
      } else {
        var buf = new Uint8Array(this.length);
        for (var i = 0,
            len = buf.length; i < len; i += 1) {
          buf[i] = this[i];
        }
        return buf.buffer;
      }
    } else {
      throw new TypeError('Buffer.toArrayBuffer not supported in this browser');
    }
  };
  var BP = Buffer.prototype;
  Buffer._augment = function _augment(arr) {
    arr.constructor = Buffer;
    arr._isBuffer = true;
    arr._set = arr.set;
    arr.get = BP.get;
    arr.set = BP.set;
    arr.write = BP.write;
    arr.toString = BP.toString;
    arr.toLocaleString = BP.toString;
    arr.toJSON = BP.toJSON;
    arr.equals = BP.equals;
    arr.compare = BP.compare;
    arr.indexOf = BP.indexOf;
    arr.copy = BP.copy;
    arr.slice = BP.slice;
    arr.readUIntLE = BP.readUIntLE;
    arr.readUIntBE = BP.readUIntBE;
    arr.readUInt8 = BP.readUInt8;
    arr.readUInt16LE = BP.readUInt16LE;
    arr.readUInt16BE = BP.readUInt16BE;
    arr.readUInt32LE = BP.readUInt32LE;
    arr.readUInt32BE = BP.readUInt32BE;
    arr.readIntLE = BP.readIntLE;
    arr.readIntBE = BP.readIntBE;
    arr.readInt8 = BP.readInt8;
    arr.readInt16LE = BP.readInt16LE;
    arr.readInt16BE = BP.readInt16BE;
    arr.readInt32LE = BP.readInt32LE;
    arr.readInt32BE = BP.readInt32BE;
    arr.readFloatLE = BP.readFloatLE;
    arr.readFloatBE = BP.readFloatBE;
    arr.readDoubleLE = BP.readDoubleLE;
    arr.readDoubleBE = BP.readDoubleBE;
    arr.writeUInt8 = BP.writeUInt8;
    arr.writeUIntLE = BP.writeUIntLE;
    arr.writeUIntBE = BP.writeUIntBE;
    arr.writeUInt16LE = BP.writeUInt16LE;
    arr.writeUInt16BE = BP.writeUInt16BE;
    arr.writeUInt32LE = BP.writeUInt32LE;
    arr.writeUInt32BE = BP.writeUInt32BE;
    arr.writeIntLE = BP.writeIntLE;
    arr.writeIntBE = BP.writeIntBE;
    arr.writeInt8 = BP.writeInt8;
    arr.writeInt16LE = BP.writeInt16LE;
    arr.writeInt16BE = BP.writeInt16BE;
    arr.writeInt32LE = BP.writeInt32LE;
    arr.writeInt32BE = BP.writeInt32BE;
    arr.writeFloatLE = BP.writeFloatLE;
    arr.writeFloatBE = BP.writeFloatBE;
    arr.writeDoubleLE = BP.writeDoubleLE;
    arr.writeDoubleBE = BP.writeDoubleBE;
    arr.fill = BP.fill;
    arr.inspect = BP.inspect;
    arr.toArrayBuffer = BP.toArrayBuffer;
    return arr;
  };
  var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;
  function base64clean(str) {
    str = stringtrim(str).replace(INVALID_BASE64_RE, '');
    if (str.length < 2)
      return '';
    while (str.length % 4 !== 0) {
      str = str + '=';
    }
    return str;
  }
  function stringtrim(str) {
    if (str.trim)
      return str.trim();
    return str.replace(/^\s+|\s+$/g, '');
  }
  function toHex(n) {
    if (n < 16)
      return '0' + n.toString(16);
    return n.toString(16);
  }
  function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for (var i = 0; i < length; i++) {
      codePoint = string.charCodeAt(i);
      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        if (!leadSurrogate) {
          if (codePoint > 0xDBFF) {
            if ((units -= 3) > -1)
              bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          } else if (i + 1 === length) {
            if ((units -= 3) > -1)
              bytes.push(0xEF, 0xBF, 0xBD);
            continue;
          }
          leadSurrogate = codePoint;
          continue;
        }
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1)
            bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue;
        }
        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        if ((units -= 3) > -1)
          bytes.push(0xEF, 0xBF, 0xBD);
      }
      leadSurrogate = null;
      if (codePoint < 0x80) {
        if ((units -= 1) < 0)
          break;
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0)
          break;
        bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0)
          break;
        bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0)
          break;
        bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
      } else {
        throw new Error('Invalid code point');
      }
    }
    return bytes;
  }
  function asciiToBytes(str) {
    var byteArray = [];
    for (var i = 0; i < str.length; i++) {
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }
    return byteArray;
  }
  function utf16leToBytes(str, units) {
    var c,
        hi,
        lo;
    var byteArray = [];
    for (var i = 0; i < str.length; i++) {
      if ((units -= 2) < 0)
        break;
      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }
    return byteArray;
  }
  function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
  }
  function blitBuffer(src, dst, offset, length) {
    for (var i = 0; i < length; i++) {
      if ((i + offset >= dst.length) || (i >= src.length))
        break;
      dst[i + offset] = src[i];
    }
    return i;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:buffer@3.5.2", ["npm:buffer@3.5.2/index"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:buffer@3.5.2/index');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-buffer@0.1.0/index", ["npm:buffer@3.5.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = System._nodeRequire ? System._nodeRequire('buffer') : $__require('npm:buffer@3.5.2');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-buffer@0.1.0", ["github:jspm/nodelibs-buffer@0.1.0/index"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('github:jspm/nodelibs-buffer@0.1.0/index');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/buffer", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "github:jspm/nodelibs-buffer@0.1.0"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(Buffer) {
    'use strict';
    exports.__esModule = true;
    exports['default'] = buffer;
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : {'default': obj};
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== 'function' && superClass !== null) {
        throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
          value: subClass,
          enumerable: false,
          writable: true,
          configurable: true
        }});
      if (superClass)
        Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError('Cannot call a class as a function');
      }
    }
    var _Subscriber3 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
    var _Subscriber4 = _interopRequireDefault(_Subscriber3);
    function buffer(closingNotifier) {
      return this.lift(new BufferOperator(closingNotifier));
    }
    var BufferOperator = (function() {
      function BufferOperator(closingNotifier) {
        _classCallCheck(this, BufferOperator);
        this.closingNotifier = closingNotifier;
      }
      BufferOperator.prototype.call = function call(subscriber) {
        return new BufferSubscriber(subscriber, this.closingNotifier);
      };
      return BufferOperator;
    })();
    var BufferSubscriber = (function(_Subscriber) {
      _inherits(BufferSubscriber, _Subscriber);
      function BufferSubscriber(destination, closingNotifier) {
        _classCallCheck(this, BufferSubscriber);
        _Subscriber.call(this, destination);
        this.buffer = [];
        this.notifierSubscriber = null;
        this.notifierSubscriber = new BufferClosingNotifierSubscriber(this);
        this.add(closingNotifier._subscribe(this.notifierSubscriber));
      }
      BufferSubscriber.prototype._next = function _next(value) {
        this.buffer.push(value);
      };
      BufferSubscriber.prototype._error = function _error(err) {
        this.destination.error(err);
      };
      BufferSubscriber.prototype._complete = function _complete() {
        this.destination.complete();
      };
      BufferSubscriber.prototype.flushBuffer = function flushBuffer() {
        var buffer = this.buffer;
        this.buffer = [];
        this.destination.next(buffer);
        if (this.isUnsubscribed) {
          this.notifierSubscriber.unsubscribe();
        }
      };
      return BufferSubscriber;
    })(_Subscriber4['default']);
    var BufferClosingNotifierSubscriber = (function(_Subscriber2) {
      _inherits(BufferClosingNotifierSubscriber, _Subscriber2);
      function BufferClosingNotifierSubscriber(parent) {
        _classCallCheck(this, BufferClosingNotifierSubscriber);
        _Subscriber2.call(this, null);
        this.parent = parent;
      }
      BufferClosingNotifierSubscriber.prototype._next = function _next(value) {
        this.parent.flushBuffer();
      };
      BufferClosingNotifierSubscriber.prototype._error = function _error(err) {
        this.parent.error(err);
      };
      BufferClosingNotifierSubscriber.prototype._complete = function _complete() {
        this.parent.complete();
      };
      return BufferClosingNotifierSubscriber;
    })(_Subscriber4['default']);
    module.exports = exports['default'];
  })($__require('github:jspm/nodelibs-buffer@0.1.0').Buffer);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  var _utilSymbol_iterator = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator');
  var _utilSymbol_iterator2 = _interopRequireDefault(_utilSymbol_iterator);
  var isArray = Array.isArray;
  var ZipOperator = (function() {
    function ZipOperator(project) {
      _classCallCheck(this, ZipOperator);
      this.project = project;
    }
    ZipOperator.prototype.call = function call(subscriber) {
      return new ZipSubscriber(subscriber, this.project);
    };
    return ZipOperator;
  })();
  exports.ZipOperator = ZipOperator;
  var ZipSubscriber = (function(_Subscriber) {
    _inherits(ZipSubscriber, _Subscriber);
    function ZipSubscriber(destination, project) {
      var values = arguments.length <= 2 || arguments[2] === undefined ? Object.create(null) : arguments[2];
      _classCallCheck(this, ZipSubscriber);
      _Subscriber.call(this, destination);
      this.index = 0;
      this.iterators = [];
      this.active = 0;
      this.project = typeof project === 'function' ? project : null;
      this.values = values;
    }
    ZipSubscriber.prototype._next = function _next(value) {
      var iterators = this.iterators;
      var index = this.index++;
      if (isArray(value)) {
        iterators.push(new StaticArrayIterator(value));
      } else if (typeof value[_utilSymbol_iterator2['default']] === 'function') {
        iterators.push(new StaticIterator(value[_utilSymbol_iterator2['default']]()));
      } else {
        iterators.push(new ZipBufferIterator(this.destination, this, value, index));
      }
    };
    ZipSubscriber.prototype._complete = function _complete() {
      var iterators = this.iterators;
      var len = iterators.length;
      this.active = len;
      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];
        if (iterator.stillUnsubscribed) {
          iterator.subscribe(iterator, i);
        } else {
          this.active--;
        }
      }
    };
    ZipSubscriber.prototype.notifyInactive = function notifyInactive() {
      this.active--;
      if (this.active === 0) {
        this.destination.complete();
      }
    };
    ZipSubscriber.prototype.checkIterators = function checkIterators() {
      var iterators = this.iterators;
      var len = iterators.length;
      var destination = this.destination;
      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];
        if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
          return;
        }
      }
      var shouldComplete = false;
      var args = [];
      for (var i = 0; i < len; i++) {
        var iterator = iterators[i];
        var result = iterator.next();
        if (iterator.hasCompleted()) {
          shouldComplete = true;
        }
        if (result.done) {
          destination.complete();
          return;
        }
        args.push(result.value);
      }
      var project = this.project;
      if (project) {
        var result = _utilTryCatch2['default'](project).apply(this, args);
        if (result === _utilErrorObject.errorObject) {
          destination.error(_utilErrorObject.errorObject.e);
        } else {
          destination.next(result);
        }
      } else {
        destination.next(args);
      }
      if (shouldComplete) {
        destination.complete();
      }
    };
    return ZipSubscriber;
  })(_Subscriber3['default']);
  exports.ZipSubscriber = ZipSubscriber;
  var StaticIterator = (function() {
    function StaticIterator(iterator) {
      _classCallCheck(this, StaticIterator);
      this.iterator = iterator;
      this.nextResult = iterator.next();
    }
    StaticIterator.prototype.hasValue = function hasValue() {
      return true;
    };
    StaticIterator.prototype.next = function next() {
      var result = this.nextResult;
      this.nextResult = this.iterator.next();
      return result;
    };
    StaticIterator.prototype.hasCompleted = function hasCompleted() {
      var nextResult = this.nextResult;
      return nextResult && nextResult.done;
    };
    return StaticIterator;
  })();
  var StaticArrayIterator = (function() {
    function StaticArrayIterator(array) {
      _classCallCheck(this, StaticArrayIterator);
      this.array = array;
      this.index = 0;
      this.length = 0;
      this.length = array.length;
    }
    StaticArrayIterator.prototype[_utilSymbol_iterator2['default']] = function() {
      return this;
    };
    StaticArrayIterator.prototype.next = function next(value) {
      var i = this.index++;
      var array = this.array;
      return i < this.length ? {
        value: array[i],
        done: false
      } : {done: true};
    };
    StaticArrayIterator.prototype.hasValue = function hasValue() {
      return this.array.length > this.index;
    };
    StaticArrayIterator.prototype.hasCompleted = function hasCompleted() {
      return this.array.length === this.index;
    };
    return StaticArrayIterator;
  })();
  var ZipBufferIterator = (function(_OuterSubscriber) {
    _inherits(ZipBufferIterator, _OuterSubscriber);
    function ZipBufferIterator(destination, parent, observable, index) {
      _classCallCheck(this, ZipBufferIterator);
      _OuterSubscriber.call(this, destination);
      this.parent = parent;
      this.observable = observable;
      this.index = index;
      this.stillUnsubscribed = true;
      this.buffer = [];
      this.isComplete = false;
    }
    ZipBufferIterator.prototype[_utilSymbol_iterator2['default']] = function() {
      return this;
    };
    ZipBufferIterator.prototype.next = function next() {
      var buffer = this.buffer;
      if (buffer.length === 0 && this.isComplete) {
        return {done: true};
      } else {
        return {
          value: buffer.shift(),
          done: false
        };
      }
    };
    ZipBufferIterator.prototype.hasValue = function hasValue() {
      return this.buffer.length > 0;
    };
    ZipBufferIterator.prototype.hasCompleted = function hasCompleted() {
      return this.buffer.length === 0 && this.isComplete;
    };
    ZipBufferIterator.prototype.notifyComplete = function notifyComplete() {
      if (this.buffer.length > 0) {
        this.isComplete = true;
        this.parent.notifyInactive();
      } else {
        this.destination.complete();
      }
    };
    ZipBufferIterator.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      this.buffer.push(innerValue);
      this.parent.checkIterators();
    };
    ZipBufferIterator.prototype.subscribe = function subscribe(value, index) {
      this.add(_utilSubscribeToResult2['default'](this, this.observable, this, index));
    };
    return ZipBufferIterator;
  })(_OuterSubscriber3['default']);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-static", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = zip;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _zipSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-support');
  function zip() {
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    var project = observables[observables.length - 1];
    if (typeof project === 'function') {
      observables.pop();
    }
    return new _observablesArrayObservable2['default'](observables).lift(new _zipSupport.ZipOperator(project));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/TimerObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isNumeric", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _utilIsNumeric = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isNumeric');
  var _utilIsNumeric2 = _interopRequireDefault(_utilIsNumeric);
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  var TimerObservable = (function(_Observable) {
    _inherits(TimerObservable, _Observable);
    function TimerObservable(dueTime, period, scheduler) {
      if (dueTime === undefined)
        dueTime = 0;
      _classCallCheck(this, TimerObservable);
      _Observable.call(this);
      this.dueTime = dueTime;
      this.period = period;
      this.scheduler = scheduler;
      if (_utilIsNumeric2['default'](period)) {
        this._period = Number(period) < 1 && 1 || Number(period);
      } else if (period && typeof period.schedule === 'function') {
        scheduler = period;
      }
      if (!scheduler || typeof scheduler.schedule !== 'function') {
        scheduler = _schedulersNextTick2['default'];
      }
      this.scheduler = scheduler;
    }
    TimerObservable.create = function create(dueTime, period, scheduler) {
      if (dueTime === undefined)
        dueTime = 0;
      return new TimerObservable(dueTime, period, scheduler);
    };
    TimerObservable.dispatch = function dispatch(state) {
      var index = state.index;
      var period = state.period;
      var subscriber = state.subscriber;
      var action = this;
      subscriber.next(index);
      if (typeof period === 'undefined') {
        subscriber.complete();
        return;
      } else if (subscriber.isUnsubscribed) {
        return;
      }
      if (typeof action.delay === 'undefined') {
        action.add(action.scheduler.schedule(TimerObservable.dispatch, period, {
          index: index + 1,
          period: period,
          subscriber: subscriber
        }));
      } else {
        state.index = index + 1;
        action.schedule(state, period);
      }
    };
    TimerObservable.prototype._subscribe = function _subscribe(subscriber) {
      var index = 0;
      var period = this._period;
      var dueTime = this.dueTime;
      var scheduler = this.scheduler;
      subscriber.add(scheduler.schedule(TimerObservable.dispatch, dueTime, {
        index: index,
        period: period,
        subscriber: subscriber
      }));
    };
    return TimerObservable;
  })(_Observable3['default']);
  exports['default'] = TimerObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/RangeObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var RangeObservable = (function(_Observable) {
    _inherits(RangeObservable, _Observable);
    function RangeObservable(start, end, scheduler) {
      _classCallCheck(this, RangeObservable);
      _Observable.call(this);
      this.start = start;
      this.end = end;
      this.scheduler = scheduler;
    }
    RangeObservable.create = function create(start, end, scheduler) {
      if (start === undefined)
        start = 0;
      if (end === undefined)
        end = 0;
      return new RangeObservable(start, end, scheduler);
    };
    RangeObservable.dispatch = function dispatch(state) {
      var start = state.start;
      var index = state.index;
      var end = state.end;
      var subscriber = state.subscriber;
      if (index >= end) {
        subscriber.complete();
        return;
      }
      subscriber.next(start);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.index = index + 1;
      state.start = start + 1;
      this.schedule(state);
    };
    RangeObservable.prototype._subscribe = function _subscribe(subscriber) {
      var index = 0;
      var start = this.start;
      var end = this.end;
      var scheduler = this.scheduler;
      if (scheduler) {
        subscriber.add(scheduler.schedule(RangeObservable.dispatch, 0, {
          index: index,
          end: end,
          start: start,
          subscriber: subscriber
        }));
      } else {
        do {
          if (index++ >= end) {
            subscriber.complete();
            break;
          }
          subscriber.next(start++);
          if (subscriber.isUnsubscribed) {
            break;
          }
        } while (true);
      }
    };
    return RangeObservable;
  })(_Observable3['default']);
  exports['default'] = RangeObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/InfiniteObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var InfiniteObservable = (function(_Observable) {
    _inherits(InfiniteObservable, _Observable);
    function InfiniteObservable() {
      _classCallCheck(this, InfiniteObservable);
      _Observable.call(this);
    }
    InfiniteObservable.create = function create() {
      return new InfiniteObservable();
    };
    InfiniteObservable.prototype._subscribe = function _subscribe(subscriber) {};
    return InfiniteObservable;
  })(_Observable3['default']);
  exports['default'] = InfiniteObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  var MergeAllOperator = (function() {
    function MergeAllOperator(concurrent) {
      _classCallCheck(this, MergeAllOperator);
      this.concurrent = concurrent;
    }
    MergeAllOperator.prototype.call = function call(observer) {
      return new MergeAllSubscriber(observer, this.concurrent);
    };
    return MergeAllOperator;
  })();
  exports.MergeAllOperator = MergeAllOperator;
  var MergeAllSubscriber = (function(_OuterSubscriber) {
    _inherits(MergeAllSubscriber, _OuterSubscriber);
    function MergeAllSubscriber(destination, concurrent) {
      _classCallCheck(this, MergeAllSubscriber);
      _OuterSubscriber.call(this, destination);
      this.concurrent = concurrent;
      this.hasCompleted = false;
      this.buffer = [];
      this.active = 0;
    }
    MergeAllSubscriber.prototype._next = function _next(observable) {
      if (this.active < this.concurrent) {
        if (observable._isScalar) {
          this.destination.next(observable.value);
        } else {
          this.active++;
          this.add(_utilSubscribeToResult2['default'](this, observable));
        }
      } else {
        this.buffer.push(observable);
      }
    };
    MergeAllSubscriber.prototype._complete = function _complete() {
      this.hasCompleted = true;
      if (this.active === 0 && this.buffer.length === 0) {
        this.destination.complete();
      }
    };
    MergeAllSubscriber.prototype.notifyComplete = function notifyComplete(innerSub) {
      var buffer = this.buffer;
      this.remove(innerSub);
      this.active--;
      if (buffer.length > 0) {
        this._next(buffer.shift());
      } else if (this.active === 0 && this.hasCompleted) {
        this.destination.complete();
      }
    };
    return MergeAllSubscriber;
  })(_OuterSubscriber3['default']);
  exports.MergeAllSubscriber = MergeAllSubscriber;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge-static", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = merge;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _mergeAllSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll-support');
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  function merge() {
    var concurrent = Number.POSITIVE_INFINITY;
    var scheduler = _schedulersImmediate2['default'];
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    var last = observables[observables.length - 1];
    if (typeof last.schedule === 'function') {
      scheduler = observables.pop();
      if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
        concurrent = observables.pop();
      }
    } else if (typeof last === 'number') {
      concurrent = observables.pop();
    }
    if (observables.length === 1) {
      return observables[0];
    }
    return new _observablesArrayObservable2['default'](observables, scheduler).lift(new _mergeAllSupport.MergeAllOperator(concurrent));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:process@0.11.2/browser", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var process = module.exports = {};
  var queue = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;
  function cleanUpNextTick() {
    draining = false;
    if (currentQueue.length) {
      queue = currentQueue.concat(queue);
    } else {
      queueIndex = -1;
    }
    if (queue.length) {
      drainQueue();
    }
  }
  function drainQueue() {
    if (draining) {
      return;
    }
    var timeout = setTimeout(cleanUpNextTick);
    draining = true;
    var len = queue.length;
    while (len) {
      currentQueue = queue;
      queue = [];
      while (++queueIndex < len) {
        if (currentQueue) {
          currentQueue[queueIndex].run();
        }
      }
      queueIndex = -1;
      len = queue.length;
    }
    currentQueue = null;
    draining = false;
    clearTimeout(timeout);
  }
  process.nextTick = function(fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
      for (var i = 1; i < arguments.length; i++) {
        args[i - 1] = arguments[i];
      }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
      setTimeout(drainQueue, 0);
    }
  };
  function Item(fun, array) {
    this.fun = fun;
    this.array = array;
  }
  Item.prototype.run = function() {
    this.fun.apply(null, this.array);
  };
  process.title = 'browser';
  process.browser = true;
  process.env = {};
  process.argv = [];
  process.version = '';
  process.versions = {};
  function noop() {}
  process.on = noop;
  process.addListener = noop;
  process.once = noop;
  process.off = noop;
  process.removeListener = noop;
  process.removeAllListeners = noop;
  process.emit = noop;
  process.binding = function(name) {
    throw new Error('process.binding is not supported');
  };
  process.cwd = function() {
    return '/';
  };
  process.chdir = function(dir) {
    throw new Error('process.chdir is not supported');
  };
  process.umask = function() {
    return 0;
  };
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:process@0.11.2", ["npm:process@0.11.2/browser"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('npm:process@0.11.2/browser');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-process@0.1.2/index", ["npm:process@0.11.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = System._nodeRequire ? process : $__require('npm:process@0.11.2');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("github:jspm/nodelibs-process@0.1.2", ["github:jspm/nodelibs-process@0.1.2/index"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  module.exports = $__require('github:jspm/nodelibs-process@0.1.2/index');
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Immediate", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root", "github:jspm/nodelibs-process@0.1.2"], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  (function(process) {
    'use strict';
    exports.__esModule = true;
    var _root = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
    var Immediate = {
      setImmediate: function setImmediate(x) {
        return 0;
      },
      clearImmediate: function clearImmediate(id) {}
    };
    exports.Immediate = Immediate;
    if (_root.root && _root.root.setImmediate) {
      Immediate.setImmediate = _root.root.setImmediate;
      Immediate.clearImmediate = _root.root.clearImmediate;
    } else {
      exports.Immediate = Immediate = (function(global, Immediate) {
        var nextHandle = 1,
            tasksByHandle = {},
            currentlyRunningATask = false,
            doc = global.document,
            setImmediate = undefined;
        if (({}).toString.call(global.process) === '[object process]') {
          setImmediate = installNextTickImplementation();
        } else if (canUsePostMessage()) {
          setImmediate = installPostMessageImplementation();
        } else if (global.MessageChannel) {
          setImmediate = installMessageChannelImplementation();
        } else if (doc && 'onreadystatechange' in doc.createElement('script')) {
          setImmediate = installReadyStateChangeImplementation();
        } else {
          setImmediate = installSetTimeoutImplementation();
        }
        Immediate.setImmediate = setImmediate;
        Immediate.clearImmediate = clearImmediate;
        return Immediate;
        function clearImmediate(handle) {
          delete tasksByHandle[handle];
        }
        function addFromSetImmediateArguments(args) {
          tasksByHandle[nextHandle] = partiallyApplied.apply(undefined, args);
          return nextHandle++;
        }
        function partiallyApplied(handler) {
          for (var _len = arguments.length,
              args = Array(_len > 1 ? _len - 1 : 0),
              _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }
          return function() {
            if (typeof handler === 'function') {
              handler.apply(undefined, args);
            } else {
              new Function('' + handler)();
            }
          };
        }
        function runIfPresent(handle) {
          if (currentlyRunningATask) {
            setTimeout(partiallyApplied(runIfPresent, handle), 0);
          } else {
            var task = tasksByHandle[handle];
            if (task) {
              currentlyRunningATask = true;
              try {
                task();
              } finally {
                clearImmediate(handle);
                currentlyRunningATask = false;
              }
            }
          }
        }
        function installNextTickImplementation() {
          return function setImmediate() {
            var handle = addFromSetImmediateArguments(arguments);
            global.process.nextTick(partiallyApplied(runIfPresent, handle));
            return handle;
          };
        }
        function canUsePostMessage() {
          if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
              postMessageIsAsynchronous = false;
            };
            global.postMessage('', '*');
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
          }
        }
        function installPostMessageImplementation() {
          var messagePrefix = 'setImmediate$' + Math.random() + '$';
          var onGlobalMessage = function onGlobalMessage(event) {
            if (event.source === global && typeof event.data === 'string' && event.data.indexOf(messagePrefix) === 0) {
              runIfPresent(+event.data.slice(messagePrefix.length));
            }
          };
          if (global.addEventListener) {
            global.addEventListener('message', onGlobalMessage, false);
          } else {
            global.attachEvent('onmessage', onGlobalMessage);
          }
          return function setImmediate() {
            var handle = addFromSetImmediateArguments(arguments);
            global.postMessage(messagePrefix + handle, '*');
            return handle;
          };
        }
        function installMessageChannelImplementation() {
          var channel = new MessageChannel();
          channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
          };
          return function setImmediate() {
            var handle = addFromSetImmediateArguments(arguments);
            channel.port2.postMessage(handle);
            return handle;
          };
        }
        function installReadyStateChangeImplementation() {
          var html = doc.documentElement;
          return function setImmediate() {
            var handle = addFromSetImmediateArguments(arguments);
            var script = doc.createElement('script');
            script.onreadystatechange = function() {
              runIfPresent(handle);
              script.onreadystatechange = null;
              html.removeChild(script);
              script = null;
            };
            html.appendChild(script);
            return handle;
          };
        }
        function installSetTimeoutImplementation() {
          return function setImmediate() {
            var handle = addFromSetImmediateArguments(arguments);
            setTimeout(partiallyApplied(runIfPresent, handle), 0);
            return handle;
          };
        }
      })(_root.root, Immediate);
    }
  })($__require('github:jspm/nodelibs-process@0.1.2'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/NextTickAction", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Immediate", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _utilImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Immediate');
  var _ImmediateAction2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction');
  var _ImmediateAction3 = _interopRequireDefault(_ImmediateAction2);
  var NextTickAction = (function(_ImmediateAction) {
    _inherits(NextTickAction, _ImmediateAction);
    function NextTickAction() {
      _classCallCheck(this, NextTickAction);
      _ImmediateAction.apply(this, arguments);
    }
    NextTickAction.prototype.schedule = function schedule(state) {
      var _this = this;
      if (this.isUnsubscribed) {
        return this;
      }
      this.state = state;
      var scheduler = this.scheduler;
      scheduler.actions.push(this);
      if (!scheduler.scheduled) {
        scheduler.scheduled = true;
        this.id = _utilImmediate.Immediate.setImmediate(function() {
          _this.id = null;
          _this.scheduler.scheduled = false;
          _this.scheduler.flush();
        });
      }
      return this;
    };
    NextTickAction.prototype.unsubscribe = function unsubscribe() {
      var id = this.id;
      var scheduler = this.scheduler;
      _ImmediateAction.prototype.unsubscribe.call(this);
      if (scheduler.actions.length === 0) {
        scheduler.active = false;
        scheduler.scheduled = false;
      }
      if (id) {
        this.id = null;
        _utilImmediate.Immediate.clearImmediate(id);
      }
    };
    return NextTickAction;
  })(_ImmediateAction3['default']);
  exports['default'] = NextTickAction;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/NextTickScheduler", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateScheduler", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/NextTickAction", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ImmediateScheduler2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateScheduler');
  var _ImmediateScheduler3 = _interopRequireDefault(_ImmediateScheduler2);
  var _NextTickAction = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/NextTickAction');
  var _NextTickAction2 = _interopRequireDefault(_NextTickAction);
  var _ImmediateAction = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction');
  var _ImmediateAction2 = _interopRequireDefault(_ImmediateAction);
  var NextTickScheduler = (function(_ImmediateScheduler) {
    _inherits(NextTickScheduler, _ImmediateScheduler);
    function NextTickScheduler() {
      _classCallCheck(this, NextTickScheduler);
      _ImmediateScheduler.apply(this, arguments);
    }
    NextTickScheduler.prototype.scheduleNow = function scheduleNow(work, state) {
      return (this.scheduled ? new _ImmediateAction2['default'](this, work) : new _NextTickAction2['default'](this, work)).schedule(state);
    };
    return NextTickScheduler;
  })(_ImmediateScheduler3['default']);
  exports['default'] = NextTickScheduler;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/NextTickScheduler"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _NextTickScheduler = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/NextTickScheduler');
  var _NextTickScheduler2 = _interopRequireDefault(_NextTickScheduler);
  exports['default'] = new _NextTickScheduler2['default']();
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isNumeric", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports["default"] = isNumeric;
  var is_array = Array.isArray;
  function isNumeric(val) {
    return !is_array(val) && val - parseFloat(val) + 1 >= 0;
  }
  ;
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/IntervalObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isNumeric", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _utilIsNumeric = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/isNumeric');
  var _utilIsNumeric2 = _interopRequireDefault(_utilIsNumeric);
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  var IntervalObservable = (function(_Observable) {
    _inherits(IntervalObservable, _Observable);
    function IntervalObservable() {
      var period = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
      var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersNextTick2['default'] : arguments[1];
      _classCallCheck(this, IntervalObservable);
      _Observable.call(this);
      this.period = period;
      this.scheduler = scheduler;
      if (!_utilIsNumeric2['default'](period) || period < 0) {
        this.period = 0;
      }
      if (!scheduler || typeof scheduler.schedule !== 'function') {
        this.scheduler = _schedulersNextTick2['default'];
      }
    }
    IntervalObservable.create = function create() {
      var period = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];
      var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersNextTick2['default'] : arguments[1];
      return new IntervalObservable(period, scheduler);
    };
    IntervalObservable.dispatch = function dispatch(state) {
      var index = state.index;
      var subscriber = state.subscriber;
      var period = state.period;
      subscriber.next(index);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.index += 1;
      this.schedule(state, period);
    };
    IntervalObservable.prototype._subscribe = function _subscribe(subscriber) {
      var index = 0;
      var period = this.period;
      var scheduler = this.scheduler;
      subscriber.add(scheduler.schedule(IntervalObservable.dispatch, period, {
        index: index,
        subscriber: subscriber,
        period: period
      }));
    };
    return IntervalObservable;
  })(_Observable3['default']);
  exports['default'] = IntervalObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromEventPatternObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var FromEventPatternObservable = (function(_Observable) {
    _inherits(FromEventPatternObservable, _Observable);
    function FromEventPatternObservable(addHandler, removeHandler, selector) {
      _classCallCheck(this, FromEventPatternObservable);
      _Observable.call(this);
      this.addHandler = addHandler;
      this.removeHandler = removeHandler;
      this.selector = selector;
    }
    FromEventPatternObservable.create = function create(addHandler, removeHandler, selector) {
      return new FromEventPatternObservable(addHandler, removeHandler, selector);
    };
    FromEventPatternObservable.prototype._subscribe = function _subscribe(subscriber) {
      var addHandler = this.addHandler;
      var removeHandler = this.removeHandler;
      var selector = this.selector;
      var handler = selector ? function(e) {
        var result = _utilTryCatch2['default'](selector).apply(null, arguments);
        if (result === _utilErrorObject.errorObject) {
          subscriber.error(result.e);
        } else {
          subscriber.next(result);
        }
      } : function(e) {
        subscriber.next(e);
      };
      var result = _utilTryCatch2['default'](addHandler)(handler);
      if (result === _utilErrorObject.errorObject) {
        subscriber.error(result.e);
      }
      subscriber.add(new _Subscription2['default'](function() {
        removeHandler(handler);
      }));
    };
    return FromEventPatternObservable;
  })(_Observable3['default']);
  exports['default'] = FromEventPatternObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromEventObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var FromEventObservable = (function(_Observable) {
    _inherits(FromEventObservable, _Observable);
    function FromEventObservable(sourceObj, eventName, selector) {
      _classCallCheck(this, FromEventObservable);
      _Observable.call(this);
      this.sourceObj = sourceObj;
      this.eventName = eventName;
      this.selector = selector;
    }
    FromEventObservable.create = function create(sourceObj, eventName, selector) {
      return new FromEventObservable(sourceObj, eventName, selector);
    };
    FromEventObservable.setupSubscription = function setupSubscription(sourceObj, eventName, handler, subscriber) {
      var unsubscribe = undefined;
      var tag = sourceObj.toString();
      if (tag === '[object NodeList]' || tag === '[object HTMLCollection]') {
        for (var i = 0,
            len = sourceObj.length; i < len; i++) {
          FromEventObservable.setupSubscription(sourceObj[i], eventName, handler, subscriber);
        }
      } else if (typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function') {
        sourceObj.addEventListener(eventName, handler);
        unsubscribe = function() {
          return sourceObj.removeEventListener(eventName, handler);
        };
      } else if (typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function') {
        sourceObj.on(eventName, handler);
        unsubscribe = function() {
          return sourceObj.off(eventName, handler);
        };
      } else if (typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function') {
        sourceObj.addListener(eventName, handler);
        unsubscribe = function() {
          return sourceObj.removeListener(eventName, handler);
        };
      }
      subscriber.add(new _Subscription2['default'](unsubscribe));
    };
    FromEventObservable.prototype._subscribe = function _subscribe(subscriber) {
      var sourceObj = this.sourceObj;
      var eventName = this.eventName;
      var selector = this.selector;
      var handler = selector ? function(e) {
        var result = _utilTryCatch2['default'](selector)(e);
        if (result === _utilErrorObject.errorObject) {
          subscriber.error(result.e);
        } else {
          subscriber.next(result);
        }
      } : function(e) {
        return subscriber.next(e);
      };
      FromEventObservable.setupSubscription(sourceObj, eventName, handler, subscriber);
    };
    return FromEventObservable;
  })(_Observable3['default']);
  exports['default'] = FromEventObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable2 = _interopRequireDefault(_Observable);
  var Notification = (function() {
    function Notification(kind, value, exception) {
      _classCallCheck(this, Notification);
      this.kind = kind;
      this.value = value;
      this.exception = exception;
      this.hasValue = kind === 'N';
    }
    Notification.prototype.observe = function observe(observer) {
      switch (this.kind) {
        case 'N':
          return observer.next(this.value);
        case 'E':
          return observer.error(this.exception);
        case 'C':
          return observer.complete();
      }
    };
    Notification.prototype['do'] = function _do(next, error, complete) {
      var kind = this.kind;
      switch (kind) {
        case 'N':
          return next(this.value);
        case 'E':
          return error(this.exception);
        case 'C':
          return complete();
      }
    };
    Notification.prototype.accept = function accept(nextOrObserver, error, complete) {
      if (nextOrObserver && typeof nextOrObserver.next === 'function') {
        return this.observe(nextOrObserver);
      } else {
        return this['do'](nextOrObserver, error, complete);
      }
    };
    Notification.prototype.toObservable = function toObservable() {
      var kind = this.kind;
      var value = this.value;
      switch (kind) {
        case 'N':
          return _Observable2['default'].of(value);
        case 'E':
          return _Observable2['default']['throw'](value);
        case 'C':
          return _Observable2['default'].empty();
      }
    };
    Notification.createNext = function createNext(value) {
      if (typeof value !== 'undefined') {
        return new Notification('N', value);
      }
      return this.undefinedValueNotification;
    };
    Notification.createError = function createError(err) {
      return new Notification('E', undefined, err);
    };
    Notification.createComplete = function createComplete() {
      return this.completeNotification;
    };
    return Notification;
  })();
  exports['default'] = Notification;
  Notification.completeNotification = new Notification('C');
  Notification.undefinedValueNotification = new Notification('N', undefined);
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var _Notification = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification');
  var _Notification2 = _interopRequireDefault(_Notification);
  var ObserveOnOperator = (function() {
    function ObserveOnOperator(scheduler) {
      var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      _classCallCheck(this, ObserveOnOperator);
      this.delay = delay;
      this.scheduler = scheduler;
    }
    ObserveOnOperator.prototype.call = function call(subscriber) {
      return new ObserveOnSubscriber(subscriber, this.scheduler, this.delay);
    };
    return ObserveOnOperator;
  })();
  exports.ObserveOnOperator = ObserveOnOperator;
  var ObserveOnSubscriber = (function(_Subscriber) {
    _inherits(ObserveOnSubscriber, _Subscriber);
    function ObserveOnSubscriber(destination, scheduler) {
      var delay = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];
      _classCallCheck(this, ObserveOnSubscriber);
      _Subscriber.call(this, destination);
      this.delay = delay;
      this.scheduler = scheduler;
    }
    ObserveOnSubscriber.dispatch = function dispatch(_ref) {
      var notification = _ref.notification;
      var destination = _ref.destination;
      notification.observe(destination);
    };
    ObserveOnSubscriber.prototype._next = function _next(x) {
      this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(_Notification2['default'].createNext(x), this.destination)));
    };
    ObserveOnSubscriber.prototype._error = function _error(e) {
      this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(_Notification2['default'].createError(e), this.destination)));
    };
    ObserveOnSubscriber.prototype._complete = function _complete() {
      this.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(_Notification2['default'].createComplete(), this.destination)));
    };
    return ObserveOnSubscriber;
  })(_Subscriber3['default']);
  exports.ObserveOnSubscriber = ObserveOnSubscriber;
  var ObserveOnMessage = function ObserveOnMessage(notification, destination) {
    _classCallCheck(this, ObserveOnMessage);
    this.notification = notification;
    this.destination = destination;
  };
  ;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/IteratorObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _utilRoot = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
  var _utilSymbol_iterator = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator');
  var _utilSymbol_iterator2 = _interopRequireDefault(_utilSymbol_iterator);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var IteratorObservable = (function(_Observable) {
    _inherits(IteratorObservable, _Observable);
    function IteratorObservable(iterator, project, thisArg, scheduler) {
      _classCallCheck(this, IteratorObservable);
      _Observable.call(this);
      this.iterator = iterator;
      this.project = project;
      this.thisArg = thisArg;
      this.scheduler = scheduler;
    }
    IteratorObservable.create = function create(iterator, project, thisArg, scheduler) {
      if (iterator == null) {
        throw new Error('iterator cannot be null.');
      }
      if (project && typeof project !== 'function') {
        throw new Error('When provided, `project` must be a function.');
      }
      return new IteratorObservable(iterator, project, thisArg, scheduler);
    };
    IteratorObservable.dispatch = function dispatch(state) {
      var index = state.index;
      var hasError = state.hasError;
      var thisArg = state.thisArg;
      var project = state.project;
      var iterator = state.iterator;
      var subscriber = state.subscriber;
      if (hasError) {
        subscriber.error(state.error);
        return;
      }
      var result = iterator.next();
      if (result.done) {
        subscriber.complete();
        return;
      }
      if (project) {
        result = _utilTryCatch2['default'](project).call(thisArg, result.value, index);
        if (result === _utilErrorObject.errorObject) {
          state.error = _utilErrorObject.errorObject.e;
          state.hasError = true;
        } else {
          subscriber.next(result);
          state.index = index + 1;
        }
      } else {
        subscriber.next(result.value);
        state.index = index + 1;
      }
      if (subscriber.isUnsubscribed) {
        return;
      }
      this.schedule(state);
    };
    IteratorObservable.prototype._subscribe = function _subscribe(subscriber) {
      var index = 0;
      var project = this.project;
      var thisArg = this.thisArg;
      var iterator = getIterator(Object(this.iterator));
      var scheduler = this.scheduler;
      if (scheduler) {
        subscriber.add(scheduler.schedule(IteratorObservable.dispatch, 0, {
          index: index,
          thisArg: thisArg,
          project: project,
          iterator: iterator,
          subscriber: subscriber
        }));
      } else {
        do {
          var result = iterator.next();
          if (result.done) {
            subscriber.complete();
            break;
          } else if (project) {
            result = _utilTryCatch2['default'](project).call(thisArg, result.value, index++);
            if (result === _utilErrorObject.errorObject) {
              subscriber.error(_utilErrorObject.errorObject.e);
              break;
            }
            subscriber.next(result);
          } else {
            subscriber.next(result.value);
          }
          if (subscriber.isUnsubscribed) {
            break;
          }
        } while (true);
      }
    };
    return IteratorObservable;
  })(_Observable3['default']);
  exports['default'] = IteratorObservable;
  var maxSafeInteger = Math.pow(2, 53) - 1;
  var StringIterator = (function() {
    function StringIterator(str) {
      var idx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      var len = arguments.length <= 2 || arguments[2] === undefined ? str.length : arguments[2];
      return (function() {
        _classCallCheck(this, StringIterator);
        this.str = str;
        this.idx = idx;
        this.len = len;
      }).apply(this, arguments);
    }
    StringIterator.prototype[_utilSymbol_iterator2['default']] = function() {
      return this;
    };
    StringIterator.prototype.next = function next() {
      return this.idx < this.len ? {
        done: false,
        value: this.str.charAt(this.idx++)
      } : {
        done: true,
        value: undefined
      };
    };
    return StringIterator;
  })();
  var ArrayIterator = (function() {
    function ArrayIterator(arr) {
      var idx = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      var len = arguments.length <= 2 || arguments[2] === undefined ? toLength(arr) : arguments[2];
      return (function() {
        _classCallCheck(this, ArrayIterator);
        this.arr = arr;
        this.idx = idx;
        this.len = len;
      }).apply(this, arguments);
    }
    ArrayIterator.prototype[_utilSymbol_iterator2['default']] = function() {
      return this;
    };
    ArrayIterator.prototype.next = function next() {
      return this.idx < this.len ? {
        done: false,
        value: this.arr[this.idx++]
      } : {
        done: true,
        value: undefined
      };
    };
    return ArrayIterator;
  })();
  function getIterator(o) {
    var i = o[_utilSymbol_iterator2['default']];
    if (!i && typeof o === 'string') {
      return new StringIterator(o);
    }
    if (!i && o.length !== undefined) {
      return new ArrayIterator(o);
    }
    if (!i) {
      throw new TypeError('Object is not iterable');
    }
    return o[_utilSymbol_iterator2['default']]();
  }
  function toLength(o) {
    var len = +o.length;
    if (isNaN(len)) {
      return 0;
    }
    if (len === 0 || !numberIsFinite(len)) {
      return len;
    }
    len = sign(len) * Math.floor(Math.abs(len));
    if (len <= 0) {
      return 0;
    }
    if (len > maxSafeInteger) {
      return maxSafeInteger;
    }
    return len;
  }
  function numberIsFinite(value) {
    return typeof value === 'number' && _utilRoot.root.isFinite(value);
  }
  function sign(value) {
    var valueAsNumber = +value;
    if (valueAsNumber === 0) {
      return valueAsNumber;
    }
    if (isNaN(valueAsNumber)) {
      return valueAsNumber;
    }
    return valueAsNumber < 0 ? -1 : 1;
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  var PromiseObservable = (function(_Observable) {
    _inherits(PromiseObservable, _Observable);
    function PromiseObservable(promise, scheduler) {
      _classCallCheck(this, PromiseObservable);
      _Observable.call(this);
      this.promise = promise;
      this.scheduler = scheduler;
      this._isScalar = false;
    }
    PromiseObservable.create = function create(promise) {
      var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersImmediate2['default'] : arguments[1];
      return new PromiseObservable(promise, scheduler);
    };
    PromiseObservable.prototype._subscribe = function _subscribe(subscriber) {
      var _this = this;
      var scheduler = this.scheduler;
      var promise = this.promise;
      if (scheduler === _schedulersImmediate2['default']) {
        if (this._isScalar) {
          subscriber.next(this.value);
          subscriber.complete();
        } else {
          promise.then(function(value) {
            _this._isScalar = true;
            _this.value = value;
            subscriber.next(value);
            subscriber.complete();
          }, function(err) {
            return subscriber.error(err);
          }).then(null, function(err) {
            setTimeout(function() {
              throw err;
            });
          });
        }
      } else {
        var _ret = (function() {
          var subscription = new _Subscription2['default']();
          if (_this._isScalar) {
            var value = _this.value;
            subscription.add(scheduler.schedule(dispatchNext, 0, {
              value: value,
              subscriber: subscriber
            }));
          } else {
            promise.then(function(value) {
              _this._isScalar = true;
              _this.value = value;
              subscription.add(scheduler.schedule(dispatchNext, 0, {
                value: value,
                subscriber: subscriber
              }));
            }, function(err) {
              return subscription.add(scheduler.schedule(dispatchError, 0, {
                err: err,
                subscriber: subscriber
              }));
            }).then(null, function(err) {
              scheduler.schedule(function() {
                throw err;
              });
            });
          }
          return {v: subscription};
        })();
        if (typeof _ret === 'object')
          return _ret.v;
      }
    };
    return PromiseObservable;
  })(_Observable3['default']);
  exports['default'] = PromiseObservable;
  function dispatchNext(_ref) {
    var value = _ref.value;
    var subscriber = _ref.subscriber;
    subscriber.next(value);
    subscriber.complete();
  }
  function dispatchError(_ref2) {
    var err = _ref2.err;
    var subscriber = _ref2.subscriber;
    subscriber.error(err);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/IteratorObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn-support", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _PromiseObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable');
  var _PromiseObservable2 = _interopRequireDefault(_PromiseObservable);
  var _IteratorObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/IteratorObservable');
  var _IteratorObservable2 = _interopRequireDefault(_IteratorObservable);
  var _ArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _ArrayObservable2 = _interopRequireDefault(_ArrayObservable);
  var _utilSymbol_observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable');
  var _utilSymbol_observable2 = _interopRequireDefault(_utilSymbol_observable);
  var _utilSymbol_iterator = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator');
  var _utilSymbol_iterator2 = _interopRequireDefault(_utilSymbol_iterator);
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _operatorsObserveOnSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn-support');
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  var isArray = Array.isArray;
  var FromObservable = (function(_Observable) {
    _inherits(FromObservable, _Observable);
    function FromObservable(ish, scheduler) {
      _classCallCheck(this, FromObservable);
      _Observable.call(this, null);
      this.ish = ish;
      this.scheduler = scheduler;
    }
    FromObservable.create = function create(ish) {
      var scheduler = arguments.length <= 1 || arguments[1] === undefined ? _schedulersImmediate2['default'] : arguments[1];
      if (ish) {
        if (isArray(ish)) {
          return new _ArrayObservable2['default'](ish, scheduler);
        } else if (typeof ish.then === 'function') {
          return new _PromiseObservable2['default'](ish, scheduler);
        } else if (typeof ish[_utilSymbol_observable2['default']] === 'function') {
          if (ish instanceof _Observable3['default']) {
            return ish;
          }
          return new FromObservable(ish, scheduler);
        } else if (typeof ish[_utilSymbol_iterator2['default']] === 'function') {
          return new _IteratorObservable2['default'](ish, null, null, scheduler);
        }
      }
      throw new TypeError(typeof ish + ' is not observable');
    };
    FromObservable.prototype._subscribe = function _subscribe(subscriber) {
      var ish = this.ish;
      var scheduler = this.scheduler;
      if (scheduler === _schedulersImmediate2['default']) {
        return ish[_utilSymbol_observable2['default']]().subscribe(subscriber);
      } else {
        return ish[_utilSymbol_observable2['default']]().subscribe(new _operatorsObserveOnSupport.ObserveOnSubscriber(subscriber, scheduler, 0));
      }
    };
    return FromObservable;
  })(_Observable3['default']);
  exports['default'] = FromObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ForkJoinObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var ForkJoinObservable = (function(_Observable) {
    _inherits(ForkJoinObservable, _Observable);
    function ForkJoinObservable(observables) {
      _classCallCheck(this, ForkJoinObservable);
      _Observable.call(this);
      this.observables = observables;
    }
    ForkJoinObservable.create = function create() {
      for (var _len = arguments.length,
          observables = Array(_len),
          _key = 0; _key < _len; _key++) {
        observables[_key] = arguments[_key];
      }
      return new ForkJoinObservable(observables);
    };
    ForkJoinObservable.prototype._subscribe = function _subscribe(subscriber) {
      var observables = this.observables;
      var len = observables.length;
      var context = {
        complete: 0,
        total: len,
        values: emptyArray(len)
      };
      for (var i = 0; i < len; i++) {
        observables[i].subscribe(new AllSubscriber(subscriber, this, i, context));
      }
    };
    return ForkJoinObservable;
  })(_Observable3['default']);
  exports['default'] = ForkJoinObservable;
  var AllSubscriber = (function(_Subscriber) {
    _inherits(AllSubscriber, _Subscriber);
    function AllSubscriber(destination, parent, index, context) {
      _classCallCheck(this, AllSubscriber);
      _Subscriber.call(this, destination);
      this.parent = parent;
      this.index = index;
      this.context = context;
    }
    AllSubscriber.prototype._next = function _next(value) {
      this._value = value;
    };
    AllSubscriber.prototype._complete = function _complete() {
      var context = this.context;
      context.values[this.index] = this._value;
      if (context.values.every(hasValue)) {
        this.destination.next(context.values);
        this.destination.complete();
      }
    };
    return AllSubscriber;
  })(_Subscriber3['default']);
  function hasValue(x) {
    return x !== null;
  }
  function emptyArray(len) {
    var arr = [];
    for (var i = 0; i < len; i++) {
      arr.push(null);
    }
    return arr;
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/DeferObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var DeferObservable = (function(_Observable) {
    _inherits(DeferObservable, _Observable);
    function DeferObservable(observableFactory) {
      _classCallCheck(this, DeferObservable);
      _Observable.call(this);
      this.observableFactory = observableFactory;
    }
    DeferObservable.create = function create(observableFactory) {
      return new DeferObservable(observableFactory);
    };
    DeferObservable.prototype._subscribe = function _subscribe(subscriber) {
      var result = _utilTryCatch2['default'](this.observableFactory)();
      if (result === _utilErrorObject.errorObject) {
        subscriber.error(_utilErrorObject.errorObject.e);
      } else {
        result.subscribe(subscriber);
      }
    };
    return DeferObservable;
  })(_Observable3['default']);
  exports['default'] = DeferObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/FutureAction", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _ImmediateAction2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction');
  var _ImmediateAction3 = _interopRequireDefault(_ImmediateAction2);
  var FutureAction = (function(_ImmediateAction) {
    _inherits(FutureAction, _ImmediateAction);
    function FutureAction(scheduler, work) {
      _classCallCheck(this, FutureAction);
      _ImmediateAction.call(this, scheduler, work);
      this.scheduler = scheduler;
      this.work = work;
    }
    FutureAction.prototype.schedule = function schedule(state) {
      var _this = this;
      var delay = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];
      if (this.isUnsubscribed) {
        return this;
      }
      this.delay = delay;
      this.state = state;
      var id = this.id;
      if (id != null) {
        this.id = undefined;
        clearTimeout(id);
      }
      var scheduler = this.scheduler;
      this.id = setTimeout(function() {
        _this.id = void 0;
        scheduler.actions.push(_this);
        scheduler.flush();
      }, this.delay);
      return this;
    };
    FutureAction.prototype.unsubscribe = function unsubscribe() {
      var id = this.id;
      if (id != null) {
        this.id = void 0;
        clearTimeout(id);
      }
      _ImmediateAction.prototype.unsubscribe.call(this);
    };
    return FutureAction;
  })(_ImmediateAction3['default']);
  exports['default'] = FutureAction;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subscription2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription3 = _interopRequireDefault(_Subscription2);
  var ImmediateAction = (function(_Subscription) {
    _inherits(ImmediateAction, _Subscription);
    function ImmediateAction(scheduler, work) {
      _classCallCheck(this, ImmediateAction);
      _Subscription.call(this);
      this.scheduler = scheduler;
      this.work = work;
    }
    ImmediateAction.prototype.schedule = function schedule(state) {
      if (this.isUnsubscribed) {
        return this;
      }
      this.state = state;
      var scheduler = this.scheduler;
      scheduler.actions.push(this);
      scheduler.flush();
      return this;
    };
    ImmediateAction.prototype.execute = function execute() {
      if (this.isUnsubscribed) {
        throw new Error('How did did we execute a canceled Action?');
      }
      this.work(this.state);
    };
    ImmediateAction.prototype.unsubscribe = function unsubscribe() {
      var scheduler = this.scheduler;
      var actions = scheduler.actions;
      var index = actions.indexOf(this);
      this.work = void 0;
      this.state = void 0;
      this.scheduler = void 0;
      if (index !== -1) {
        actions.splice(index, 1);
      }
      _Subscription.prototype.unsubscribe.call(this);
    };
    return ImmediateAction;
  })(_Subscription3['default']);
  exports['default'] = ImmediateAction;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateScheduler", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/FutureAction"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _ImmediateAction = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateAction');
  var _ImmediateAction2 = _interopRequireDefault(_ImmediateAction);
  var _FutureAction = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/FutureAction');
  var _FutureAction2 = _interopRequireDefault(_FutureAction);
  var ImmediateScheduler = (function() {
    function ImmediateScheduler() {
      _classCallCheck(this, ImmediateScheduler);
      this.actions = [];
      this.active = false;
      this.scheduled = false;
    }
    ImmediateScheduler.prototype.now = function now() {
      return Date.now();
    };
    ImmediateScheduler.prototype.flush = function flush() {
      if (this.active || this.scheduled) {
        return;
      }
      this.active = true;
      var actions = this.actions;
      for (var action = undefined; action = actions.shift(); ) {
        action.execute();
      }
      this.active = false;
    };
    ImmediateScheduler.prototype.schedule = function schedule(work, delay, state) {
      if (delay === undefined)
        delay = 0;
      return delay <= 0 ? this.scheduleNow(work, state) : this.scheduleLater(work, delay, state);
    };
    ImmediateScheduler.prototype.scheduleNow = function scheduleNow(work, state) {
      return new _ImmediateAction2['default'](this, work).schedule(state);
    };
    ImmediateScheduler.prototype.scheduleLater = function scheduleLater(work, delay, state) {
      return new _FutureAction2['default'](this, work).schedule(state, delay);
    };
    return ImmediateScheduler;
  })();
  exports['default'] = ImmediateScheduler;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateScheduler"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _ImmediateScheduler = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/ImmediateScheduler');
  var _ImmediateScheduler2 = _interopRequireDefault(_ImmediateScheduler);
  exports['default'] = new _ImmediateScheduler2['default']();
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat-static", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = concat;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _Observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable2 = _interopRequireDefault(_Observable);
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  function concat() {
    var scheduler = _schedulersImmediate2['default'];
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    var args = observables;
    if (typeof args[observables.length - 1].schedule === 'function') {
      scheduler = args.pop();
      args.push(1, scheduler);
    }
    return _Observable2['default'].fromArray(observables).mergeAll(1);
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/InnerSubscriber", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var InnerSubscriber = (function(_Subscriber) {
    _inherits(InnerSubscriber, _Subscriber);
    function InnerSubscriber(parent, outerValue, outerIndex) {
      _classCallCheck(this, InnerSubscriber);
      _Subscriber.call(this);
      this.parent = parent;
      this.outerValue = outerValue;
      this.outerIndex = outerIndex;
      this.index = 0;
    }
    InnerSubscriber.prototype._next = function _next(value) {
      var index = this.index++;
      this.parent.notifyNext(this.outerValue, value, this.outerIndex, index);
    };
    InnerSubscriber.prototype._error = function _error(error) {
      this.parent.notifyError(error, this);
    };
    InnerSubscriber.prototype._complete = function _complete() {
      this.parent.notifyComplete(this);
    };
    return InnerSubscriber;
  })(_Subscriber3['default']);
  exports['default'] = InnerSubscriber;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _root = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
  if (!_root.root.Symbol) {
    _root.root.Symbol = {};
  }
  if (!_root.root.Symbol.iterator) {
    if (typeof _root.root.Symbol['for'] === 'function') {
      _root.root.Symbol.iterator = _root.root.Symbol['for']('iterator');
    } else if (_root.root.Set && typeof new _root.root.Set()['@@iterator'] === 'function') {
      _root.root.Symbol.iterator = '@@iterator';
    } else {
      _root.root.Symbol.iterator = '_es6shim_iterator_';
    }
  }
  exports['default'] = _root.root.Symbol.iterator;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/InnerSubscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = subscribeToResult;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _Observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable2 = _interopRequireDefault(_Observable);
  var _utilSymbol_iterator = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_iterator');
  var _utilSymbol_iterator2 = _interopRequireDefault(_utilSymbol_iterator);
  var _utilSymbol_observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable');
  var _utilSymbol_observable2 = _interopRequireDefault(_utilSymbol_observable);
  var _InnerSubscriber = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/InnerSubscriber');
  var _InnerSubscriber2 = _interopRequireDefault(_InnerSubscriber);
  var isArray = Array.isArray;
  function subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {
    var destination = new _InnerSubscriber2['default'](outerSubscriber, outerValue, outerIndex);
    if (destination.isUnsubscribed) {
      return;
    }
    if (result instanceof _Observable2['default']) {
      if (result._isScalar) {
        destination.next(result.value);
        destination.complete();
        return;
      } else {
        return result.subscribe(destination);
      }
    }
    if (isArray(result)) {
      for (var i = 0,
          len = result.length; i < len && !destination.isUnsubscribed; i++) {
        destination.next(result[i]);
      }
      if (!destination.isUnsubscribed) {
        destination.complete();
      }
    } else if (typeof result.then === 'function') {
      result.then(function(x) {
        if (!destination.isUnsubscribed) {
          destination.next(x);
          destination.complete();
        }
      }, function(err) {
        return destination.error(err);
      }).then(null, function(err) {
        setTimeout(function() {
          throw err;
        });
      });
      return destination;
    } else if (typeof result[_utilSymbol_iterator2['default']] === 'function') {
      for (var _iterator = result,
          _isArray = Array.isArray(_iterator),
          _i = 0,
          _iterator = _isArray ? _iterator : _iterator[Symbol.iterator](); ; ) {
        var _ref;
        if (_isArray) {
          if (_i >= _iterator.length)
            break;
          _ref = _iterator[_i++];
        } else {
          _i = _iterator.next();
          if (_i.done)
            break;
          _ref = _i.value;
        }
        var item = _ref;
        destination.next(item);
        if (destination.isUnsubscribed) {
          break;
        }
      }
      if (!destination.isUnsubscribed) {
        destination.complete();
      }
    } else if (typeof result[_utilSymbol_observable2['default']] === 'function') {
      var obs = result[_utilSymbol_observable2['default']]();
      if (typeof obs.subscribe !== 'function') {
        destination.error('invalid observable');
      } else {
        return obs.subscribe(new _InnerSubscriber2['default'](outerSubscriber, outerValue, outerIndex));
      }
    } else {
      destination.error(new TypeError('unknown type returned'));
    }
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Subscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber3 = _interopRequireDefault(_Subscriber2);
  var OuterSubscriber = (function(_Subscriber) {
    _inherits(OuterSubscriber, _Subscriber);
    function OuterSubscriber() {
      _classCallCheck(this, OuterSubscriber);
      _Subscriber.apply(this, arguments);
    }
    OuterSubscriber.prototype.notifyComplete = function notifyComplete(inner) {
      this.destination.complete();
    };
    OuterSubscriber.prototype.notifyNext = function notifyNext(outerValue, innerValue, outerIndex, innerIndex) {
      this.destination.next(innerValue);
    };
    OuterSubscriber.prototype.notifyError = function notifyError(error, inner) {
      this.destination.error(error);
    };
    return OuterSubscriber;
  })(_Subscriber3['default']);
  exports['default'] = OuterSubscriber;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _OuterSubscriber2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/OuterSubscriber');
  var _OuterSubscriber3 = _interopRequireDefault(_OuterSubscriber2);
  var _utilSubscribeToResult = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/subscribeToResult');
  var _utilSubscribeToResult2 = _interopRequireDefault(_utilSubscribeToResult);
  var CombineLatestOperator = (function() {
    function CombineLatestOperator(project) {
      _classCallCheck(this, CombineLatestOperator);
      this.project = project;
    }
    CombineLatestOperator.prototype.call = function call(subscriber) {
      return new CombineLatestSubscriber(subscriber, this.project);
    };
    return CombineLatestOperator;
  })();
  exports.CombineLatestOperator = CombineLatestOperator;
  var CombineLatestSubscriber = (function(_OuterSubscriber) {
    _inherits(CombineLatestSubscriber, _OuterSubscriber);
    function CombineLatestSubscriber(destination, project) {
      _classCallCheck(this, CombineLatestSubscriber);
      _OuterSubscriber.call(this, destination);
      this.project = project;
      this.active = 0;
      this.values = [];
      this.observables = [];
      this.toRespond = [];
    }
    CombineLatestSubscriber.prototype._next = function _next(observable) {
      var toRespond = this.toRespond;
      toRespond.push(toRespond.length);
      this.observables.push(observable);
    };
    CombineLatestSubscriber.prototype._complete = function _complete() {
      var observables = this.observables;
      var len = observables.length;
      if (len === 0) {
        this.destination.complete();
      } else {
        this.active = len;
        for (var i = 0; i < len; i++) {
          var observable = observables[i];
          this.add(_utilSubscribeToResult2['default'](this, observable, observable, i));
        }
      }
    };
    CombineLatestSubscriber.prototype.notifyComplete = function notifyComplete(innerSubscriber) {
      if ((this.active -= 1) === 0) {
        this.destination.complete();
      }
    };
    CombineLatestSubscriber.prototype.notifyNext = function notifyNext(observable, value, outerIndex, innerIndex) {
      var values = this.values;
      values[outerIndex] = value;
      var toRespond = this.toRespond;
      if (toRespond.length > 0) {
        var found = toRespond.indexOf(outerIndex);
        if (found !== -1) {
          toRespond.splice(found, 1);
        }
      }
      if (toRespond.length === 0) {
        var project = this.project;
        var destination = this.destination;
        if (project) {
          var result = _utilTryCatch2['default'](project).apply(this, values);
          if (result === _utilErrorObject.errorObject) {
            destination.error(_utilErrorObject.errorObject.e);
          } else {
            destination.next(result);
          }
        } else {
          destination.next(values);
        }
      }
    };
    return CombineLatestSubscriber;
  })(_OuterSubscriber3['default']);
  exports.CombineLatestSubscriber = CombineLatestSubscriber;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var EmptyObservable = (function(_Observable) {
    _inherits(EmptyObservable, _Observable);
    function EmptyObservable(scheduler) {
      _classCallCheck(this, EmptyObservable);
      _Observable.call(this);
      this.scheduler = scheduler;
    }
    EmptyObservable.create = function create(scheduler) {
      return new EmptyObservable(scheduler);
    };
    EmptyObservable.dispatch = function dispatch(_ref) {
      var subscriber = _ref.subscriber;
      subscriber.complete();
    };
    EmptyObservable.prototype._subscribe = function _subscribe(subscriber) {
      var scheduler = this.scheduler;
      if (scheduler) {
        subscriber.add(scheduler.schedule(EmptyObservable.dispatch, 0, {subscriber: subscriber}));
      } else {
        subscriber.complete();
      }
    };
    return EmptyObservable;
  })(_Observable3['default']);
  exports['default'] = EmptyObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var ErrorObservable = (function(_Observable) {
    _inherits(ErrorObservable, _Observable);
    function ErrorObservable(error, scheduler) {
      _classCallCheck(this, ErrorObservable);
      _Observable.call(this);
      this.error = error;
      this.scheduler = scheduler;
    }
    ErrorObservable.create = function create(error, scheduler) {
      return new ErrorObservable(error, scheduler);
    };
    ErrorObservable.dispatch = function dispatch(_ref) {
      var error = _ref.error;
      var subscriber = _ref.subscriber;
      subscriber.error(error);
    };
    ErrorObservable.prototype._subscribe = function _subscribe(subscriber) {
      var error = this.error;
      var scheduler = this.scheduler;
      if (scheduler) {
        subscriber.add(scheduler.schedule(ErrorObservable.dispatch, 0, {
          error: error,
          subscriber: subscriber
        }));
      } else {
        subscriber.error(error);
      }
    };
    return ErrorObservable;
  })(_Observable3['default']);
  exports['default'] = ErrorObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var errorObject = {e: {}};
  exports.errorObject = errorObject;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = tryCatch;
  var _errorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var tryCatchTarget = undefined;
  function tryCatcher() {
    try {
      return tryCatchTarget.apply(this, arguments);
    } catch (e) {
      _errorObject.errorObject.e = e;
      return _errorObject.errorObject;
    }
  }
  function tryCatch(fn) {
    tryCatchTarget = fn;
    return tryCatcher;
  }
  ;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _utilTryCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryCatch');
  var _utilTryCatch2 = _interopRequireDefault(_utilTryCatch);
  var _utilErrorObject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/errorObject');
  var _ErrorObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable');
  var _ErrorObservable2 = _interopRequireDefault(_ErrorObservable);
  var _EmptyObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable');
  var _EmptyObservable2 = _interopRequireDefault(_EmptyObservable);
  var ScalarObservable = (function(_Observable) {
    _inherits(ScalarObservable, _Observable);
    function ScalarObservable(value, scheduler) {
      _classCallCheck(this, ScalarObservable);
      _Observable.call(this);
      this.value = value;
      this.scheduler = scheduler;
      this._isScalar = true;
    }
    ScalarObservable.create = function create(value, scheduler) {
      return new ScalarObservable(value, scheduler);
    };
    ScalarObservable.dispatch = function dispatch(state) {
      var done = state.done;
      var value = state.value;
      var subscriber = state.subscriber;
      if (done) {
        subscriber.complete();
        return;
      }
      subscriber.next(value);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.done = true;
      this.schedule(state);
    };
    ScalarObservable.prototype._subscribe = function _subscribe(subscriber) {
      var value = this.value;
      var scheduler = this.scheduler;
      if (scheduler) {
        subscriber.add(scheduler.schedule(ScalarObservable.dispatch, 0, {
          done: false,
          value: value,
          subscriber: subscriber
        }));
      } else {
        subscriber.next(value);
        if (!subscriber.isUnsubscribed) {
          subscriber.complete();
        }
      }
    };
    return ScalarObservable;
  })(_Observable3['default']);
  exports['default'] = ScalarObservable;
  var proto = ScalarObservable.prototype;
  proto.map = function(project, thisArg) {
    var result = _utilTryCatch2['default'](project).call(thisArg || this, this.value, 0);
    if (result === _utilErrorObject.errorObject) {
      return new _ErrorObservable2['default'](_utilErrorObject.errorObject.e);
    } else {
      return new ScalarObservable(project.call(thisArg || this, this.value, 0));
    }
  };
  proto.filter = function(select, thisArg) {
    var result = _utilTryCatch2['default'](select).call(thisArg || this, this.value, 0);
    if (result === _utilErrorObject.errorObject) {
      return new _ErrorObservable2['default'](_utilErrorObject.errorObject.e);
    } else if (result) {
      return this;
    } else {
      return new _EmptyObservable2['default']();
    }
  };
  proto.reduce = function(project, acc) {
    if (typeof acc === 'undefined') {
      return this;
    }
    var result = _utilTryCatch2['default'](project)(acc, this.value);
    if (result === _utilErrorObject.errorObject) {
      return new _ErrorObservable2['default'](_utilErrorObject.errorObject.e);
    } else {
      return new ScalarObservable(result);
    }
  };
  proto.scan = function(project, acc) {
    return this.reduce(project, acc);
  };
  proto.count = function(predicate, thisArg) {
    if (!predicate) {
      return new ScalarObservable(1);
    } else {
      var result = _utilTryCatch2['default'](predicate).call(thisArg || this, this.value, 0, this);
      if (result === _utilErrorObject.errorObject) {
        return new _ErrorObservable2['default'](_utilErrorObject.errorObject.e);
      } else {
        return new ScalarObservable(result ? 1 : 0);
      }
    }
  };
  proto.skip = function(count) {
    if (count > 0) {
      return new _EmptyObservable2['default']();
    }
    return this;
  };
  proto.take = function(count) {
    if (count > 0) {
      return this;
    }
    return new _EmptyObservable2['default']();
  };
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _Observable2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable3 = _interopRequireDefault(_Observable2);
  var _ScalarObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ScalarObservable');
  var _ScalarObservable2 = _interopRequireDefault(_ScalarObservable);
  var _EmptyObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable');
  var _EmptyObservable2 = _interopRequireDefault(_EmptyObservable);
  var ArrayObservable = (function(_Observable) {
    _inherits(ArrayObservable, _Observable);
    function ArrayObservable(array, scheduler) {
      _classCallCheck(this, ArrayObservable);
      _Observable.call(this);
      this.array = array;
      this.scheduler = scheduler;
      if (!scheduler && array.length === 1) {
        this._isScalar = true;
        this.value = array[0];
      }
    }
    ArrayObservable.create = function create(array, scheduler) {
      return new ArrayObservable(array, scheduler);
    };
    ArrayObservable.of = function of() {
      for (var _len = arguments.length,
          array = Array(_len),
          _key = 0; _key < _len; _key++) {
        array[_key] = arguments[_key];
      }
      var scheduler = array[array.length - 1];
      if (scheduler && typeof scheduler.schedule === 'function') {
        array.pop();
      } else {
        scheduler = void 0;
      }
      var len = array.length;
      if (len > 1) {
        return new ArrayObservable(array, scheduler);
      } else if (len === 1) {
        return new _ScalarObservable2['default'](array[0], scheduler);
      } else {
        return new _EmptyObservable2['default'](scheduler);
      }
    };
    ArrayObservable.dispatch = function dispatch(state) {
      var array = state.array;
      var index = state.index;
      var count = state.count;
      var subscriber = state.subscriber;
      if (index >= count) {
        subscriber.complete();
        return;
      }
      subscriber.next(array[index]);
      if (subscriber.isUnsubscribed) {
        return;
      }
      state.index = index + 1;
      this.schedule(state);
    };
    ArrayObservable.prototype._subscribe = function _subscribe(subscriber) {
      var index = 0;
      var array = this.array;
      var count = array.length;
      var scheduler = this.scheduler;
      if (scheduler) {
        subscriber.add(scheduler.schedule(ArrayObservable.dispatch, 0, {
          array: array,
          index: index,
          count: count,
          subscriber: subscriber
        }));
      } else {
        for (var i = 0; i < count && !subscriber.isUnsubscribed; i++) {
          subscriber.next(array[i]);
        }
        subscriber.complete();
      }
    };
    return ArrayObservable;
  })(_Observable3['default']);
  exports['default'] = ArrayObservable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-static", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports['default'] = combineLatest;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _combineLatestSupport = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-support');
  function combineLatest() {
    var project = undefined,
        scheduler = undefined;
    for (var _len = arguments.length,
        observables = Array(_len),
        _key = 0; _key < _len; _key++) {
      observables[_key] = arguments[_key];
    }
    if (typeof observables[observables.length - 1].schedule === 'function') {
      scheduler = observables.pop();
    }
    if (typeof observables[observables.length - 1] === 'function') {
      project = observables.pop();
    }
    return new _observablesArrayObservable2['default'](observables, scheduler).lift(new _combineLatestSupport.CombineLatestOperator(project));
  }
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _root = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
  if (!_root.root.Symbol) {
    _root.root.Symbol = {};
  }
  if (!_root.root.Symbol.observable) {
    if (typeof _root.root.Symbol['for'] === 'function') {
      _root.root.Symbol.observable = _root.root.Symbol['for']('observable');
    } else {
      _root.root.Symbol.observable = '@@observable';
    }
  }
  exports['default'] = _root.root.Symbol.observable;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var objectTypes = {
    'boolean': false,
    'function': true,
    'object': true,
    'number': false,
    'string': false,
    'undefined': false
  };
  var root = objectTypes[typeof self] && self || objectTypes[typeof window] && window;
  exports.root = root;
  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;
  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;
  var freeGlobal = objectTypes[typeof global] && global;
  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal)) {
    exports.root = root = freeGlobal;
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }
  var Subscription = (function() {
    function Subscription(_unsubscribe) {
      _classCallCheck(this, Subscription);
      this.isUnsubscribed = false;
      if (_unsubscribe) {
        this._unsubscribe = _unsubscribe;
      }
    }
    Subscription.prototype._unsubscribe = function _unsubscribe() {};
    Subscription.prototype.unsubscribe = function unsubscribe() {
      if (this.isUnsubscribed) {
        return;
      }
      this.isUnsubscribed = true;
      var unsubscribe = this._unsubscribe;
      var subscriptions = this._subscriptions;
      this._subscriptions = void 0;
      if (unsubscribe) {
        unsubscribe.call(this);
      }
      if (subscriptions != null) {
        var index = -1;
        var len = subscriptions.length;
        while (++index < len) {
          subscriptions[index].unsubscribe();
        }
      }
    };
    Subscription.prototype.add = function add(subscription) {
      if (!subscription || subscription === this || subscription === Subscription.EMPTY) {
        return;
      }
      var sub = subscription;
      switch (typeof subscription) {
        case "function":
          sub = new Subscription(subscription);
        case "object":
          if (sub.isUnsubscribed || typeof sub.unsubscribe !== "function") {
            break;
          } else if (this.isUnsubscribed) {
            sub.unsubscribe();
          } else {
            var subscriptions = this._subscriptions || (this._subscriptions = []);
            subscriptions.push(sub);
          }
          break;
        default:
          throw new Error('Unrecognized subscription ' + subscription + ' added to Subscription.');
      }
    };
    Subscription.prototype.remove = function remove(subscription) {
      if (subscription == null || subscription === this || subscription === Subscription.EMPTY) {
        return;
      }
      var subscriptions = this._subscriptions;
      if (subscriptions) {
        var subscriptionIndex = subscriptions.indexOf(subscription);
        if (subscriptionIndex !== -1) {
          subscriptions.splice(subscriptionIndex, 1);
        }
      }
    };
    return Subscription;
  })();
  exports["default"] = Subscription;
  Subscription.EMPTY = (function(empty) {
    empty.isUnsubscribed = true;
    return empty;
  })(new Subscription());
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryOrOnError", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports["default"] = tryOrOnError;
  function tryOrOnError(target) {
    function tryCatcher() {
      try {
        tryCatcher.target.apply(this, arguments);
      } catch (e) {
        this.error(e);
      }
    }
    tryCatcher.target = target;
    return tryCatcher;
  }
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/throwError", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports["default"] = throwError;
  function throwError(e) {
    throw e;
  }
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/noop", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  exports["default"] = noop;
  function noop() {}
  module.exports = exports["default"];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/noop", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/throwError", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryOrOnError", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  var _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ('value' in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      if (protoProps)
        defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        defineProperties(Constructor, staticProps);
      return Constructor;
    };
  })();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);
    }
    subClass.prototype = Object.create(superClass && superClass.prototype, {constructor: {
        value: subClass,
        enumerable: false,
        writable: true,
        configurable: true
      }});
    if (superClass)
      Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
  }
  var _utilNoop = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/noop');
  var _utilNoop2 = _interopRequireDefault(_utilNoop);
  var _utilThrowError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/throwError');
  var _utilThrowError2 = _interopRequireDefault(_utilThrowError);
  var _utilTryOrOnError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/tryOrOnError');
  var _utilTryOrOnError2 = _interopRequireDefault(_utilTryOrOnError);
  var _Subscription2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription3 = _interopRequireDefault(_Subscription2);
  var Subscriber = (function(_Subscription) {
    _inherits(Subscriber, _Subscription);
    function Subscriber(destination) {
      _classCallCheck(this, Subscriber);
      _Subscription.call(this);
      this.destination = destination;
      this._isUnsubscribed = false;
      if (!this.destination) {
        return;
      }
      var subscription = destination._subscription;
      if (subscription) {
        this._subscription = subscription;
      } else if (destination instanceof Subscriber) {
        this._subscription = destination;
      }
    }
    Subscriber.create = function create(next, error, complete) {
      var subscriber = new Subscriber();
      subscriber._next = typeof next === "function" && _utilTryOrOnError2['default'](next) || _utilNoop2['default'];
      subscriber._error = typeof error === "function" && error || _utilThrowError2['default'];
      subscriber._complete = typeof complete === "function" && complete || _utilNoop2['default'];
      return subscriber;
    };
    Subscriber.prototype.add = function add(sub) {
      var _subscription = this._subscription;
      if (_subscription) {
        _subscription.add(sub);
      } else {
        _Subscription.prototype.add.call(this, sub);
      }
    };
    Subscriber.prototype.remove = function remove(sub) {
      if (this._subscription) {
        this._subscription.remove(sub);
      } else {
        _Subscription.prototype.remove.call(this, sub);
      }
    };
    Subscriber.prototype.unsubscribe = function unsubscribe() {
      if (this._isUnsubscribed) {
        return;
      } else if (this._subscription) {
        this._isUnsubscribed = true;
      } else {
        _Subscription.prototype.unsubscribe.call(this);
      }
    };
    Subscriber.prototype._next = function _next(value) {
      this.destination.next(value);
    };
    Subscriber.prototype._error = function _error(err) {
      this.destination.error(err);
    };
    Subscriber.prototype._complete = function _complete() {
      this.destination.complete();
    };
    Subscriber.prototype.next = function next(value) {
      if (!this.isUnsubscribed) {
        this._next(value);
      }
    };
    Subscriber.prototype.error = function error(_error2) {
      if (!this.isUnsubscribed) {
        this._error(_error2);
        this.unsubscribe();
      }
    };
    Subscriber.prototype.complete = function complete() {
      if (!this.isUnsubscribed) {
        this._complete();
        this.unsubscribe();
      }
    };
    _createClass(Subscriber, [{
      key: 'isUnsubscribed',
      get: function get() {
        var subscription = this._subscription;
        if (subscription) {
          return this._isUnsubscribed || subscription.isUnsubscribed;
        } else {
          return this._isUnsubscribed;
        }
      },
      set: function set(value) {
        var subscription = this._subscription;
        if (subscription) {
          subscription.isUnsubscribed = Boolean(value);
        } else {
          this._isUnsubscribed = Boolean(value);
        }
      }
    }]);
    return Subscriber;
  })(_Subscription3['default']);
  exports['default'] = Subscriber;
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function');
    }
  }
  var _Subscriber = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber2 = _interopRequireDefault(_Subscriber);
  var _utilRoot = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/root');
  var _utilSymbol_observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/Symbol_observable');
  var _utilSymbol_observable2 = _interopRequireDefault(_utilSymbol_observable);
  var Observable = (function() {
    function Observable(subscribe) {
      _classCallCheck(this, Observable);
      this._isScalar = false;
      if (subscribe) {
        this._subscribe = subscribe;
      }
    }
    Observable.prototype.lift = function lift(operator) {
      var observable = new Observable();
      observable.source = this;
      observable.operator = operator;
      return observable;
    };
    Observable.prototype[_utilSymbol_observable2['default']] = function() {
      return this;
    };
    Observable.prototype.subscribe = function subscribe(observerOrNext, error, complete) {
      var subscriber = undefined;
      if (observerOrNext && typeof observerOrNext === "object") {
        if (observerOrNext instanceof _Subscriber2['default']) {
          subscriber = observerOrNext;
        } else {
          subscriber = new _Subscriber2['default'](observerOrNext);
        }
      } else {
        var next = observerOrNext;
        subscriber = _Subscriber2['default'].create(next, error, complete);
      }
      subscriber.add(this._subscribe(subscriber));
      return subscriber;
    };
    Observable.prototype.forEach = function forEach(next, PromiseCtor) {
      var _this = this;
      if (!PromiseCtor) {
        if (_utilRoot.root.Rx && _utilRoot.root.Rx.config && _utilRoot.root.Rx.config.Promise) {
          PromiseCtor = _utilRoot.root.Rx.config.Promise;
        } else if (_utilRoot.root.Promise) {
          PromiseCtor = _utilRoot.root.Promise;
        }
      }
      if (!PromiseCtor) {
        throw new Error('no Promise impl found');
      }
      return new PromiseCtor(function(resolve, reject) {
        _this.subscribe(next, reject, resolve);
      });
    };
    Observable.prototype._subscribe = function _subscribe(subscriber) {
      return this.source._subscribe(this.operator.call(subscriber));
    };
    return Observable;
  })();
  exports['default'] = Observable;
  Observable.create = function(subscribe) {
    return new Observable(subscribe);
  };
  module.exports = exports['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Rx", ["npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-static", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat-static", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/DeferObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ForkJoinObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromEventObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromEventPatternObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/IntervalObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge-static", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/InfiniteObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/RangeObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/TimerObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-static", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/buffer", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferCount", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferTime", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferToggle", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferWhen", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/catch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineAll", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatAll", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatMap", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatMapTo", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/count", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/dematerialize", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/debounce", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/debounceTime", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/defaultIfEmpty", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/delay", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/distinctUntilChanged", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/do", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/expand", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/filter", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/finally", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/first", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/groupBy", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/ignoreElements", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/every", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/last", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/map", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mapTo", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/materialize", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/partition", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publish", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishBehavior", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishReplay", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/reduce", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/repeat", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/retry", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/retryWhen", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/sample", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/sampleTime", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/scan", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/share", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/shareBehavior", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/shareReplay", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/single", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/skip", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/skipUntil", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/startWith", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/subscribeOn", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switch", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switchMap", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switchMapTo", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/take", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/takeUntil", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/throttle", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/timeout", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/timeoutWith", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/toArray", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/toPromise", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/window", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowCount", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowTime", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowToggle", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowWhen", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/withLatestFrom", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zipAll", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/ReplaySubject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/BehaviorSubject", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ConnectableObservable", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/ArgumentOutOfRangeError", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  exports.__esModule = true;
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {'default': obj};
  }
  var _Observable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Observable');
  var _Observable2 = _interopRequireDefault(_Observable);
  var _operatorsCombineLatestStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest-static');
  var _operatorsCombineLatestStatic2 = _interopRequireDefault(_operatorsCombineLatestStatic);
  var _operatorsConcatStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat-static');
  var _operatorsConcatStatic2 = _interopRequireDefault(_operatorsConcatStatic);
  var _observablesDeferObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/DeferObservable');
  var _observablesDeferObservable2 = _interopRequireDefault(_observablesDeferObservable);
  var _observablesEmptyObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/EmptyObservable');
  var _observablesEmptyObservable2 = _interopRequireDefault(_observablesEmptyObservable);
  var _observablesForkJoinObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ForkJoinObservable');
  var _observablesForkJoinObservable2 = _interopRequireDefault(_observablesForkJoinObservable);
  var _observablesFromObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromObservable');
  var _observablesFromObservable2 = _interopRequireDefault(_observablesFromObservable);
  var _observablesArrayObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ArrayObservable');
  var _observablesArrayObservable2 = _interopRequireDefault(_observablesArrayObservable);
  var _observablesFromEventObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromEventObservable');
  var _observablesFromEventObservable2 = _interopRequireDefault(_observablesFromEventObservable);
  var _observablesFromEventPatternObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/FromEventPatternObservable');
  var _observablesFromEventPatternObservable2 = _interopRequireDefault(_observablesFromEventPatternObservable);
  var _observablesPromiseObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/PromiseObservable');
  var _observablesPromiseObservable2 = _interopRequireDefault(_observablesPromiseObservable);
  var _observablesIntervalObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/IntervalObservable');
  var _observablesIntervalObservable2 = _interopRequireDefault(_observablesIntervalObservable);
  var _operatorsMergeStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge-static');
  var _operatorsMergeStatic2 = _interopRequireDefault(_operatorsMergeStatic);
  var _observablesInfiniteObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/InfiniteObservable');
  var _observablesInfiniteObservable2 = _interopRequireDefault(_observablesInfiniteObservable);
  var _observablesRangeObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/RangeObservable');
  var _observablesRangeObservable2 = _interopRequireDefault(_observablesRangeObservable);
  var _observablesErrorObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ErrorObservable');
  var _observablesErrorObservable2 = _interopRequireDefault(_observablesErrorObservable);
  var _observablesTimerObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/TimerObservable');
  var _observablesTimerObservable2 = _interopRequireDefault(_observablesTimerObservable);
  var _operatorsZipStatic = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip-static');
  var _operatorsZipStatic2 = _interopRequireDefault(_operatorsZipStatic);
  var _operatorsBuffer = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/buffer');
  var _operatorsBuffer2 = _interopRequireDefault(_operatorsBuffer);
  var _operatorsBufferCount = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferCount');
  var _operatorsBufferCount2 = _interopRequireDefault(_operatorsBufferCount);
  var _operatorsBufferTime = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferTime');
  var _operatorsBufferTime2 = _interopRequireDefault(_operatorsBufferTime);
  var _operatorsBufferToggle = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferToggle');
  var _operatorsBufferToggle2 = _interopRequireDefault(_operatorsBufferToggle);
  var _operatorsBufferWhen = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/bufferWhen');
  var _operatorsBufferWhen2 = _interopRequireDefault(_operatorsBufferWhen);
  var _operatorsCatch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/catch');
  var _operatorsCatch2 = _interopRequireDefault(_operatorsCatch);
  var _operatorsCombineAll = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineAll');
  var _operatorsCombineAll2 = _interopRequireDefault(_operatorsCombineAll);
  var _operatorsCombineLatest = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/combineLatest');
  var _operatorsCombineLatest2 = _interopRequireDefault(_operatorsCombineLatest);
  var _operatorsConcat = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concat');
  var _operatorsConcat2 = _interopRequireDefault(_operatorsConcat);
  var _operatorsConcatAll = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatAll');
  var _operatorsConcatAll2 = _interopRequireDefault(_operatorsConcatAll);
  var _operatorsConcatMap = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatMap');
  var _operatorsConcatMap2 = _interopRequireDefault(_operatorsConcatMap);
  var _operatorsConcatMapTo = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/concatMapTo');
  var _operatorsConcatMapTo2 = _interopRequireDefault(_operatorsConcatMapTo);
  var _operatorsCount = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/count');
  var _operatorsCount2 = _interopRequireDefault(_operatorsCount);
  var _operatorsDematerialize = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/dematerialize');
  var _operatorsDematerialize2 = _interopRequireDefault(_operatorsDematerialize);
  var _operatorsDebounce = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/debounce');
  var _operatorsDebounce2 = _interopRequireDefault(_operatorsDebounce);
  var _operatorsDebounceTime = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/debounceTime');
  var _operatorsDebounceTime2 = _interopRequireDefault(_operatorsDebounceTime);
  var _operatorsDefaultIfEmpty = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/defaultIfEmpty');
  var _operatorsDefaultIfEmpty2 = _interopRequireDefault(_operatorsDefaultIfEmpty);
  var _operatorsDelay = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/delay');
  var _operatorsDelay2 = _interopRequireDefault(_operatorsDelay);
  var _operatorsDistinctUntilChanged = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/distinctUntilChanged');
  var _operatorsDistinctUntilChanged2 = _interopRequireDefault(_operatorsDistinctUntilChanged);
  var _operatorsDo = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/do');
  var _operatorsDo2 = _interopRequireDefault(_operatorsDo);
  var _operatorsExpand = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/expand');
  var _operatorsExpand2 = _interopRequireDefault(_operatorsExpand);
  var _operatorsFilter = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/filter');
  var _operatorsFilter2 = _interopRequireDefault(_operatorsFilter);
  var _operatorsFinally = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/finally');
  var _operatorsFinally2 = _interopRequireDefault(_operatorsFinally);
  var _operatorsFirst = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/first');
  var _operatorsFirst2 = _interopRequireDefault(_operatorsFirst);
  var _operatorsGroupBy = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/groupBy');
  var _operatorsIgnoreElements = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/ignoreElements');
  var _operatorsIgnoreElements2 = _interopRequireDefault(_operatorsIgnoreElements);
  var _operatorsEvery = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/every');
  var _operatorsEvery2 = _interopRequireDefault(_operatorsEvery);
  var _operatorsLast = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/last');
  var _operatorsLast2 = _interopRequireDefault(_operatorsLast);
  var _operatorsMap = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/map');
  var _operatorsMap2 = _interopRequireDefault(_operatorsMap);
  var _operatorsMapTo = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mapTo');
  var _operatorsMapTo2 = _interopRequireDefault(_operatorsMapTo);
  var _operatorsMaterialize = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/materialize');
  var _operatorsMaterialize2 = _interopRequireDefault(_operatorsMaterialize);
  var _operatorsMerge = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/merge');
  var _operatorsMerge2 = _interopRequireDefault(_operatorsMerge);
  var _operatorsMergeAll = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeAll');
  var _operatorsMergeAll2 = _interopRequireDefault(_operatorsMergeAll);
  var _operatorsMergeMap = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMap');
  var _operatorsMergeMap2 = _interopRequireDefault(_operatorsMergeMap);
  var _operatorsMergeMapTo = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/mergeMapTo');
  var _operatorsMergeMapTo2 = _interopRequireDefault(_operatorsMergeMapTo);
  var _operatorsMulticast = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/multicast');
  var _operatorsMulticast2 = _interopRequireDefault(_operatorsMulticast);
  var _operatorsObserveOn = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/observeOn');
  var _operatorsObserveOn2 = _interopRequireDefault(_operatorsObserveOn);
  var _operatorsPartition = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/partition');
  var _operatorsPartition2 = _interopRequireDefault(_operatorsPartition);
  var _operatorsPublish = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publish');
  var _operatorsPublish2 = _interopRequireDefault(_operatorsPublish);
  var _operatorsPublishBehavior = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishBehavior');
  var _operatorsPublishBehavior2 = _interopRequireDefault(_operatorsPublishBehavior);
  var _operatorsPublishReplay = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/publishReplay');
  var _operatorsPublishReplay2 = _interopRequireDefault(_operatorsPublishReplay);
  var _operatorsReduce = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/reduce');
  var _operatorsReduce2 = _interopRequireDefault(_operatorsReduce);
  var _operatorsRepeat = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/repeat');
  var _operatorsRepeat2 = _interopRequireDefault(_operatorsRepeat);
  var _operatorsRetry = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/retry');
  var _operatorsRetry2 = _interopRequireDefault(_operatorsRetry);
  var _operatorsRetryWhen = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/retryWhen');
  var _operatorsRetryWhen2 = _interopRequireDefault(_operatorsRetryWhen);
  var _operatorsSample = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/sample');
  var _operatorsSample2 = _interopRequireDefault(_operatorsSample);
  var _operatorsSampleTime = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/sampleTime');
  var _operatorsSampleTime2 = _interopRequireDefault(_operatorsSampleTime);
  var _operatorsScan = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/scan');
  var _operatorsScan2 = _interopRequireDefault(_operatorsScan);
  var _operatorsShare = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/share');
  var _operatorsShare2 = _interopRequireDefault(_operatorsShare);
  var _operatorsShareBehavior = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/shareBehavior');
  var _operatorsShareBehavior2 = _interopRequireDefault(_operatorsShareBehavior);
  var _operatorsShareReplay = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/shareReplay');
  var _operatorsShareReplay2 = _interopRequireDefault(_operatorsShareReplay);
  var _operatorsSingle = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/single');
  var _operatorsSingle2 = _interopRequireDefault(_operatorsSingle);
  var _operatorsSkip = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/skip');
  var _operatorsSkip2 = _interopRequireDefault(_operatorsSkip);
  var _operatorsSkipUntil = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/skipUntil');
  var _operatorsSkipUntil2 = _interopRequireDefault(_operatorsSkipUntil);
  var _operatorsStartWith = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/startWith');
  var _operatorsStartWith2 = _interopRequireDefault(_operatorsStartWith);
  var _operatorsSubscribeOn = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/subscribeOn');
  var _operatorsSubscribeOn2 = _interopRequireDefault(_operatorsSubscribeOn);
  var _operatorsSwitch = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switch');
  var _operatorsSwitch2 = _interopRequireDefault(_operatorsSwitch);
  var _operatorsSwitchMap = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switchMap');
  var _operatorsSwitchMap2 = _interopRequireDefault(_operatorsSwitchMap);
  var _operatorsSwitchMapTo = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/switchMapTo');
  var _operatorsSwitchMapTo2 = _interopRequireDefault(_operatorsSwitchMapTo);
  var _operatorsTake = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/take');
  var _operatorsTake2 = _interopRequireDefault(_operatorsTake);
  var _operatorsTakeUntil = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/takeUntil');
  var _operatorsTakeUntil2 = _interopRequireDefault(_operatorsTakeUntil);
  var _operatorsThrottle = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/throttle');
  var _operatorsThrottle2 = _interopRequireDefault(_operatorsThrottle);
  var _operatorsTimeout = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/timeout');
  var _operatorsTimeout2 = _interopRequireDefault(_operatorsTimeout);
  var _operatorsTimeoutWith = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/timeoutWith');
  var _operatorsTimeoutWith2 = _interopRequireDefault(_operatorsTimeoutWith);
  var _operatorsToArray = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/toArray');
  var _operatorsToArray2 = _interopRequireDefault(_operatorsToArray);
  var _operatorsToPromise = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/toPromise');
  var _operatorsToPromise2 = _interopRequireDefault(_operatorsToPromise);
  var _operatorsWindow = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/window');
  var _operatorsWindow2 = _interopRequireDefault(_operatorsWindow);
  var _operatorsWindowCount = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowCount');
  var _operatorsWindowCount2 = _interopRequireDefault(_operatorsWindowCount);
  var _operatorsWindowTime = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowTime');
  var _operatorsWindowTime2 = _interopRequireDefault(_operatorsWindowTime);
  var _operatorsWindowToggle = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowToggle');
  var _operatorsWindowToggle2 = _interopRequireDefault(_operatorsWindowToggle);
  var _operatorsWindowWhen = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/windowWhen');
  var _operatorsWindowWhen2 = _interopRequireDefault(_operatorsWindowWhen);
  var _operatorsWithLatestFrom = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/withLatestFrom');
  var _operatorsWithLatestFrom2 = _interopRequireDefault(_operatorsWithLatestFrom);
  var _operatorsZip = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zip');
  var _operatorsZip2 = _interopRequireDefault(_operatorsZip);
  var _operatorsZipAll = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/operators/zipAll');
  var _operatorsZipAll2 = _interopRequireDefault(_operatorsZipAll);
  var _Subject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subject');
  var _Subject2 = _interopRequireDefault(_Subject);
  var _Subscription = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscription');
  var _Subscription2 = _interopRequireDefault(_Subscription);
  var _Subscriber = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Subscriber');
  var _Subscriber2 = _interopRequireDefault(_Subscriber);
  var _subjectsReplaySubject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/ReplaySubject');
  var _subjectsReplaySubject2 = _interopRequireDefault(_subjectsReplaySubject);
  var _subjectsBehaviorSubject = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/subjects/BehaviorSubject');
  var _subjectsBehaviorSubject2 = _interopRequireDefault(_subjectsBehaviorSubject);
  var _observablesConnectableObservable = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/observables/ConnectableObservable');
  var _observablesConnectableObservable2 = _interopRequireDefault(_observablesConnectableObservable);
  var _Notification = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Notification');
  var _Notification2 = _interopRequireDefault(_Notification);
  var _utilEmptyError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/EmptyError');
  var _utilEmptyError2 = _interopRequireDefault(_utilEmptyError);
  var _utilArgumentOutOfRangeError = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/util/ArgumentOutOfRangeError');
  var _utilArgumentOutOfRangeError2 = _interopRequireDefault(_utilArgumentOutOfRangeError);
  var _schedulersNextTick = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/nextTick');
  var _schedulersNextTick2 = _interopRequireDefault(_schedulersNextTick);
  var _schedulersImmediate = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/schedulers/immediate');
  var _schedulersImmediate2 = _interopRequireDefault(_schedulersImmediate);
  _Observable2['default'].combineLatest = _operatorsCombineLatestStatic2['default'];
  _Observable2['default'].concat = _operatorsConcatStatic2['default'];
  _Observable2['default'].defer = _observablesDeferObservable2['default'].create;
  _Observable2['default'].empty = _observablesEmptyObservable2['default'].create;
  _Observable2['default'].forkJoin = _observablesForkJoinObservable2['default'].create;
  _Observable2['default'].from = _observablesFromObservable2['default'].create;
  _Observable2['default'].fromArray = _observablesArrayObservable2['default'].create;
  _Observable2['default'].fromEvent = _observablesFromEventObservable2['default'].create;
  _Observable2['default'].fromEventPattern = _observablesFromEventPatternObservable2['default'].create;
  _Observable2['default'].fromPromise = _observablesPromiseObservable2['default'].create;
  _Observable2['default'].interval = _observablesIntervalObservable2['default'].create;
  _Observable2['default'].merge = _operatorsMergeStatic2['default'];
  _Observable2['default'].never = _observablesInfiniteObservable2['default'].create;
  _Observable2['default'].of = _observablesArrayObservable2['default'].of;
  _Observable2['default'].range = _observablesRangeObservable2['default'].create;
  _Observable2['default']['throw'] = _observablesErrorObservable2['default'].create;
  _Observable2['default'].timer = _observablesTimerObservable2['default'].create;
  _Observable2['default'].zip = _operatorsZipStatic2['default'];
  var observableProto = _Observable2['default'].prototype;
  observableProto.buffer = _operatorsBuffer2['default'];
  observableProto.bufferCount = _operatorsBufferCount2['default'];
  observableProto.bufferTime = _operatorsBufferTime2['default'];
  observableProto.bufferToggle = _operatorsBufferToggle2['default'];
  observableProto.bufferWhen = _operatorsBufferWhen2['default'];
  observableProto['catch'] = _operatorsCatch2['default'];
  observableProto.combineAll = _operatorsCombineAll2['default'];
  observableProto.combineLatest = _operatorsCombineLatest2['default'];
  observableProto.concat = _operatorsConcat2['default'];
  observableProto.concatAll = _operatorsConcatAll2['default'];
  observableProto.concatMap = _operatorsConcatMap2['default'];
  observableProto.concatMapTo = _operatorsConcatMapTo2['default'];
  observableProto.count = _operatorsCount2['default'];
  observableProto.dematerialize = _operatorsDematerialize2['default'];
  observableProto.debounce = _operatorsDebounce2['default'];
  observableProto.debounceTime = _operatorsDebounceTime2['default'];
  observableProto.defaultIfEmpty = _operatorsDefaultIfEmpty2['default'];
  observableProto.delay = _operatorsDelay2['default'];
  observableProto.distinctUntilChanged = _operatorsDistinctUntilChanged2['default'];
  observableProto['do'] = _operatorsDo2['default'];
  observableProto.expand = _operatorsExpand2['default'];
  observableProto.filter = _operatorsFilter2['default'];
  observableProto['finally'] = _operatorsFinally2['default'];
  observableProto.first = _operatorsFirst2['default'];
  observableProto.groupBy = _operatorsGroupBy.groupBy;
  observableProto.ignoreElements = _operatorsIgnoreElements2['default'];
  observableProto.every = _operatorsEvery2['default'];
  observableProto.last = _operatorsLast2['default'];
  observableProto.map = _operatorsMap2['default'];
  observableProto.mapTo = _operatorsMapTo2['default'];
  observableProto.materialize = _operatorsMaterialize2['default'];
  observableProto.merge = _operatorsMerge2['default'];
  observableProto.mergeAll = _operatorsMergeAll2['default'];
  observableProto.mergeMap = _operatorsMergeMap2['default'];
  observableProto.flatMap = _operatorsMergeMap2['default'];
  observableProto.mergeMapTo = _operatorsMergeMapTo2['default'];
  observableProto.flatMapTo = _operatorsMergeMapTo2['default'];
  observableProto.multicast = _operatorsMulticast2['default'];
  observableProto.observeOn = _operatorsObserveOn2['default'];
  observableProto.partition = _operatorsPartition2['default'];
  observableProto.publish = _operatorsPublish2['default'];
  observableProto.publishBehavior = _operatorsPublishBehavior2['default'];
  observableProto.publishReplay = _operatorsPublishReplay2['default'];
  observableProto.reduce = _operatorsReduce2['default'];
  observableProto.repeat = _operatorsRepeat2['default'];
  observableProto.retry = _operatorsRetry2['default'];
  observableProto.retryWhen = _operatorsRetryWhen2['default'];
  observableProto.sample = _operatorsSample2['default'];
  observableProto.sampleTime = _operatorsSampleTime2['default'];
  observableProto.scan = _operatorsScan2['default'];
  observableProto.share = _operatorsShare2['default'];
  observableProto.shareBehavior = _operatorsShareBehavior2['default'];
  observableProto.shareReplay = _operatorsShareReplay2['default'];
  observableProto.single = _operatorsSingle2['default'];
  observableProto.skip = _operatorsSkip2['default'];
  observableProto.skipUntil = _operatorsSkipUntil2['default'];
  observableProto.startWith = _operatorsStartWith2['default'];
  observableProto.subscribeOn = _operatorsSubscribeOn2['default'];
  observableProto['switch'] = _operatorsSwitch2['default'];
  observableProto.switchMap = _operatorsSwitchMap2['default'];
  observableProto.switchMapTo = _operatorsSwitchMapTo2['default'];
  observableProto.take = _operatorsTake2['default'];
  observableProto.takeUntil = _operatorsTakeUntil2['default'];
  observableProto.throttle = _operatorsThrottle2['default'];
  observableProto.timeout = _operatorsTimeout2['default'];
  observableProto.timeoutWith = _operatorsTimeoutWith2['default'];
  observableProto.toArray = _operatorsToArray2['default'];
  observableProto.toPromise = _operatorsToPromise2['default'];
  observableProto.window = _operatorsWindow2['default'];
  observableProto.windowCount = _operatorsWindowCount2['default'];
  observableProto.windowTime = _operatorsWindowTime2['default'];
  observableProto.windowToggle = _operatorsWindowToggle2['default'];
  observableProto.windowWhen = _operatorsWindowWhen2['default'];
  observableProto.withLatestFrom = _operatorsWithLatestFrom2['default'];
  observableProto.zip = _operatorsZip2['default'];
  observableProto.zipAll = _operatorsZipAll2['default'];
  var Scheduler = {
    nextTick: _schedulersNextTick2['default'],
    immediate: _schedulersImmediate2['default']
  };
  exports.Subject = _Subject2['default'];
  exports.Scheduler = Scheduler;
  exports.Observable = _Observable2['default'];
  exports.Subscriber = _Subscriber2['default'];
  exports.Subscription = _Subscription2['default'];
  exports.ReplaySubject = _subjectsReplaySubject2['default'];
  exports.BehaviorSubject = _subjectsBehaviorSubject2['default'];
  exports.ConnectableObservable = _observablesConnectableObservable2['default'];
  exports.Notification = _Notification2['default'];
  exports.EmptyError = _utilEmptyError2['default'];
  exports.ArgumentOutOfRangeError = _utilArgumentOutOfRangeError2['default'];
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/promise", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var PromiseWrapper = (function() {
    function PromiseWrapper() {}
    PromiseWrapper.resolve = function(obj) {
      return Promise.resolve(obj);
    };
    PromiseWrapper.reject = function(obj, _) {
      return Promise.reject(obj);
    };
    PromiseWrapper.catchError = function(promise, onError) {
      return promise.catch(onError);
    };
    PromiseWrapper.all = function(promises) {
      if (promises.length == 0)
        return Promise.resolve([]);
      return Promise.all(promises);
    };
    PromiseWrapper.then = function(promise, success, rejection) {
      return promise.then(success, rejection);
    };
    PromiseWrapper.wrap = function(computation) {
      return new Promise(function(res, rej) {
        try {
          res(computation());
        } catch (e) {
          rej(e);
        }
      });
    };
    PromiseWrapper.scheduleMicrotask = function(computation) {
      PromiseWrapper.then(PromiseWrapper.resolve(null), computation, function(_) {});
    };
    PromiseWrapper.isPromise = function(obj) {
      return obj instanceof Promise;
    };
    PromiseWrapper.completer = function() {
      var resolve;
      var reject;
      var p = new Promise(function(res, rej) {
        resolve = res;
        reject = rej;
      });
      return {
        promise: p,
        resolve: resolve,
        reject: reject
      };
    };
    return PromiseWrapper;
  })();
  exports.PromiseWrapper = PromiseWrapper;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/async", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/promise", "npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Rx"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var promise_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/promise');
  exports.PromiseWrapper = promise_1.PromiseWrapper;
  exports.Promise = promise_1.Promise;
  var Rx_1 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Rx');
  var Rx_2 = $__require('npm:@reactivex/rxjs@5.0.0-alpha.7/dist/cjs/Rx');
  exports.Subject = Rx_2.Subject;
  var TimerWrapper = (function() {
    function TimerWrapper() {}
    TimerWrapper.setTimeout = function(fn, millis) {
      return lang_1.global.setTimeout(fn, millis);
    };
    TimerWrapper.clearTimeout = function(id) {
      lang_1.global.clearTimeout(id);
    };
    TimerWrapper.setInterval = function(fn, millis) {
      return lang_1.global.setInterval(fn, millis);
    };
    TimerWrapper.clearInterval = function(id) {
      lang_1.global.clearInterval(id);
    };
    return TimerWrapper;
  })();
  exports.TimerWrapper = TimerWrapper;
  var ObservableWrapper = (function() {
    function ObservableWrapper() {}
    ObservableWrapper.subscribe = function(emitter, onNext, onError, onComplete) {
      if (onComplete === void 0) {
        onComplete = function() {};
      }
      return emitter.subscribe({
        next: onNext,
        error: onError,
        complete: onComplete
      });
    };
    ObservableWrapper.isObservable = function(obs) {
      return obs instanceof Rx_1.Observable;
    };
    ObservableWrapper.hasSubscribers = function(obs) {
      return obs.observers.length > 0;
    };
    ObservableWrapper.dispose = function(subscription) {
      subscription.unsubscribe();
    };
    ObservableWrapper.callNext = function(emitter, value) {
      emitter.next(value);
    };
    ObservableWrapper.callError = function(emitter, error) {
      emitter.error(error);
    };
    ObservableWrapper.callComplete = function(emitter) {
      emitter.complete();
    };
    ObservableWrapper.fromPromise = function(promise) {
      return Rx_1.Observable.fromPromise(promise);
    };
    ObservableWrapper.toPromise = function(obj) {
      return obj.toPromise();
    };
    return ObservableWrapper;
  })();
  exports.ObservableWrapper = ObservableWrapper;
  var EventEmitter = (function(_super) {
    __extends(EventEmitter, _super);
    function EventEmitter(isAsync) {
      if (isAsync === void 0) {
        isAsync = true;
      }
      _super.call(this);
      this._isAsync = isAsync;
    }
    EventEmitter.prototype.subscribe = function(generatorOrNext, error, complete) {
      if (generatorOrNext && typeof generatorOrNext === 'object') {
        var schedulerFn = this._isAsync ? function(value) {
          setTimeout(function() {
            return generatorOrNext.next(value);
          });
        } : function(value) {
          generatorOrNext.next(value);
        };
        return _super.prototype.subscribe.call(this, schedulerFn, function(err) {
          return generatorOrNext.error ? generatorOrNext.error(err) : null;
        }, function() {
          return generatorOrNext.complete ? generatorOrNext.complete() : null;
        });
      } else {
        var schedulerFn = this._isAsync ? function(value) {
          setTimeout(function() {
            return generatorOrNext(value);
          });
        } : function(value) {
          generatorOrNext(value);
        };
        return _super.prototype.subscribe.call(this, schedulerFn, function(err) {
          return error ? error(err) : null;
        }, function() {
          return complete ? complete() : null;
        });
      }
    };
    return EventEmitter;
  })(Rx_1.Subject);
  exports.EventEmitter = EventEmitter;
  var Observable = (function(_super) {
    __extends(Observable, _super);
    function Observable() {
      _super.apply(this, arguments);
    }
    Observable.prototype.lift = function(operator) {
      var observable = new Observable();
      observable.source = this;
      observable.operator = operator;
      return observable;
    };
    return Observable;
  })(Rx_1.Observable);
  exports.Observable = Observable;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/facade/lang", [], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __extends = (this && this.__extends) || function(d, b) {
    for (var p in b)
      if (b.hasOwnProperty(p))
        d[p] = b[p];
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
  var globalScope;
  if (typeof window === 'undefined') {
    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {
      globalScope = self;
    } else {
      globalScope = global;
    }
  } else {
    globalScope = window;
  }
  ;
  exports.IS_DART = false;
  var _global = globalScope;
  exports.global = _global;
  exports.Type = Function;
  function getTypeNameForDebugging(type) {
    return type['name'];
  }
  exports.getTypeNameForDebugging = getTypeNameForDebugging;
  exports.Math = _global.Math;
  exports.Date = _global.Date;
  var _devMode = !!_global.angularDevMode;
  var _devModeLocked = false;
  function lockDevMode() {
    _devModeLocked = true;
  }
  exports.lockDevMode = lockDevMode;
  function enableDevMode() {
    if (_devModeLocked) {
      throw 'Cannot enable dev mode after platform setup.';
    }
    _devMode = true;
  }
  exports.enableDevMode = enableDevMode;
  function assertionsEnabled() {
    return _devMode;
  }
  exports.assertionsEnabled = assertionsEnabled;
  _global.assert = function assert(condition) {};
  function CONST_EXPR(expr) {
    return expr;
  }
  exports.CONST_EXPR = CONST_EXPR;
  function CONST() {
    return function(target) {
      return target;
    };
  }
  exports.CONST = CONST;
  function isPresent(obj) {
    return obj !== undefined && obj !== null;
  }
  exports.isPresent = isPresent;
  function isBlank(obj) {
    return obj === undefined || obj === null;
  }
  exports.isBlank = isBlank;
  function isString(obj) {
    return typeof obj === "string";
  }
  exports.isString = isString;
  function isFunction(obj) {
    return typeof obj === "function";
  }
  exports.isFunction = isFunction;
  function isType(obj) {
    return isFunction(obj);
  }
  exports.isType = isType;
  function isStringMap(obj) {
    return typeof obj === 'object' && obj !== null;
  }
  exports.isStringMap = isStringMap;
  function isPromise(obj) {
    return obj instanceof _global.Promise;
  }
  exports.isPromise = isPromise;
  function isArray(obj) {
    return Array.isArray(obj);
  }
  exports.isArray = isArray;
  function isNumber(obj) {
    return typeof obj === 'number';
  }
  exports.isNumber = isNumber;
  function isDate(obj) {
    return obj instanceof exports.Date && !isNaN(obj.valueOf());
  }
  exports.isDate = isDate;
  function stringify(token) {
    if (typeof token === 'string') {
      return token;
    }
    if (token === undefined || token === null) {
      return '' + token;
    }
    if (token.name) {
      return token.name;
    }
    var res = token.toString();
    var newLineIndex = res.indexOf("\n");
    return (newLineIndex === -1) ? res : res.substring(0, newLineIndex);
  }
  exports.stringify = stringify;
  function serializeEnum(val) {
    return val;
  }
  exports.serializeEnum = serializeEnum;
  function deserializeEnum(val, values) {
    return val;
  }
  exports.deserializeEnum = deserializeEnum;
  var StringWrapper = (function() {
    function StringWrapper() {}
    StringWrapper.fromCharCode = function(code) {
      return String.fromCharCode(code);
    };
    StringWrapper.charCodeAt = function(s, index) {
      return s.charCodeAt(index);
    };
    StringWrapper.split = function(s, regExp) {
      return s.split(regExp);
    };
    StringWrapper.equals = function(s, s2) {
      return s === s2;
    };
    StringWrapper.replace = function(s, from, replace) {
      return s.replace(from, replace);
    };
    StringWrapper.replaceAll = function(s, from, replace) {
      return s.replace(from, replace);
    };
    StringWrapper.slice = function(s, from, to) {
      if (from === void 0) {
        from = 0;
      }
      if (to === void 0) {
        to = null;
      }
      return s.slice(from, to === null ? undefined : to);
    };
    StringWrapper.replaceAllMapped = function(s, from, cb) {
      return s.replace(from, function() {
        var matches = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          matches[_i - 0] = arguments[_i];
        }
        matches.splice(-2, 2);
        return cb(matches);
      });
    };
    StringWrapper.contains = function(s, substr) {
      return s.indexOf(substr) != -1;
    };
    StringWrapper.compare = function(a, b) {
      if (a < b) {
        return -1;
      } else if (a > b) {
        return 1;
      } else {
        return 0;
      }
    };
    return StringWrapper;
  })();
  exports.StringWrapper = StringWrapper;
  var StringJoiner = (function() {
    function StringJoiner(parts) {
      if (parts === void 0) {
        parts = [];
      }
      this.parts = parts;
    }
    StringJoiner.prototype.add = function(part) {
      this.parts.push(part);
    };
    StringJoiner.prototype.toString = function() {
      return this.parts.join("");
    };
    return StringJoiner;
  })();
  exports.StringJoiner = StringJoiner;
  var NumberParseError = (function(_super) {
    __extends(NumberParseError, _super);
    function NumberParseError(message) {
      _super.call(this);
      this.message = message;
    }
    NumberParseError.prototype.toString = function() {
      return this.message;
    };
    return NumberParseError;
  })(Error);
  exports.NumberParseError = NumberParseError;
  var NumberWrapper = (function() {
    function NumberWrapper() {}
    NumberWrapper.toFixed = function(n, fractionDigits) {
      return n.toFixed(fractionDigits);
    };
    NumberWrapper.equal = function(a, b) {
      return a === b;
    };
    NumberWrapper.parseIntAutoRadix = function(text) {
      var result = parseInt(text);
      if (isNaN(result)) {
        throw new NumberParseError("Invalid integer literal when parsing " + text);
      }
      return result;
    };
    NumberWrapper.parseInt = function(text, radix) {
      if (radix == 10) {
        if (/^(\-|\+)?[0-9]+$/.test(text)) {
          return parseInt(text, radix);
        }
      } else if (radix == 16) {
        if (/^(\-|\+)?[0-9ABCDEFabcdef]+$/.test(text)) {
          return parseInt(text, radix);
        }
      } else {
        var result = parseInt(text, radix);
        if (!isNaN(result)) {
          return result;
        }
      }
      throw new NumberParseError("Invalid integer literal when parsing " + text + " in base " + radix);
    };
    NumberWrapper.parseFloat = function(text) {
      return parseFloat(text);
    };
    Object.defineProperty(NumberWrapper, "NaN", {
      get: function() {
        return NaN;
      },
      enumerable: true,
      configurable: true
    });
    NumberWrapper.isNaN = function(value) {
      return isNaN(value);
    };
    NumberWrapper.isInteger = function(value) {
      return Number.isInteger(value);
    };
    return NumberWrapper;
  })();
  exports.NumberWrapper = NumberWrapper;
  exports.RegExp = _global.RegExp;
  var RegExpWrapper = (function() {
    function RegExpWrapper() {}
    RegExpWrapper.create = function(regExpStr, flags) {
      if (flags === void 0) {
        flags = '';
      }
      flags = flags.replace(/g/g, '');
      return new _global.RegExp(regExpStr, flags + 'g');
    };
    RegExpWrapper.firstMatch = function(regExp, input) {
      regExp.lastIndex = 0;
      return regExp.exec(input);
    };
    RegExpWrapper.test = function(regExp, input) {
      regExp.lastIndex = 0;
      return regExp.test(input);
    };
    RegExpWrapper.matcher = function(regExp, input) {
      regExp.lastIndex = 0;
      return {
        re: regExp,
        input: input
      };
    };
    return RegExpWrapper;
  })();
  exports.RegExpWrapper = RegExpWrapper;
  var RegExpMatcherWrapper = (function() {
    function RegExpMatcherWrapper() {}
    RegExpMatcherWrapper.next = function(matcher) {
      return matcher.re.exec(matcher.input);
    };
    return RegExpMatcherWrapper;
  })();
  exports.RegExpMatcherWrapper = RegExpMatcherWrapper;
  var FunctionWrapper = (function() {
    function FunctionWrapper() {}
    FunctionWrapper.apply = function(fn, posArgs) {
      return fn.apply(null, posArgs);
    };
    return FunctionWrapper;
  })();
  exports.FunctionWrapper = FunctionWrapper;
  function looseIdentical(a, b) {
    return a === b || typeof a === "number" && typeof b === "number" && isNaN(a) && isNaN(b);
  }
  exports.looseIdentical = looseIdentical;
  function getMapKey(value) {
    return value;
  }
  exports.getMapKey = getMapKey;
  function normalizeBlank(obj) {
    return isBlank(obj) ? null : obj;
  }
  exports.normalizeBlank = normalizeBlank;
  function normalizeBool(obj) {
    return isBlank(obj) ? false : obj;
  }
  exports.normalizeBool = normalizeBool;
  function isJsObject(o) {
    return o !== null && (typeof o === "function" || typeof o === "object");
  }
  exports.isJsObject = isJsObject;
  function print(obj) {
    console.log(obj);
  }
  exports.print = print;
  var Json = (function() {
    function Json() {}
    Json.parse = function(s) {
      return _global.JSON.parse(s);
    };
    Json.stringify = function(data) {
      return _global.JSON.stringify(data, null, 2);
    };
    return Json;
  })();
  exports.Json = Json;
  var DateWrapper = (function() {
    function DateWrapper() {}
    DateWrapper.create = function(year, month, day, hour, minutes, seconds, milliseconds) {
      if (month === void 0) {
        month = 1;
      }
      if (day === void 0) {
        day = 1;
      }
      if (hour === void 0) {
        hour = 0;
      }
      if (minutes === void 0) {
        minutes = 0;
      }
      if (seconds === void 0) {
        seconds = 0;
      }
      if (milliseconds === void 0) {
        milliseconds = 0;
      }
      return new exports.Date(year, month - 1, day, hour, minutes, seconds, milliseconds);
    };
    DateWrapper.fromISOString = function(str) {
      return new exports.Date(str);
    };
    DateWrapper.fromMillis = function(ms) {
      return new exports.Date(ms);
    };
    DateWrapper.toMillis = function(date) {
      return date.getTime();
    };
    DateWrapper.now = function() {
      return new exports.Date();
    };
    DateWrapper.toJson = function(date) {
      return date.toJSON();
    };
    return DateWrapper;
  })();
  exports.DateWrapper = DateWrapper;
  function setValueOnPath(global, path, value) {
    var parts = path.split('.');
    var obj = global;
    while (parts.length > 1) {
      var name = parts.shift();
      if (obj.hasOwnProperty(name)) {
        obj = obj[name];
      } else {
        obj = obj[name] = {};
      }
    }
    if (obj === undefined || obj === null) {
      obj = {};
    }
    obj[parts.shift()] = value;
  }
  exports.setValueOnPath = setValueOnPath;
  var _symbolIterator = null;
  function getSymbolIterator() {
    if (isBlank(_symbolIterator)) {
      if (isPresent(Symbol) && isPresent(Symbol.iterator)) {
        _symbolIterator = Symbol.iterator;
      } else {
        var keys = Object.getOwnPropertyNames(Map.prototype);
        for (var i = 0; i < keys.length; ++i) {
          var key = keys[i];
          if (key !== 'entries' && key !== 'size' && Map.prototype[key] === Map.prototype['entries']) {
            _symbolIterator = key;
          }
        }
      }
    }
    return _symbolIterator;
  }
  exports.getSymbolIterator = getSymbolIterator;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes/async_pipe", ["npm:angular2@2.0.0-alpha.46/src/facade/lang", "npm:angular2@2.0.0-alpha.46/src/facade/async", "npm:angular2@2.0.0-alpha.46/src/core/metadata", "npm:angular2@2.0.0-alpha.46/src/core/di", "npm:angular2@2.0.0-alpha.46/src/core/change_detection", "npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var __decorate = (this && this.__decorate) || function(decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
      return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
      case 2:
        return decorators.reduceRight(function(o, d) {
          return (d && d(o)) || o;
        }, target);
      case 3:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key)), void 0;
        }, void 0);
      case 4:
        return decorators.reduceRight(function(o, d) {
          return (d && d(target, key, o)) || o;
        }, desc);
    }
  };
  var __metadata = (this && this.__metadata) || function(k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
      return Reflect.metadata(k, v);
  };
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/async');
  var metadata_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/metadata');
  var di_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/di');
  var change_detection_1 = $__require('npm:angular2@2.0.0-alpha.46/src/core/change_detection');
  var invalid_pipe_argument_exception_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/invalid_pipe_argument_exception');
  var ObservableStrategy = (function() {
    function ObservableStrategy() {}
    ObservableStrategy.prototype.createSubscription = function(async, updateLatestValue) {
      return async_1.ObservableWrapper.subscribe(async, updateLatestValue, function(e) {
        throw e;
      });
    };
    ObservableStrategy.prototype.dispose = function(subscription) {
      async_1.ObservableWrapper.dispose(subscription);
    };
    ObservableStrategy.prototype.onDestroy = function(subscription) {
      async_1.ObservableWrapper.dispose(subscription);
    };
    return ObservableStrategy;
  })();
  var PromiseStrategy = (function() {
    function PromiseStrategy() {}
    PromiseStrategy.prototype.createSubscription = function(async, updateLatestValue) {
      return async.then(updateLatestValue);
    };
    PromiseStrategy.prototype.dispose = function(subscription) {};
    PromiseStrategy.prototype.onDestroy = function(subscription) {};
    return PromiseStrategy;
  })();
  var _promiseStrategy = new PromiseStrategy();
  var _observableStrategy = new ObservableStrategy();
  var AsyncPipe = (function() {
    function AsyncPipe(_ref) {
      this._latestValue = null;
      this._latestReturnedValue = null;
      this._subscription = null;
      this._obj = null;
      this._strategy = null;
      this._ref = _ref;
    }
    AsyncPipe.prototype.onDestroy = function() {
      if (lang_1.isPresent(this._subscription)) {
        this._dispose();
      }
    };
    AsyncPipe.prototype.transform = function(obj, args) {
      if (lang_1.isBlank(this._obj)) {
        if (lang_1.isPresent(obj)) {
          this._subscribe(obj);
        }
        return null;
      }
      if (obj !== this._obj) {
        this._dispose();
        return this.transform(obj);
      }
      if (this._latestValue === this._latestReturnedValue) {
        return this._latestReturnedValue;
      } else {
        this._latestReturnedValue = this._latestValue;
        return change_detection_1.WrappedValue.wrap(this._latestValue);
      }
    };
    AsyncPipe.prototype._subscribe = function(obj) {
      var _this = this;
      this._obj = obj;
      this._strategy = this._selectStrategy(obj);
      this._subscription = this._strategy.createSubscription(obj, function(value) {
        return _this._updateLatestValue(obj, value);
      });
    };
    AsyncPipe.prototype._selectStrategy = function(obj) {
      if (lang_1.isPromise(obj)) {
        return _promiseStrategy;
      } else if (async_1.ObservableWrapper.isObservable(obj)) {
        return _observableStrategy;
      } else {
        throw new invalid_pipe_argument_exception_1.InvalidPipeArgumentException(AsyncPipe, obj);
      }
    };
    AsyncPipe.prototype._dispose = function() {
      this._strategy.dispose(this._subscription);
      this._latestValue = null;
      this._latestReturnedValue = null;
      this._subscription = null;
      this._obj = null;
    };
    AsyncPipe.prototype._updateLatestValue = function(async, value) {
      if (async === this._obj) {
        this._latestValue = value;
        this._ref.markForCheck();
      }
    };
    AsyncPipe = __decorate([metadata_1.Pipe({
      name: 'async',
      pure: false
    }), di_1.Injectable(), __metadata('design:paramtypes', [change_detection_1.ChangeDetectorRef])], AsyncPipe);
    return AsyncPipe;
  })();
  exports.AsyncPipe = AsyncPipe;
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/src/common/pipes", ["npm:angular2@2.0.0-alpha.46/src/common/pipes/async_pipe", "npm:angular2@2.0.0-alpha.46/src/common/pipes/uppercase_pipe", "npm:angular2@2.0.0-alpha.46/src/common/pipes/lowercase_pipe", "npm:angular2@2.0.0-alpha.46/src/common/pipes/json_pipe", "npm:angular2@2.0.0-alpha.46/src/common/pipes/slice_pipe", "npm:angular2@2.0.0-alpha.46/src/common/pipes/date_pipe", "npm:angular2@2.0.0-alpha.46/src/common/pipes/number_pipe", "npm:angular2@2.0.0-alpha.46/src/facade/lang"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  var async_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/async_pipe');
  var uppercase_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/uppercase_pipe');
  var lowercase_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/lowercase_pipe');
  var json_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/json_pipe');
  var slice_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/slice_pipe');
  var date_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/date_pipe');
  var number_pipe_1 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/number_pipe');
  var lang_1 = $__require('npm:angular2@2.0.0-alpha.46/src/facade/lang');
  var async_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/async_pipe');
  exports.AsyncPipe = async_pipe_2.AsyncPipe;
  var date_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/date_pipe');
  exports.DatePipe = date_pipe_2.DatePipe;
  var json_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/json_pipe');
  exports.JsonPipe = json_pipe_2.JsonPipe;
  var slice_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/slice_pipe');
  exports.SlicePipe = slice_pipe_2.SlicePipe;
  var lowercase_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/lowercase_pipe');
  exports.LowerCasePipe = lowercase_pipe_2.LowerCasePipe;
  var number_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/number_pipe');
  exports.NumberPipe = number_pipe_2.NumberPipe;
  exports.DecimalPipe = number_pipe_2.DecimalPipe;
  exports.PercentPipe = number_pipe_2.PercentPipe;
  exports.CurrencyPipe = number_pipe_2.CurrencyPipe;
  var uppercase_pipe_2 = $__require('npm:angular2@2.0.0-alpha.46/src/common/pipes/uppercase_pipe');
  exports.UpperCasePipe = uppercase_pipe_2.UpperCasePipe;
  exports.COMMON_PIPES = lang_1.CONST_EXPR([async_pipe_1.AsyncPipe, uppercase_pipe_1.UpperCasePipe, lowercase_pipe_1.LowerCasePipe, json_pipe_1.JsonPipe, slice_pipe_1.SlicePipe, number_pipe_1.DecimalPipe, number_pipe_1.PercentPipe, number_pipe_1.CurrencyPipe, date_pipe_1.DatePipe]);
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/common", ["npm:angular2@2.0.0-alpha.46/src/common/pipes", "npm:angular2@2.0.0-alpha.46/src/common/directives", "npm:angular2@2.0.0-alpha.46/src/common/forms", "npm:angular2@2.0.0-alpha.46/src/common/common_directives"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/pipes'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/directives'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/forms'));
  __export($__require('npm:angular2@2.0.0-alpha.46/src/common/common_directives'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:angular2@2.0.0-alpha.46/angular2", ["npm:angular2@2.0.0-alpha.46/common", "npm:angular2@2.0.0-alpha.46/core", "npm:angular2@2.0.0-alpha.46/profile", "npm:angular2@2.0.0-alpha.46/lifecycle_hooks", "npm:angular2@2.0.0-alpha.46/bootstrap", "npm:angular2@2.0.0-alpha.46/upgrade"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  function __export(m) {
    for (var p in m)
      if (!exports.hasOwnProperty(p))
        exports[p] = m[p];
  }
  __export($__require('npm:angular2@2.0.0-alpha.46/common'));
  __export($__require('npm:angular2@2.0.0-alpha.46/core'));
  __export($__require('npm:angular2@2.0.0-alpha.46/profile'));
  __export($__require('npm:angular2@2.0.0-alpha.46/lifecycle_hooks'));
  __export($__require('npm:angular2@2.0.0-alpha.46/bootstrap'));
  __export($__require('npm:angular2@2.0.0-alpha.46/upgrade'));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/bootstrap", ["npm:angular2@2.0.0-alpha.46/angular2", "npm:angular2@2.0.0-alpha.46/router", "npm:angular2@2.0.0-alpha.46/http", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/fastdom", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/action-sheet/action-sheet", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/modal/modal", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/popup/popup", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/events", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-registry", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/feature-detect", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/tap-click", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  exports.ionicProviders = ionicProviders;
  function _interopRequireWildcard(obj) {
    if (obj && obj.__esModule) {
      return obj;
    } else {
      var newObj = {};
      if (obj != null) {
        for (var key in obj) {
          if (Object.prototype.hasOwnProperty.call(obj, key))
            newObj[key] = obj[key];
        }
      }
      newObj['default'] = obj;
      return newObj;
    }
  }
  var _angular2Angular2 = $__require('npm:angular2@2.0.0-alpha.46/angular2');
  var _angular2Router = $__require('npm:angular2@2.0.0-alpha.46/router');
  var _angular2Http = $__require('npm:angular2@2.0.0-alpha.46/http');
  var _componentsAppApp = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/app/app');
  var _config = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  var _componentsOverlayOverlayController = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/overlay/overlay-controller');
  var _utilFastdom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/fastdom');
  var _utilForm = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/form');
  var _utilKeyboard = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/keyboard');
  var _componentsActionSheetActionSheet = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/action-sheet/action-sheet');
  var _componentsModalModal = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/modal/modal');
  var _componentsPopupPopup = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/popup/popup');
  var _utilEvents = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/events');
  var _componentsNavNavRegistry = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/nav/nav-registry');
  var _translationTranslate = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate');
  var _utilFeatureDetect = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/feature-detect');
  var _componentsTapClickTapClick = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components/tap-click/tap-click');
  var _utilDom = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/dom');
  var dom = _interopRequireWildcard(_utilDom);
  function ionicProviders() {
    var args = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
    var fastdom = new _utilFastdom.FastDom();
    var app = new _componentsAppApp.IonicApp(fastdom);
    var platform = new _platformPlatform.Platform();
    var navRegistry = new _componentsNavNavRegistry.NavRegistry(args.pages);
    var config = args.config;
    if (!(config instanceof _config.Config)) {
      config = new _config.Config(config);
    }
    platform.url(window.location.href);
    platform.userAgent(window.navigator.userAgent);
    platform.navigatorPlatform(window.navigator.platform);
    platform.load();
    config.setPlatform(platform);
    var events = new _utilEvents.Events();
    (0, _componentsTapClickTapClick.initTapClick)(window, document, app, config, fastdom);
    var featureDetect = new _utilFeatureDetect.FeatureDetect();
    setupDom(window, document, config, platform, featureDetect);
    bindEvents(window, document, platform, events);
    platform.prepareReady(config);
    return [(0, _angular2Angular2.provide)(_utilFastdom.FastDom, {useValue: fastdom}), (0, _angular2Angular2.provide)(_componentsAppApp.IonicApp, {useValue: app}), (0, _angular2Angular2.provide)(_config.Config, {useValue: config}), (0, _angular2Angular2.provide)(_platformPlatform.Platform, {useValue: platform}), (0, _angular2Angular2.provide)(_utilFeatureDetect.FeatureDetect, {useValue: featureDetect}), (0, _angular2Angular2.provide)(_utilEvents.Events, {useValue: events}), (0, _angular2Angular2.provide)(_componentsNavNavRegistry.NavRegistry, {useValue: navRegistry}), _utilForm.Form, _utilKeyboard.Keyboard, _componentsOverlayOverlayController.OverlayController, _componentsActionSheetActionSheet.ActionSheet, _componentsModalModal.Modal, _componentsPopupPopup.Popup, _translationTranslate.Translate, _angular2Router.ROUTER_PROVIDERS, (0, _angular2Angular2.provide)(_angular2Router.LocationStrategy, {useClass: _angular2Router.HashLocationStrategy}), _angular2Http.HTTP_PROVIDERS];
  }
  function setupDom(window, document, config, platform, featureDetect) {
    var bodyEle = document.body;
    if (!bodyEle) {
      return dom.ready(function() {
        applyBodyCss(document, config, platform);
      });
    }
    var versions = platform.versions();
    platform.platforms().forEach(function(platformName) {
      var platformClass = 'platform-' + platformName;
      bodyEle.classList.add(platformClass);
      var platformVersion = versions[platformName];
      if (platformVersion) {
        platformClass += platformVersion.major;
        bodyEle.classList.add(platformClass);
        bodyEle.classList.add(platformClass + '_' + platformVersion.minor);
      }
    });
    bodyEle.classList.add(config.get('mode'));
    if (config.get('hoverCSS') !== false) {
      bodyEle.classList.add('enable-hover');
    }
    featureDetect.run(window, document);
  }
  function bindEvents(window, document, platform, events) {
    window.addEventListener('online', function(ev) {
      events.publish('app:online', ev);
    }, false);
    window.addEventListener('offline', function(ev) {
      events.publish('app:offline', ev);
    }, false);
    window.addEventListener('orientationchange', function(ev) {
      events.publish('app:rotated', ev);
    });
    window.addEventListener('statusTap', function(ev) {
      var el = document.elementFromPoint(platform.width() / 2, platform.height() / 2);
      if (!el) {
        return;
      }
      var content = dom.closest(el, 'scroll-content');
      if (content) {
        var scrollTo = new ScrollTo(content);
        scrollTo.start(0, 0, 300, 0);
      }
    });
    setTimeout(function() {
      window.addEventListener('resize', function() {
        platform.windowResize();
      });
    }, 2000);
  }
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/ionic", ["npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/bootstrap", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/modes", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/directives", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/registry", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/click-block", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/events", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/builtins", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/ios-transition", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/md-transition", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate", "npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate_pipe"], true, function($__require, exports, module) {
  "use strict";
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  Object.defineProperty(exports, '__esModule', {value: true});
  function _interopExportWildcard(obj, defaults) {
    var newObj = defaults({}, obj);
    delete newObj['default'];
    return newObj;
  }
  function _defaults(obj, defaults) {
    var keys = Object.getOwnPropertyNames(defaults);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      var value = Object.getOwnPropertyDescriptor(defaults, key);
      if (value && value.configurable && obj[key] === undefined) {
        Object.defineProperty(obj, key, value);
      }
    }
    return obj;
  }
  var _configBootstrap = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/bootstrap');
  _defaults(exports, _interopExportWildcard(_configBootstrap, _defaults));
  var _configConfig = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/config');
  _defaults(exports, _interopExportWildcard(_configConfig, _defaults));
  var _configModes = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/modes');
  _defaults(exports, _interopExportWildcard(_configModes, _defaults));
  var _configDecorators = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/decorators');
  _defaults(exports, _interopExportWildcard(_configDecorators, _defaults));
  var _configDirectives = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/config/directives');
  _defaults(exports, _interopExportWildcard(_configDirectives, _defaults));
  var _components = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/components');
  _defaults(exports, _interopExportWildcard(_components, _defaults));
  var _platformPlatform = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/platform');
  _defaults(exports, _interopExportWildcard(_platformPlatform, _defaults));
  var _platformRegistry = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/registry');
  _defaults(exports, _interopExportWildcard(_platformRegistry, _defaults));
  var _platformStorage = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/platform/storage');
  _defaults(exports, _interopExportWildcard(_platformStorage, _defaults));
  var _utilClickBlock = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/click-block');
  _defaults(exports, _interopExportWildcard(_utilClickBlock, _defaults));
  var _utilEvents = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/util/events');
  _defaults(exports, _interopExportWildcard(_utilEvents, _defaults));
  var _animationsAnimation = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/animation');
  _defaults(exports, _interopExportWildcard(_animationsAnimation, _defaults));
  var _animationsBuiltins = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/animations/builtins');
  _defaults(exports, _interopExportWildcard(_animationsBuiltins, _defaults));
  var _transitionsTransition = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/transition');
  _defaults(exports, _interopExportWildcard(_transitionsTransition, _defaults));
  var _transitionsIosTransition = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/ios-transition');
  _defaults(exports, _interopExportWildcard(_transitionsIosTransition, _defaults));
  var _transitionsMdTransition = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/transitions/md-transition');
  _defaults(exports, _interopExportWildcard(_transitionsMdTransition, _defaults));
  var _translationTranslate = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate');
  _defaults(exports, _interopExportWildcard(_translationTranslate, _defaults));
  var _translationTranslate_pipe = $__require('npm:ionic-framework@2.0.0-alpha.34/dist/src/es5/common/ionic/translation/translate_pipe');
  _defaults(exports, _interopExportWildcard(_translationTranslate_pipe, _defaults));
  global.define = __define;
  return module.exports;
});

System.registerDynamic("npm:ionic-framework@2.0.0-alpha.34/dist/js/web-animations.min", [], true, function($__require, exports, module) {
  ;
  var global = this,
      __define = global.define;
  global.define = undefined;
  "format cjs";
  !function(a, b) {
    b["true"] = a, function() {
      if (document.documentElement.animate) {
        var a = document.documentElement.animate([], 0),
            b = !0;
        if (a && (b = !1, "play|currentTime|pause|reverse|playbackRate|cancel|finish|startTime|playState".split("|").forEach(function(c) {
          void 0 === a[c] && (b = !0);
        })), !b)
          return;
      }
      var c = {},
          d = {},
          e = {},
          f = null;
      !function(a, b) {
        function c(a) {
          if ("number" == typeof a)
            return a;
          var b = {};
          for (var c in a)
            b[c] = a[c];
          return b;
        }
        function d() {
          this._delay = 0, this._endDelay = 0, this._fill = "none", this._iterationStart = 0, this._iterations = 1, this._duration = 0, this._playbackRate = 1, this._direction = "normal", this._easing = "linear";
        }
        function e(a, b, c) {
          var e = new d;
          return b && (e.fill = "both", e.duration = "auto"), "number" != typeof a || isNaN(a) ? void 0 !== a && Object.getOwnPropertyNames(a).forEach(function(b) {
            if ("auto" != a[b]) {
              if (("number" == typeof e[b] || "duration" == b) && ("number" != typeof a[b] || isNaN(a[b])))
                return;
              if ("fill" == b && -1 == t.indexOf(a[b]))
                return;
              if ("direction" == b && -1 == u.indexOf(a[b]))
                return;
              e[b] = a[b];
            }
          }) : e.duration = a, e;
        }
        function f(a) {
          return "number" == typeof a && (a = isNaN(a) ? {duration: 0} : {duration: a}), a;
        }
        function g(b, c) {
          b = a.numericTimingToObject(b);
          var d = e(b, c);
          return d._easing = j(d.easing), d;
        }
        function h(a, b, c, d) {
          return 0 > a || a > 1 || 0 > c || c > 1 ? C : function(e) {
            function f(a, b, c) {
              return 3 * a * (1 - c) * (1 - c) * c + 3 * b * (1 - c) * c * c + c * c * c;
            }
            if (0 == e || 1 == e)
              return e;
            for (var g = 0,
                h = 1; ; ) {
              var i = (g + h) / 2,
                  j = f(a, c, i);
              if (Math.abs(e - j) < .001)
                return f(b, d, i);
              e > j ? g = i : h = i;
            }
          };
        }
        function i(a, b) {
          return function(c) {
            if (c >= 1)
              return 1;
            var d = 1 / a;
            return c += b * d, c - c % d;
          };
        }
        function j(a) {
          var b = A.exec(a);
          if (b)
            return h.apply(this, b.slice(1).map(Number));
          var c = B.exec(a);
          if (c)
            return i(Number(c[1]), {
              start: v,
              middle: w,
              end: x
            }[c[2]]);
          var d = y[a];
          return d ? d : C;
        }
        function k(a) {
          return Math.abs(l(a) / a.playbackRate);
        }
        function l(a) {
          return a.duration * a.iterations;
        }
        function m(a, b, c) {
          return null == b ? D : b < c.delay ? E : b >= c.delay + a ? F : G;
        }
        function n(a, b, c, d, e) {
          switch (d) {
            case E:
              return "backwards" == b || "both" == b ? 0 : null;
            case G:
              return c - e;
            case F:
              return "forwards" == b || "both" == b ? a : null;
            case D:
              return null;
          }
        }
        function o(a, b, c, d) {
          return (d.playbackRate < 0 ? b - a : b) * d.playbackRate + c;
        }
        function p(a, b, c, d, e) {
          return c === 1 / 0 || c === -(1 / 0) || c - d == b && e.iterations && (e.iterations + e.iterationStart) % 1 == 0 ? a : c % a;
        }
        function q(a, b, c, d) {
          return 0 === c ? 0 : b == a ? d.iterationStart + d.iterations - 1 : Math.floor(c / a);
        }
        function r(a, b, c, d) {
          var e = a % 2 >= 1,
              f = "normal" == d.direction || d.direction == (e ? "alternate-reverse" : "alternate"),
              g = f ? c : b - c,
              h = g / b;
          return b * d.easing(h);
        }
        function s(a, b, c) {
          var d = m(a, b, c),
              e = n(a, c.fill, b, d, c.delay);
          if (null === e)
            return null;
          if (0 === a)
            return d === E ? 0 : 1;
          var f = c.iterationStart * c.duration,
              g = o(a, e, f, c),
              h = p(c.duration, l(c), g, f, c),
              i = q(c.duration, h, g, c);
          return r(i, c.duration, h, c) / c.duration;
        }
        var t = "backwards|forwards|both|none".split("|"),
            u = "reverse|alternate|alternate-reverse".split("|");
        d.prototype = {
          _setMember: function(b, c) {
            this["_" + b] = c, this._effect && (this._effect._timingInput[b] = c, this._effect._timing = a.normalizeTimingInput(a.normalizeTimingInput(this._effect._timingInput)), this._effect.activeDuration = a.calculateActiveDuration(this._effect._timing), this._effect._animation && this._effect._animation._rebuildUnderlyingAnimation());
          },
          get playbackRate() {
            return this._playbackRate;
          },
          set delay(a) {
            this._setMember("delay", a);
          },
          get delay() {
            return this._delay;
          },
          set endDelay(a) {
            this._setMember("endDelay", a);
          },
          get endDelay() {
            return this._endDelay;
          },
          set fill(a) {
            this._setMember("fill", a);
          },
          get fill() {
            return this._fill;
          },
          set iterationStart(a) {
            this._setMember("iterationStart", a);
          },
          get iterationStart() {
            return this._iterationStart;
          },
          set duration(a) {
            this._setMember("duration", a);
          },
          get duration() {
            return this._duration;
          },
          set direction(a) {
            this._setMember("direction", a);
          },
          get direction() {
            return this._direction;
          },
          set easing(a) {
            this._setMember("easing", a);
          },
          get easing() {
            return this._easing;
          },
          set iterations(a) {
            this._setMember("iterations", a);
          },
          get iterations() {
            return this._iterations;
          }
        };
        var v = 1,
            w = .5,
            x = 0,
            y = {
              ease: h(.25, .1, .25, 1),
              "ease-in": h(.42, 0, 1, 1),
              "ease-out": h(0, 0, .58, 1),
              "ease-in-out": h(.42, 0, .58, 1),
              "step-start": i(1, v),
              "step-middle": i(1, w),
              "step-end": i(1, x)
            },
            z = "\\s*(-?\\d+\\.?\\d*|-?\\.\\d+)\\s*",
            A = new RegExp("cubic-bezier\\(" + z + "," + z + "," + z + "," + z + "\\)"),
            B = /steps\(\s*(\d+)\s*,\s*(start|middle|end)\s*\)/,
            C = function(a) {
              return a;
            },
            D = 0,
            E = 1,
            F = 2,
            G = 3;
        a.cloneTimingInput = c, a.makeTiming = e, a.numericTimingToObject = f, a.normalizeTimingInput = g, a.calculateActiveDuration = k, a.calculateTimeFraction = s, a.calculatePhase = m, a.toTimingFunction = j;
      }(c, f), function(a, b) {
        function c(a, b) {
          return a in i ? i[a][b] || b : b;
        }
        function d(a, b, d) {
          var e = f[a];
          if (e) {
            g.style[a] = b;
            for (var h in e) {
              var i = e[h],
                  j = g.style[i];
              d[i] = c(i, j);
            }
          } else
            d[a] = c(a, b);
        }
        function e(b) {
          function c() {
            var a = e.length;
            null == e[a - 1].offset && (e[a - 1].offset = 1), a > 1 && null == e[0].offset && (e[0].offset = 0);
            for (var b = 0,
                c = e[0].offset,
                d = 1; a > d; d++) {
              var f = e[d].offset;
              if (null != f) {
                for (var g = 1; d - b > g; g++)
                  e[b + g].offset = c + (f - c) * g / (d - b);
                b = d, c = f;
              }
            }
          }
          if (!Array.isArray(b) && null !== b)
            throw new TypeError("Keyframes must be null or an array of keyframes");
          if (null == b)
            return [];
          for (var e = b.map(function(b) {
            var c = {};
            for (var e in b) {
              var f = b[e];
              if ("offset" == e) {
                if (null != f && (f = Number(f), !isFinite(f)))
                  throw new TypeError("keyframe offsets must be numbers.");
              } else {
                if ("composite" == e)
                  throw {
                    type: DOMException.NOT_SUPPORTED_ERR,
                    name: "NotSupportedError",
                    message: "add compositing is not supported"
                  };
                f = "easing" == e ? a.toTimingFunction(f) : "" + f;
              }
              d(e, f, c);
            }
            return void 0 == c.offset && (c.offset = null), void 0 == c.easing && (c.easing = a.toTimingFunction("linear")), c;
          }),
              f = !0,
              g = -(1 / 0),
              h = 0; h < e.length; h++) {
            var i = e[h].offset;
            if (null != i) {
              if (g > i)
                throw {
                  code: DOMException.INVALID_MODIFICATION_ERR,
                  name: "InvalidModificationError",
                  message: "Keyframes are not loosely sorted by offset. Sort or specify offsets."
                };
              g = i;
            } else
              f = !1;
          }
          return e = e.filter(function(a) {
            return a.offset >= 0 && a.offset <= 1;
          }), f || c(), e;
        }
        var f = {
          background: ["backgroundImage", "backgroundPosition", "backgroundSize", "backgroundRepeat", "backgroundAttachment", "backgroundOrigin", "backgroundClip", "backgroundColor"],
          border: ["borderTopColor", "borderTopStyle", "borderTopWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
          borderBottom: ["borderBottomWidth", "borderBottomStyle", "borderBottomColor"],
          borderColor: ["borderTopColor", "borderRightColor", "borderBottomColor", "borderLeftColor"],
          borderLeft: ["borderLeftWidth", "borderLeftStyle", "borderLeftColor"],
          borderRadius: ["borderTopLeftRadius", "borderTopRightRadius", "borderBottomRightRadius", "borderBottomLeftRadius"],
          borderRight: ["borderRightWidth", "borderRightStyle", "borderRightColor"],
          borderTop: ["borderTopWidth", "borderTopStyle", "borderTopColor"],
          borderWidth: ["borderTopWidth", "borderRightWidth", "borderBottomWidth", "borderLeftWidth"],
          flex: ["flexGrow", "flexShrink", "flexBasis"],
          font: ["fontFamily", "fontSize", "fontStyle", "fontVariant", "fontWeight", "lineHeight"],
          margin: ["marginTop", "marginRight", "marginBottom", "marginLeft"],
          outline: ["outlineColor", "outlineStyle", "outlineWidth"],
          padding: ["paddingTop", "paddingRight", "paddingBottom", "paddingLeft"]
        },
            g = document.createElementNS("http://www.w3.org/1999/xhtml", "div"),
            h = {
              thin: "1px",
              medium: "3px",
              thick: "5px"
            },
            i = {
              borderBottomWidth: h,
              borderLeftWidth: h,
              borderRightWidth: h,
              borderTopWidth: h,
              fontSize: {
                "xx-small": "60%",
                "x-small": "75%",
                small: "89%",
                medium: "100%",
                large: "120%",
                "x-large": "150%",
                "xx-large": "200%"
              },
              fontWeight: {
                normal: "400",
                bold: "700"
              },
              outlineWidth: h,
              textShadow: {none: "0px 0px 0px transparent"},
              boxShadow: {none: "0px 0px 0px 0px transparent"}
            };
        a.normalizeKeyframes = e;
      }(c, f), function(a, b, c) {
        function d(a) {
          for (var b = {},
              c = 0; c < a.length; c++)
            for (var d in a[c])
              if ("offset" != d && "easing" != d && "composite" != d) {
                var e = {
                  offset: a[c].offset,
                  easing: a[c].easing,
                  value: a[c][d]
                };
                b[d] = b[d] || [], b[d].push(e);
              }
          for (var f in b) {
            var g = b[f];
            if (0 != g[0].offset || 1 != g[g.length - 1].offset)
              throw {
                type: DOMException.NOT_SUPPORTED_ERR,
                name: "NotSupportedError",
                message: "Partial keyframes are not supported"
              };
          }
          return b;
        }
        function e(a) {
          var c = [];
          for (var d in a)
            for (var e = a[d],
                f = 0; f < e.length - 1; f++) {
              var g = e[f].offset,
                  h = e[f + 1].offset,
                  i = e[f].value,
                  j = e[f + 1].value;
              g == h && (1 == h ? i = j : j = i), c.push({
                startTime: g,
                endTime: h,
                easing: e[f].easing,
                property: d,
                interpolation: b.propertyInterpolation(d, i, j)
              });
            }
          return c.sort(function(a, b) {
            return a.startTime - b.startTime;
          }), c;
        }
        b.convertEffectInput = function(c) {
          var f = a.normalizeKeyframes(c),
              g = d(f),
              h = e(g);
          return function(a, c) {
            null != c && h.filter(function(a) {
              return 0 >= c && 0 == a.startTime || c >= 1 && 1 == a.endTime || c >= a.startTime && c <= a.endTime;
            }).forEach(function(d) {
              var e = c - d.startTime,
                  f = d.endTime - d.startTime,
                  g = 0 == f ? 0 : d.easing(e / f);
              b.apply(a, d.property, d.interpolation(g));
            });
          };
        };
      }(c, d, f), function(a, b) {
        function c(a, b, c) {
          f[c] = f[c] || [], f[c].push([a, b]);
        }
        function d(a, b, d) {
          for (var e = 0; e < d.length; e++) {
            var f = d[e];
            c(a, b, f), /-/.test(f) && c(a, b, f.replace(/-(.)/g, function(a, b) {
              return b.toUpperCase();
            }));
          }
        }
        function e(b, c, d) {
          if ("initial" == c || "initial" == d) {
            var e = b.replace(/-(.)/g, function(a, b) {
              return b.toUpperCase();
            });
            "initial" == c && (c = g[e]), "initial" == d && (d = g[e]);
          }
          for (var h = c == d ? [] : f[b],
              i = 0; h && i < h.length; i++) {
            var j = h[i][0](c),
                k = h[i][0](d);
            if (void 0 !== j && void 0 !== k) {
              var l = h[i][1](j, k);
              if (l) {
                var m = a.Interpolation.apply(null, l);
                return function(a) {
                  return 0 == a ? c : 1 == a ? d : m(a);
                };
              }
            }
          }
          return a.Interpolation(!1, !0, function(a) {
            return a ? d : c;
          });
        }
        var f = {};
        a.addPropertiesHandler = d;
        var g = {
          backgroundColor: "transparent",
          backgroundPosition: "0% 0%",
          borderBottomColor: "currentColor",
          borderBottomLeftRadius: "0px",
          borderBottomRightRadius: "0px",
          borderBottomWidth: "3px",
          borderLeftColor: "currentColor",
          borderLeftWidth: "3px",
          borderRightColor: "currentColor",
          borderRightWidth: "3px",
          borderSpacing: "2px",
          borderTopColor: "currentColor",
          borderTopLeftRadius: "0px",
          borderTopRightRadius: "0px",
          borderTopWidth: "3px",
          bottom: "auto",
          clip: "rect(0px, 0px, 0px, 0px)",
          color: "black",
          fontSize: "100%",
          fontWeight: "400",
          height: "auto",
          left: "auto",
          letterSpacing: "normal",
          lineHeight: "120%",
          marginBottom: "0px",
          marginLeft: "0px",
          marginRight: "0px",
          marginTop: "0px",
          maxHeight: "none",
          maxWidth: "none",
          minHeight: "0px",
          minWidth: "0px",
          opacity: "1.0",
          outlineColor: "invert",
          outlineOffset: "0px",
          outlineWidth: "3px",
          paddingBottom: "0px",
          paddingLeft: "0px",
          paddingRight: "0px",
          paddingTop: "0px",
          right: "auto",
          textIndent: "0px",
          textShadow: "0px 0px 0px transparent",
          top: "auto",
          transform: "",
          verticalAlign: "0px",
          visibility: "visible",
          width: "auto",
          wordSpacing: "normal",
          zIndex: "auto"
        };
        a.propertyInterpolation = e;
      }(d, f), function(a, b, c) {
        function d(b) {
          var c = a.calculateActiveDuration(b),
              d = function(d) {
                return a.calculateTimeFraction(c, d, b);
              };
          return d._totalDuration = b.delay + c + b.endDelay, d._isCurrent = function(d) {
            var e = a.calculatePhase(c, d, b);
            return e === PhaseActive || e === PhaseBefore;
          }, d;
        }
        b.KeyframeEffect = function(c, e, f) {
          var g,
              h = d(a.normalizeTimingInput(f)),
              i = b.convertEffectInput(e),
              j = function() {
                i(c, g);
              };
          return j._update = function(a) {
            return g = h(a), null !== g;
          }, j._clear = function() {
            i(c, null);
          }, j._hasSameTarget = function(a) {
            return c === a;
          }, j._isCurrent = h._isCurrent, j._totalDuration = h._totalDuration, j;
        }, b.NullEffect = function(a) {
          var b = function() {
            a && (a(), a = null);
          };
          return b._update = function() {
            return null;
          }, b._totalDuration = 0, b._isCurrent = function() {
            return !1;
          }, b._hasSameTarget = function() {
            return !1;
          }, b;
        };
      }(c, d, f), function(a, b) {
        a.apply = function(b, c, d) {
          b.style[a.propertyName(c)] = d;
        }, a.clear = function(b, c) {
          b.style[a.propertyName(c)] = "";
        };
      }(d, f), function(a) {
        window.Element.prototype.animate = function(b, c) {
          return a.timeline._play(a.KeyframeEffect(this, b, c));
        };
      }(d), function(a, b) {
        function c(a, b, d) {
          if ("number" == typeof a && "number" == typeof b)
            return a * (1 - d) + b * d;
          if ("boolean" == typeof a && "boolean" == typeof b)
            return .5 > d ? a : b;
          if (a.length == b.length) {
            for (var e = [],
                f = 0; f < a.length; f++)
              e.push(c(a[f], b[f], d));
            return e;
          }
          throw "Mismatched interpolation arguments " + a + ":" + b;
        }
        a.Interpolation = function(a, b, d) {
          return function(e) {
            return d(c(a, b, e));
          };
        };
      }(d, f), function(a, b, c) {
        a.sequenceNumber = 0;
        var d = function(a, b, c) {
          this.target = a, this.currentTime = b, this.timelineTime = c, this.type = "finish", this.bubbles = !1, this.cancelable = !1, this.currentTarget = a, this.defaultPrevented = !1, this.eventPhase = Event.AT_TARGET, this.timeStamp = Date.now();
        };
        b.Animation = function(b) {
          this._sequenceNumber = a.sequenceNumber++, this._currentTime = 0, this._startTime = null, this._paused = !1, this._playbackRate = 1, this._inTimeline = !0, this._finishedFlag = !1, this.onfinish = null, this._finishHandlers = [], this._effect = b, this._inEffect = this._effect._update(0), this._idle = !0, this._currentTimePending = !1;
        }, b.Animation.prototype = {
          _ensureAlive: function() {
            this.playbackRate < 0 && 0 === this.currentTime ? this._inEffect = this._effect._update(-1) : this._inEffect = this._effect._update(this.currentTime), this._inTimeline || !this._inEffect && this._finishedFlag || (this._inTimeline = !0, b.timeline._animations.push(this));
          },
          _tickCurrentTime: function(a, b) {
            a != this._currentTime && (this._currentTime = a, this._isFinished && !b && (this._currentTime = this._playbackRate > 0 ? this._totalDuration : 0), this._ensureAlive());
          },
          get currentTime() {
            return this._idle || this._currentTimePending ? null : this._currentTime;
          },
          set currentTime(a) {
            a = +a, isNaN(a) || (b.restart(), this._paused || null == this._startTime || (this._startTime = this._timeline.currentTime - a / this._playbackRate), this._currentTimePending = !1, this._currentTime != a && (this._tickCurrentTime(a, !0), b.invalidateEffects()));
          },
          get startTime() {
            return this._startTime;
          },
          set startTime(a) {
            a = +a, isNaN(a) || this._paused || this._idle || (this._startTime = a, this._tickCurrentTime((this._timeline.currentTime - this._startTime) * this.playbackRate), b.invalidateEffects());
          },
          get playbackRate() {
            return this._playbackRate;
          },
          set playbackRate(a) {
            if (a != this._playbackRate) {
              var b = this.currentTime;
              this._playbackRate = a, this._startTime = null, "paused" != this.playState && "idle" != this.playState && this.play(), null != b && (this.currentTime = b);
            }
          },
          get _isFinished() {
            return !this._idle && (this._playbackRate > 0 && this._currentTime >= this._totalDuration || this._playbackRate < 0 && this._currentTime <= 0);
          },
          get _totalDuration() {
            return this._effect._totalDuration;
          },
          get playState() {
            return this._idle ? "idle" : null == this._startTime && !this._paused && 0 != this.playbackRate || this._currentTimePending ? "pending" : this._paused ? "paused" : this._isFinished ? "finished" : "running";
          },
          play: function() {
            this._paused = !1, (this._isFinished || this._idle) && (this._currentTime = this._playbackRate > 0 ? 0 : this._totalDuration, this._startTime = null, b.invalidateEffects()), this._finishedFlag = !1, b.restart(), this._idle = !1, this._ensureAlive();
          },
          pause: function() {
            this._isFinished || this._paused || this._idle || (this._currentTimePending = !0), this._startTime = null, this._paused = !0;
          },
          finish: function() {
            this._idle || (this.currentTime = this._playbackRate > 0 ? this._totalDuration : 0, this._startTime = this._totalDuration - this.currentTime, this._currentTimePending = !1);
          },
          cancel: function() {
            this._inEffect && (this._inEffect = !1, this._idle = !0, this.currentTime = 0, this._startTime = null, this._effect._update(null), b.invalidateEffects(), b.restart());
          },
          reverse: function() {
            this.playbackRate *= -1, this.play();
          },
          addEventListener: function(a, b) {
            "function" == typeof b && "finish" == a && this._finishHandlers.push(b);
          },
          removeEventListener: function(a, b) {
            if ("finish" == a) {
              var c = this._finishHandlers.indexOf(b);
              c >= 0 && this._finishHandlers.splice(c, 1);
            }
          },
          _fireEvents: function(a) {
            var b = this._isFinished;
            if ((b || this._idle) && !this._finishedFlag) {
              var c = new d(this, this._currentTime, a),
                  e = this._finishHandlers.concat(this.onfinish ? [this.onfinish] : []);
              e.forEach(function(a) {
                a.call(c.target, c);
              });
            }
            this._finishedFlag = b;
          },
          _tick: function(a) {
            return this._idle || this._paused || (null == this._startTime ? this.startTime = a - this._currentTime / this.playbackRate : this._isFinished || this._tickCurrentTime((a - this._startTime) * this.playbackRate)), this._currentTimePending = !1, this._fireEvents(a), !this._idle && (this._inEffect || !this._finishedFlag);
          }
        };
      }(c, d, f), function(a, b, c) {
        function d(a) {
          a || (a = Date.now());
          var b = j;
          j = [], a < t.currentTime && (a = t.currentTime), h(a), b.forEach(function(b) {
            b[1](a);
          }), p && h(a), g(), m = void 0;
        }
        function e(a, b) {
          return a._sequenceNumber - b._sequenceNumber;
        }
        function f() {
          this._animations = [], this.currentTime = window.performance && performance.now ? performance.now() : 0;
        }
        function g() {
          q.forEach(function(a) {
            a();
          }), q.length = 0;
        }
        function h(a) {
          o = !1;
          var c = b.timeline;
          c.currentTime = a, c._animations.sort(e), n = !1;
          var d = c._animations;
          c._animations = [];
          var f = [],
              g = [];
          d = d.filter(function(b) {
            return b._inTimeline = b._tick(a), b._inEffect ? g.push(b._effect) : f.push(b._effect), b._isFinished || b._paused || b._idle || (n = !0), b._inTimeline;
          }), q.push.apply(q, f), q.push.apply(q, g), c._animations.push.apply(c._animations, d), p = !1, n && requestAnimationFrame(function() {});
        }
        var i = window.requestAnimationFrame,
            j = [],
            k = 0;
        window.requestAnimationFrame = function(a) {
          var b = k++;
          return 0 == j.length && i(d), j.push([b, a]), b;
        }, window.cancelAnimationFrame = function(a) {
          j.forEach(function(b) {
            b[0] == a && (b[1] = function() {});
          });
        }, f.prototype = {_play: function(c) {
            c._timing = a.normalizeTimingInput(c.timing);
            var d = new b.Animation(c);
            return d._idle = !1, d._timeline = this, this._animations.push(d), b.restart(), b.invalidateEffects(), d;
          }};
        var l,
            m = void 0,
            l = function() {
              return void 0 == m && (m = performance.now()), m;
            },
            n = !1,
            o = !1;
        b.restart = function() {
          return n || (n = !0, requestAnimationFrame(function() {}), o = !0), o;
        };
        var p = !1;
        b.invalidateEffects = function() {
          p = !0;
        };
        var q = [],
            r = 1e3 / 60,
            s = window.getComputedStyle;
        Object.defineProperty(window, "getComputedStyle", {
          configurable: !0,
          enumerable: !0,
          value: function() {
            if (p) {
              var a = l();
              a - t.currentTime > 0 && (t.currentTime += r * (Math.floor((a - t.currentTime) / r) + 1)), h(t.currentTime);
            }
            return g(), s.apply(this, arguments);
          }
        });
        var t = new f;
        b.timeline = t;
      }(c, d, f), function(a) {
        function b(a, b) {
          var c = a.exec(b);
          return c ? (c = a.ignoreCase ? c[0].toLowerCase() : c[0], [c, b.substr(c.length)]) : void 0;
        }
        function c(a, b) {
          b = b.replace(/^\s*/, "");
          var c = a(b);
          return c ? [c[0], c[1].replace(/^\s*/, "")] : void 0;
        }
        function d(a, d, e) {
          a = c.bind(null, a);
          for (var f = []; ; ) {
            var g = a(e);
            if (!g)
              return [f, e];
            if (f.push(g[0]), e = g[1], g = b(d, e), !g || "" == g[1])
              return [f, e];
            e = g[1];
          }
        }
        function e(a, b) {
          for (var c = 0,
              d = 0; d < b.length && (!/\s|,/.test(b[d]) || 0 != c); d++)
            if ("(" == b[d])
              c++;
            else if (")" == b[d] && (c--, 0 == c && d++, 0 >= c))
              break;
          var e = a(b.substr(0, d));
          return void 0 == e ? void 0 : [e, b.substr(d)];
        }
        function f(a, b) {
          for (var c = a,
              d = b; c && d; )
            c > d ? c %= d : d %= c;
          return c = a * b / (c + d);
        }
        function g(a) {
          return function(b) {
            var c = a(b);
            return c && (c[0] = void 0), c;
          };
        }
        function h(a, b) {
          return function(c) {
            var d = a(c);
            return d ? d : [b, c];
          };
        }
        function i(b, c) {
          for (var d = [],
              e = 0; e < b.length; e++) {
            var f = a.consumeTrimmed(b[e], c);
            if (!f || "" == f[0])
              return;
            void 0 !== f[0] && d.push(f[0]), c = f[1];
          }
          return "" == c ? d : void 0;
        }
        function j(a, b, c, d, e) {
          for (var g = [],
              h = [],
              i = [],
              j = f(d.length, e.length),
              k = 0; j > k; k++) {
            var l = b(d[k % d.length], e[k % e.length]);
            if (!l)
              return;
            g.push(l[0]), h.push(l[1]), i.push(l[2]);
          }
          return [g, h, function(b) {
            var d = b.map(function(a, b) {
              return i[b](a);
            }).join(c);
            return a ? a(d) : d;
          }];
        }
        function k(a, b, c) {
          for (var d = [],
              e = [],
              f = [],
              g = 0,
              h = 0; h < c.length; h++)
            if ("function" == typeof c[h]) {
              var i = c[h](a[g], b[g++]);
              d.push(i[0]), e.push(i[1]), f.push(i[2]);
            } else
              !function(a) {
                d.push(!1), e.push(!1), f.push(function() {
                  return c[a];
                });
              }(h);
          return [d, e, function(a) {
            for (var b = "",
                c = 0; c < a.length; c++)
              b += f[c](a[c]);
            return b;
          }];
        }
        a.consumeToken = b, a.consumeTrimmed = c, a.consumeRepeated = d, a.consumeParenthesised = e, a.ignore = g, a.optional = h, a.consumeList = i, a.mergeNestedRepeated = j.bind(null, null), a.mergeWrappedNestedRepeated = j, a.mergeList = k;
      }(d), function(a) {
        function b(b) {
          function c(b) {
            var c = a.consumeToken(/^inset/i, b);
            if (c)
              return d.inset = !0, c;
            var c = a.consumeLengthOrPercent(b);
            if (c)
              return d.lengths.push(c[0]), c;
            var c = a.consumeColor(b);
            return c ? (d.color = c[0], c) : void 0;
          }
          var d = {
            inset: !1,
            lengths: [],
            color: null
          },
              e = a.consumeRepeated(c, /^/, b);
          return e && e[0].length ? [d, e[1]] : void 0;
        }
        function c(c) {
          var d = a.consumeRepeated(b, /^,/, c);
          return d && "" == d[1] ? d[0] : void 0;
        }
        function d(b, c) {
          for (; b.lengths.length < Math.max(b.lengths.length, c.lengths.length); )
            b.lengths.push({px: 0});
          for (; c.lengths.length < Math.max(b.lengths.length, c.lengths.length); )
            c.lengths.push({px: 0});
          if (b.inset == c.inset && !!b.color == !!c.color) {
            for (var d,
                e = [],
                f = [[], 0],
                g = [[], 0],
                h = 0; h < b.lengths.length; h++) {
              var i = a.mergeDimensions(b.lengths[h], c.lengths[h], 2 == h);
              f[0].push(i[0]), g[0].push(i[1]), e.push(i[2]);
            }
            if (b.color && c.color) {
              var j = a.mergeColors(b.color, c.color);
              f[1] = j[0], g[1] = j[1], d = j[2];
            }
            return [f, g, function(a) {
              for (var c = b.inset ? "inset " : " ",
                  f = 0; f < e.length; f++)
                c += e[f](a[0][f]) + " ";
              return d && (c += d(a[1])), c;
            }];
          }
        }
        function e(b, c, d, e) {
          function f(a) {
            return {
              inset: a,
              color: [0, 0, 0, 0],
              lengths: [{px: 0}, {px: 0}, {px: 0}, {px: 0}]
            };
          }
          for (var g = [],
              h = [],
              i = 0; i < d.length || i < e.length; i++) {
            var j = d[i] || f(e[i].inset),
                k = e[i] || f(d[i].inset);
            g.push(j), h.push(k);
          }
          return a.mergeNestedRepeated(b, c, g, h);
        }
        var f = e.bind(null, d, ", ");
        a.addPropertiesHandler(c, f, ["box-shadow", "text-shadow"]);
      }(d), function(a, b) {
        function c(a) {
          return a.toFixed(3).replace(".000", "");
        }
        function d(a, b, c) {
          return Math.min(b, Math.max(a, c));
        }
        function e(a) {
          return /^\s*[-+]?(\d*\.)?\d+\s*$/.test(a) ? Number(a) : void 0;
        }
        function f(a, b) {
          return [a, b, c];
        }
        function g(a, b) {
          return 0 != a ? i(0, 1 / 0)(a, b) : void 0;
        }
        function h(a, b) {
          return [a, b, function(a) {
            return Math.round(d(1, 1 / 0, a));
          }];
        }
        function i(a, b) {
          return function(e, f) {
            return [e, f, function(e) {
              return c(d(a, b, e));
            }];
          };
        }
        function j(a, b) {
          return [a, b, Math.round];
        }
        a.clamp = d, a.addPropertiesHandler(e, i(0, 1 / 0), ["border-image-width", "line-height"]), a.addPropertiesHandler(e, i(0, 1), ["opacity", "shape-image-threshold"]), a.addPropertiesHandler(e, g, ["flex-grow", "flex-shrink"]), a.addPropertiesHandler(e, h, ["orphans", "widows"]), a.addPropertiesHandler(e, j, ["z-index"]), a.parseNumber = e, a.mergeNumbers = f, a.numberToString = c;
      }(d, f), function(a, b) {
        function c(a, b) {
          return "visible" == a || "visible" == b ? [0, 1, function(c) {
            return 0 >= c ? a : c >= 1 ? b : "visible";
          }] : void 0;
        }
        a.addPropertiesHandler(String, c, ["visibility"]);
      }(d), function(a, b) {
        function c(a) {
          a = a.trim(), f.fillStyle = "#000", f.fillStyle = a;
          var b = f.fillStyle;
          if (f.fillStyle = "#fff", f.fillStyle = a, b == f.fillStyle) {
            f.fillRect(0, 0, 1, 1);
            var c = f.getImageData(0, 0, 1, 1).data;
            f.clearRect(0, 0, 1, 1);
            var d = c[3] / 255;
            return [c[0] * d, c[1] * d, c[2] * d, d];
          }
        }
        function d(b, c) {
          return [b, c, function(b) {
            function c(a) {
              return Math.max(0, Math.min(255, a));
            }
            if (b[3])
              for (var d = 0; 3 > d; d++)
                b[d] = Math.round(c(b[d] / b[3]));
            return b[3] = a.numberToString(a.clamp(0, 1, b[3])), "rgba(" + b.join(",") + ")";
          }];
        }
        var e = document.createElementNS("http://www.w3.org/1999/xhtml", "canvas");
        e.width = e.height = 1;
        var f = e.getContext("2d");
        a.addPropertiesHandler(c, d, ["background-color", "border-bottom-color", "border-left-color", "border-right-color", "border-top-color", "color", "outline-color", "text-decoration-color"]), a.consumeColor = a.consumeParenthesised.bind(null, c), a.mergeColors = d;
      }(d, f), function(a, b) {
        function c(a, b) {
          if (b = b.trim().toLowerCase(), "0" == b && "px".search(a) >= 0)
            return {px: 0};
          if (/^[^(]*$|^calc/.test(b)) {
            b = b.replace(/calc\(/g, "(");
            var c = {};
            b = b.replace(a, function(a) {
              return c[a] = null, "U" + a;
            });
            for (var d = "U(" + a.source + ")",
                e = b.replace(/[-+]?(\d*\.)?\d+/g, "N").replace(new RegExp("N" + d, "g"), "D").replace(/\s[+-]\s/g, "O").replace(/\s/g, ""),
                f = [/N\*(D)/g, /(N|D)[*/]N/g, /(N|D)O\1/g, /\((N|D)\)/g],
                g = 0; g < f.length; )
              f[g].test(e) ? (e = e.replace(f[g], "$1"), g = 0) : g++;
            if ("D" == e) {
              for (var h in c) {
                var i = eval(b.replace(new RegExp("U" + h, "g"), "").replace(new RegExp(d, "g"), "*0"));
                if (!isFinite(i))
                  return;
                c[h] = i;
              }
              return c;
            }
          }
        }
        function d(a, b) {
          return e(a, b, !0);
        }
        function e(b, c, d) {
          var e,
              f = [];
          for (e in b)
            f.push(e);
          for (e in c)
            f.indexOf(e) < 0 && f.push(e);
          return b = f.map(function(a) {
            return b[a] || 0;
          }), c = f.map(function(a) {
            return c[a] || 0;
          }), [b, c, function(b) {
            var c = b.map(function(c, e) {
              return 1 == b.length && d && (c = Math.max(c, 0)), a.numberToString(c) + f[e];
            }).join(" + ");
            return b.length > 1 ? "calc(" + c + ")" : c;
          }];
        }
        var f = "px|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc",
            g = c.bind(null, new RegExp(f, "g")),
            h = c.bind(null, new RegExp(f + "|%", "g")),
            i = c.bind(null, /deg|rad|grad|turn/g);
        a.parseLength = g, a.parseLengthOrPercent = h, a.consumeLengthOrPercent = a.consumeParenthesised.bind(null, h), a.parseAngle = i, a.mergeDimensions = e;
        var j = a.consumeParenthesised.bind(null, g),
            k = a.consumeRepeated.bind(void 0, j, /^/),
            l = a.consumeRepeated.bind(void 0, k, /^,/);
        a.consumeSizePairList = l;
        var m = function(a) {
          var b = l(a);
          return b && "" == b[1] ? b[0] : void 0;
        },
            n = a.mergeNestedRepeated.bind(void 0, d, " "),
            o = a.mergeNestedRepeated.bind(void 0, n, ",");
        a.mergeNonNegativeSizePair = n, a.addPropertiesHandler(m, o, ["background-size"]), a.addPropertiesHandler(h, d, ["border-bottom-width", "border-image-width", "border-left-width", "border-right-width", "border-top-width", "flex-basis", "font-size", "height", "line-height", "max-height", "max-width", "outline-width", "width"]), a.addPropertiesHandler(h, e, ["border-bottom-left-radius", "border-bottom-right-radius", "border-top-left-radius", "border-top-right-radius", "bottom", "left", "letter-spacing", "margin-bottom", "margin-left", "margin-right", "margin-top", "min-height", "min-width", "outline-offset", "padding-bottom", "padding-left", "padding-right", "padding-top", "perspective", "right", "shape-margin", "text-indent", "top", "vertical-align", "word-spacing"]);
      }(d, f), function(a, b) {
        function c(b) {
          return a.consumeLengthOrPercent(b) || a.consumeToken(/^auto/, b);
        }
        function d(b) {
          var d = a.consumeList([a.ignore(a.consumeToken.bind(null, /^rect/)), a.ignore(a.consumeToken.bind(null, /^\(/)), a.consumeRepeated.bind(null, c, /^,/), a.ignore(a.consumeToken.bind(null, /^\)/))], b);
          return d && 4 == d[0].length ? d[0] : void 0;
        }
        function e(b, c) {
          return "auto" == b || "auto" == c ? [!0, !1, function(d) {
            var e = d ? b : c;
            if ("auto" == e)
              return "auto";
            var f = a.mergeDimensions(e, e);
            return f[2](f[0]);
          }] : a.mergeDimensions(b, c);
        }
        function f(a) {
          return "rect(" + a + ")";
        }
        var g = a.mergeWrappedNestedRepeated.bind(null, f, e, ", ");
        a.parseBox = d, a.mergeBoxes = g, a.addPropertiesHandler(d, g, ["clip"]);
      }(d, f), function(a, b) {
        function c(a) {
          return function(b) {
            var c = 0;
            return a.map(function(a) {
              return a === k ? b[c++] : a;
            });
          };
        }
        function d(a) {
          return a;
        }
        function e(b) {
          if (b = b.toLowerCase().trim(), "none" == b)
            return [];
          for (var c,
              d = /\s*(\w+)\(([^)]*)\)/g,
              e = [],
              f = 0; c = d.exec(b); ) {
            if (c.index != f)
              return;
            f = c.index + c[0].length;
            var g = c[1],
                h = n[g];
            if (!h)
              return;
            var i = c[2].split(","),
                j = h[0];
            if (j.length < i.length)
              return;
            for (var k = [],
                o = 0; o < j.length; o++) {
              var p,
                  q = i[o],
                  r = j[o];
              if (p = q ? {
                A: function(b) {
                  return "0" == b.trim() ? m : a.parseAngle(b);
                },
                N: a.parseNumber,
                T: a.parseLengthOrPercent,
                L: a.parseLength
              }[r.toUpperCase()](q) : {
                a: m,
                n: k[0],
                t: l
              }[r], void 0 === p)
                return;
              k.push(p);
            }
            if (e.push({
              t: g,
              d: k
            }), d.lastIndex == b.length)
              return e;
          }
        }
        function f(a) {
          return a.toFixed(6).replace(".000000", "");
        }
        function g(b, c) {
          if (b.decompositionPair !== c) {
            b.decompositionPair = c;
            var d = a.makeMatrixDecomposition(b);
          }
          if (c.decompositionPair !== b) {
            c.decompositionPair = b;
            var e = a.makeMatrixDecomposition(c);
          }
          return null == d[0] || null == e[0] ? [[!1], [!0], function(a) {
            return a ? c[0].d : b[0].d;
          }] : (d[0].push(0), e[0].push(1), [d, e, function(b) {
            var c = a.quat(d[0][3], e[0][3], b[5]),
                g = a.composeMatrix(b[0], b[1], b[2], c, b[4]),
                h = g.map(f).join(",");
            return h;
          }]);
        }
        function h(a) {
          return a.replace(/[xy]/, "");
        }
        function i(a) {
          return a.replace(/(x|y|z|3d)?$/, "3d");
        }
        function j(b, c) {
          var d = a.makeMatrixDecomposition && !0,
              e = !1;
          if (!b.length || !c.length) {
            b.length || (e = !0, b = c, c = []);
            for (var f = 0; f < b.length; f++) {
              var j = b[f].t,
                  k = b[f].d,
                  l = "scale" == j.substr(0, 5) ? 1 : 0;
              c.push({
                t: j,
                d: k.map(function(a) {
                  if ("number" == typeof a)
                    return l;
                  var b = {};
                  for (var c in a)
                    b[c] = l;
                  return b;
                })
              });
            }
          }
          var m = function(a, b) {
            return "perspective" == a && "perspective" == b || ("matrix" == a || "matrix3d" == a) && ("matrix" == b || "matrix3d" == b);
          },
              o = [],
              p = [],
              q = [];
          if (b.length != c.length) {
            if (!d)
              return;
            var r = g(b, c);
            o = [r[0]], p = [r[1]], q = [["matrix", [r[2]]]];
          } else
            for (var f = 0; f < b.length; f++) {
              var j,
                  s = b[f].t,
                  t = c[f].t,
                  u = b[f].d,
                  v = c[f].d,
                  w = n[s],
                  x = n[t];
              if (m(s, t)) {
                if (!d)
                  return;
                var r = g([b[f]], [c[f]]);
                o.push(r[0]), p.push(r[1]), q.push(["matrix", [r[2]]]);
              } else {
                if (s == t)
                  j = s;
                else if (w[2] && x[2] && h(s) == h(t))
                  j = h(s), u = w[2](u), v = x[2](v);
                else {
                  if (!w[1] || !x[1] || i(s) != i(t)) {
                    if (!d)
                      return;
                    var r = g(b, c);
                    o = [r[0]], p = [r[1]], q = [["matrix", [r[2]]]];
                    break;
                  }
                  j = i(s), u = w[1](u), v = x[1](v);
                }
                for (var y = [],
                    z = [],
                    A = [],
                    B = 0; B < u.length; B++) {
                  var C = "number" == typeof u[B] ? a.mergeNumbers : a.mergeDimensions,
                      r = C(u[B], v[B]);
                  y[B] = r[0], z[B] = r[1], A.push(r[2]);
                }
                o.push(y), p.push(z), q.push([j, A]);
              }
            }
          if (e) {
            var D = o;
            o = p, p = D;
          }
          return [o, p, function(a) {
            return a.map(function(a, b) {
              var c = a.map(function(a, c) {
                return q[b][1][c](a);
              }).join(",");
              return "matrix" == q[b][0] && 16 == c.split(",").length && (q[b][0] = "matrix3d"), q[b][0] + "(" + c + ")";
            }).join(" ");
          }];
        }
        var k = null,
            l = {px: 0},
            m = {deg: 0},
            n = {
              matrix: ["NNNNNN", [k, k, 0, 0, k, k, 0, 0, 0, 0, 1, 0, k, k, 0, 1], d],
              matrix3d: ["NNNNNNNNNNNNNNNN", d],
              rotate: ["A"],
              rotatex: ["A"],
              rotatey: ["A"],
              rotatez: ["A"],
              rotate3d: ["NNNA"],
              perspective: ["L"],
              scale: ["Nn", c([k, k, 1]), d],
              scalex: ["N", c([k, 1, 1]), c([k, 1])],
              scaley: ["N", c([1, k, 1]), c([1, k])],
              scalez: ["N", c([1, 1, k])],
              scale3d: ["NNN", d],
              skew: ["Aa", null, d],
              skewx: ["A", null, c([k, m])],
              skewy: ["A", null, c([m, k])],
              translate: ["Tt", c([k, k, l]), d],
              translatex: ["T", c([k, l, l]), c([k, l])],
              translatey: ["T", c([l, k, l]), c([l, k])],
              translatez: ["L", c([l, l, k])],
              translate3d: ["TTL", d]
            };
        a.addPropertiesHandler(e, j, ["transform"]);
      }(d, f), function(a, b) {
        function c(a, b) {
          b.concat([a]).forEach(function(b) {
            b in document.documentElement.style && (d[a] = b);
          });
        }
        var d = {};
        c("transform", ["webkitTransform", "msTransform"]), c("transformOrigin", ["webkitTransformOrigin"]), c("perspective", ["webkitPerspective"]), c("perspectiveOrigin", ["webkitPerspectiveOrigin"]), a.propertyName = function(a) {
          return d[a] || a;
        };
      }(d, f);
    }();
  }({}, function() {
    return this;
  }());
  global.define = __define;
  return module.exports;
});
